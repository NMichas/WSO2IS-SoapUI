<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="2f873414-a97c-41bd-b1da-f3db6ba0b24b" activeEnvironment="Default" name="WSO2-IS" resourceRoot="${projectDir}" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="d13dfa13-aa72-40c9-9aed-e2beacbf0c21" wsaVersion="NONE" name="AccountCredentialMgtConfigServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}AccountCredentialMgtConfigServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/AccountCredentialMgtConfigService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="a1cc50be-2eac-4c89-8fa3-1630c4c19979" isOneWay="false" action="urn:getEmailConfig" name="getEmailConfig" bindingOperationName="getEmailConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4aaa0c77-9fb4-4eba-897a-a71f0b7f1387" isOneWay="false" action="urn:saveEmailConfig" name="saveEmailConfig" bindingOperationName="saveEmailConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="cef4e31e-8445-45c3-9c69-ea8899153ca4" wsaVersion="NONE" name="AccountCredentialMgtConfigServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}AccountCredentialMgtConfigServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/AccountCredentialMgtConfigService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/AccountCredentialMgtConfigService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/AccountCredentialMgtConfigService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2323="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2324="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.identity.carbon.wso2.org" xmlns:ax2327="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>AccountCredentialMgtConfigService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:ax2326="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2328="http://dto.mgt.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:element name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityMgtServiceException" nillable="true" type="ax2323:IdentityMgtServiceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEmailConfig">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEmailConfigResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2327:EmailTemplateDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="saveEmailConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="emailTemplates" nillable="true" type="ax2327:EmailTemplateDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EmailTemplateDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="footer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="subject" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2325="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityMgtServiceException">
        <xs:complexContent>
          <xs:extension base="ax2324:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getEmailConfigRequest">
    <wsdl:part name="parameters" element="ns:getEmailConfig"/>
  </wsdl:message>
  <wsdl:message name="getEmailConfigResponse">
    <wsdl:part name="parameters" element="ns:getEmailConfigResponse"/>
  </wsdl:message>
  <wsdl:message name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
    <wsdl:part name="parameters" element="ns:AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
  </wsdl:message>
  <wsdl:message name="saveEmailConfigRequest">
    <wsdl:part name="parameters" element="ns:saveEmailConfig"/>
  </wsdl:message>
  <wsdl:portType name="AccountCredentialMgtConfigServicePortType">
    <wsdl:operation name="getEmailConfig">
      <wsdl:input message="ns:getEmailConfigRequest" wsaw:Action="urn:getEmailConfig"/>
      <wsdl:output message="ns:getEmailConfigResponse" wsaw:Action="urn:getEmailConfigResponse"/>
      <wsdl:fault message="ns:AccountCredentialMgtConfigServiceIdentityMgtServiceException" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException" wsaw:Action="urn:getEmailConfigAccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="saveEmailConfig">
      <wsdl:input message="ns:saveEmailConfigRequest" wsaw:Action="urn:saveEmailConfig"/>
      <wsdl:fault message="ns:AccountCredentialMgtConfigServiceIdentityMgtServiceException" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException" wsaw:Action="urn:saveEmailConfigAccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AccountCredentialMgtConfigServiceSoap11Binding" type="ns:AccountCredentialMgtConfigServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEmailConfig">
      <soap:operation soapAction="urn:getEmailConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveEmailConfig">
      <soap:operation soapAction="urn:saveEmailConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="AccountCredentialMgtConfigServiceSoap12Binding" type="ns:AccountCredentialMgtConfigServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEmailConfig">
      <soap12:operation soapAction="urn:getEmailConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveEmailConfig">
      <soap12:operation soapAction="urn:saveEmailConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="AccountCredentialMgtConfigServiceHttpBinding" type="ns:AccountCredentialMgtConfigServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getEmailConfig">
      <http:operation location="getEmailConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="saveEmailConfig">
      <http:operation location="saveEmailConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AccountCredentialMgtConfigService">
    <wsdl:port name="AccountCredentialMgtConfigServiceHttpsSoap11Endpoint" binding="ns:AccountCredentialMgtConfigServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="AccountCredentialMgtConfigServiceHttpsSoap12Endpoint" binding="ns:AccountCredentialMgtConfigServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="AccountCredentialMgtConfigServiceHttpsEndpoint" binding="ns:AccountCredentialMgtConfigServiceHttpBinding">
      <http:address location="https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="c1dbd2f6-45ef-45b2-bc98-b808e0e4a8fd" isOneWay="false" action="urn:getEmailConfig" name="getEmailConfig" bindingOperationName="getEmailConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cdb43e9b-9782-44d7-8d5e-70b2db6259d7" isOneWay="false" action="urn:saveEmailConfig" name="saveEmailConfig" bindingOperationName="saveEmailConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e727112f-7bf3-4576-aa55-6a9955992e42" wsaVersion="NONE" name="CarbonAppUploaderSoap12Binding" type="wsdl" bindingName="{http://upload.application.carbon.wso2.org}CarbonAppUploaderSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/CarbonAppUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="fcf884f6-8797-4c92-9fc0-578a982c91a9" isOneWay="false" action="urn:uploadApp" name="uploadApp" bindingOperationName="uploadApp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e7437994-72f4-4b1c-a952-c976df0dc91d" wsaVersion="NONE" name="CarbonAppUploaderSoap11Binding" type="wsdl" bindingName="{http://upload.application.carbon.wso2.org}CarbonAppUploaderSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/CarbonAppUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/CarbonAppUploader.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/CarbonAppUploader.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://upload.application.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax23="http://upload.application.carbon.wso2.org/xsd" xmlns:ns="http://upload.application.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>CarbonAppUploader</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://upload.application.carbon.wso2.org/xsd">
      <xs:complexType name="UploadedFileItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://upload.application.carbon.wso2.org" xmlns:ax24="http://upload.application.carbon.wso2.org/xsd">
      <xs:import namespace="http://upload.application.carbon.wso2.org/xsd"/>
      <xs:element name="uploadApp">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="fileItems" nillable="true" type="ax24:UploadedFileItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadAppRequest">
    <wsdl:part name="parameters" element="ns:uploadApp"/>
  </wsdl:message>
  <wsdl:message name="uploadAppResponse"/>
  <wsdl:portType name="CarbonAppUploaderPortType">
    <wsdl:operation name="uploadApp">
      <wsdl:input message="ns:uploadAppRequest" wsaw:Action="urn:uploadApp"/>
      <wsdl:output message="ns:uploadAppResponse" wsaw:Action="urn:uploadAppResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CarbonAppUploaderSoap11Binding" type="ns:CarbonAppUploaderPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadApp">
      <soap:operation soapAction="urn:uploadApp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CarbonAppUploaderSoap12Binding" type="ns:CarbonAppUploaderPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadApp">
      <soap12:operation soapAction="urn:uploadApp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CarbonAppUploaderHttpBinding" type="ns:CarbonAppUploaderPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadApp">
      <http:operation location="uploadApp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CarbonAppUploader">
    <wsdl:port name="CarbonAppUploaderHttpsSoap11Endpoint" binding="ns:CarbonAppUploaderSoap11Binding">
      <soap:address location="https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="CarbonAppUploaderHttpsSoap12Endpoint" binding="ns:CarbonAppUploaderSoap12Binding">
      <soap12:address location="https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="CarbonAppUploaderHttpsEndpoint" binding="ns:CarbonAppUploaderHttpBinding">
      <http:address location="https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="498b70c5-d625-4910-a4aa-3a748e923b95" isOneWay="false" action="urn:uploadApp" name="uploadApp" bindingOperationName="uploadApp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f782d4c8-d018-4ea7-9a8e-a7ba6a6788aa" wsaVersion="NONE" name="BPELUploaderSoap11Binding" type="wsdl" bindingName="{http://services.deployer.bpel.carbon.wso2.org}BPELUploaderSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/BPELUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/BPELUploader.BPELUploaderHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="3187ccde-d283-4a0a-a5cc-3c253f5348a1" isOneWay="false" action="urn:close" name="close" bindingOperationName="close" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f6310673-4bd5-41b6-9be4-2d92afb883e7" isOneWay="false" action="urn:uploadService" name="uploadService" bindingOperationName="uploadService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4ae2cc29-59a7-4d31-836e-89ef5807a98b" wsaVersion="NONE" name="BPELUploaderSoap12Binding" type="wsdl" bindingName="{http://services.deployer.bpel.carbon.wso2.org}BPELUploaderSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/BPELUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/BPELUploader.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/BPELUploader.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.deployer.bpel.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax27="http://io.java/xsd" xmlns:ns="http://services.deployer.bpel.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax25="http://types.services.deployer.bpel.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>BPELUploader</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://types.services.deployer.bpel.carbon.wso2.org/xsd">
      <xs:complexType name="UploadedFileItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://io.java/xsd">
      <xs:complexType abstract="true" name="Closeable">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.deployer.bpel.carbon.wso2.org" xmlns:ax28="http://io.java/xsd" xmlns:ax26="http://types.services.deployer.bpel.carbon.wso2.org/xsd">
      <xs:import namespace="http://types.services.deployer.bpel.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://io.java/xsd"/>
      <xs:element name="uploadService">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="fileItems" nillable="true" type="ax26:UploadedFileItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="close">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="c" nillable="true" type="ax28:Closeable"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadServiceRequest">
    <wsdl:part name="parameters" element="ns:uploadService"/>
  </wsdl:message>
  <wsdl:message name="uploadServiceResponse"/>
  <wsdl:message name="closeRequest">
    <wsdl:part name="parameters" element="ns:close"/>
  </wsdl:message>
  <wsdl:portType name="BPELUploaderPortType">
    <wsdl:operation name="uploadService">
      <wsdl:input message="ns:uploadServiceRequest" wsaw:Action="urn:uploadService"/>
      <wsdl:output message="ns:uploadServiceResponse" wsaw:Action="urn:uploadServiceResponse"/>
    </wsdl:operation>
    <wsdl:operation name="close">
      <wsdl:input message="ns:closeRequest" wsaw:Action="urn:close"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BPELUploaderSoap11Binding" type="ns:BPELUploaderPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadService">
      <soap:operation soapAction="urn:uploadService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <soap:operation soapAction="urn:close" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BPELUploaderSoap12Binding" type="ns:BPELUploaderPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadService">
      <soap12:operation soapAction="urn:uploadService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <soap12:operation soapAction="urn:close" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BPELUploaderHttpBinding" type="ns:BPELUploaderPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadService">
      <http:operation location="uploadService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <http:operation location="close"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BPELUploader">
    <wsdl:port name="BPELUploaderHttpsSoap11Endpoint" binding="ns:BPELUploaderSoap11Binding">
      <soap:address location="https://localhost:9443/services/BPELUploader.BPELUploaderHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="BPELUploaderHttpsSoap12Endpoint" binding="ns:BPELUploaderSoap12Binding">
      <soap12:address location="https://localhost:9443/services/BPELUploader.BPELUploaderHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="BPELUploaderHttpsEndpoint" binding="ns:BPELUploaderHttpBinding">
      <http:address location="https://localhost:9443/services/BPELUploader.BPELUploaderHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/BPELUploader.BPELUploaderHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="cb2df742-ffb1-4f55-9e13-31e842ee6dea" isOneWay="false" action="urn:close" name="close" bindingOperationName="close" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c3e5501e-ddb1-4d95-8c34-dfe3d373d54f" isOneWay="false" action="urn:uploadService" name="uploadService" bindingOperationName="uploadService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="11f797d6-4fba-49ce-a831-232143d3698e" wsaVersion="NONE" name="ClaimManagementServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.claim.carbon.wso2.org}ClaimManagementServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/ClaimManagementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="9245ea4c-f25f-4014-aad4-1b09911483ba" isOneWay="false" action="urn:addNewClaimDialect" name="addNewClaimDialect" bindingOperationName="addNewClaimDialect" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58f5b09e-6e61-443c-bb5e-509b9a63a0d8" isOneWay="false" action="urn:addNewClaimMapping" name="addNewClaimMapping" bindingOperationName="addNewClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9f02faf-d323-4a2a-a751-1168d9dfa942" isOneWay="false" action="urn:getClaimMappingByDialect" name="getClaimMappingByDialect" bindingOperationName="getClaimMappingByDialect" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dde0ea93-7c78-4fb3-9df3-1314d1a513f9" isOneWay="false" action="urn:getClaimMappings" name="getClaimMappings" bindingOperationName="getClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4430d80a-444e-4ef3-9c8d-b649c1df0def" isOneWay="false" action="urn:removeClaimDialect" name="removeClaimDialect" bindingOperationName="removeClaimDialect" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="34eb160b-db05-40af-b8e2-bade27e6be78" isOneWay="false" action="urn:removeClaimMapping" name="removeClaimMapping" bindingOperationName="removeClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed5fd087-672f-4250-a1d2-0868573c21f3" isOneWay="false" action="urn:upateClaimMapping" name="upateClaimMapping" bindingOperationName="upateClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ef966a51-3371-4fb9-b986-8d8fe76d6fdd" wsaVersion="NONE" name="ClaimManagementServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.claim.carbon.wso2.org}ClaimManagementServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/ClaimManagementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ClaimManagementService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ClaimManagementService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.claim.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax29="http://mgt.claim.carbon.wso2.org/xsd" xmlns:ax213="http://dto.mgt.claim.carbon.wso2.org/xsd" xmlns:ax210="http://base.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.claim.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ClaimManagementService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.claim.carbon.wso2.org/xsd" xmlns:ax211="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="ClaimManagementException">
        <xs:complexContent>
          <xs:extension base="ax210:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax214="http://dto.mgt.claim.carbon.wso2.org/xsd" xmlns:ax212="http://mgt.claim.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://mgt.claim.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.claim.carbon.wso2.org/xsd"/>
      <xs:element name="ClaimManagementServiceClaimManagementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ClaimManagementException" nillable="true" type="ax212:ClaimManagementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappings">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax214:ClaimDialectDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappingByDialect">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialectUri" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappingByDialectResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax214:ClaimDialectDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="upateClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimMappingDTO" nillable="true" type="ax214:ClaimMappingDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialectUri" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addNewClaimDialect">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimDialectDTO" nillable="true" type="ax214:ClaimDialectDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeClaimDialect">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialectUri" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addNewClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimMappingDTO" nillable="true" type="ax214:ClaimMappingDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.claim.carbon.wso2.org/xsd">
      <xs:complexType name="ClaimDialectDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="claimMappings" nillable="true" type="ax213:ClaimMappingDTO"/>
          <xs:element minOccurs="0" name="dialectURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userStore" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimMappingDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="claim" nillable="true" type="ax213:ClaimDTO"/>
          <xs:element minOccurs="0" name="mappedAttribute" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="mappedAttributes" nillable="true" type="ax213:ClaimAttributeDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="checkedAttribute" type="xs:boolean"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dialectURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="displayTag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="regEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="supportedByDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimAttributeDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="upateClaimMappingRequest">
    <wsdl:part name="parameters" element="ns1:upateClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="ClaimManagementServiceClaimManagementException">
    <wsdl:part name="parameters" element="ns1:ClaimManagementServiceClaimManagementException"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingsRequest">
    <wsdl:part name="parameters" element="ns1:getClaimMappings"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingsResponse">
    <wsdl:part name="parameters" element="ns1:getClaimMappingsResponse"/>
  </wsdl:message>
  <wsdl:message name="addNewClaimMappingRequest">
    <wsdl:part name="parameters" element="ns1:addNewClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="addNewClaimDialectRequest">
    <wsdl:part name="parameters" element="ns1:addNewClaimDialect"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingByDialectRequest">
    <wsdl:part name="parameters" element="ns1:getClaimMappingByDialect"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingByDialectResponse">
    <wsdl:part name="parameters" element="ns1:getClaimMappingByDialectResponse"/>
  </wsdl:message>
  <wsdl:message name="removeClaimMappingRequest">
    <wsdl:part name="parameters" element="ns1:removeClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="removeClaimDialectRequest">
    <wsdl:part name="parameters" element="ns1:removeClaimDialect"/>
  </wsdl:message>
  <wsdl:portType name="ClaimManagementServicePortType">
    <wsdl:operation name="upateClaimMapping">
      <wsdl:input message="tns:upateClaimMappingRequest" wsaw:Action="urn:upateClaimMapping"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:upateClaimMappingClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappings">
      <wsdl:input message="tns:getClaimMappingsRequest" wsaw:Action="urn:getClaimMappings"/>
      <wsdl:output message="tns:getClaimMappingsResponse" wsaw:Action="urn:getClaimMappingsResponse"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:getClaimMappingsClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <wsdl:input message="tns:addNewClaimMappingRequest" wsaw:Action="urn:addNewClaimMapping"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:addNewClaimMappingClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimDialect">
      <wsdl:input message="tns:addNewClaimDialectRequest" wsaw:Action="urn:addNewClaimDialect"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:addNewClaimDialectClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappingByDialect">
      <wsdl:input message="tns:getClaimMappingByDialectRequest" wsaw:Action="urn:getClaimMappingByDialect"/>
      <wsdl:output message="tns:getClaimMappingByDialectResponse" wsaw:Action="urn:getClaimMappingByDialectResponse"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:getClaimMappingByDialectClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="removeClaimMapping">
      <wsdl:input message="tns:removeClaimMappingRequest" wsaw:Action="urn:removeClaimMapping"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:removeClaimMappingClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="removeClaimDialect">
      <wsdl:input message="tns:removeClaimDialectRequest" wsaw:Action="urn:removeClaimDialect"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:removeClaimDialectClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ClaimManagementServiceSoap11Binding" type="tns:ClaimManagementServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="upateClaimMapping">
      <soap:operation soapAction="urn:upateClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappings">
      <soap:operation soapAction="urn:getClaimMappings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <soap:operation soapAction="urn:addNewClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimDialect">
      <soap:operation soapAction="urn:addNewClaimDialect" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappingByDialect">
      <soap:operation soapAction="urn:getClaimMappingByDialect" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeClaimMapping">
      <soap:operation soapAction="urn:removeClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeClaimDialect">
      <soap:operation soapAction="urn:removeClaimDialect" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ClaimManagementServiceSoap12Binding" type="tns:ClaimManagementServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="upateClaimMapping">
      <soap12:operation soapAction="urn:upateClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappings">
      <soap12:operation soapAction="urn:getClaimMappings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <soap12:operation soapAction="urn:addNewClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimDialect">
      <soap12:operation soapAction="urn:addNewClaimDialect" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappingByDialect">
      <soap12:operation soapAction="urn:getClaimMappingByDialect" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeClaimMapping">
      <soap12:operation soapAction="urn:removeClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeClaimDialect">
      <soap12:operation soapAction="urn:removeClaimDialect" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ClaimManagementServiceHttpBinding" type="tns:ClaimManagementServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="upateClaimMapping">
      <http:operation location="upateClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappings">
      <http:operation location="getClaimMappings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <http:operation location="addNewClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimDialect">
      <http:operation location="addNewClaimDialect"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappingByDialect">
      <http:operation location="getClaimMappingByDialect"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeClaimMapping">
      <http:operation location="removeClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeClaimDialect">
      <http:operation location="removeClaimDialect"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ClaimManagementService">
    <wsdl:port name="ClaimManagementServiceHttpsSoap11Endpoint" binding="tns:ClaimManagementServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ClaimManagementServiceHttpsSoap12Endpoint" binding="tns:ClaimManagementServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ClaimManagementServiceHttpsEndpoint" binding="tns:ClaimManagementServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="02698d2b-4031-48b5-8f9b-2f1d53e960d0" isOneWay="false" action="urn:addNewClaimDialect" name="addNewClaimDialect" bindingOperationName="addNewClaimDialect" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a68fcde0-e843-4537-a1d6-e73d67320673" isOneWay="false" action="urn:addNewClaimMapping" name="addNewClaimMapping" bindingOperationName="addNewClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a30628f2-84bd-4ca7-b4d2-2bdedc3fe22b" isOneWay="false" action="urn:getClaimMappingByDialect" name="getClaimMappingByDialect" bindingOperationName="getClaimMappingByDialect" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bc9bf1e2-b24f-4a1a-a982-4d74d698f658" isOneWay="false" action="urn:getClaimMappings" name="getClaimMappings" bindingOperationName="getClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0dd9daa3-b120-495b-8f98-88709058f26e" isOneWay="false" action="urn:removeClaimDialect" name="removeClaimDialect" bindingOperationName="removeClaimDialect" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c83d5214-cead-4f31-b867-08c0680321ea" isOneWay="false" action="urn:removeClaimMapping" name="removeClaimMapping" bindingOperationName="removeClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="af4ae375-76cc-416d-83cb-addd6e08a8e5" isOneWay="false" action="urn:upateClaimMapping" name="upateClaimMapping" bindingOperationName="upateClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c4814288-f527-4db7-8bd6-9b3ac49b6a79" wsaVersion="NONE" name="CustomUIAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.custom.registry.carbon.wso2.org}CustomUIAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/CustomUIAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="678bef49-0767-485f-91fa-cbe918471237" isOneWay="false" action="urn:addTextContent" name="addTextContent" bindingOperationName="addTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e508e5d-8b5c-483f-9e40-a973a814c8b7" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8ce903e0-cb20-47db-8056-6acbc1d53de1" isOneWay="false" action="urn:isAuthorized" name="isAuthorized" bindingOperationName="isAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="18c9e58f-4414-4e47-a9e8-00e169b06e17" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="725dbcc0-39f4-420d-ace3-500ab201238a" wsaVersion="NONE" name="CustomUIAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.custom.registry.carbon.wso2.org}CustomUIAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/CustomUIAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/CustomUIAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/CustomUIAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.custom.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://services.custom.registry.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>CustomUIAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.custom.registry.carbon.wso2.org">
      <xs:element name="CustomUIAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CustomUIAdminServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="addTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAuthorized">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAuthorizedResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="isAuthorizedRequest">
    <wsdl:part name="parameters" element="ns:isAuthorized"/>
  </wsdl:message>
  <wsdl:message name="isAuthorizedResponse">
    <wsdl:part name="parameters" element="ns:isAuthorizedResponse"/>
  </wsdl:message>
  <wsdl:message name="addTextContentRequest">
    <wsdl:part name="parameters" element="ns:addTextContent"/>
  </wsdl:message>
  <wsdl:message name="addTextContentResponse">
    <wsdl:part name="parameters" element="ns:addTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="CustomUIAdminServiceException">
    <wsdl:part name="parameters" element="ns:CustomUIAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentRequest">
    <wsdl:part name="parameters" element="ns:updateTextContent"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentResponse">
    <wsdl:part name="parameters" element="ns:updateTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="getTextContentRequest">
    <wsdl:part name="parameters" element="ns:getTextContent"/>
  </wsdl:message>
  <wsdl:message name="getTextContentResponse">
    <wsdl:part name="parameters" element="ns:getTextContentResponse"/>
  </wsdl:message>
  <wsdl:portType name="CustomUIAdminServicePortType">
    <wsdl:operation name="isAuthorized">
      <wsdl:input message="ns:isAuthorizedRequest" wsaw:Action="urn:isAuthorized"/>
      <wsdl:output message="ns:isAuthorizedResponse" wsaw:Action="urn:isAuthorizedResponse"/>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <wsdl:input message="ns:addTextContentRequest" wsaw:Action="urn:addTextContent"/>
      <wsdl:output message="ns:addTextContentResponse" wsaw:Action="urn:addTextContentResponse"/>
      <wsdl:fault message="ns:CustomUIAdminServiceException" name="CustomUIAdminServiceException" wsaw:Action="urn:addTextContentCustomUIAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <wsdl:input message="ns:updateTextContentRequest" wsaw:Action="urn:updateTextContent"/>
      <wsdl:output message="ns:updateTextContentResponse" wsaw:Action="urn:updateTextContentResponse"/>
      <wsdl:fault message="ns:CustomUIAdminServiceException" name="CustomUIAdminServiceException" wsaw:Action="urn:updateTextContentCustomUIAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <wsdl:input message="ns:getTextContentRequest" wsaw:Action="urn:getTextContent"/>
      <wsdl:output message="ns:getTextContentResponse" wsaw:Action="urn:getTextContentResponse"/>
      <wsdl:fault message="ns:CustomUIAdminServiceException" name="CustomUIAdminServiceException" wsaw:Action="urn:getTextContentCustomUIAdminServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CustomUIAdminServiceSoap11Binding" type="ns:CustomUIAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isAuthorized">
      <soap:operation soapAction="urn:isAuthorized" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <soap:operation soapAction="urn:addTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CustomUIAdminServiceSoap12Binding" type="ns:CustomUIAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isAuthorized">
      <soap12:operation soapAction="urn:isAuthorized" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <soap12:operation soapAction="urn:addTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap12:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap12:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap12:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap12:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap12:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CustomUIAdminServiceHttpBinding" type="ns:CustomUIAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="isAuthorized">
      <http:operation location="isAuthorized"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <http:operation location="addTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <http:operation location="updateTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <http:operation location="getTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CustomUIAdminService">
    <wsdl:port name="CustomUIAdminServiceHttpsSoap11Endpoint" binding="ns:CustomUIAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="CustomUIAdminServiceHttpsSoap12Endpoint" binding="ns:CustomUIAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="CustomUIAdminServiceHttpsEndpoint" binding="ns:CustomUIAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="f0d805f6-d631-48f7-991d-ebeca7d60e36" isOneWay="false" action="urn:addTextContent" name="addTextContent" bindingOperationName="addTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f675b73-5332-468d-9c09-0503e5f0980d" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="62388b2c-1622-4a49-83a1-8ea0d12c09d6" isOneWay="false" action="urn:isAuthorized" name="isAuthorized" bindingOperationName="isAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12431aa1-49ad-424a-97a8-d0fa67be3988" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3164c0b7-e0f9-4709-ba61-7184fe409e1e" wsaVersion="NONE" name="DirectoryServerManagerSoap11Binding" type="wsdl" bindingName="{http://manager.server.directory.carbon.wso2.org}DirectoryServerManagerSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/DirectoryServerManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="5308e0ff-40bc-4eaa-8e43-e64ffb7e5987" isOneWay="false" action="urn:addServer" name="addServer" bindingOperationName="addServer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed27ab39-0416-4c27-a59b-7ee7aab0f21c" isOneWay="false" action="urn:changePassword" name="changePassword" bindingOperationName="changePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b5118f0d-9d9e-42e9-9b6c-58e1397297ae" isOneWay="false" action="urn:getPasswordConformanceRegularExpression" name="getPasswordConformanceRegularExpression" bindingOperationName="getPasswordConformanceRegularExpression" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f33cf662-7ec0-418a-9cd2-5e54120c7934" isOneWay="false" action="urn:getServiceNameConformanceRegularExpression" name="getServiceNameConformanceRegularExpression" bindingOperationName="getServiceNameConformanceRegularExpression" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fb82485b-e250-40b4-9369-21a620123768" isOneWay="false" action="urn:isExistingServicePrinciple" name="isExistingServicePrinciple" bindingOperationName="isExistingServicePrinciple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b3b4f313-a669-4dd1-8c8a-9760c3ef935c" isOneWay="false" action="urn:isKDCEnabled" name="isKDCEnabled" bindingOperationName="isKDCEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="229f152f-d78a-4a73-b9e8-b4becde6abd9" isOneWay="false" action="urn:listServicePrinciples" name="listServicePrinciples" bindingOperationName="listServicePrinciples" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="812e6cb0-913f-442a-87e5-19fcd1f16cf3" isOneWay="false" action="urn:removeServer" name="removeServer" bindingOperationName="removeServer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="cf64fd1d-7235-4b22-977b-9cb452088fe8" wsaVersion="NONE" name="DirectoryServerManagerSoap12Binding" type="wsdl" bindingName="{http://manager.server.directory.carbon.wso2.org}DirectoryServerManagerSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/DirectoryServerManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/DirectoryServerManager.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/DirectoryServerManager.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://manager.server.directory.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2104="http://manager.server.directory.carbon.wso2.org/xsd" xmlns:ax2105="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://manager.server.directory.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2108="http://common.manager.server.directory.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>DirectoryServerManager</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://manager.server.directory.carbon.wso2.org/xsd" xmlns:ax2106="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="DirectoryServerManagerException">
        <xs:complexContent>
          <xs:extension base="ax2105:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.manager.server.directory.carbon.wso2.org/xsd">
      <xs:complexType name="ServerPrinciple">
        <xs:sequence>
          <xs:element minOccurs="0" name="serverDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverPassword" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://manager.server.directory.carbon.wso2.org" xmlns:ax2107="http://manager.server.directory.carbon.wso2.org/xsd" xmlns:ax2109="http://common.manager.server.directory.carbon.wso2.org/xsd">
      <xs:import namespace="http://manager.server.directory.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://common.manager.server.directory.carbon.wso2.org/xsd"/>
      <xs:element name="DirectoryServerManagerDirectoryServerManagerException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DirectoryServerManagerException" nillable="true" type="ax2104:DirectoryServerManagerException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addServer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverDescription" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServicePrinciples">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServicePrinciplesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2108:ServerPrinciple"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changePassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serverPrinciple" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="existingPassword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingServicePrinciple">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="servicePrinciple" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingServicePrincipleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPasswordConformanceRegularExpression">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPasswordConformanceRegularExpressionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceNameConformanceRegularExpression">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceNameConformanceRegularExpressionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isKDCEnabled">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isKDCEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="isExistingServicePrincipleRequest">
    <wsdl:part name="parameters" element="ns:isExistingServicePrinciple"/>
  </wsdl:message>
  <wsdl:message name="isExistingServicePrincipleResponse">
    <wsdl:part name="parameters" element="ns:isExistingServicePrincipleResponse"/>
  </wsdl:message>
  <wsdl:message name="DirectoryServerManagerDirectoryServerManagerException">
    <wsdl:part name="parameters" element="ns:DirectoryServerManagerDirectoryServerManagerException"/>
  </wsdl:message>
  <wsdl:message name="isKDCEnabledRequest">
    <wsdl:part name="parameters" element="ns:isKDCEnabled"/>
  </wsdl:message>
  <wsdl:message name="isKDCEnabledResponse">
    <wsdl:part name="parameters" element="ns:isKDCEnabledResponse"/>
  </wsdl:message>
  <wsdl:message name="getPasswordConformanceRegularExpressionRequest">
    <wsdl:part name="parameters" element="ns:getPasswordConformanceRegularExpression"/>
  </wsdl:message>
  <wsdl:message name="getPasswordConformanceRegularExpressionResponse">
    <wsdl:part name="parameters" element="ns:getPasswordConformanceRegularExpressionResponse"/>
  </wsdl:message>
  <wsdl:message name="listServicePrinciplesRequest">
    <wsdl:part name="parameters" element="ns:listServicePrinciples"/>
  </wsdl:message>
  <wsdl:message name="listServicePrinciplesResponse">
    <wsdl:part name="parameters" element="ns:listServicePrinciplesResponse"/>
  </wsdl:message>
  <wsdl:message name="removeServerRequest">
    <wsdl:part name="parameters" element="ns:removeServer"/>
  </wsdl:message>
  <wsdl:message name="removeServerResponse"/>
  <wsdl:message name="addServerRequest">
    <wsdl:part name="parameters" element="ns:addServer"/>
  </wsdl:message>
  <wsdl:message name="addServerResponse"/>
  <wsdl:message name="getServiceNameConformanceRegularExpressionRequest">
    <wsdl:part name="parameters" element="ns:getServiceNameConformanceRegularExpression"/>
  </wsdl:message>
  <wsdl:message name="getServiceNameConformanceRegularExpressionResponse">
    <wsdl:part name="parameters" element="ns:getServiceNameConformanceRegularExpressionResponse"/>
  </wsdl:message>
  <wsdl:message name="changePasswordRequest">
    <wsdl:part name="parameters" element="ns:changePassword"/>
  </wsdl:message>
  <wsdl:message name="changePasswordResponse"/>
  <wsdl:portType name="DirectoryServerManagerPortType">
    <wsdl:operation name="isExistingServicePrinciple">
      <wsdl:input message="ns:isExistingServicePrincipleRequest" wsaw:Action="urn:isExistingServicePrinciple"/>
      <wsdl:output message="ns:isExistingServicePrincipleResponse" wsaw:Action="urn:isExistingServicePrincipleResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:isExistingServicePrincipleDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="isKDCEnabled">
      <wsdl:input message="ns:isKDCEnabledRequest" wsaw:Action="urn:isKDCEnabled"/>
      <wsdl:output message="ns:isKDCEnabledResponse" wsaw:Action="urn:isKDCEnabledResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:isKDCEnabledDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="getPasswordConformanceRegularExpression">
      <wsdl:input message="ns:getPasswordConformanceRegularExpressionRequest" wsaw:Action="urn:getPasswordConformanceRegularExpression"/>
      <wsdl:output message="ns:getPasswordConformanceRegularExpressionResponse" wsaw:Action="urn:getPasswordConformanceRegularExpressionResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:getPasswordConformanceRegularExpressionDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="listServicePrinciples">
      <wsdl:input message="ns:listServicePrinciplesRequest" wsaw:Action="urn:listServicePrinciples"/>
      <wsdl:output message="ns:listServicePrinciplesResponse" wsaw:Action="urn:listServicePrinciplesResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:listServicePrinciplesDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="removeServer">
      <wsdl:input message="ns:removeServerRequest" wsaw:Action="urn:removeServer"/>
      <wsdl:output message="ns:removeServerResponse" wsaw:Action="urn:removeServerResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:removeServerDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="addServer">
      <wsdl:input message="ns:addServerRequest" wsaw:Action="urn:addServer"/>
      <wsdl:output message="ns:addServerResponse" wsaw:Action="urn:addServerResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:addServerDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceNameConformanceRegularExpression">
      <wsdl:input message="ns:getServiceNameConformanceRegularExpressionRequest" wsaw:Action="urn:getServiceNameConformanceRegularExpression"/>
      <wsdl:output message="ns:getServiceNameConformanceRegularExpressionResponse" wsaw:Action="urn:getServiceNameConformanceRegularExpressionResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:getServiceNameConformanceRegularExpressionDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <wsdl:input message="ns:changePasswordRequest" wsaw:Action="urn:changePassword"/>
      <wsdl:output message="ns:changePasswordResponse" wsaw:Action="urn:changePasswordResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:changePasswordDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DirectoryServerManagerSoap11Binding" type="ns:DirectoryServerManagerPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isExistingServicePrinciple">
      <soap:operation soapAction="urn:isExistingServicePrinciple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isKDCEnabled">
      <soap:operation soapAction="urn:isKDCEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPasswordConformanceRegularExpression">
      <soap:operation soapAction="urn:getPasswordConformanceRegularExpression" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listServicePrinciples">
      <soap:operation soapAction="urn:listServicePrinciples" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServer">
      <soap:operation soapAction="urn:removeServer" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addServer">
      <soap:operation soapAction="urn:addServer" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceNameConformanceRegularExpression">
      <soap:operation soapAction="urn:getServiceNameConformanceRegularExpression" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap:operation soapAction="urn:changePassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="DirectoryServerManagerSoap12Binding" type="ns:DirectoryServerManagerPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isExistingServicePrinciple">
      <soap12:operation soapAction="urn:isExistingServicePrinciple" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isKDCEnabled">
      <soap12:operation soapAction="urn:isKDCEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPasswordConformanceRegularExpression">
      <soap12:operation soapAction="urn:getPasswordConformanceRegularExpression" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listServicePrinciples">
      <soap12:operation soapAction="urn:listServicePrinciples" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServer">
      <soap12:operation soapAction="urn:removeServer" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addServer">
      <soap12:operation soapAction="urn:addServer" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceNameConformanceRegularExpression">
      <soap12:operation soapAction="urn:getServiceNameConformanceRegularExpression" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap12:operation soapAction="urn:changePassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="DirectoryServerManagerHttpBinding" type="ns:DirectoryServerManagerPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="isExistingServicePrinciple">
      <http:operation location="isExistingServicePrinciple"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isKDCEnabled">
      <http:operation location="isKDCEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPasswordConformanceRegularExpression">
      <http:operation location="getPasswordConformanceRegularExpression"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServicePrinciples">
      <http:operation location="listServicePrinciples"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServer">
      <http:operation location="removeServer"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addServer">
      <http:operation location="addServer"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceNameConformanceRegularExpression">
      <http:operation location="getServiceNameConformanceRegularExpression"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <http:operation location="changePassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DirectoryServerManager">
    <wsdl:port name="DirectoryServerManagerHttpsSoap11Endpoint" binding="ns:DirectoryServerManagerSoap11Binding">
      <soap:address location="https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="DirectoryServerManagerHttpsSoap12Endpoint" binding="ns:DirectoryServerManagerSoap12Binding">
      <soap12:address location="https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="DirectoryServerManagerHttpsEndpoint" binding="ns:DirectoryServerManagerHttpBinding">
      <http:address location="https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="56524c67-b889-40a4-b22d-d0954e9c4b2e" isOneWay="false" action="urn:addServer" name="addServer" bindingOperationName="addServer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="53b0205e-c751-4a89-b7c1-27fc207638d3" isOneWay="false" action="urn:changePassword" name="changePassword" bindingOperationName="changePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48f1544b-8e53-446b-8e86-cb8de250ebcc" isOneWay="false" action="urn:getPasswordConformanceRegularExpression" name="getPasswordConformanceRegularExpression" bindingOperationName="getPasswordConformanceRegularExpression" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="952e8c0f-2c94-4fd1-ae96-e44ec71793f4" isOneWay="false" action="urn:getServiceNameConformanceRegularExpression" name="getServiceNameConformanceRegularExpression" bindingOperationName="getServiceNameConformanceRegularExpression" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c71aa149-9ca1-4e91-9130-e11982fb2088" isOneWay="false" action="urn:isExistingServicePrinciple" name="isExistingServicePrinciple" bindingOperationName="isExistingServicePrinciple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="247ceb71-0ece-42c7-b129-6b5e5347de78" isOneWay="false" action="urn:isKDCEnabled" name="isKDCEnabled" bindingOperationName="isKDCEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="669cc466-3285-4bc8-a1d8-e68ed8b2ce1e" isOneWay="false" action="urn:listServicePrinciples" name="listServicePrinciples" bindingOperationName="listServicePrinciples" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6560d93-1506-4a75-8ca4-402f7721ac10" isOneWay="false" action="urn:removeServer" name="removeServer" bindingOperationName="removeServer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ae9ee597-90e7-4ac7-a569-33c94972f77b" wsaVersion="NONE" name="EntitlementAdminServiceSoap11Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/EntitlementAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="d04c31d3-e468-431a-b237-bdb0440b907f" isOneWay="false" action="urn:clearAllAttributeCaches" name="clearAllAttributeCaches" bindingOperationName="clearAllAttributeCaches" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e11a5118-6180-4ae2-8c4c-44b1d964a80f" isOneWay="false" action="urn:clearAllResourceCaches" name="clearAllResourceCaches" bindingOperationName="clearAllResourceCaches" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="80d12ee0-84b8-42f3-90f6-1ba70faa94ea" isOneWay="false" action="urn:clearAttributeFinderCache" name="clearAttributeFinderCache" bindingOperationName="clearAttributeFinderCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="456d000e-e711-476c-bd26-7deb2dc8daea" isOneWay="false" action="urn:clearAttributeFinderCacheByAttributes" name="clearAttributeFinderCacheByAttributes" bindingOperationName="clearAttributeFinderCacheByAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6692a98-2edc-49ab-9316-db41280d8de1" isOneWay="false" action="urn:clearCarbonAttributeCache" name="clearCarbonAttributeCache" bindingOperationName="clearCarbonAttributeCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff17750b-d473-4262-a842-1a70d04c6851" isOneWay="false" action="urn:clearCarbonResourceCache" name="clearCarbonResourceCache" bindingOperationName="clearCarbonResourceCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ce026867-fc51-4759-868a-180e258e6d7f" isOneWay="false" action="urn:clearDecisionCache" name="clearDecisionCache" bindingOperationName="clearDecisionCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8dd1d70d-9503-4cbd-8b53-e2a45a02393d" isOneWay="false" action="urn:clearPolicyCache" name="clearPolicyCache" bindingOperationName="clearPolicyCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3f7c656-b87f-42d7-b5f2-04cfa419f405" isOneWay="false" action="urn:clearResourceFinderCache" name="clearResourceFinderCache" bindingOperationName="clearResourceFinderCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1fb891bc-23df-43f0-95fc-f6dd1de3984e" isOneWay="false" action="urn:doTestRequest" name="doTestRequest" bindingOperationName="doTestRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b4453e2b-cfbf-4f27-a0b5-9b2872b3a0b1" isOneWay="false" action="urn:doTestRequestForGivenPolicies" name="doTestRequestForGivenPolicies" bindingOperationName="doTestRequestForGivenPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d03b4948-7cbd-4711-b99b-5ae1deb94bc3" isOneWay="false" action="urn:getGlobalPolicyAlgorithm" name="getGlobalPolicyAlgorithm" bindingOperationName="getGlobalPolicyAlgorithm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6b9b6e6e-1702-463d-8f0d-53245f6be1ee" isOneWay="false" action="urn:getPDPData" name="getPDPData" bindingOperationName="getPDPData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="76424e70-53da-445f-9a0b-a9389f8bda6e" isOneWay="false" action="urn:getPIPAttributeFinderData" name="getPIPAttributeFinderData" bindingOperationName="getPIPAttributeFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e615edbc-3a96-4332-bce0-a42d44ab62fb" isOneWay="false" action="urn:getPIPResourceFinderData" name="getPIPResourceFinderData" bindingOperationName="getPIPResourceFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b076f43e-e222-4d9f-bee2-a2cd05e4e6e7" isOneWay="false" action="urn:getPolicyFinderData" name="getPolicyFinderData" bindingOperationName="getPolicyFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c353ab2b-fd23-43ae-8cc4-0afe690489ae" isOneWay="false" action="urn:refreshAttributeFinder" name="refreshAttributeFinder" bindingOperationName="refreshAttributeFinder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8d3be27a-2c8d-43c4-81e9-bad24ce960d4" isOneWay="false" action="urn:refreshPolicyFinders" name="refreshPolicyFinders" bindingOperationName="refreshPolicyFinders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="921c2b84-724d-4374-97d0-a0151432779a" isOneWay="false" action="urn:refreshResourceFinder" name="refreshResourceFinder" bindingOperationName="refreshResourceFinder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cab1dd2f-fe4f-4fb7-88bb-7a980835377e" isOneWay="false" action="urn:setGlobalPolicyAlgorithm" name="setGlobalPolicyAlgorithm" bindingOperationName="setGlobalPolicyAlgorithm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d4951f46-a2d8-4e02-8d08-188e98274b32" wsaVersion="NONE" name="EntitlementAdminServiceSoap12Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/EntitlementAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/EntitlementAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/EntitlementAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://entitlement.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2301="http://entitlement.identity.carbon.wso2.org/xsd" xmlns:ax2303="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://entitlement.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>EntitlementAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2302="http://entitlement.identity.carbon.wso2.org/xsd" xmlns:ax2304="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:element name="EntitlementAdminServiceEntitlementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EntitlementException" nillable="true" type="ax2301:EntitlementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="refreshResourceFinder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="refreshPolicyFinders">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="doTestRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="xacmlRequest" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="doTestRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="doTestRequestForGivenPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="xacmlRequest" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policies" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="doTestRequestForGivenPoliciesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPDPData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPDPDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2303:PDPDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyFinderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="finder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyFinderDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2303:PolicyFinderDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPIPAttributeFinderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="finder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPIPAttributeFinderDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2303:PIPFinderDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPIPResourceFinderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="finder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPIPResourceFinderDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2303:PIPFinderDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getGlobalPolicyAlgorithm">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getGlobalPolicyAlgorithmResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setGlobalPolicyAlgorithm">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyCombiningAlgorithm" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAttributeFinderCacheByAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributeFinder" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attributeIds" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearCarbonAttributeCache">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAttributeFinderCache">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributeFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllResourceCaches">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearCarbonResourceCache">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearResourceFinderCache">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="refreshAttributeFinder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributeFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearPolicyCache">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearDecisionCache">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllAttributeCaches">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="PDPDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="decisionCacheEnable" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pipAttributeFinders" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pipResourceFinders" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policyFinders" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PolicyFinderDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="combiningAlgorithm" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIdentifiers" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PIPFinderDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="supportedAttributeIds" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EntitlementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getPIPResourceFinderDataRequest">
    <wsdl:part name="parameters" element="ns1:getPIPResourceFinderData"/>
  </wsdl:message>
  <wsdl:message name="getPIPResourceFinderDataResponse">
    <wsdl:part name="parameters" element="ns1:getPIPResourceFinderDataResponse"/>
  </wsdl:message>
  <wsdl:message name="setGlobalPolicyAlgorithmRequest">
    <wsdl:part name="parameters" element="ns1:setGlobalPolicyAlgorithm"/>
  </wsdl:message>
  <wsdl:message name="setGlobalPolicyAlgorithmResponse"/>
  <wsdl:message name="EntitlementAdminServiceEntitlementException">
    <wsdl:part name="parameters" element="ns1:EntitlementAdminServiceEntitlementException"/>
  </wsdl:message>
  <wsdl:message name="clearDecisionCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearDecisionCache"/>
  </wsdl:message>
  <wsdl:message name="clearDecisionCacheResponse"/>
  <wsdl:message name="getGlobalPolicyAlgorithmRequest">
    <wsdl:part name="parameters" element="ns1:getGlobalPolicyAlgorithm"/>
  </wsdl:message>
  <wsdl:message name="getGlobalPolicyAlgorithmResponse">
    <wsdl:part name="parameters" element="ns1:getGlobalPolicyAlgorithmResponse"/>
  </wsdl:message>
  <wsdl:message name="clearAllAttributeCachesRequest">
    <wsdl:part name="parameters" element="ns1:clearAllAttributeCaches"/>
  </wsdl:message>
  <wsdl:message name="clearAllAttributeCachesResponse"/>
  <wsdl:message name="clearPolicyCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearPolicyCache"/>
  </wsdl:message>
  <wsdl:message name="clearPolicyCacheResponse"/>
  <wsdl:message name="getPolicyFinderDataRequest">
    <wsdl:part name="parameters" element="ns1:getPolicyFinderData"/>
  </wsdl:message>
  <wsdl:message name="getPolicyFinderDataResponse">
    <wsdl:part name="parameters" element="ns1:getPolicyFinderDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getPDPDataRequest">
    <wsdl:part name="parameters" element="ns1:getPDPData"/>
  </wsdl:message>
  <wsdl:message name="getPDPDataResponse">
    <wsdl:part name="parameters" element="ns1:getPDPDataResponse"/>
  </wsdl:message>
  <wsdl:message name="clearAllResourceCachesRequest">
    <wsdl:part name="parameters" element="ns1:clearAllResourceCaches"/>
  </wsdl:message>
  <wsdl:message name="clearAllResourceCachesResponse"/>
  <wsdl:message name="clearCarbonAttributeCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearCarbonAttributeCache"/>
  </wsdl:message>
  <wsdl:message name="clearCarbonAttributeCacheResponse"/>
  <wsdl:message name="refreshAttributeFinderRequest">
    <wsdl:part name="parameters" element="ns1:refreshAttributeFinder"/>
  </wsdl:message>
  <wsdl:message name="refreshAttributeFinderResponse"/>
  <wsdl:message name="clearAttributeFinderCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearAttributeFinderCache"/>
  </wsdl:message>
  <wsdl:message name="clearAttributeFinderCacheResponse"/>
  <wsdl:message name="clearResourceFinderCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearResourceFinderCache"/>
  </wsdl:message>
  <wsdl:message name="clearResourceFinderCacheResponse"/>
  <wsdl:message name="getPIPAttributeFinderDataRequest">
    <wsdl:part name="parameters" element="ns1:getPIPAttributeFinderData"/>
  </wsdl:message>
  <wsdl:message name="getPIPAttributeFinderDataResponse">
    <wsdl:part name="parameters" element="ns1:getPIPAttributeFinderDataResponse"/>
  </wsdl:message>
  <wsdl:message name="clearCarbonResourceCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearCarbonResourceCache"/>
  </wsdl:message>
  <wsdl:message name="clearCarbonResourceCacheResponse"/>
  <wsdl:message name="doTestRequestRequest">
    <wsdl:part name="parameters" element="ns1:doTestRequest"/>
  </wsdl:message>
  <wsdl:message name="doTestRequestResponse">
    <wsdl:part name="parameters" element="ns1:doTestRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="clearAttributeFinderCacheByAttributesRequest">
    <wsdl:part name="parameters" element="ns1:clearAttributeFinderCacheByAttributes"/>
  </wsdl:message>
  <wsdl:message name="clearAttributeFinderCacheByAttributesResponse"/>
  <wsdl:message name="doTestRequestForGivenPoliciesRequest">
    <wsdl:part name="parameters" element="ns1:doTestRequestForGivenPolicies"/>
  </wsdl:message>
  <wsdl:message name="doTestRequestForGivenPoliciesResponse">
    <wsdl:part name="parameters" element="ns1:doTestRequestForGivenPoliciesResponse"/>
  </wsdl:message>
  <wsdl:message name="refreshResourceFinderRequest">
    <wsdl:part name="parameters" element="ns1:refreshResourceFinder"/>
  </wsdl:message>
  <wsdl:message name="refreshResourceFinderResponse"/>
  <wsdl:message name="refreshPolicyFindersRequest">
    <wsdl:part name="parameters" element="ns1:refreshPolicyFinders"/>
  </wsdl:message>
  <wsdl:message name="refreshPolicyFindersResponse"/>
  <wsdl:portType name="EntitlementAdminServicePortType">
    <wsdl:operation name="getPIPResourceFinderData">
      <wsdl:input message="tns:getPIPResourceFinderDataRequest" wsaw:Action="urn:getPIPResourceFinderData"/>
      <wsdl:output message="tns:getPIPResourceFinderDataResponse" wsaw:Action="urn:getPIPResourceFinderDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setGlobalPolicyAlgorithm">
      <wsdl:input message="tns:setGlobalPolicyAlgorithmRequest" wsaw:Action="urn:setGlobalPolicyAlgorithm"/>
      <wsdl:output message="tns:setGlobalPolicyAlgorithmResponse" wsaw:Action="urn:setGlobalPolicyAlgorithmResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:setGlobalPolicyAlgorithmEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearDecisionCache">
      <wsdl:input message="tns:clearDecisionCacheRequest" wsaw:Action="urn:clearDecisionCache"/>
      <wsdl:output message="tns:clearDecisionCacheResponse" wsaw:Action="urn:clearDecisionCacheResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearDecisionCacheEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getGlobalPolicyAlgorithm">
      <wsdl:input message="tns:getGlobalPolicyAlgorithmRequest" wsaw:Action="urn:getGlobalPolicyAlgorithm"/>
      <wsdl:output message="tns:getGlobalPolicyAlgorithmResponse" wsaw:Action="urn:getGlobalPolicyAlgorithmResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:getGlobalPolicyAlgorithmEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAllAttributeCaches">
      <wsdl:input message="tns:clearAllAttributeCachesRequest" wsaw:Action="urn:clearAllAttributeCaches"/>
      <wsdl:output message="tns:clearAllAttributeCachesResponse" wsaw:Action="urn:clearAllAttributeCachesResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearAllAttributeCachesEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearPolicyCache">
      <wsdl:input message="tns:clearPolicyCacheRequest" wsaw:Action="urn:clearPolicyCache"/>
      <wsdl:output message="tns:clearPolicyCacheResponse" wsaw:Action="urn:clearPolicyCacheResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearPolicyCacheEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicyFinderData">
      <wsdl:input message="tns:getPolicyFinderDataRequest" wsaw:Action="urn:getPolicyFinderData"/>
      <wsdl:output message="tns:getPolicyFinderDataResponse" wsaw:Action="urn:getPolicyFinderDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPDPData">
      <wsdl:input message="tns:getPDPDataRequest" wsaw:Action="urn:getPDPData"/>
      <wsdl:output message="tns:getPDPDataResponse" wsaw:Action="urn:getPDPDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="clearAllResourceCaches">
      <wsdl:input message="tns:clearAllResourceCachesRequest" wsaw:Action="urn:clearAllResourceCaches"/>
      <wsdl:output message="tns:clearAllResourceCachesResponse" wsaw:Action="urn:clearAllResourceCachesResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearAllResourceCachesEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonAttributeCache">
      <wsdl:input message="tns:clearCarbonAttributeCacheRequest" wsaw:Action="urn:clearCarbonAttributeCache"/>
      <wsdl:output message="tns:clearCarbonAttributeCacheResponse" wsaw:Action="urn:clearCarbonAttributeCacheResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearCarbonAttributeCacheEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="refreshAttributeFinder">
      <wsdl:input message="tns:refreshAttributeFinderRequest" wsaw:Action="urn:refreshAttributeFinder"/>
      <wsdl:output message="tns:refreshAttributeFinderResponse" wsaw:Action="urn:refreshAttributeFinderResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:refreshAttributeFinderEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCache">
      <wsdl:input message="tns:clearAttributeFinderCacheRequest" wsaw:Action="urn:clearAttributeFinderCache"/>
      <wsdl:output message="tns:clearAttributeFinderCacheResponse" wsaw:Action="urn:clearAttributeFinderCacheResponse"/>
    </wsdl:operation>
    <wsdl:operation name="clearResourceFinderCache">
      <wsdl:input message="tns:clearResourceFinderCacheRequest" wsaw:Action="urn:clearResourceFinderCache"/>
      <wsdl:output message="tns:clearResourceFinderCacheResponse" wsaw:Action="urn:clearResourceFinderCacheResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPIPAttributeFinderData">
      <wsdl:input message="tns:getPIPAttributeFinderDataRequest" wsaw:Action="urn:getPIPAttributeFinderData"/>
      <wsdl:output message="tns:getPIPAttributeFinderDataResponse" wsaw:Action="urn:getPIPAttributeFinderDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonResourceCache">
      <wsdl:input message="tns:clearCarbonResourceCacheRequest" wsaw:Action="urn:clearCarbonResourceCache"/>
      <wsdl:output message="tns:clearCarbonResourceCacheResponse" wsaw:Action="urn:clearCarbonResourceCacheResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearCarbonResourceCacheEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="doTestRequest">
      <wsdl:input message="tns:doTestRequestRequest" wsaw:Action="urn:doTestRequest"/>
      <wsdl:output message="tns:doTestRequestResponse" wsaw:Action="urn:doTestRequestResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:doTestRequestEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCacheByAttributes">
      <wsdl:input message="tns:clearAttributeFinderCacheByAttributesRequest" wsaw:Action="urn:clearAttributeFinderCacheByAttributes"/>
      <wsdl:output message="tns:clearAttributeFinderCacheByAttributesResponse" wsaw:Action="urn:clearAttributeFinderCacheByAttributesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="doTestRequestForGivenPolicies">
      <wsdl:input message="tns:doTestRequestForGivenPoliciesRequest" wsaw:Action="urn:doTestRequestForGivenPolicies"/>
      <wsdl:output message="tns:doTestRequestForGivenPoliciesResponse" wsaw:Action="urn:doTestRequestForGivenPoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:doTestRequestForGivenPoliciesEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="refreshResourceFinder">
      <wsdl:input message="tns:refreshResourceFinderRequest" wsaw:Action="urn:refreshResourceFinder"/>
      <wsdl:output message="tns:refreshResourceFinderResponse" wsaw:Action="urn:refreshResourceFinderResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:refreshResourceFinderEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicyFinders">
      <wsdl:input message="tns:refreshPolicyFindersRequest" wsaw:Action="urn:refreshPolicyFinders"/>
      <wsdl:output message="tns:refreshPolicyFindersResponse" wsaw:Action="urn:refreshPolicyFindersResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:refreshPolicyFindersEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EntitlementAdminServiceSoap11Binding" type="tns:EntitlementAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getPIPResourceFinderData">
      <soap:operation soapAction="urn:getPIPResourceFinderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setGlobalPolicyAlgorithm">
      <soap:operation soapAction="urn:setGlobalPolicyAlgorithm" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearDecisionCache">
      <soap:operation soapAction="urn:clearDecisionCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGlobalPolicyAlgorithm">
      <soap:operation soapAction="urn:getGlobalPolicyAlgorithm" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllAttributeCaches">
      <soap:operation soapAction="urn:clearAllAttributeCaches" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearPolicyCache">
      <soap:operation soapAction="urn:clearPolicyCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyFinderData">
      <soap:operation soapAction="urn:getPolicyFinderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPDPData">
      <soap:operation soapAction="urn:getPDPData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllResourceCaches">
      <soap:operation soapAction="urn:clearAllResourceCaches" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonAttributeCache">
      <soap:operation soapAction="urn:clearCarbonAttributeCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshAttributeFinder">
      <soap:operation soapAction="urn:refreshAttributeFinder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCache">
      <soap:operation soapAction="urn:clearAttributeFinderCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearResourceFinderCache">
      <soap:operation soapAction="urn:clearResourceFinderCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPIPAttributeFinderData">
      <soap:operation soapAction="urn:getPIPAttributeFinderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonResourceCache">
      <soap:operation soapAction="urn:clearCarbonResourceCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doTestRequest">
      <soap:operation soapAction="urn:doTestRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCacheByAttributes">
      <soap:operation soapAction="urn:clearAttributeFinderCacheByAttributes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="doTestRequestForGivenPolicies">
      <soap:operation soapAction="urn:doTestRequestForGivenPolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshResourceFinder">
      <soap:operation soapAction="urn:refreshResourceFinder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicyFinders">
      <soap:operation soapAction="urn:refreshPolicyFinders" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementAdminServiceSoap12Binding" type="tns:EntitlementAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getPIPResourceFinderData">
      <soap12:operation soapAction="urn:getPIPResourceFinderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setGlobalPolicyAlgorithm">
      <soap12:operation soapAction="urn:setGlobalPolicyAlgorithm" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearDecisionCache">
      <soap12:operation soapAction="urn:clearDecisionCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGlobalPolicyAlgorithm">
      <soap12:operation soapAction="urn:getGlobalPolicyAlgorithm" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllAttributeCaches">
      <soap12:operation soapAction="urn:clearAllAttributeCaches" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearPolicyCache">
      <soap12:operation soapAction="urn:clearPolicyCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyFinderData">
      <soap12:operation soapAction="urn:getPolicyFinderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPDPData">
      <soap12:operation soapAction="urn:getPDPData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllResourceCaches">
      <soap12:operation soapAction="urn:clearAllResourceCaches" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonAttributeCache">
      <soap12:operation soapAction="urn:clearCarbonAttributeCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshAttributeFinder">
      <soap12:operation soapAction="urn:refreshAttributeFinder" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCache">
      <soap12:operation soapAction="urn:clearAttributeFinderCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearResourceFinderCache">
      <soap12:operation soapAction="urn:clearResourceFinderCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPIPAttributeFinderData">
      <soap12:operation soapAction="urn:getPIPAttributeFinderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonResourceCache">
      <soap12:operation soapAction="urn:clearCarbonResourceCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doTestRequest">
      <soap12:operation soapAction="urn:doTestRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCacheByAttributes">
      <soap12:operation soapAction="urn:clearAttributeFinderCacheByAttributes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="doTestRequestForGivenPolicies">
      <soap12:operation soapAction="urn:doTestRequestForGivenPolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshResourceFinder">
      <soap12:operation soapAction="urn:refreshResourceFinder" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicyFinders">
      <soap12:operation soapAction="urn:refreshPolicyFinders" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementAdminServiceHttpBinding" type="tns:EntitlementAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getPIPResourceFinderData">
      <http:operation location="getPIPResourceFinderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setGlobalPolicyAlgorithm">
      <http:operation location="setGlobalPolicyAlgorithm"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearDecisionCache">
      <http:operation location="clearDecisionCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGlobalPolicyAlgorithm">
      <http:operation location="getGlobalPolicyAlgorithm"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllAttributeCaches">
      <http:operation location="clearAllAttributeCaches"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearPolicyCache">
      <http:operation location="clearPolicyCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicyFinderData">
      <http:operation location="getPolicyFinderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPDPData">
      <http:operation location="getPDPData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllResourceCaches">
      <http:operation location="clearAllResourceCaches"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonAttributeCache">
      <http:operation location="clearCarbonAttributeCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="refreshAttributeFinder">
      <http:operation location="refreshAttributeFinder"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCache">
      <http:operation location="clearAttributeFinderCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearResourceFinderCache">
      <http:operation location="clearResourceFinderCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPIPAttributeFinderData">
      <http:operation location="getPIPAttributeFinderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonResourceCache">
      <http:operation location="clearCarbonResourceCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="doTestRequest">
      <http:operation location="doTestRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCacheByAttributes">
      <http:operation location="clearAttributeFinderCacheByAttributes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="doTestRequestForGivenPolicies">
      <http:operation location="doTestRequestForGivenPolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="refreshResourceFinder">
      <http:operation location="refreshResourceFinder"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicyFinders">
      <http:operation location="refreshPolicyFinders"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EntitlementAdminService">
    <wsdl:port name="EntitlementAdminServiceHttpsSoap11Endpoint" binding="tns:EntitlementAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementAdminServiceHttpsSoap12Endpoint" binding="tns:EntitlementAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementAdminServiceHttpsEndpoint" binding="tns:EntitlementAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="9e833065-e346-4655-b5b3-3ad1d3b67646" isOneWay="false" action="urn:clearAllAttributeCaches" name="clearAllAttributeCaches" bindingOperationName="clearAllAttributeCaches" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="60075780-d740-4cc4-b7d7-733c80eaa341" isOneWay="false" action="urn:clearAllResourceCaches" name="clearAllResourceCaches" bindingOperationName="clearAllResourceCaches" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aa754e0d-cd0a-4e03-b3c2-29555faf762d" isOneWay="false" action="urn:clearAttributeFinderCache" name="clearAttributeFinderCache" bindingOperationName="clearAttributeFinderCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cb7c4ca9-0837-4e0c-8639-5ea6da984fab" isOneWay="false" action="urn:clearAttributeFinderCacheByAttributes" name="clearAttributeFinderCacheByAttributes" bindingOperationName="clearAttributeFinderCacheByAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7a4baff0-13a8-436b-aad0-81a838981c80" isOneWay="false" action="urn:clearCarbonAttributeCache" name="clearCarbonAttributeCache" bindingOperationName="clearCarbonAttributeCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7bce2bdc-2bc9-4002-91c5-9aa08440d3da" isOneWay="false" action="urn:clearCarbonResourceCache" name="clearCarbonResourceCache" bindingOperationName="clearCarbonResourceCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cb4453df-c7dc-4d36-871d-2d09e29c44bd" isOneWay="false" action="urn:clearDecisionCache" name="clearDecisionCache" bindingOperationName="clearDecisionCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9fe56811-e8c6-418f-a3d7-5d010c21d1d8" isOneWay="false" action="urn:clearPolicyCache" name="clearPolicyCache" bindingOperationName="clearPolicyCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8ba6c6af-1a28-40bb-99b3-53f6d9238c26" isOneWay="false" action="urn:clearResourceFinderCache" name="clearResourceFinderCache" bindingOperationName="clearResourceFinderCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="05b5aa3e-a6ac-4050-be21-80cbbfb693f6" isOneWay="false" action="urn:doTestRequest" name="doTestRequest" bindingOperationName="doTestRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8791dbc8-a5b3-4abb-9d37-5da386ac9f47" isOneWay="false" action="urn:doTestRequestForGivenPolicies" name="doTestRequestForGivenPolicies" bindingOperationName="doTestRequestForGivenPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ce35c704-fd2e-467d-9957-fcb7ccca8026" isOneWay="false" action="urn:getGlobalPolicyAlgorithm" name="getGlobalPolicyAlgorithm" bindingOperationName="getGlobalPolicyAlgorithm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6b260eba-2611-48e2-97a6-7a33ccfdb6c2" isOneWay="false" action="urn:getPDPData" name="getPDPData" bindingOperationName="getPDPData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79109939-2b7b-40d6-bc09-d19d28f05d74" isOneWay="false" action="urn:getPIPAttributeFinderData" name="getPIPAttributeFinderData" bindingOperationName="getPIPAttributeFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3c6fb4eb-cc16-4ba9-8d23-6c5b14d053fc" isOneWay="false" action="urn:getPIPResourceFinderData" name="getPIPResourceFinderData" bindingOperationName="getPIPResourceFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="422c75fe-2bbc-4e09-9ac9-203192411ca7" isOneWay="false" action="urn:getPolicyFinderData" name="getPolicyFinderData" bindingOperationName="getPolicyFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d4261360-f542-49d5-9f4c-97480774adc3" isOneWay="false" action="urn:refreshAttributeFinder" name="refreshAttributeFinder" bindingOperationName="refreshAttributeFinder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="33eaa1f2-c3d2-48f0-89b2-b392bf48c013" isOneWay="false" action="urn:refreshPolicyFinders" name="refreshPolicyFinders" bindingOperationName="refreshPolicyFinders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="10d2bbe6-45bc-47c2-b89b-0220780ab456" isOneWay="false" action="urn:refreshResourceFinder" name="refreshResourceFinder" bindingOperationName="refreshResourceFinder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fc348fe5-a14d-480e-af8c-c357a3257598" isOneWay="false" action="urn:setGlobalPolicyAlgorithm" name="setGlobalPolicyAlgorithm" bindingOperationName="setGlobalPolicyAlgorithm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7a49c419-6fda-4aa3-9b0c-fc9b510b1845" wsaVersion="NONE" name="EntitlementPolicyAdminServiceSoap12Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementPolicyAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/EntitlementPolicyAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="6a7f12f7-5f97-4d5b-902f-4396d46f85ca" isOneWay="false" action="urn:addPolicies" name="addPolicies" bindingOperationName="addPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e98415e-9044-417a-b69e-1f189da61a99" isOneWay="false" action="urn:addPolicy" name="addPolicy" bindingOperationName="addPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="23d24d29-4030-4453-bd5a-9796a4bb7f8a" isOneWay="false" action="urn:addSubscriber" name="addSubscriber" bindingOperationName="addSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="51954526-b3c7-4cd2-ac25-f63085c7a40d" isOneWay="false" action="urn:deleteSubscriber" name="deleteSubscriber" bindingOperationName="deleteSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9edd5486-75b5-4b61-b137-cbc344ef46e2" isOneWay="false" action="urn:dePromotePolicy" name="dePromotePolicy" bindingOperationName="dePromotePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="495e0bcb-a271-40df-9e50-d53c6b7ceeb3" isOneWay="false" action="urn:enableDisablePolicy" name="enableDisablePolicy" bindingOperationName="enableDisablePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f7b9474-3bc8-4e8f-af95-b904df5424f0" isOneWay="false" action="urn:getAllPolicies" name="getAllPolicies" bindingOperationName="getAllPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d318f6b9-378a-47ad-9673-d65085209007" isOneWay="false" action="urn:getAllPolicyIds" name="getAllPolicyIds" bindingOperationName="getAllPolicyIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c306b6df-62c2-4392-b19e-1c596e966f00" isOneWay="false" action="urn:getEntitlementData" name="getEntitlementData" bindingOperationName="getEntitlementData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f237caf-8d02-4002-a480-1e76d6274fe7" isOneWay="false" action="urn:getEntitlementDataModules" name="getEntitlementDataModules" bindingOperationName="getEntitlementDataModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a77fa033-5f93-4fdd-9c23-c215d63c6ee8" isOneWay="false" action="urn:getLightPolicy" name="getLightPolicy" bindingOperationName="getLightPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa5e5777-3164-4b42-b874-044ca5f9bbe0" isOneWay="false" action="urn:getPolicy" name="getPolicy" bindingOperationName="getPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="335f01e8-4310-40ef-b4d1-bcec495bf3ad" isOneWay="false" action="urn:getPolicyByVersion" name="getPolicyByVersion" bindingOperationName="getPolicyByVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12106806-7401-4018-b3f1-37e849bf5162" isOneWay="false" action="urn:getPolicyVersions" name="getPolicyVersions" bindingOperationName="getPolicyVersions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d1d8af4-4e02-43d4-b8a7-93243ac5d4fc" isOneWay="false" action="urn:getPublisherModuleData" name="getPublisherModuleData" bindingOperationName="getPublisherModuleData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7d624e67-7b59-48c9-a650-92c5374f324a" isOneWay="false" action="urn:getStatusData" name="getStatusData" bindingOperationName="getStatusData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bbe13873-e67f-40d4-9458-e8330405a843" isOneWay="false" action="urn:getSubscriber" name="getSubscriber" bindingOperationName="getSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="39dcbd75-1e1c-4419-b823-b5c4f7b41e56" isOneWay="false" action="urn:getSubscriberIds" name="getSubscriberIds" bindingOperationName="getSubscriberIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="49e9e66b-c44b-4aaf-9e11-3636a3bd6182" isOneWay="false" action="urn:importPolicyFromRegistry" name="importPolicyFromRegistry" bindingOperationName="importPolicyFromRegistry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52b83e58-8234-4ccb-9921-70ac2ed36067" isOneWay="false" action="urn:orderPolicy" name="orderPolicy" bindingOperationName="orderPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c7468b96-4fb8-46e2-818c-e525498557fd" isOneWay="false" action="urn:publish" name="publish" bindingOperationName="publish" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a493f159-97de-4842-bfca-27cccd99fe53" isOneWay="false" action="urn:publishPolicies" name="publishPolicies" bindingOperationName="publishPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d41dd828-4048-401c-9489-32358e4fbcf3" isOneWay="false" action="urn:publishToPDP" name="publishToPDP" bindingOperationName="publishToPDP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bc20bd05-5772-4f2e-8d68-cceb2695ea85" isOneWay="false" action="urn:removePolicies" name="removePolicies" bindingOperationName="removePolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2fad9830-46c8-4fbe-a40b-5d40c5aee362" isOneWay="false" action="urn:removePolicy" name="removePolicy" bindingOperationName="removePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="39b134a5-c50b-4482-823f-77e84c370cfe" isOneWay="false" action="urn:rollBackPolicy" name="rollBackPolicy" bindingOperationName="rollBackPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f141ab61-de4f-4bac-b929-9ebd18272595" isOneWay="false" action="urn:updatePolicy" name="updatePolicy" bindingOperationName="updatePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7cc25da0-dffe-46d4-83c8-603cdbcb494b" isOneWay="false" action="urn:updateSubscriber" name="updateSubscriber" bindingOperationName="updateSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a1e6a0e1-e6f9-4fab-bca9-a981ee7a883b" wsaVersion="NONE" name="EntitlementPolicyAdminServiceSoap11Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementPolicyAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/EntitlementPolicyAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/EntitlementPolicyAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/EntitlementPolicyAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://entitlement.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://entitlement.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2297="http://entitlement.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ax2299="http://dto.entitlement.identity.carbon.wso2.org/xsd">
  <wsdl:documentation>EntitlementPolicyAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2300="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2298="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:element name="EntitlementPolicyAdminServiceEntitlementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EntitlementException" nillable="true" type="ax2297:EntitlementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policies" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyTypeFilter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policySearchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="isPDPPolicy" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPoliciesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PaginatedPolicySetDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importPolicyFromRegistry">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyRegistryPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyByVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyByVersionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLightPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLightPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removePolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIds" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dePromote" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dePromote" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPolicyIds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="searchString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPolicyIdsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSubscriber">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subscribeId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSubscriberResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PublisherDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSubscriberIds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="searchString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSubscriberIdsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addSubscriber">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="holder" nillable="true" type="ax2300:PublisherDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateSubscriber">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="holder" nillable="true" type="ax2300:PublisherDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteSubscriber">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subscriberId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="publishPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIds" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="subscriberIds" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="order" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="publishToPDP">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIds" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="order" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="rollBackPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStatusData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="about" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="searchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStatusDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PaginatedStatusHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPublisherModuleData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPublisherModuleDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2300:PublisherDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitlementData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dataModule" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="regexp" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dataLevel" type="xs:int"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitlementDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:EntitlementTreeNodeDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitlementDataModules">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitlementDataModulesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2300:EntitlementFinderDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyVersions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyVersionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="orderPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newOrder" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="enableDisablePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enable" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="dePromotePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyDTO" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyDTO" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="isPDPPolicy" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="publish">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="verificationCode" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="PolicyDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributeDTOs" nillable="true" type="ax2299:AttributeDTO"/>
          <xs:element minOccurs="0" name="lastModifiedTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModifiedUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policy" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyEditor" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policyEditorData" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIdReferences" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyOrder" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policySetIdReferences" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="promote" type="xs:boolean"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AttributeDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeDataType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaginatedPolicySetDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policySet" nillable="true" type="ax2299:PolicyDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PublisherDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="propertyDTOs" nillable="true" type="ax2299:PublisherPropertyDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PublisherPropertyDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="module" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="secret" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaginatedStatusHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="statusHolders" nillable="true" type="ax2299:StatusHolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatusHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="success" type="xs:boolean"/>
          <xs:element minOccurs="0" name="target" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="timeInstance" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="user" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EntitlementTreeNodeDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="childNodes" nillable="true" type="ax2299:EntitlementTreeNodeDTO"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EntitlementFinderDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="allApplicationRelated" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="applicationIds" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fullPathSupported" type="xs:boolean"/>
          <xs:element minOccurs="0" name="hierarchicalLevels" type="xs:int"/>
          <xs:element minOccurs="0" name="hierarchicalTree" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="searchSupported" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="supportedCategory" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EntitlementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getEntitlementDataRequest">
    <wsdl:part name="parameters" element="ns1:getEntitlementData"/>
  </wsdl:message>
  <wsdl:message name="getEntitlementDataResponse">
    <wsdl:part name="parameters" element="ns1:getEntitlementDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllPolicyIdsRequest">
    <wsdl:part name="parameters" element="ns1:getAllPolicyIds"/>
  </wsdl:message>
  <wsdl:message name="getAllPolicyIdsResponse">
    <wsdl:part name="parameters" element="ns1:getAllPolicyIdsResponse"/>
  </wsdl:message>
  <wsdl:message name="EntitlementPolicyAdminServiceEntitlementException">
    <wsdl:part name="parameters" element="ns1:EntitlementPolicyAdminServiceEntitlementException"/>
  </wsdl:message>
  <wsdl:message name="getAllPoliciesRequest">
    <wsdl:part name="parameters" element="ns1:getAllPolicies"/>
  </wsdl:message>
  <wsdl:message name="getAllPoliciesResponse">
    <wsdl:part name="parameters" element="ns1:getAllPoliciesResponse"/>
  </wsdl:message>
  <wsdl:message name="getEntitlementDataModulesRequest">
    <wsdl:part name="parameters" element="ns1:getEntitlementDataModules"/>
  </wsdl:message>
  <wsdl:message name="getEntitlementDataModulesResponse">
    <wsdl:part name="parameters" element="ns1:getEntitlementDataModulesResponse"/>
  </wsdl:message>
  <wsdl:message name="getSubscriberRequest">
    <wsdl:part name="parameters" element="ns1:getSubscriber"/>
  </wsdl:message>
  <wsdl:message name="getSubscriberResponse">
    <wsdl:part name="parameters" element="ns1:getSubscriberResponse"/>
  </wsdl:message>
  <wsdl:message name="addSubscriberRequest">
    <wsdl:part name="parameters" element="ns1:addSubscriber"/>
  </wsdl:message>
  <wsdl:message name="addSubscriberResponse"/>
  <wsdl:message name="getPolicyVersionsRequest">
    <wsdl:part name="parameters" element="ns1:getPolicyVersions"/>
  </wsdl:message>
  <wsdl:message name="getPolicyVersionsResponse">
    <wsdl:part name="parameters" element="ns1:getPolicyVersionsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteSubscriberRequest">
    <wsdl:part name="parameters" element="ns1:deleteSubscriber"/>
  </wsdl:message>
  <wsdl:message name="deleteSubscriberResponse"/>
  <wsdl:message name="addPolicyRequest">
    <wsdl:part name="parameters" element="ns1:addPolicy"/>
  </wsdl:message>
  <wsdl:message name="addPolicyResponse"/>
  <wsdl:message name="updatePolicyRequest">
    <wsdl:part name="parameters" element="ns1:updatePolicy"/>
  </wsdl:message>
  <wsdl:message name="updatePolicyResponse"/>
  <wsdl:message name="addPoliciesRequest">
    <wsdl:part name="parameters" element="ns1:addPolicies"/>
  </wsdl:message>
  <wsdl:message name="addPoliciesResponse"/>
  <wsdl:message name="updateSubscriberRequest">
    <wsdl:part name="parameters" element="ns1:updateSubscriber"/>
  </wsdl:message>
  <wsdl:message name="updateSubscriberResponse"/>
  <wsdl:message name="getSubscriberIdsRequest">
    <wsdl:part name="parameters" element="ns1:getSubscriberIds"/>
  </wsdl:message>
  <wsdl:message name="getSubscriberIdsResponse">
    <wsdl:part name="parameters" element="ns1:getSubscriberIdsResponse"/>
  </wsdl:message>
  <wsdl:message name="dePromotePolicyRequest">
    <wsdl:part name="parameters" element="ns1:dePromotePolicy"/>
  </wsdl:message>
  <wsdl:message name="dePromotePolicyResponse"/>
  <wsdl:message name="orderPolicyRequest">
    <wsdl:part name="parameters" element="ns1:orderPolicy"/>
  </wsdl:message>
  <wsdl:message name="orderPolicyResponse"/>
  <wsdl:message name="rollBackPolicyRequest">
    <wsdl:part name="parameters" element="ns1:rollBackPolicy"/>
  </wsdl:message>
  <wsdl:message name="rollBackPolicyResponse"/>
  <wsdl:message name="getLightPolicyRequest">
    <wsdl:part name="parameters" element="ns1:getLightPolicy"/>
  </wsdl:message>
  <wsdl:message name="getLightPolicyResponse">
    <wsdl:part name="parameters" element="ns1:getLightPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="getPolicyRequest">
    <wsdl:part name="parameters" element="ns1:getPolicy"/>
  </wsdl:message>
  <wsdl:message name="getPolicyResponse">
    <wsdl:part name="parameters" element="ns1:getPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="removePolicyRequest">
    <wsdl:part name="parameters" element="ns1:removePolicy"/>
  </wsdl:message>
  <wsdl:message name="removePolicyResponse"/>
  <wsdl:message name="getPolicyByVersionRequest">
    <wsdl:part name="parameters" element="ns1:getPolicyByVersion"/>
  </wsdl:message>
  <wsdl:message name="getPolicyByVersionResponse">
    <wsdl:part name="parameters" element="ns1:getPolicyByVersionResponse"/>
  </wsdl:message>
  <wsdl:message name="importPolicyFromRegistryRequest">
    <wsdl:part name="parameters" element="ns1:importPolicyFromRegistry"/>
  </wsdl:message>
  <wsdl:message name="importPolicyFromRegistryResponse"/>
  <wsdl:message name="getPublisherModuleDataRequest">
    <wsdl:part name="parameters" element="ns1:getPublisherModuleData"/>
  </wsdl:message>
  <wsdl:message name="getPublisherModuleDataResponse">
    <wsdl:part name="parameters" element="ns1:getPublisherModuleDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getStatusDataRequest">
    <wsdl:part name="parameters" element="ns1:getStatusData"/>
  </wsdl:message>
  <wsdl:message name="getStatusDataResponse">
    <wsdl:part name="parameters" element="ns1:getStatusDataResponse"/>
  </wsdl:message>
  <wsdl:message name="enableDisablePolicyRequest">
    <wsdl:part name="parameters" element="ns1:enableDisablePolicy"/>
  </wsdl:message>
  <wsdl:message name="enableDisablePolicyResponse"/>
  <wsdl:message name="publishRequest">
    <wsdl:part name="parameters" element="ns1:publish"/>
  </wsdl:message>
  <wsdl:message name="publishResponse"/>
  <wsdl:message name="removePoliciesRequest">
    <wsdl:part name="parameters" element="ns1:removePolicies"/>
  </wsdl:message>
  <wsdl:message name="removePoliciesResponse"/>
  <wsdl:message name="publishPoliciesRequest">
    <wsdl:part name="parameters" element="ns1:publishPolicies"/>
  </wsdl:message>
  <wsdl:message name="publishPoliciesResponse"/>
  <wsdl:message name="publishToPDPRequest">
    <wsdl:part name="parameters" element="ns1:publishToPDP"/>
  </wsdl:message>
  <wsdl:message name="publishToPDPResponse"/>
  <wsdl:portType name="EntitlementPolicyAdminServicePortType">
    <wsdl:operation name="getEntitlementData">
      <wsdl:input message="tns:getEntitlementDataRequest" wsaw:Action="urn:getEntitlementData"/>
      <wsdl:output message="tns:getEntitlementDataResponse" wsaw:Action="urn:getEntitlementDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicyIds">
      <wsdl:input message="tns:getAllPolicyIdsRequest" wsaw:Action="urn:getAllPolicyIds"/>
      <wsdl:output message="tns:getAllPolicyIdsResponse" wsaw:Action="urn:getAllPolicyIdsResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getAllPolicyIdsEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicies">
      <wsdl:input message="tns:getAllPoliciesRequest" wsaw:Action="urn:getAllPolicies"/>
      <wsdl:output message="tns:getAllPoliciesResponse" wsaw:Action="urn:getAllPoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getAllPoliciesEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementDataModules">
      <wsdl:input message="tns:getEntitlementDataModulesRequest" wsaw:Action="urn:getEntitlementDataModules"/>
      <wsdl:output message="tns:getEntitlementDataModulesResponse" wsaw:Action="urn:getEntitlementDataModulesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSubscriber">
      <wsdl:input message="tns:getSubscriberRequest" wsaw:Action="urn:getSubscriber"/>
      <wsdl:output message="tns:getSubscriberResponse" wsaw:Action="urn:getSubscriberResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getSubscriberEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="addSubscriber">
      <wsdl:input message="tns:addSubscriberRequest" wsaw:Action="urn:addSubscriber"/>
      <wsdl:output message="tns:addSubscriberResponse" wsaw:Action="urn:addSubscriberResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:addSubscriberEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicyVersions">
      <wsdl:input message="tns:getPolicyVersionsRequest" wsaw:Action="urn:getPolicyVersions"/>
      <wsdl:output message="tns:getPolicyVersionsResponse" wsaw:Action="urn:getPolicyVersionsResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getPolicyVersionsEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteSubscriber">
      <wsdl:input message="tns:deleteSubscriberRequest" wsaw:Action="urn:deleteSubscriber"/>
      <wsdl:output message="tns:deleteSubscriberResponse" wsaw:Action="urn:deleteSubscriberResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:deleteSubscriberEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="addPolicy">
      <wsdl:input message="tns:addPolicyRequest" wsaw:Action="urn:addPolicy"/>
      <wsdl:output message="tns:addPolicyResponse" wsaw:Action="urn:addPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:addPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="updatePolicy">
      <wsdl:input message="tns:updatePolicyRequest" wsaw:Action="urn:updatePolicy"/>
      <wsdl:output message="tns:updatePolicyResponse" wsaw:Action="urn:updatePolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:updatePolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="addPolicies">
      <wsdl:input message="tns:addPoliciesRequest" wsaw:Action="urn:addPolicies"/>
      <wsdl:output message="tns:addPoliciesResponse" wsaw:Action="urn:addPoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:addPoliciesEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="updateSubscriber">
      <wsdl:input message="tns:updateSubscriberRequest" wsaw:Action="urn:updateSubscriber"/>
      <wsdl:output message="tns:updateSubscriberResponse" wsaw:Action="urn:updateSubscriberResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:updateSubscriberEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberIds">
      <wsdl:input message="tns:getSubscriberIdsRequest" wsaw:Action="urn:getSubscriberIds"/>
      <wsdl:output message="tns:getSubscriberIdsResponse" wsaw:Action="urn:getSubscriberIdsResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getSubscriberIdsEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="dePromotePolicy">
      <wsdl:input message="tns:dePromotePolicyRequest" wsaw:Action="urn:dePromotePolicy"/>
      <wsdl:output message="tns:dePromotePolicyResponse" wsaw:Action="urn:dePromotePolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:dePromotePolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="orderPolicy">
      <wsdl:input message="tns:orderPolicyRequest" wsaw:Action="urn:orderPolicy"/>
      <wsdl:output message="tns:orderPolicyResponse" wsaw:Action="urn:orderPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:orderPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="rollBackPolicy">
      <wsdl:input message="tns:rollBackPolicyRequest" wsaw:Action="urn:rollBackPolicy"/>
      <wsdl:output message="tns:rollBackPolicyResponse" wsaw:Action="urn:rollBackPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:rollBackPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getLightPolicy">
      <wsdl:input message="tns:getLightPolicyRequest" wsaw:Action="urn:getLightPolicy"/>
      <wsdl:output message="tns:getLightPolicyResponse" wsaw:Action="urn:getLightPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getLightPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <wsdl:input message="tns:getPolicyRequest" wsaw:Action="urn:getPolicy"/>
      <wsdl:output message="tns:getPolicyResponse" wsaw:Action="urn:getPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="removePolicy">
      <wsdl:input message="tns:removePolicyRequest" wsaw:Action="urn:removePolicy"/>
      <wsdl:output message="tns:removePolicyResponse" wsaw:Action="urn:removePolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:removePolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicyByVersion">
      <wsdl:input message="tns:getPolicyByVersionRequest" wsaw:Action="urn:getPolicyByVersion"/>
      <wsdl:output message="tns:getPolicyByVersionResponse" wsaw:Action="urn:getPolicyByVersionResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getPolicyByVersionEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="importPolicyFromRegistry">
      <wsdl:input message="tns:importPolicyFromRegistryRequest" wsaw:Action="urn:importPolicyFromRegistry"/>
      <wsdl:output message="tns:importPolicyFromRegistryResponse" wsaw:Action="urn:importPolicyFromRegistryResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:importPolicyFromRegistryEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPublisherModuleData">
      <wsdl:input message="tns:getPublisherModuleDataRequest" wsaw:Action="urn:getPublisherModuleData"/>
      <wsdl:output message="tns:getPublisherModuleDataResponse" wsaw:Action="urn:getPublisherModuleDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getStatusData">
      <wsdl:input message="tns:getStatusDataRequest" wsaw:Action="urn:getStatusData"/>
      <wsdl:output message="tns:getStatusDataResponse" wsaw:Action="urn:getStatusDataResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getStatusDataEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="enableDisablePolicy">
      <wsdl:input message="tns:enableDisablePolicyRequest" wsaw:Action="urn:enableDisablePolicy"/>
      <wsdl:output message="tns:enableDisablePolicyResponse" wsaw:Action="urn:enableDisablePolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:enableDisablePolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <wsdl:input message="tns:publishRequest" wsaw:Action="urn:publish"/>
      <wsdl:output message="tns:publishResponse" wsaw:Action="urn:publishResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:publishEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="removePolicies">
      <wsdl:input message="tns:removePoliciesRequest" wsaw:Action="urn:removePolicies"/>
      <wsdl:output message="tns:removePoliciesResponse" wsaw:Action="urn:removePoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:removePoliciesEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="publishPolicies">
      <wsdl:input message="tns:publishPoliciesRequest" wsaw:Action="urn:publishPolicies"/>
      <wsdl:output message="tns:publishPoliciesResponse" wsaw:Action="urn:publishPoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:publishPoliciesEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="publishToPDP">
      <wsdl:input message="tns:publishToPDPRequest" wsaw:Action="urn:publishToPDP"/>
      <wsdl:output message="tns:publishToPDPResponse" wsaw:Action="urn:publishToPDPResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:publishToPDPEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EntitlementPolicyAdminServiceSoap11Binding" type="tns:EntitlementPolicyAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEntitlementData">
      <soap:operation soapAction="urn:getEntitlementData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicyIds">
      <soap:operation soapAction="urn:getAllPolicyIds" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicies">
      <soap:operation soapAction="urn:getAllPolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementDataModules">
      <soap:operation soapAction="urn:getEntitlementDataModules" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriber">
      <soap:operation soapAction="urn:getSubscriber" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSubscriber">
      <soap:operation soapAction="urn:addSubscriber" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyVersions">
      <soap:operation soapAction="urn:getPolicyVersions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePolicy">
      <soap:operation soapAction="urn:updatePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicy">
      <soap:operation soapAction="urn:addPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSubscriber">
      <soap:operation soapAction="urn:deleteSubscriber" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicies">
      <soap:operation soapAction="urn:addPolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateSubscriber">
      <soap:operation soapAction="urn:updateSubscriber" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberIds">
      <soap:operation soapAction="urn:getSubscriberIds" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dePromotePolicy">
      <soap:operation soapAction="urn:dePromotePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="orderPolicy">
      <soap:operation soapAction="urn:orderPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rollBackPolicy">
      <soap:operation soapAction="urn:rollBackPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLightPolicy">
      <soap:operation soapAction="urn:getLightPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <soap:operation soapAction="urn:getPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePolicy">
      <soap:operation soapAction="urn:removePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyByVersion">
      <soap:operation soapAction="urn:getPolicyByVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importPolicyFromRegistry">
      <soap:operation soapAction="urn:importPolicyFromRegistry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPublisherModuleData">
      <soap:operation soapAction="urn:getPublisherModuleData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatusData">
      <soap:operation soapAction="urn:getStatusData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enableDisablePolicy">
      <soap:operation soapAction="urn:enableDisablePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <soap:operation soapAction="urn:publish" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePolicies">
      <soap:operation soapAction="urn:removePolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishPolicies">
      <soap:operation soapAction="urn:publishPolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishToPDP">
      <soap:operation soapAction="urn:publishToPDP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementPolicyAdminServiceSoap12Binding" type="tns:EntitlementPolicyAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEntitlementData">
      <soap12:operation soapAction="urn:getEntitlementData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicyIds">
      <soap12:operation soapAction="urn:getAllPolicyIds" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicies">
      <soap12:operation soapAction="urn:getAllPolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementDataModules">
      <soap12:operation soapAction="urn:getEntitlementDataModules" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriber">
      <soap12:operation soapAction="urn:getSubscriber" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSubscriber">
      <soap12:operation soapAction="urn:addSubscriber" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyVersions">
      <soap12:operation soapAction="urn:getPolicyVersions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePolicy">
      <soap12:operation soapAction="urn:updatePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicy">
      <soap12:operation soapAction="urn:addPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSubscriber">
      <soap12:operation soapAction="urn:deleteSubscriber" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicies">
      <soap12:operation soapAction="urn:addPolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateSubscriber">
      <soap12:operation soapAction="urn:updateSubscriber" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberIds">
      <soap12:operation soapAction="urn:getSubscriberIds" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dePromotePolicy">
      <soap12:operation soapAction="urn:dePromotePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="orderPolicy">
      <soap12:operation soapAction="urn:orderPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rollBackPolicy">
      <soap12:operation soapAction="urn:rollBackPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLightPolicy">
      <soap12:operation soapAction="urn:getLightPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <soap12:operation soapAction="urn:getPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePolicy">
      <soap12:operation soapAction="urn:removePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyByVersion">
      <soap12:operation soapAction="urn:getPolicyByVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importPolicyFromRegistry">
      <soap12:operation soapAction="urn:importPolicyFromRegistry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPublisherModuleData">
      <soap12:operation soapAction="urn:getPublisherModuleData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatusData">
      <soap12:operation soapAction="urn:getStatusData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enableDisablePolicy">
      <soap12:operation soapAction="urn:enableDisablePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <soap12:operation soapAction="urn:publish" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePolicies">
      <soap12:operation soapAction="urn:removePolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishPolicies">
      <soap12:operation soapAction="urn:publishPolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishToPDP">
      <soap12:operation soapAction="urn:publishToPDP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementPolicyAdminServiceHttpBinding" type="tns:EntitlementPolicyAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getEntitlementData">
      <http:operation location="getEntitlementData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicyIds">
      <http:operation location="getAllPolicyIds"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicies">
      <http:operation location="getAllPolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementDataModules">
      <http:operation location="getEntitlementDataModules"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriber">
      <http:operation location="getSubscriber"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addSubscriber">
      <http:operation location="addSubscriber"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicyVersions">
      <http:operation location="getPolicyVersions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updatePolicy">
      <http:operation location="updatePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addPolicy">
      <http:operation location="addPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteSubscriber">
      <http:operation location="deleteSubscriber"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addPolicies">
      <http:operation location="addPolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSubscriber">
      <http:operation location="updateSubscriber"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberIds">
      <http:operation location="getSubscriberIds"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="dePromotePolicy">
      <http:operation location="dePromotePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="orderPolicy">
      <http:operation location="orderPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="rollBackPolicy">
      <http:operation location="rollBackPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLightPolicy">
      <http:operation location="getLightPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <http:operation location="getPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removePolicy">
      <http:operation location="removePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicyByVersion">
      <http:operation location="getPolicyByVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="importPolicyFromRegistry">
      <http:operation location="importPolicyFromRegistry"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPublisherModuleData">
      <http:operation location="getPublisherModuleData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatusData">
      <http:operation location="getStatusData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enableDisablePolicy">
      <http:operation location="enableDisablePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <http:operation location="publish"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removePolicies">
      <http:operation location="removePolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publishPolicies">
      <http:operation location="publishPolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publishToPDP">
      <http:operation location="publishToPDP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EntitlementPolicyAdminService">
    <wsdl:port name="EntitlementPolicyAdminServiceHttpsSoap11Endpoint" binding="tns:EntitlementPolicyAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementPolicyAdminServiceHttpsSoap12Endpoint" binding="tns:EntitlementPolicyAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementPolicyAdminServiceHttpsEndpoint" binding="tns:EntitlementPolicyAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="ba7e7671-df8c-4214-89e2-57f9fe3fd697" isOneWay="false" action="urn:addPolicies" name="addPolicies" bindingOperationName="addPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c8c15e3-f7fe-4e26-81fa-9472bc97f1f9" isOneWay="false" action="urn:addPolicy" name="addPolicy" bindingOperationName="addPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f85f636a-ea90-4ea5-81ae-c5fbe16b23c4" isOneWay="false" action="urn:addSubscriber" name="addSubscriber" bindingOperationName="addSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="05e6bc01-709d-4ed3-b4dc-c0c2d5208e6d" isOneWay="false" action="urn:deleteSubscriber" name="deleteSubscriber" bindingOperationName="deleteSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f0ea60be-d750-4c84-8e5a-ca9120cd087b" isOneWay="false" action="urn:dePromotePolicy" name="dePromotePolicy" bindingOperationName="dePromotePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c551591d-a842-4639-bf55-48d242c61396" isOneWay="false" action="urn:enableDisablePolicy" name="enableDisablePolicy" bindingOperationName="enableDisablePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f97ef01c-a60d-49a7-822f-901a94077e8d" isOneWay="false" action="urn:getAllPolicies" name="getAllPolicies" bindingOperationName="getAllPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="06d67ef4-87f8-426a-bc56-ef8ab24188bb" isOneWay="false" action="urn:getAllPolicyIds" name="getAllPolicyIds" bindingOperationName="getAllPolicyIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8494a69b-d101-4e22-8ac7-36fa8f4c6f2c" isOneWay="false" action="urn:getEntitlementData" name="getEntitlementData" bindingOperationName="getEntitlementData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ad543691-1bfc-4002-ad63-a2d07484da4e" isOneWay="false" action="urn:getEntitlementDataModules" name="getEntitlementDataModules" bindingOperationName="getEntitlementDataModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="25fbb87a-c860-4808-bd6c-d4749852d2c4" isOneWay="false" action="urn:getLightPolicy" name="getLightPolicy" bindingOperationName="getLightPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e9d7e01-6d89-4db9-b7e4-8ab205744d4e" isOneWay="false" action="urn:getPolicy" name="getPolicy" bindingOperationName="getPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2666bf86-d211-4d35-b0f2-1ad4f39d6fdf" isOneWay="false" action="urn:getPolicyByVersion" name="getPolicyByVersion" bindingOperationName="getPolicyByVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="09a7ca7f-c0d5-4209-b011-c037b0494566" isOneWay="false" action="urn:getPolicyVersions" name="getPolicyVersions" bindingOperationName="getPolicyVersions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aeb8c11a-beae-4a49-9194-f9966ac81735" isOneWay="false" action="urn:getPublisherModuleData" name="getPublisherModuleData" bindingOperationName="getPublisherModuleData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8a5a756e-23e4-47d9-b19b-6e13f3ece04f" isOneWay="false" action="urn:getStatusData" name="getStatusData" bindingOperationName="getStatusData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="857b2c01-280e-4b3b-ad43-f19627974b29" isOneWay="false" action="urn:getSubscriber" name="getSubscriber" bindingOperationName="getSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3a38f37e-0db3-4a12-be8d-a99564d48bb5" isOneWay="false" action="urn:getSubscriberIds" name="getSubscriberIds" bindingOperationName="getSubscriberIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86e1bec5-4ccd-46b7-918c-e8c5c1802f16" isOneWay="false" action="urn:importPolicyFromRegistry" name="importPolicyFromRegistry" bindingOperationName="importPolicyFromRegistry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2631648d-14bf-418d-b8e0-4e52a1746076" isOneWay="false" action="urn:orderPolicy" name="orderPolicy" bindingOperationName="orderPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="750b7d82-1151-4a66-9986-2417288d3be3" isOneWay="false" action="urn:publish" name="publish" bindingOperationName="publish" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6e88cb9e-49f6-44d8-87c8-6b942a141d79" isOneWay="false" action="urn:publishPolicies" name="publishPolicies" bindingOperationName="publishPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9d947f4-c764-49b8-bb63-7c6ba98f3f47" isOneWay="false" action="urn:publishToPDP" name="publishToPDP" bindingOperationName="publishToPDP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="719842c2-2781-4ea0-b474-6fa74901884b" isOneWay="false" action="urn:removePolicies" name="removePolicies" bindingOperationName="removePolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="71fa0ce5-5adc-4fd4-961d-f5814d4460b9" isOneWay="false" action="urn:removePolicy" name="removePolicy" bindingOperationName="removePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d69a31eb-7785-4f22-af42-4b7b0142b30c" isOneWay="false" action="urn:rollBackPolicy" name="rollBackPolicy" bindingOperationName="rollBackPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8daf264e-d2d5-43b4-926e-a6c5727a8827" isOneWay="false" action="urn:updatePolicy" name="updatePolicy" bindingOperationName="updatePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="de626c78-710b-43ab-badf-df66968510b1" isOneWay="false" action="urn:updateSubscriber" name="updateSubscriber" bindingOperationName="updateSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="89d7824f-a7df-4fcc-8a80-720541570677" wsaVersion="NONE" name="EntitlementServiceSoap12Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/EntitlementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="f585f48b-69b5-42fd-869b-f331fa50501c" isOneWay="false" action="urn:getAllEntitlements" name="getAllEntitlements" bindingOperationName="getAllEntitlements" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f736c09-44b8-4e63-8e50-38e527e83c51" isOneWay="false" action="urn:getBooleanDecision" name="getBooleanDecision" bindingOperationName="getBooleanDecision" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b266bd92-9224-414a-a4df-858df57bbbc4" isOneWay="false" action="urn:getDecision" name="getDecision" bindingOperationName="getDecision" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3e100d43-f8db-488f-bdae-ec6b96fbcbdc" isOneWay="false" action="urn:getDecisionByAttributes" name="getDecisionByAttributes" bindingOperationName="getDecisionByAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="41163ad2-95bc-41ee-819d-18e23a54ca6c" isOneWay="false" action="urn:getEntitledAttributes" name="getEntitledAttributes" bindingOperationName="getEntitledAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8c1beb59-1a8e-4aea-a1c5-54518e47409e" isOneWay="false" action="urn:XACMLAuthzDecisionQuery" name="XACMLAuthzDecisionQuery" bindingOperationName="XACMLAuthzDecisionQuery" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2304957a-90e8-47e6-94ae-03a6d6b0b1eb" wsaVersion="NONE" name="EntitlementServiceSoap11Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/EntitlementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/EntitlementService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/EntitlementService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://entitlement.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2305="http://entitlement.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2307="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://entitlement.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>EntitlementService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2308="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2306="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:element name="EntitlementServiceEntitlementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EntitlementException" nillable="true" type="ax2305:EntitlementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDecision">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDecisionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDecisionByAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subject" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resource" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="environment" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDecisionByAttributesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="EntitlementServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EntitlementServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getBooleanDecision">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subject" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resource" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBooleanDecisionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitledAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subjectName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="subjectId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enableChildSearch" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitledAttributesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2307:EntitledResultSetDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllEntitlements">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="givenAttributes" nillable="true" type="ax2307:AttributeDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllEntitlementsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2307:EntitledResultSetDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="XACMLAuthzDecisionQuery">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="XACMLAuthzDecisionQueryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EntitledResultSetDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="advanceResult" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="entitledAttributesDTOs" nillable="true" type="ax2307:EntitledAttributesDTO"/>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="messageType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EntitledAttributesDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="allActions" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allResources" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributeDTOs" nillable="true" type="ax2307:AttributeDTO"/>
          <xs:element minOccurs="0" name="environment" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AttributeDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeDataType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EntitlementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getDecisionRequest">
    <wsdl:part name="parameters" element="ns1:getDecision"/>
  </wsdl:message>
  <wsdl:message name="getDecisionResponse">
    <wsdl:part name="parameters" element="ns1:getDecisionResponse"/>
  </wsdl:message>
  <wsdl:message name="EntitlementServiceEntitlementException">
    <wsdl:part name="parameters" element="ns1:EntitlementServiceEntitlementException"/>
  </wsdl:message>
  <wsdl:message name="getEntitledAttributesRequest">
    <wsdl:part name="parameters" element="ns1:getEntitledAttributes"/>
  </wsdl:message>
  <wsdl:message name="getEntitledAttributesResponse">
    <wsdl:part name="parameters" element="ns1:getEntitledAttributesResponse"/>
  </wsdl:message>
  <wsdl:message name="getDecisionByAttributesRequest">
    <wsdl:part name="parameters" element="ns1:getDecisionByAttributes"/>
  </wsdl:message>
  <wsdl:message name="getDecisionByAttributesResponse">
    <wsdl:part name="parameters" element="ns1:getDecisionByAttributesResponse"/>
  </wsdl:message>
  <wsdl:message name="XACMLAuthzDecisionQueryRequest">
    <wsdl:part name="parameters" element="ns1:XACMLAuthzDecisionQuery"/>
  </wsdl:message>
  <wsdl:message name="XACMLAuthzDecisionQueryResponse">
    <wsdl:part name="parameters" element="ns1:XACMLAuthzDecisionQueryResponse"/>
  </wsdl:message>
  <wsdl:message name="EntitlementServiceException">
    <wsdl:part name="parameters" element="ns1:EntitlementServiceException"/>
  </wsdl:message>
  <wsdl:message name="getBooleanDecisionRequest">
    <wsdl:part name="parameters" element="ns1:getBooleanDecision"/>
  </wsdl:message>
  <wsdl:message name="getBooleanDecisionResponse">
    <wsdl:part name="parameters" element="ns1:getBooleanDecisionResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllEntitlementsRequest">
    <wsdl:part name="parameters" element="ns1:getAllEntitlements"/>
  </wsdl:message>
  <wsdl:message name="getAllEntitlementsResponse">
    <wsdl:part name="parameters" element="ns1:getAllEntitlementsResponse"/>
  </wsdl:message>
  <wsdl:portType name="EntitlementServicePortType">
    <wsdl:operation name="getDecision">
      <wsdl:input message="tns:getDecisionRequest" wsaw:Action="urn:getDecision"/>
      <wsdl:output message="tns:getDecisionResponse" wsaw:Action="urn:getDecisionResponse"/>
      <wsdl:fault message="tns:EntitlementServiceEntitlementException" name="EntitlementServiceEntitlementException" wsaw:Action="urn:getDecisionEntitlementServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getEntitledAttributes">
      <wsdl:input message="tns:getEntitledAttributesRequest" wsaw:Action="urn:getEntitledAttributes"/>
      <wsdl:output message="tns:getEntitledAttributesResponse" wsaw:Action="urn:getEntitledAttributesResponse"/>
      <wsdl:fault message="tns:EntitlementServiceEntitlementException" name="EntitlementServiceEntitlementException" wsaw:Action="urn:getEntitledAttributesEntitlementServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getDecisionByAttributes">
      <wsdl:input message="tns:getDecisionByAttributesRequest" wsaw:Action="urn:getDecisionByAttributes"/>
      <wsdl:output message="tns:getDecisionByAttributesResponse" wsaw:Action="urn:getDecisionByAttributesResponse"/>
      <wsdl:fault message="tns:EntitlementServiceEntitlementException" name="EntitlementServiceEntitlementException" wsaw:Action="urn:getDecisionByAttributesEntitlementServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <wsdl:input message="tns:XACMLAuthzDecisionQueryRequest" wsaw:Action="urn:XACMLAuthzDecisionQuery"/>
      <wsdl:output message="tns:XACMLAuthzDecisionQueryResponse" wsaw:Action="urn:XACMLAuthzDecisionQueryResponse"/>
      <wsdl:fault message="tns:EntitlementServiceException" name="EntitlementServiceException" wsaw:Action="urn:XACMLAuthzDecisionQueryEntitlementServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getBooleanDecision">
      <wsdl:input message="tns:getBooleanDecisionRequest" wsaw:Action="urn:getBooleanDecision"/>
      <wsdl:output message="tns:getBooleanDecisionResponse" wsaw:Action="urn:getBooleanDecisionResponse"/>
      <wsdl:fault message="tns:EntitlementServiceException" name="EntitlementServiceException" wsaw:Action="urn:getBooleanDecisionEntitlementServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllEntitlements">
      <wsdl:input message="tns:getAllEntitlementsRequest" wsaw:Action="urn:getAllEntitlements"/>
      <wsdl:output message="tns:getAllEntitlementsResponse" wsaw:Action="urn:getAllEntitlementsResponse"/>
      <wsdl:fault message="tns:EntitlementServiceEntitlementException" name="EntitlementServiceEntitlementException" wsaw:Action="urn:getAllEntitlementsEntitlementServiceEntitlementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EntitlementServiceSoap11Binding" type="tns:EntitlementServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getDecision">
      <soap:operation soapAction="urn:getDecision" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitledAttributes">
      <soap:operation soapAction="urn:getEntitledAttributes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDecisionByAttributes">
      <soap:operation soapAction="urn:getDecisionByAttributes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <soap:operation soapAction="urn:XACMLAuthzDecisionQuery" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceException">
        <soap:fault use="literal" name="EntitlementServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBooleanDecision">
      <soap:operation soapAction="urn:getBooleanDecision" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceException">
        <soap:fault use="literal" name="EntitlementServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllEntitlements">
      <soap:operation soapAction="urn:getAllEntitlements" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementServiceSoap12Binding" type="tns:EntitlementServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getDecision">
      <soap12:operation soapAction="urn:getDecision" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitledAttributes">
      <soap12:operation soapAction="urn:getEntitledAttributes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDecisionByAttributes">
      <soap12:operation soapAction="urn:getDecisionByAttributes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <soap12:operation soapAction="urn:XACMLAuthzDecisionQuery" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceException">
        <soap12:fault use="literal" name="EntitlementServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBooleanDecision">
      <soap12:operation soapAction="urn:getBooleanDecision" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceException">
        <soap12:fault use="literal" name="EntitlementServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllEntitlements">
      <soap12:operation soapAction="urn:getAllEntitlements" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementServiceHttpBinding" type="tns:EntitlementServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getDecision">
      <http:operation location="getDecision"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEntitledAttributes">
      <http:operation location="getEntitledAttributes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDecisionByAttributes">
      <http:operation location="getDecisionByAttributes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <http:operation location="XACMLAuthzDecisionQuery"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBooleanDecision">
      <http:operation location="getBooleanDecision"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllEntitlements">
      <http:operation location="getAllEntitlements"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EntitlementService">
    <wsdl:port name="EntitlementServiceHttpsSoap11Endpoint" binding="tns:EntitlementServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementServiceHttpsSoap12Endpoint" binding="tns:EntitlementServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementServiceHttpsEndpoint" binding="tns:EntitlementServiceHttpBinding">
      <http:address location="https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="dbf9efcf-6de9-412f-a060-530d4cb14fe7" isOneWay="false" action="urn:getAllEntitlements" name="getAllEntitlements" bindingOperationName="getAllEntitlements" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e9390c58-449c-4198-8cc4-339f70b3e578" isOneWay="false" action="urn:getBooleanDecision" name="getBooleanDecision" bindingOperationName="getBooleanDecision" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e8b4fba-ec29-4360-8767-d74a9eeedaed" isOneWay="false" action="urn:getDecision" name="getDecision" bindingOperationName="getDecision" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b758d17-2614-4a20-a496-46f8f532da36" isOneWay="false" action="urn:getDecisionByAttributes" name="getDecisionByAttributes" bindingOperationName="getDecisionByAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ba15bf95-5253-430f-9621-25f8e4af6228" isOneWay="false" action="urn:getEntitledAttributes" name="getEntitledAttributes" bindingOperationName="getEntitledAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fd5b985a-8766-4488-b0d3-bfac21f008bb" isOneWay="false" action="urn:XACMLAuthzDecisionQuery" name="XACMLAuthzDecisionQuery" bindingOperationName="XACMLAuthzDecisionQuery" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9c6478d4-77c1-4a57-b719-6859989e6162" wsaVersion="NONE" name="EventBrokerServiceSoap11Binding" type="wsdl" bindingName="{http://ws.apache.org/axis2}EventBrokerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/EventBrokerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="5c98da8c-bc75-4f42-ab37-7fa850c5b9bd" isOneWay="false" action="" name="getStatus" bindingOperationName="getStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d5d0a3f8-47df-47ac-a08a-2e5c2f43b778" isOneWay="false" action="" name="getSubscriptions" bindingOperationName="getSubscriptions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="463c176e-1b2b-40ec-b729-d7bbff36669a" isOneWay="false" action="" name="installEventSink" bindingOperationName="installEventSink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f4143e1c-61fd-4a83-9746-a6979dfc5e84" isOneWay="false" action="urn:publish" name="publish" bindingOperationName="publish" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d2a99be2-91ab-4cc8-9498-88750d38d149" isOneWay="false" action="" name="renew" bindingOperationName="renew" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2bcb1995-5df5-4291-b6e7-32e3892df2f4" isOneWay="false" action="" name="subscribe" bindingOperationName="subscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e4d2d521-a945-4536-bccb-30a41c31649d" isOneWay="false" action="" name="subscriptionEnd" bindingOperationName="subscriptionEnd" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="053e6dde-24e4-44d6-976c-c312e93f1903" isOneWay="false" action="" name="unsubscribe" bindingOperationName="unsubscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="cb15dae1-46f0-43c2-8710-47f1e992a287" wsaVersion="NONE" name="EventBrokerServiceSoap12Binding" type="wsdl" bindingName="{http://ws.apache.org/axis2}EventBrokerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/EventBrokerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/EventBrokerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/EventBrokerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://ws.apache.org/axis2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.apache.org/axis2" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>EventBrokerService</wsdl:documentation>
  <wsdl:types/>
  <wsdl:message name="subscriptionEndRequest"/>
  <wsdl:message name="subscriptionEndResponse"/>
  <wsdl:message name="getSubscriptionsRequest"/>
  <wsdl:message name="getSubscriptionsResponse"/>
  <wsdl:message name="subscribeRequest"/>
  <wsdl:message name="subscribeResponse"/>
  <wsdl:message name="unsubscribeRequest"/>
  <wsdl:message name="unsubscribeResponse"/>
  <wsdl:message name="installEventSinkRequest"/>
  <wsdl:message name="installEventSinkResponse"/>
  <wsdl:message name="publishRequest"/>
  <wsdl:message name="publishResponse"/>
  <wsdl:message name="renewRequest"/>
  <wsdl:message name="renewResponse"/>
  <wsdl:message name="getStatusRequest"/>
  <wsdl:message name="getStatusResponse"/>
  <wsdl:portType name="EventBrokerServicePortType">
    <wsdl:operation name="subscriptionEnd">
      <wsdl:input message="tns:subscriptionEndRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/SubscriptionEnd"/>
      <wsdl:output message="tns:subscriptionEndResponse" wsaw:Action="urn:subscriptionEndResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSubscriptions">
      <wsdl:input message="tns:getSubscriptionsRequest" wsaw:Action="http://ws.apache.org/ws/2007/05/eventing-extended/getSubscriptions"/>
      <wsdl:output message="tns:getSubscriptionsResponse" wsaw:Action="http://ws.apache.org/ws/2007/05/eventing-extended/getSubscriptionsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="subscribe">
      <wsdl:input message="tns:subscribeRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/Subscribe"/>
      <wsdl:output message="tns:subscribeResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/SubscribeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="unsubscribe">
      <wsdl:input message="tns:unsubscribeRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/Unsubscribe"/>
      <wsdl:output message="tns:unsubscribeResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/UnsubscribeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="installEventSink">
      <wsdl:input message="tns:installEventSinkRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/installEventSink"/>
      <wsdl:output message="tns:installEventSinkResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/installEventSinkResponse"/>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <wsdl:input message="tns:publishRequest" wsaw:Action="urn:publish"/>
      <wsdl:output message="tns:publishResponse" wsaw:Action="urn:publishResponse"/>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <wsdl:input message="tns:renewRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/Renew"/>
      <wsdl:output message="tns:renewResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/RenewResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:input message="tns:getStatusRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/GetStatus"/>
      <wsdl:output message="tns:getStatusResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/GetStatusResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EventBrokerServiceSoap11Binding" type="tns:EventBrokerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="subscriptionEnd">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriptions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="subscribe">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unsubscribe">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="installEventSink">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <soap:operation soapAction="urn:publish" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EventBrokerServiceSoap12Binding" type="tns:EventBrokerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="subscriptionEnd">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriptions">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="subscribe">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unsubscribe">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="installEventSink">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <soap12:operation soapAction="urn:publish" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EventBrokerServiceHttpBinding" type="tns:EventBrokerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="subscriptionEnd">
      <http:operation location="subscriptionEnd"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriptions">
      <http:operation location="getSubscriptions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="subscribe">
      <http:operation location="subscribe"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unsubscribe">
      <http:operation location="unsubscribe"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="installEventSink">
      <http:operation location="installEventSink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <http:operation location="publish"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <http:operation location="renew"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <http:operation location="getStatus"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EventBrokerService">
    <wsdl:port name="EventBrokerServiceHttpsSoap11Endpoint" binding="tns:EventBrokerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EventBrokerServiceHttpsSoap12Endpoint" binding="tns:EventBrokerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EventBrokerServiceHttpsEndpoint" binding="tns:EventBrokerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="b7308c5e-e4c0-4017-aa55-ede1fd60bcd6" isOneWay="false" action="" name="getStatus" bindingOperationName="getStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d615ad7b-3dbf-451d-aeab-3b97a4a30653" isOneWay="false" action="" name="getSubscriptions" bindingOperationName="getSubscriptions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1c3502bc-628a-41fc-9678-4abef6e982a6" isOneWay="false" action="" name="installEventSink" bindingOperationName="installEventSink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bb64e0ce-4f98-4ea8-ba3c-f97490932497" isOneWay="false" action="urn:publish" name="publish" bindingOperationName="publish" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6f45ae86-1d7b-4f1c-9bbd-94cb9a390a31" isOneWay="false" action="" name="renew" bindingOperationName="renew" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="81e5514f-07f0-400d-b981-aa22e45c5cf4" isOneWay="false" action="" name="subscribe" bindingOperationName="subscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f5f671c3-1ea5-4744-b9a7-df74d8a3ced8" isOneWay="false" action="" name="subscriptionEnd" bindingOperationName="subscriptionEnd" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e9748f0-f3a8-4bd8-a65e-811e507cc5c0" isOneWay="false" action="" name="unsubscribe" bindingOperationName="unsubscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7e2bcc1d-a491-4bfc-b8ff-d60a689e5242" wsaVersion="NONE" name="FIDOServiceSoap11Binding" type="wsdl" bindingName="{http://service.fido.authenticator.application.identity.carbon.wso2.org}FIDOServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/FIDOService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/FIDOService.FIDOServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="71661f09-24e4-4d74-b1a9-83e61a3b37e1" isOneWay="false" action="urn:finishRegistration" name="finishRegistration" bindingOperationName="finishRegistration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d0d23b12-5c25-45c0-bb93-bbf0afe3387b" isOneWay="false" action="urn:getDeviceMetadataList" name="getDeviceMetadataList" bindingOperationName="getDeviceMetadataList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="39cd8eb2-97a4-4b7e-920d-3c1e4d868850" isOneWay="false" action="urn:isDeviceRegistered" name="isDeviceRegistered" bindingOperationName="isDeviceRegistered" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="43d09fae-d326-4bdb-98fc-f0ff9b13cc52" isOneWay="false" action="urn:removeAllRegistrations" name="removeAllRegistrations" bindingOperationName="removeAllRegistrations" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="963981e6-4acb-4124-9f01-ce23187cf540" isOneWay="false" action="urn:removeRegistration" name="removeRegistration" bindingOperationName="removeRegistration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7be06f24-0757-47a1-ab6f-bbce70253b1b" isOneWay="false" action="urn:startRegistration" name="startRegistration" bindingOperationName="startRegistration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="95350114-b5a9-422d-8dba-d1fba6aaef51" wsaVersion="NONE" name="FIDOServiceSoap12Binding" type="wsdl" bindingName="{http://service.fido.authenticator.application.identity.carbon.wso2.org}FIDOServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/FIDOService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/FIDOService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/FIDOService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.fido.authenticator.application.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2126="http://exception.fido.authenticator.application.identity.carbon.wso2.org/xsd" xmlns:ax2127="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://service.fido.authenticator.application.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>FIDOService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.fido.authenticator.application.identity.carbon.wso2.org" xmlns:ax2129="http://exception.fido.authenticator.application.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.fido.authenticator.application.identity.carbon.wso2.org/xsd"/>
      <xs:element name="FIDOServiceFIDOAuthenticatorClientException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="FIDOAuthenticatorClientException" nillable="true" type="ax2126:FIDOAuthenticatorClientException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeviceMetadataList">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeviceMetadataListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllRegistrations">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeRegistration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="deviceRemarks" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startRegistration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startRegistrationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="finishRegistration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="response" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isDeviceRegistered">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isDeviceRegisteredResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.fido.authenticator.application.identity.carbon.wso2.org/xsd" xmlns:ax2128="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="FIDOAuthenticatorException">
        <xs:complexContent>
          <xs:extension base="ax2127:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FIDOAuthenticatorClientException">
        <xs:complexContent>
          <xs:extension base="ax2126:FIDOAuthenticatorException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getDeviceMetadataListRequest">
    <wsdl:part name="parameters" element="ns:getDeviceMetadataList"/>
  </wsdl:message>
  <wsdl:message name="getDeviceMetadataListResponse">
    <wsdl:part name="parameters" element="ns:getDeviceMetadataListResponse"/>
  </wsdl:message>
  <wsdl:message name="FIDOServiceFIDOAuthenticatorClientException">
    <wsdl:part name="parameters" element="ns:FIDOServiceFIDOAuthenticatorClientException"/>
  </wsdl:message>
  <wsdl:message name="isDeviceRegisteredRequest">
    <wsdl:part name="parameters" element="ns:isDeviceRegistered"/>
  </wsdl:message>
  <wsdl:message name="isDeviceRegisteredResponse">
    <wsdl:part name="parameters" element="ns:isDeviceRegisteredResponse"/>
  </wsdl:message>
  <wsdl:message name="startRegistrationRequest">
    <wsdl:part name="parameters" element="ns:startRegistration"/>
  </wsdl:message>
  <wsdl:message name="startRegistrationResponse">
    <wsdl:part name="parameters" element="ns:startRegistrationResponse"/>
  </wsdl:message>
  <wsdl:message name="removeAllRegistrationsRequest">
    <wsdl:part name="parameters" element="ns:removeAllRegistrations"/>
  </wsdl:message>
  <wsdl:message name="removeRegistrationRequest">
    <wsdl:part name="parameters" element="ns:removeRegistration"/>
  </wsdl:message>
  <wsdl:message name="finishRegistrationRequest">
    <wsdl:part name="parameters" element="ns:finishRegistration"/>
  </wsdl:message>
  <wsdl:portType name="FIDOServicePortType">
    <wsdl:operation name="getDeviceMetadataList">
      <wsdl:input message="ns:getDeviceMetadataListRequest" wsaw:Action="urn:getDeviceMetadataList"/>
      <wsdl:output message="ns:getDeviceMetadataListResponse" wsaw:Action="urn:getDeviceMetadataListResponse"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:getDeviceMetadataListFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="isDeviceRegistered">
      <wsdl:input message="ns:isDeviceRegisteredRequest" wsaw:Action="urn:isDeviceRegistered"/>
      <wsdl:output message="ns:isDeviceRegisteredResponse" wsaw:Action="urn:isDeviceRegisteredResponse"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:isDeviceRegisteredFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="startRegistration">
      <wsdl:input message="ns:startRegistrationRequest" wsaw:Action="urn:startRegistration"/>
      <wsdl:output message="ns:startRegistrationResponse" wsaw:Action="urn:startRegistrationResponse"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:startRegistrationFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="removeAllRegistrations">
      <wsdl:input message="ns:removeAllRegistrationsRequest" wsaw:Action="urn:removeAllRegistrations"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:removeAllRegistrationsFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="removeRegistration">
      <wsdl:input message="ns:removeRegistrationRequest" wsaw:Action="urn:removeRegistration"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:removeRegistrationFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="finishRegistration">
      <wsdl:input message="ns:finishRegistrationRequest" wsaw:Action="urn:finishRegistration"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:finishRegistrationFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="FIDOServiceSoap11Binding" type="ns:FIDOServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getDeviceMetadataList">
      <soap:operation soapAction="urn:getDeviceMetadataList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isDeviceRegistered">
      <soap:operation soapAction="urn:isDeviceRegistered" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startRegistration">
      <soap:operation soapAction="urn:startRegistration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAllRegistrations">
      <soap:operation soapAction="urn:removeAllRegistrations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRegistration">
      <soap:operation soapAction="urn:removeRegistration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="finishRegistration">
      <soap:operation soapAction="urn:finishRegistration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FIDOServiceSoap12Binding" type="ns:FIDOServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getDeviceMetadataList">
      <soap12:operation soapAction="urn:getDeviceMetadataList" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isDeviceRegistered">
      <soap12:operation soapAction="urn:isDeviceRegistered" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startRegistration">
      <soap12:operation soapAction="urn:startRegistration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAllRegistrations">
      <soap12:operation soapAction="urn:removeAllRegistrations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRegistration">
      <soap12:operation soapAction="urn:removeRegistration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="finishRegistration">
      <soap12:operation soapAction="urn:finishRegistration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FIDOServiceHttpBinding" type="ns:FIDOServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getDeviceMetadataList">
      <http:operation location="getDeviceMetadataList"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isDeviceRegistered">
      <http:operation location="isDeviceRegistered"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startRegistration">
      <http:operation location="startRegistration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllRegistrations">
      <http:operation location="removeAllRegistrations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeRegistration">
      <http:operation location="removeRegistration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="finishRegistration">
      <http:operation location="finishRegistration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="FIDOService">
    <wsdl:port name="FIDOServiceHttpsSoap11Endpoint" binding="ns:FIDOServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/FIDOService.FIDOServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FIDOServiceHttpsSoap12Endpoint" binding="ns:FIDOServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/FIDOService.FIDOServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FIDOServiceHttpsEndpoint" binding="ns:FIDOServiceHttpBinding">
      <http:address location="https://localhost:9443/services/FIDOService.FIDOServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/FIDOService.FIDOServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="4aa60df3-95ed-42da-ae03-87e2da56949c" isOneWay="false" action="urn:finishRegistration" name="finishRegistration" bindingOperationName="finishRegistration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="78f20aaf-019a-449c-babf-d5f6f056902c" isOneWay="false" action="urn:getDeviceMetadataList" name="getDeviceMetadataList" bindingOperationName="getDeviceMetadataList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ef66e419-589e-4f42-bf8e-84a6e84af4e4" isOneWay="false" action="urn:isDeviceRegistered" name="isDeviceRegistered" bindingOperationName="isDeviceRegistered" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1ffb85bd-75db-4354-a956-19e7761eb090" isOneWay="false" action="urn:removeAllRegistrations" name="removeAllRegistrations" bindingOperationName="removeAllRegistrations" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7cc8ec0f-29eb-4655-844a-1fea72dbb506" isOneWay="false" action="urn:removeRegistration" name="removeRegistration" bindingOperationName="removeRegistration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="19d8518e-0e69-41d5-90e1-41dc2379f3ff" isOneWay="false" action="urn:startRegistration" name="startRegistration" bindingOperationName="startRegistration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c7a820e7-4b72-41c2-9ee7-5e9d7f8a240e" wsaVersion="NONE" name="FileDownloadServiceSoap11Binding" type="wsdl" bindingName="{http://filedownload.services.core.carbon.wso2.org}FileDownloadServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/FileDownloadService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="71fe5866-ee36-4607-8275-067fe1833619" isOneWay="false" action="urn:downloadFile" name="downloadFile" bindingOperationName="downloadFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d74c0713-eb07-415d-9002-00fa93b54778" wsaVersion="NONE" name="FileDownloadServiceSoap12Binding" type="wsdl" bindingName="{http://filedownload.services.core.carbon.wso2.org}FileDownloadServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/FileDownloadService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/FileDownloadService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/FileDownloadService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://filedownload.services.core.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://filedownload.services.core.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>FileDownloadService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://filedownload.services.core.carbon.wso2.org">
      <xs:element name="downloadFile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadFileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="downloadFileRequest">
    <wsdl:part name="parameters" element="ns:downloadFile"/>
  </wsdl:message>
  <wsdl:message name="downloadFileResponse">
    <wsdl:part name="parameters" element="ns:downloadFileResponse"/>
  </wsdl:message>
  <wsdl:portType name="FileDownloadServicePortType">
    <wsdl:operation name="downloadFile">
      <wsdl:input message="ns:downloadFileRequest" wsaw:Action="urn:downloadFile"/>
      <wsdl:output message="ns:downloadFileResponse" wsaw:Action="urn:downloadFileResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="FileDownloadServiceSoap11Binding" type="ns:FileDownloadServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="downloadFile">
      <soap:operation soapAction="urn:downloadFile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FileDownloadServiceSoap12Binding" type="ns:FileDownloadServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="downloadFile">
      <soap12:operation soapAction="urn:downloadFile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FileDownloadServiceHttpBinding" type="ns:FileDownloadServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="downloadFile">
      <http:operation location="downloadFile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="FileDownloadService">
    <wsdl:port name="FileDownloadServiceHttpsSoap11Endpoint" binding="ns:FileDownloadServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FileDownloadServiceHttpsSoap12Endpoint" binding="ns:FileDownloadServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FileDownloadServiceHttpsEndpoint" binding="ns:FileDownloadServiceHttpBinding">
      <http:address location="https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="d9fcdb3c-2477-4533-8b02-83541f17a275" isOneWay="false" action="urn:downloadFile" name="downloadFile" bindingOperationName="downloadFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="637df330-9216-4111-901b-180c89acaf0d" wsaVersion="NONE" name="FileUploadServiceSoap12Binding" type="wsdl" bindingName="{http://fileupload.services.core.carbon.wso2.org}FileUploadServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/FileUploadService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="14872b35-16c7-428d-88a5-7420a5459a4c" isOneWay="false" action="urn:uploadFiles" name="uploadFiles" bindingOperationName="uploadFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="628dc012-2476-4215-84dd-1419e0e3976c" wsaVersion="NONE" name="FileUploadServiceSoap11Binding" type="wsdl" bindingName="{http://fileupload.services.core.carbon.wso2.org}FileUploadServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/FileUploadService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/FileUploadService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/FileUploadService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fileupload.services.core.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax215="http://common.core.carbon.wso2.org/xsd" xmlns:ns="http://fileupload.services.core.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>FileUploadService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.core.carbon.wso2.org/xsd">
      <xs:complexType name="UploadedFileItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://fileupload.services.core.carbon.wso2.org" xmlns:ax216="http://common.core.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.core.carbon.wso2.org/xsd"/>
      <xs:element name="FileUploadServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="FileUploadServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="uploadFiles">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="uploadedFileItems" nillable="true" type="ax215:UploadedFileItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadFilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadFilesRequest">
    <wsdl:part name="parameters" element="ns:uploadFiles"/>
  </wsdl:message>
  <wsdl:message name="uploadFilesResponse">
    <wsdl:part name="parameters" element="ns:uploadFilesResponse"/>
  </wsdl:message>
  <wsdl:message name="FileUploadServiceException">
    <wsdl:part name="parameters" element="ns:FileUploadServiceException"/>
  </wsdl:message>
  <wsdl:portType name="FileUploadServicePortType">
    <wsdl:operation name="uploadFiles">
      <wsdl:input message="ns:uploadFilesRequest" wsaw:Action="urn:uploadFiles"/>
      <wsdl:output message="ns:uploadFilesResponse" wsaw:Action="urn:uploadFilesResponse"/>
      <wsdl:fault message="ns:FileUploadServiceException" name="FileUploadServiceException" wsaw:Action="urn:uploadFilesFileUploadServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="FileUploadServiceSoap11Binding" type="ns:FileUploadServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadFiles">
      <soap:operation soapAction="urn:uploadFiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FileUploadServiceException">
        <soap:fault use="literal" name="FileUploadServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FileUploadServiceSoap12Binding" type="ns:FileUploadServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadFiles">
      <soap12:operation soapAction="urn:uploadFiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FileUploadServiceException">
        <soap12:fault use="literal" name="FileUploadServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FileUploadServiceHttpBinding" type="ns:FileUploadServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadFiles">
      <http:operation location="uploadFiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="FileUploadService">
    <wsdl:port name="FileUploadServiceHttpsSoap11Endpoint" binding="ns:FileUploadServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FileUploadServiceHttpsSoap12Endpoint" binding="ns:FileUploadServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FileUploadServiceHttpsEndpoint" binding="ns:FileUploadServiceHttpBinding">
      <http:address location="https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="d0c31375-c26c-43e1-8108-85c854deef4c" isOneWay="false" action="urn:uploadFiles" name="uploadFiles" bindingOperationName="uploadFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2c1b41aa-3fe6-4be7-8677-82e270869c9a" wsaVersion="NONE" name="humanTaskParticipantSOAPBinding" type="wsdl" bindingName="{http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803}humanTaskParticipantSOAPBinding" soapVersion="1_1" anonymous="optional" definition="wsdl/HumanTaskProtocolHandler.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/HumanTaskProtocolHandler.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/HumanTaskProtocolHandler.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:htp="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>Web Service Definition for WS-HumanTask 1.1 - Operations WS-HumanTask Protocol Participants</wsdl:documentation>
  <wsdl:types>
    <xsd:schema blockDefault="#all" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803">
      <xsd:complexType name="tProtocolMsgType">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="skipped" type="htp:tProtocolMsgType"/>
      <xsd:element name="fault" type="htp:tProtocolMsgType"/>
      <xsd:element name="exit" type="htp:tProtocolMsgType"/>
      <xsd:element name="responseAction" type="xsd:anyURI"/>
      <xsd:element name="responseOperation" type="xsd:NCName"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="fault">
    <wsdl:part name="parameters" element="fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="skipped">
    <wsdl:part name="parameters" element="skipped"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="exit">
    <wsdl:part name="parameters" element="exit"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="clientParticipantPortType">
    <wsdl:operation name="skippedOperation">
      <wsdl:input message="skipped"></wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="faultOperation">
      <wsdl:input message="fault"></wsdl:input>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="humanTaskParticipantPortType">
    <wsdl:operation name="exitOperation">
      <wsdl:input message="exit"></wsdl:input>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="humanTaskParticipantSOAPBinding" type="humanTaskParticipantPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="exitOperation">
      <soap:operation soapAction="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803/exit"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HumanTaskProtocolHandler">
    <wsdl:port name="humanTaskParticipantPortType" binding="humanTaskParticipantSOAPBinding">
      <soap:address location="https://localhost:9443/services/HumanTaskProtocolHandler/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/HumanTaskProtocolHandler/</con:endpoint></con:endpoints><con:operation id="5bb87f4b-3363-4306-ba64-93dbd47d81ae" isOneWay="false" action="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803/exit" name="exitOperation" bindingOperationName="exitOperation" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="df4d498d-0f1a-4654-81fe-d11ca67e2a7b" wsaVersion="NONE" name="renderingOperationsSOAP" type="wsdl" bindingName="{http://wso2.org/ht/schema/renderings/}renderingOperationsSOAP" soapVersion="1_1" anonymous="optional" definition="wsdl/HumanTaskRenderingAPI.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/HumanTaskRenderingAPI.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/HumanTaskRenderingAPI.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ws-humantask-rendering-api" targetNamespace="http://wso2.org/ht/schema/renderings/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://wso2.org/ht/schema/renderings/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://wso2.org/ht/schema/renderings/">
      <xsd:element name="getRenderings">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="taskIdentifier" type="xsd:anyURI"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRenderingsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="input" type="tns:inputType"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="output" type="tns:outputType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="inputType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="element" type="tns:inputElementType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="outputType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="element" type="tns:outputElementType"></xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="inputElementType">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="label" type="xsd:string"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="value" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="outputElementType">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="label" type="xsd:string"></xsd:element>
          <xsd:element maxOccurs="1" minOccurs="0" name="xpath" type="xsd:string"></xsd:element>
          <xsd:element maxOccurs="1" minOccurs="1" name="value" type="tns:valueType"></xsd:element>
          <xsd:element maxOccurs="1" minOccurs="0" name="default" type="xsd:string"></xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string"/>
      </xsd:complexType>
      <xsd:complexType name="valueType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attribute name="type" type="tns:value_tType"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="value_tType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="string"/>
          <xsd:enumeration value="int"/>
          <xsd:enumeration value="double"/>
          <xsd:enumeration value="float"/>
          <xsd:enumeration value="boolean"/>
          <xsd:enumeration value="list"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="setTaskOutput">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="taskIdentifier" type="xsd:anyURI"></xsd:element>
            <xsd:element maxOccurs="1" minOccurs="1" name="values" type="tns:setOutputValuesType"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setTaskOutputResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="success" type="xsd:boolean"></xsd:element>
            <xsd:element maxOccurs="1" minOccurs="0" name="fault" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="setOutputValuesType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="value" type="tns:setOutputvalueType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="setOutputvalueType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attribute name="id" type="xsd:string"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:element name="getRenderingsFault">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="getRenderingsFault" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setTaskOutputFault">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="setTaskOutputFault" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="completeTask">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="taskIdentifier" type="xsd:anyURI"/>
            <xsd:element name="values" type="tns:setOutputValuesType"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="completeTaskResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="success" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="completeTaskFault">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="completeTaskFault" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="completeTaskResponse">
    <wsdl:part name="parameters" element="tns:completeTaskResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRenderingsFault">
    <wsdl:part name="parameters" element="tns:getRenderingsFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="completeTaskRequest">
    <wsdl:part name="parameters" element="tns:completeTask"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTaskOutputRequest">
    <wsdl:part name="parameters" element="tns:setTaskOutput"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRenderingsRequest">
    <wsdl:part name="parameters" element="tns:getRenderings"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTaskOutputFault">
    <wsdl:part name="parameters" element="tns:setTaskOutputFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRenderingsResponse">
    <wsdl:part name="parameters" element="tns:getRenderingsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTaskOutputResponse">
    <wsdl:part name="parameters" element="tns:setTaskOutputResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="completeTaskFault">
    <wsdl:part name="parameters" element="tns:completeTaskFault"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="renderingOperations">
    <wsdl:operation name="getRenderings">
      <wsdl:input message="tns:getRenderingsRequest"></wsdl:input>
      <wsdl:output message="tns:getRenderingsResponse"></wsdl:output>
      <wsdl:fault name="getRenderingsFault" message="tns:getRenderingsFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTaskOutput">
      <wsdl:input message="tns:setTaskOutputRequest"></wsdl:input>
      <wsdl:output message="tns:setTaskOutputResponse"></wsdl:output>
      <wsdl:fault name="setTaskOutputFault" message="tns:setTaskOutputFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="completeTask">
      <wsdl:input message="tns:completeTaskRequest"></wsdl:input>
      <wsdl:output message="tns:completeTaskResponse"></wsdl:output>
      <wsdl:fault name="completeTaskFault" message="tns:completeTaskFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="renderingOperationsSOAP" type="tns:renderingOperations">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getRenderings">
      <soap:operation soapAction="http://wso2.org/ht/schema/renderings/getRenderings"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="getRenderingsFault">
        <soap:fault name="getRenderingsFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTaskOutput">
      <soap:operation soapAction="http://wso2.org/ht/schema/renderings/setTaskOutput"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="setTaskOutputFault">
        <soap:fault name="setTaskOutputFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="completeTask">
      <soap:operation soapAction="http://wso2.org/ht/schema/renderings/completeTask"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="completeTaskFault">
        <soap:fault name="completeTaskFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HumanTaskRenderingAPI">
    <wsdl:port name="renderingOperationsSOAP" binding="tns:renderingOperationsSOAP">
      <soap:address location="https://localhost:9443/services/HumanTaskRenderingAPI/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/HumanTaskRenderingAPI/</con:endpoint></con:endpoints><con:operation id="db46a598-3518-4b31-a43f-3b4891392c7c" isOneWay="false" action="http://wso2.org/ht/schema/renderings/completeTask" name="completeTask" bindingOperationName="completeTask" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2f17f5e4-3702-4b81-b21b-56347b074d76" isOneWay="false" action="http://wso2.org/ht/schema/renderings/getRenderings" name="getRenderings" bindingOperationName="getRenderings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="84532f94-08c4-4087-a870-64ba0795fa6e" isOneWay="false" action="http://wso2.org/ht/schema/renderings/setTaskOutput" name="setTaskOutput" bindingOperationName="setTaskOutput" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8c21c6e3-b961-481f-b725-dbefe8f5e1f0" wsaVersion="NONE" name="HumanTaskUploaderSoap12Binding" type="wsdl" bindingName="{http://services.deployer.humantask.carbon.wso2.org}HumanTaskUploaderSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/HumanTaskUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="1cdb2ce6-8693-44db-a2b0-ed580210a76a" isOneWay="false" action="urn:close" name="close" bindingOperationName="close" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1aaebce8-3540-460c-a3a1-e03b6650f5b8" isOneWay="false" action="urn:uploadHumanTask" name="uploadHumanTask" bindingOperationName="uploadHumanTask" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f9e647c8-3b37-4012-88cf-a9ddbfc8e00e" wsaVersion="NONE" name="HumanTaskUploaderSoap11Binding" type="wsdl" bindingName="{http://services.deployer.humantask.carbon.wso2.org}HumanTaskUploaderSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/HumanTaskUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/HumanTaskUploader.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/HumanTaskUploader.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.deployer.humantask.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2124="http://io.java/xsd" xmlns:ns="http://services.deployer.humantask.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2122="http://common.core.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>HumanTaskUploader</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.deployer.humantask.carbon.wso2.org" xmlns:ax2125="http://io.java/xsd" xmlns:ax2123="http://common.core.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.core.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://io.java/xsd"/>
      <xs:element name="uploadHumanTask">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="fileItems" nillable="true" type="ax2122:UploadedFileItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="close">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="c" nillable="true" type="ax2124:Closeable"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.core.carbon.wso2.org/xsd">
      <xs:complexType name="UploadedFileItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://io.java/xsd">
      <xs:complexType abstract="true" name="Closeable">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadHumanTaskRequest">
    <wsdl:part name="parameters" element="ns:uploadHumanTask"/>
  </wsdl:message>
  <wsdl:message name="uploadHumanTaskResponse"/>
  <wsdl:message name="closeRequest">
    <wsdl:part name="parameters" element="ns:close"/>
  </wsdl:message>
  <wsdl:portType name="HumanTaskUploaderPortType">
    <wsdl:operation name="uploadHumanTask">
      <wsdl:input message="ns:uploadHumanTaskRequest" wsaw:Action="urn:uploadHumanTask"/>
      <wsdl:output message="ns:uploadHumanTaskResponse" wsaw:Action="urn:uploadHumanTaskResponse"/>
    </wsdl:operation>
    <wsdl:operation name="close">
      <wsdl:input message="ns:closeRequest" wsaw:Action="urn:close"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HumanTaskUploaderSoap11Binding" type="ns:HumanTaskUploaderPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadHumanTask">
      <soap:operation soapAction="urn:uploadHumanTask" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <soap:operation soapAction="urn:close" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="HumanTaskUploaderSoap12Binding" type="ns:HumanTaskUploaderPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadHumanTask">
      <soap12:operation soapAction="urn:uploadHumanTask" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <soap12:operation soapAction="urn:close" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="HumanTaskUploaderHttpBinding" type="ns:HumanTaskUploaderPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadHumanTask">
      <http:operation location="uploadHumanTask"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <http:operation location="close"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HumanTaskUploader">
    <wsdl:port name="HumanTaskUploaderHttpsSoap11Endpoint" binding="ns:HumanTaskUploaderSoap11Binding">
      <soap:address location="https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="HumanTaskUploaderHttpsSoap12Endpoint" binding="ns:HumanTaskUploaderSoap12Binding">
      <soap12:address location="https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="HumanTaskUploaderHttpsEndpoint" binding="ns:HumanTaskUploaderHttpBinding">
      <http:address location="https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="0edfc9e5-55eb-4285-8956-c9ed9b7956a4" isOneWay="false" action="urn:close" name="close" bindingOperationName="close" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="327652c8-cc31-4d75-a18c-1e7ac694d205" isOneWay="false" action="urn:uploadHumanTask" name="uploadHumanTask" bindingOperationName="uploadHumanTask" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c6b62290-0899-4447-9bfb-fbb9cc3b572c" wsaVersion="NONE" name="IdentityApplicationManagementServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.application.identity.carbon.wso2.org}IdentityApplicationManagementServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/IdentityApplicationManagementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="47ebce38-98b7-4e53-98d3-f3de4ed2d3f4" isOneWay="false" action="urn:createApplication" name="createApplication" bindingOperationName="createApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bb9dd608-45c2-4762-ba69-3483dffa5528" isOneWay="false" action="urn:deleteApplication" name="deleteApplication" bindingOperationName="deleteApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6715a78-ae1a-4eb0-8350-1b98ac45ba88" isOneWay="false" action="urn:getAllApplicationBasicInfo" name="getAllApplicationBasicInfo" bindingOperationName="getAllApplicationBasicInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d7ac1bf8-1ed3-47d7-8f09-80046533bd34" isOneWay="false" action="urn:getAllIdentityProviders" name="getAllIdentityProviders" bindingOperationName="getAllIdentityProviders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7e957b28-131f-48c3-9ade-61491ec6aff8" isOneWay="false" action="urn:getAllLocalAuthenticators" name="getAllLocalAuthenticators" bindingOperationName="getAllLocalAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6fc4f66d-b954-43d6-b00d-06017d923ea6" isOneWay="false" action="urn:getAllLocalClaimUris" name="getAllLocalClaimUris" bindingOperationName="getAllLocalClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48dc2252-3824-4bca-846d-18b5bf13c0a0" isOneWay="false" action="urn:getAllRequestPathAuthenticators" name="getAllRequestPathAuthenticators" bindingOperationName="getAllRequestPathAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69df908a-d607-4136-a94f-231cc5129136" isOneWay="false" action="urn:getApplication" name="getApplication" bindingOperationName="getApplication" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e7e3c2ce-8d63-455c-8634-c5dcf592be60" isOneWay="false" action="urn:getIdentityProvider" name="getIdentityProvider" bindingOperationName="getIdentityProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2df26c75-e8d4-4100-93b8-62095a8c786a" isOneWay="false" action="urn:updateApplication" name="updateApplication" bindingOperationName="updateApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e4160fb4-fc7a-46aa-b160-a791fb9c8f7c" wsaVersion="NONE" name="IdentityApplicationManagementServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.application.identity.carbon.wso2.org}IdentityApplicationManagementServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/IdentityApplicationManagementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentityApplicationManagementService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentityApplicationManagementService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.application.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.application.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2130="http://common.application.identity.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2132="http://model.common.application.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentityApplicationManagementService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.application.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityApplicationManagementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2131="http://common.application.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2133="http://model.common.application.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.application.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://model.common.application.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityApplicationManagementException" nillable="true" type="ax2130:IdentityApplicationManagementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllApplicationBasicInfo">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllApplicationBasicInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2132:ApplicationBasicInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceProvider" nillable="true" type="ax2132:ServiceProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllIdentityProviders">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllIdentityProvidersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2132:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalAuthenticators">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalAuthenticatorsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2132:LocalAuthenticatorConfig"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRequestPathAuthenticators">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRequestPathAuthenticatorsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2132:RequestPathAuthenticatorConfig"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalClaimUris">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalClaimUrisResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceProvider" nillable="true" type="ax2132:ServiceProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getIdentityProvider">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="federatedIdPName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getIdentityProviderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2132:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2132:ServiceProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://model.common.application.identity.carbon.wso2.org/xsd">
      <xs:complexType name="ApplicationBasicInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceProvider">
        <xs:sequence>
          <xs:element minOccurs="0" name="applicationID" type="xs:int"/>
          <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimConfig" nillable="true" type="ax2132:ClaimConfig"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="inboundAuthenticationConfig" nillable="true" type="ax2132:InboundAuthenticationConfig"/>
          <xs:element minOccurs="0" name="inboundProvisioningConfig" nillable="true" type="ax2132:InboundProvisioningConfig"/>
          <xs:element minOccurs="0" name="localAndOutBoundAuthenticationConfig" nillable="true" type="ax2132:LocalAndOutboundAuthenticationConfig"/>
          <xs:element minOccurs="0" name="outboundProvisioningConfig" nillable="true" type="ax2132:OutboundProvisioningConfig"/>
          <xs:element minOccurs="0" name="owner" nillable="true" type="ax2132:User"/>
          <xs:element minOccurs="0" name="permissionAndRoleConfig" nillable="true" type="ax2132:PermissionsAndRoleConfig"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requestPathAuthenticatorConfigs" nillable="true" type="ax2132:RequestPathAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="saasApp" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="spProperties" nillable="true" type="ax2132:ServiceProviderProperty"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="alwaysSendMappedLocalSubjectId" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="claimMappings" nillable="true" type="ax2132:ClaimMapping"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpClaims" nillable="true" type="ax2132:Claim"/>
          <xs:element minOccurs="0" name="localClaimDialect" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleClaimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userClaimURI" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="localClaim" nillable="true" type="ax2132:Claim"/>
          <xs:element minOccurs="0" name="remoteClaim" nillable="true" type="ax2132:Claim"/>
          <xs:element minOccurs="0" name="requested" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Claim">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimId" type="xs:int"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InboundAuthenticationConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="inboundAuthenticationRequestConfigs" nillable="true" type="ax2132:InboundAuthenticationRequestConfig"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InboundAuthenticationRequestConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="friendlyName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="inboundAuthKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="inboundAuthType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2132:Property"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Property">
        <xs:sequence>
          <xs:element minOccurs="0" name="confidential" type="xs:boolean"/>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InboundProvisioningConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="dumbMode" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provisioningEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provisioningUserStore" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LocalAndOutboundAuthenticationConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="alwaysSendBackAuthenticatedListOfIdPs" type="xs:boolean"/>
          <xs:element minOccurs="0" name="authenticationStepForAttributes" nillable="true" type="ax2132:AuthenticationStep"/>
          <xs:element minOccurs="0" name="authenticationStepForSubject" nillable="true" type="ax2132:AuthenticationStep"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="authenticationSteps" nillable="true" type="ax2132:AuthenticationStep"/>
          <xs:element minOccurs="0" name="authenticationType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="subjectClaimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="useTenantDomainInLocalSubjectIdentifier" type="xs:boolean"/>
          <xs:element minOccurs="0" name="useUserstoreDomainInLocalSubjectIdentifier" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AuthenticationStep">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeStep" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="federatedIdentityProviders" nillable="true" type="ax2132:IdentityProvider"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="localAuthenticatorConfigs" nillable="true" type="ax2132:LocalAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="stepOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="subjectStep" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IdentityProvider">
        <xs:sequence>
          <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="certificate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimConfig" nillable="true" type="ax2132:ClaimConfig"/>
          <xs:element minOccurs="0" name="defaultAuthenticatorConfig" nillable="true" type="ax2132:FederatedAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="defaultProvisioningConnectorConfig" nillable="true" type="ax2132:ProvisioningConnectorConfig"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enable" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="federatedAuthenticatorConfigs" nillable="true" type="ax2132:FederatedAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="federationHub" type="xs:boolean"/>
          <xs:element minOccurs="0" name="homeRealmId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identityProviderDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identityProviderName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpProperties" nillable="true" type="ax2132:IdentityProviderProperty"/>
          <xs:element minOccurs="0" name="justInTimeProvisioningConfig" nillable="true" type="ax2132:JustInTimeProvisioningConfig"/>
          <xs:element minOccurs="0" name="permissionAndRoleConfig" nillable="true" type="ax2132:PermissionsAndRoleConfig"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningConnectorConfigs" nillable="true" type="ax2132:ProvisioningConnectorConfig"/>
          <xs:element minOccurs="0" name="provisioningRole" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FederatedAuthenticatorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2132:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProvisioningConnectorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="blocking" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningProperties" nillable="true" type="ax2132:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IdentityProviderProperty">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="JustInTimeProvisioningConfig">
        <xs:complexContent>
          <xs:extension base="ax2132:InboundProvisioningConfig">
            <xs:sequence>
              <xs:element minOccurs="0" name="userStoreClaimUri" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PermissionsAndRoleConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpRoles" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="ax2132:ApplicationPermission"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roleMappings" nillable="true" type="ax2132:RoleMapping"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ApplicationPermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RoleMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="localRole" nillable="true" type="ax2132:LocalRole"/>
          <xs:element minOccurs="0" name="remoteRole" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LocalRole">
        <xs:sequence>
          <xs:element minOccurs="0" name="localRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userStoreId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LocalAuthenticatorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2132:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OutboundProvisioningConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisionByRoleList" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningIdentityProviders" nillable="true" type="ax2132:IdentityProvider"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="User">
        <xs:sequence>
          <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userStoreDomain" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RequestPathAuthenticatorConfig">
        <xs:complexContent>
          <xs:extension base="ax2132:LocalAuthenticatorConfig">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceProviderProperty">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAllLocalClaimUrisRequest">
    <wsdl:part name="parameters" element="ns1:getAllLocalClaimUris"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalClaimUrisResponse">
    <wsdl:part name="parameters" element="ns1:getAllLocalClaimUrisResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
    <wsdl:part name="parameters" element="ns1:IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
  </wsdl:message>
  <wsdl:message name="getApplicationRequest">
    <wsdl:part name="parameters" element="ns1:getApplication"/>
  </wsdl:message>
  <wsdl:message name="getApplicationResponse">
    <wsdl:part name="parameters" element="ns1:getApplicationResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllRequestPathAuthenticatorsRequest">
    <wsdl:part name="parameters" element="ns1:getAllRequestPathAuthenticators"/>
  </wsdl:message>
  <wsdl:message name="getAllRequestPathAuthenticatorsResponse">
    <wsdl:part name="parameters" element="ns1:getAllRequestPathAuthenticatorsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateApplicationRequest">
    <wsdl:part name="parameters" element="ns1:updateApplication"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalAuthenticatorsRequest">
    <wsdl:part name="parameters" element="ns1:getAllLocalAuthenticators"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalAuthenticatorsResponse">
    <wsdl:part name="parameters" element="ns1:getAllLocalAuthenticatorsResponse"/>
  </wsdl:message>
  <wsdl:message name="createApplicationRequest">
    <wsdl:part name="parameters" element="ns1:createApplication"/>
  </wsdl:message>
  <wsdl:message name="getAllApplicationBasicInfoRequest">
    <wsdl:part name="parameters" element="ns1:getAllApplicationBasicInfo"/>
  </wsdl:message>
  <wsdl:message name="getAllApplicationBasicInfoResponse">
    <wsdl:part name="parameters" element="ns1:getAllApplicationBasicInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllIdentityProvidersRequest">
    <wsdl:part name="parameters" element="ns1:getAllIdentityProviders"/>
  </wsdl:message>
  <wsdl:message name="getAllIdentityProvidersResponse">
    <wsdl:part name="parameters" element="ns1:getAllIdentityProvidersResponse"/>
  </wsdl:message>
  <wsdl:message name="getIdentityProviderRequest">
    <wsdl:part name="parameters" element="ns1:getIdentityProvider"/>
  </wsdl:message>
  <wsdl:message name="getIdentityProviderResponse">
    <wsdl:part name="parameters" element="ns1:getIdentityProviderResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteApplicationRequest">
    <wsdl:part name="parameters" element="ns1:deleteApplication"/>
  </wsdl:message>
  <wsdl:portType name="IdentityApplicationManagementServicePortType">
    <wsdl:operation name="getAllLocalClaimUris">
      <wsdl:input message="tns:getAllLocalClaimUrisRequest" wsaw:Action="urn:getAllLocalClaimUris"/>
      <wsdl:output message="tns:getAllLocalClaimUrisResponse" wsaw:Action="urn:getAllLocalClaimUrisResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllLocalClaimUrisIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getApplication">
      <wsdl:input message="tns:getApplicationRequest" wsaw:Action="urn:getApplication"/>
      <wsdl:output message="tns:getApplicationResponse" wsaw:Action="urn:getApplicationResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getApplicationIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllRequestPathAuthenticators">
      <wsdl:input message="tns:getAllRequestPathAuthenticatorsRequest" wsaw:Action="urn:getAllRequestPathAuthenticators"/>
      <wsdl:output message="tns:getAllRequestPathAuthenticatorsResponse" wsaw:Action="urn:getAllRequestPathAuthenticatorsResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllRequestPathAuthenticatorsIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="updateApplication">
      <wsdl:input message="tns:updateApplicationRequest" wsaw:Action="urn:updateApplication"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:updateApplicationIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalAuthenticators">
      <wsdl:input message="tns:getAllLocalAuthenticatorsRequest" wsaw:Action="urn:getAllLocalAuthenticators"/>
      <wsdl:output message="tns:getAllLocalAuthenticatorsResponse" wsaw:Action="urn:getAllLocalAuthenticatorsResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllLocalAuthenticatorsIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="createApplication">
      <wsdl:input message="tns:createApplicationRequest" wsaw:Action="urn:createApplication"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:createApplicationIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllApplicationBasicInfo">
      <wsdl:input message="tns:getAllApplicationBasicInfoRequest" wsaw:Action="urn:getAllApplicationBasicInfo"/>
      <wsdl:output message="tns:getAllApplicationBasicInfoResponse" wsaw:Action="urn:getAllApplicationBasicInfoResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllApplicationBasicInfoIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllIdentityProviders">
      <wsdl:input message="tns:getAllIdentityProvidersRequest" wsaw:Action="urn:getAllIdentityProviders"/>
      <wsdl:output message="tns:getAllIdentityProvidersResponse" wsaw:Action="urn:getAllIdentityProvidersResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllIdentityProvidersIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getIdentityProvider">
      <wsdl:input message="tns:getIdentityProviderRequest" wsaw:Action="urn:getIdentityProvider"/>
      <wsdl:output message="tns:getIdentityProviderResponse" wsaw:Action="urn:getIdentityProviderResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getIdentityProviderIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteApplication">
      <wsdl:input message="tns:deleteApplicationRequest" wsaw:Action="urn:deleteApplication"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:deleteApplicationIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentityApplicationManagementServiceSoap11Binding" type="tns:IdentityApplicationManagementServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllLocalClaimUris">
      <soap:operation soapAction="urn:getAllLocalClaimUris" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplication">
      <soap:operation soapAction="urn:getApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRequestPathAuthenticators">
      <soap:operation soapAction="urn:getAllRequestPathAuthenticators" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateApplication">
      <soap:operation soapAction="urn:updateApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalAuthenticators">
      <soap:operation soapAction="urn:getAllLocalAuthenticators" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createApplication">
      <soap:operation soapAction="urn:createApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllApplicationBasicInfo">
      <soap:operation soapAction="urn:getAllApplicationBasicInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllIdentityProviders">
      <soap:operation soapAction="urn:getAllIdentityProviders" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIdentityProvider">
      <soap:operation soapAction="urn:getIdentityProvider" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteApplication">
      <soap:operation soapAction="urn:deleteApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityApplicationManagementServiceSoap12Binding" type="tns:IdentityApplicationManagementServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllLocalClaimUris">
      <soap12:operation soapAction="urn:getAllLocalClaimUris" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplication">
      <soap12:operation soapAction="urn:getApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRequestPathAuthenticators">
      <soap12:operation soapAction="urn:getAllRequestPathAuthenticators" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateApplication">
      <soap12:operation soapAction="urn:updateApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalAuthenticators">
      <soap12:operation soapAction="urn:getAllLocalAuthenticators" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createApplication">
      <soap12:operation soapAction="urn:createApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllApplicationBasicInfo">
      <soap12:operation soapAction="urn:getAllApplicationBasicInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllIdentityProviders">
      <soap12:operation soapAction="urn:getAllIdentityProviders" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIdentityProvider">
      <soap12:operation soapAction="urn:getIdentityProvider" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteApplication">
      <soap12:operation soapAction="urn:deleteApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityApplicationManagementServiceHttpBinding" type="tns:IdentityApplicationManagementServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAllLocalClaimUris">
      <http:operation location="getAllLocalClaimUris"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getApplication">
      <http:operation location="getApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRequestPathAuthenticators">
      <http:operation location="getAllRequestPathAuthenticators"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateApplication">
      <http:operation location="updateApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalAuthenticators">
      <http:operation location="getAllLocalAuthenticators"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createApplication">
      <http:operation location="createApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllApplicationBasicInfo">
      <http:operation location="getAllApplicationBasicInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllIdentityProviders">
      <http:operation location="getAllIdentityProviders"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getIdentityProvider">
      <http:operation location="getIdentityProvider"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteApplication">
      <http:operation location="deleteApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentityApplicationManagementService">
    <wsdl:port name="IdentityApplicationManagementServiceHttpsSoap11Endpoint" binding="tns:IdentityApplicationManagementServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityApplicationManagementServiceHttpsSoap12Endpoint" binding="tns:IdentityApplicationManagementServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityApplicationManagementServiceHttpsEndpoint" binding="tns:IdentityApplicationManagementServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="18d9181a-a0ff-4433-af6f-1de0a4560081" isOneWay="false" action="urn:createApplication" name="createApplication" bindingOperationName="createApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c8253f6-b208-4177-aff0-b54f27cffe36" isOneWay="false" action="urn:deleteApplication" name="deleteApplication" bindingOperationName="deleteApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="73997b5a-1689-4b70-9923-bdc438cc9c91" isOneWay="false" action="urn:getAllApplicationBasicInfo" name="getAllApplicationBasicInfo" bindingOperationName="getAllApplicationBasicInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1459522b-fbb9-4a11-9a6e-3d64f1565f00" isOneWay="false" action="urn:getAllIdentityProviders" name="getAllIdentityProviders" bindingOperationName="getAllIdentityProviders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="29032a9c-9992-44ca-9906-cda5f6664007" isOneWay="false" action="urn:getAllLocalAuthenticators" name="getAllLocalAuthenticators" bindingOperationName="getAllLocalAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cd15c1cc-1658-4336-afab-a0f8af4ffae7" isOneWay="false" action="urn:getAllLocalClaimUris" name="getAllLocalClaimUris" bindingOperationName="getAllLocalClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2184b2d6-35ca-495b-92d9-c25593cef617" isOneWay="false" action="urn:getAllRequestPathAuthenticators" name="getAllRequestPathAuthenticators" bindingOperationName="getAllRequestPathAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="104b654b-fb7d-4553-8418-87c2ec1d35bf" isOneWay="false" action="urn:getApplication" name="getApplication" bindingOperationName="getApplication" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8bdd2d60-6320-4d9a-a9e8-9d07f55e9139" isOneWay="false" action="urn:getIdentityProvider" name="getIdentityProvider" bindingOperationName="getIdentityProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e23c9f6-5d28-4dba-8ce9-878533bc71cc" isOneWay="false" action="urn:updateApplication" name="updateApplication" bindingOperationName="updateApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f5539d35-2888-41c4-a0d3-bca58e79e50c" wsaVersion="NONE" name="IdentityProviderAdminServiceSoap11Binding" type="wsdl" bindingName="{http://provider.identity.carbon.wso2.org}IdentityProviderAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/IdentityProviderAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="80616c3b-a81d-48a7-818b-93478b07a815" isOneWay="false" action="urn:addOpenID" name="addOpenID" bindingOperationName="addOpenID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0dfa8e82-533b-40b7-a7c5-9aeab486e209" isOneWay="false" action="urn:extractPrimaryUserName" name="extractPrimaryUserName" bindingOperationName="extractPrimaryUserName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0c7d5159-a5aa-444e-9d6d-c5e81b8341c4" isOneWay="false" action="urn:getAllOpenIDs" name="getAllOpenIDs" bindingOperationName="getAllOpenIDs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4dfaef24-2d64-4e98-af2d-e22995e97c78" isOneWay="false" action="urn:getPrimaryOpenID" name="getPrimaryOpenID" bindingOperationName="getPrimaryOpenID" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="31cc3542-db15-413a-bb73-f1c8832f887b" isOneWay="false" action="urn:removeOpenID" name="removeOpenID" bindingOperationName="removeOpenID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="926028ec-220e-41bf-a7c6-205c360ec015" wsaVersion="NONE" name="IdentityProviderAdminServiceSoap12Binding" type="wsdl" bindingName="{http://provider.identity.carbon.wso2.org}IdentityProviderAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/IdentityProviderAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentityProviderAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentityProviderAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://provider.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://provider.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2352="http://provider.identity.carbon.wso2.org/xsd" xmlns:ax2353="http://base.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentityProviderAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2355="http://provider.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://provider.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentityProviderAdminServiceIdentityProviderException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityProviderException" nillable="true" type="ax2355:IdentityProviderException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPrimaryOpenID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPrimaryOpenIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addOpenID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="openID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IdentityProviderAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityProviderAdminServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="extractPrimaryUserName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ppid" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="extractPrimaryUserNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeOpenID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="openID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllOpenIDs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllOpenIDsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://provider.identity.carbon.wso2.org/xsd" xmlns:ax2354="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityProviderException">
        <xs:complexContent>
          <xs:extension base="ax2353:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="removeOpenIDRequest">
    <wsdl:part name="parameters" element="ns1:removeOpenID"/>
  </wsdl:message>
  <wsdl:message name="getAllOpenIDsRequest">
    <wsdl:part name="parameters" element="ns1:getAllOpenIDs"/>
  </wsdl:message>
  <wsdl:message name="getAllOpenIDsResponse">
    <wsdl:part name="parameters" element="ns1:getAllOpenIDsResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentityProviderAdminServiceIdentityProviderException">
    <wsdl:part name="parameters" element="ns1:IdentityProviderAdminServiceIdentityProviderException"/>
  </wsdl:message>
  <wsdl:message name="addOpenIDRequest">
    <wsdl:part name="parameters" element="ns1:addOpenID"/>
  </wsdl:message>
  <wsdl:message name="extractPrimaryUserNameRequest">
    <wsdl:part name="parameters" element="ns1:extractPrimaryUserName"/>
  </wsdl:message>
  <wsdl:message name="extractPrimaryUserNameResponse">
    <wsdl:part name="parameters" element="ns1:extractPrimaryUserNameResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentityProviderAdminServiceException">
    <wsdl:part name="parameters" element="ns1:IdentityProviderAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="getPrimaryOpenIDRequest">
    <wsdl:part name="parameters" element="ns1:getPrimaryOpenID"/>
  </wsdl:message>
  <wsdl:message name="getPrimaryOpenIDResponse">
    <wsdl:part name="parameters" element="ns1:getPrimaryOpenIDResponse"/>
  </wsdl:message>
  <wsdl:portType name="IdentityProviderAdminServicePortType">
    <wsdl:operation name="removeOpenID">
      <wsdl:input message="tns:removeOpenIDRequest" wsaw:Action="urn:removeOpenID"/>
    </wsdl:operation>
    <wsdl:operation name="getAllOpenIDs">
      <wsdl:input message="tns:getAllOpenIDsRequest" wsaw:Action="urn:getAllOpenIDs"/>
      <wsdl:output message="tns:getAllOpenIDsResponse" wsaw:Action="urn:getAllOpenIDsResponse"/>
      <wsdl:fault message="tns:IdentityProviderAdminServiceIdentityProviderException" name="IdentityProviderAdminServiceIdentityProviderException" wsaw:Action="urn:getAllOpenIDsIdentityProviderAdminServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="addOpenID">
      <wsdl:input message="tns:addOpenIDRequest" wsaw:Action="urn:addOpenID"/>
    </wsdl:operation>
    <wsdl:operation name="extractPrimaryUserName">
      <wsdl:input message="tns:extractPrimaryUserNameRequest" wsaw:Action="urn:extractPrimaryUserName"/>
      <wsdl:output message="tns:extractPrimaryUserNameResponse" wsaw:Action="urn:extractPrimaryUserNameResponse"/>
      <wsdl:fault message="tns:IdentityProviderAdminServiceException" name="IdentityProviderAdminServiceException" wsaw:Action="urn:extractPrimaryUserNameIdentityProviderAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getPrimaryOpenID">
      <wsdl:input message="tns:getPrimaryOpenIDRequest" wsaw:Action="urn:getPrimaryOpenID"/>
      <wsdl:output message="tns:getPrimaryOpenIDResponse" wsaw:Action="urn:getPrimaryOpenIDResponse"/>
      <wsdl:fault message="tns:IdentityProviderAdminServiceIdentityProviderException" name="IdentityProviderAdminServiceIdentityProviderException" wsaw:Action="urn:getPrimaryOpenIDIdentityProviderAdminServiceIdentityProviderException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentityProviderAdminServiceSoap11Binding" type="tns:IdentityProviderAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeOpenID">
      <soap:operation soapAction="urn:removeOpenID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllOpenIDs">
      <soap:operation soapAction="urn:getAllOpenIDs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceIdentityProviderException">
        <soap:fault use="literal" name="IdentityProviderAdminServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addOpenID">
      <soap:operation soapAction="urn:addOpenID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="extractPrimaryUserName">
      <soap:operation soapAction="urn:extractPrimaryUserName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceException">
        <soap:fault use="literal" name="IdentityProviderAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrimaryOpenID">
      <soap:operation soapAction="urn:getPrimaryOpenID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceIdentityProviderException">
        <soap:fault use="literal" name="IdentityProviderAdminServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityProviderAdminServiceSoap12Binding" type="tns:IdentityProviderAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeOpenID">
      <soap12:operation soapAction="urn:removeOpenID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllOpenIDs">
      <soap12:operation soapAction="urn:getAllOpenIDs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceIdentityProviderException">
        <soap12:fault use="literal" name="IdentityProviderAdminServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addOpenID">
      <soap12:operation soapAction="urn:addOpenID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="extractPrimaryUserName">
      <soap12:operation soapAction="urn:extractPrimaryUserName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceException">
        <soap12:fault use="literal" name="IdentityProviderAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrimaryOpenID">
      <soap12:operation soapAction="urn:getPrimaryOpenID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceIdentityProviderException">
        <soap12:fault use="literal" name="IdentityProviderAdminServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityProviderAdminServiceHttpBinding" type="tns:IdentityProviderAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="removeOpenID">
      <http:operation location="removeOpenID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllOpenIDs">
      <http:operation location="getAllOpenIDs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addOpenID">
      <http:operation location="addOpenID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="extractPrimaryUserName">
      <http:operation location="extractPrimaryUserName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPrimaryOpenID">
      <http:operation location="getPrimaryOpenID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentityProviderAdminService">
    <wsdl:port name="IdentityProviderAdminServiceHttpsSoap11Endpoint" binding="tns:IdentityProviderAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityProviderAdminServiceHttpsSoap12Endpoint" binding="tns:IdentityProviderAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityProviderAdminServiceHttpsEndpoint" binding="tns:IdentityProviderAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="d7754e5a-b174-4199-ad3f-1507ce2d131f" isOneWay="false" action="urn:addOpenID" name="addOpenID" bindingOperationName="addOpenID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5d6ebb81-081a-49e7-aaba-14b014428bd5" isOneWay="false" action="urn:extractPrimaryUserName" name="extractPrimaryUserName" bindingOperationName="extractPrimaryUserName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8fa5b8be-cf66-4bb5-8c6a-d1023f242dc6" isOneWay="false" action="urn:getAllOpenIDs" name="getAllOpenIDs" bindingOperationName="getAllOpenIDs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fc0faf0e-401e-414a-b5dc-d6fcd26fbf72" isOneWay="false" action="urn:getPrimaryOpenID" name="getPrimaryOpenID" bindingOperationName="getPrimaryOpenID" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="178f0760-0122-480f-9c51-2b5715086e52" isOneWay="false" action="urn:removeOpenID" name="removeOpenID" bindingOperationName="removeOpenID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="5264d2f0-9185-49f0-b0c7-3f2790854019" wsaVersion="NONE" name="IdentityProviderMgtServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.idp.carbon.wso2.org}IdentityProviderMgtServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/IdentityProviderMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="204373c6-ef80-4554-9b50-9fede8c6d33f" isOneWay="false" action="urn:addIdP" name="addIdP" bindingOperationName="addIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b2c1ef13-7252-4e60-bdf3-3d67d9d412d5" isOneWay="false" action="urn:deleteIdP" name="deleteIdP" bindingOperationName="deleteIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="42fdb7a0-bc2a-4361-9dfd-ed2f9bea7d38" isOneWay="false" action="urn:getAllFederatedAuthenticators" name="getAllFederatedAuthenticators" bindingOperationName="getAllFederatedAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="34e6fb82-b68b-4791-a06f-df39159c1218" isOneWay="false" action="urn:getAllIdPs" name="getAllIdPs" bindingOperationName="getAllIdPs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4633c284-68bf-44fc-b0ba-c50b32c53b3c" isOneWay="false" action="urn:getAllLocalClaimUris" name="getAllLocalClaimUris" bindingOperationName="getAllLocalClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="176d062b-0a1d-4b5e-8bcf-1600bb21e926" isOneWay="false" action="urn:getAllProvisioningConnectors" name="getAllProvisioningConnectors" bindingOperationName="getAllProvisioningConnectors" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="344aeefa-86d8-4994-9072-7188f6fb5f40" isOneWay="false" action="urn:getEnabledAllIdPs" name="getEnabledAllIdPs" bindingOperationName="getEnabledAllIdPs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7068e6b-ed97-4372-bb2e-7cba945516e1" isOneWay="false" action="urn:getIdPByName" name="getIdPByName" bindingOperationName="getIdPByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5f8717d6-4b8d-4d9b-8ee6-726a8004650b" isOneWay="false" action="urn:getResidentIdP" name="getResidentIdP" bindingOperationName="getResidentIdP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e9b716cb-a327-4994-b377-e7314b6a569e" isOneWay="false" action="urn:updateIdP" name="updateIdP" bindingOperationName="updateIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e10ebc63-f7eb-4af8-848c-a7f04d91292e" isOneWay="false" action="urn:updateResidentIdP" name="updateResidentIdP" bindingOperationName="updateResidentIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a9eb936e-a307-409c-80b3-fe5797ee5174" wsaVersion="NONE" name="IdentityProviderMgtServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.idp.carbon.wso2.org}IdentityProviderMgtServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/IdentityProviderMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentityProviderMgtService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentityProviderMgtService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.idp.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2434="http://mgt.idp.carbon.wso2.org/xsd" xmlns:ax2435="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://mgt.idp.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2438="http://model.common.application.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentityProviderMgtService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://model.common.application.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityProvider">
        <xs:sequence>
          <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="certificate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimConfig" nillable="true" type="ax2438:ClaimConfig"/>
          <xs:element minOccurs="0" name="defaultAuthenticatorConfig" nillable="true" type="ax2438:FederatedAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="defaultProvisioningConnectorConfig" nillable="true" type="ax2438:ProvisioningConnectorConfig"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enable" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="federatedAuthenticatorConfigs" nillable="true" type="ax2438:FederatedAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="federationHub" type="xs:boolean"/>
          <xs:element minOccurs="0" name="homeRealmId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identityProviderDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identityProviderName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpProperties" nillable="true" type="ax2438:IdentityProviderProperty"/>
          <xs:element minOccurs="0" name="justInTimeProvisioningConfig" nillable="true" type="ax2438:JustInTimeProvisioningConfig"/>
          <xs:element minOccurs="0" name="permissionAndRoleConfig" nillable="true" type="ax2438:PermissionsAndRoleConfig"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningConnectorConfigs" nillable="true" type="ax2438:ProvisioningConnectorConfig"/>
          <xs:element minOccurs="0" name="provisioningRole" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="alwaysSendMappedLocalSubjectId" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="claimMappings" nillable="true" type="ax2438:ClaimMapping"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpClaims" nillable="true" type="ax2438:Claim"/>
          <xs:element minOccurs="0" name="localClaimDialect" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleClaimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userClaimURI" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="localClaim" nillable="true" type="ax2438:Claim"/>
          <xs:element minOccurs="0" name="remoteClaim" nillable="true" type="ax2438:Claim"/>
          <xs:element minOccurs="0" name="requested" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Claim">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimId" type="xs:int"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FederatedAuthenticatorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2438:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Property">
        <xs:sequence>
          <xs:element minOccurs="0" name="confidential" type="xs:boolean"/>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProvisioningConnectorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="blocking" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningProperties" nillable="true" type="ax2438:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IdentityProviderProperty">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InboundProvisioningConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="dumbMode" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provisioningEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provisioningUserStore" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="JustInTimeProvisioningConfig">
        <xs:complexContent>
          <xs:extension base="ax2438:InboundProvisioningConfig">
            <xs:sequence>
              <xs:element minOccurs="0" name="userStoreClaimUri" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PermissionsAndRoleConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpRoles" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="ax2438:ApplicationPermission"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roleMappings" nillable="true" type="ax2438:RoleMapping"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ApplicationPermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RoleMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="localRole" nillable="true" type="ax2438:LocalRole"/>
          <xs:element minOccurs="0" name="remoteRole" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LocalRole">
        <xs:sequence>
          <xs:element minOccurs="0" name="localRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userStoreId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.idp.carbon.wso2.org" xmlns:ax2437="http://mgt.idp.carbon.wso2.org/xsd" xmlns:ax2439="http://model.common.application.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.idp.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://model.common.application.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityProviderManagementException" nillable="true" type="ax2434:IdentityProviderManagementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalClaimUris">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalClaimUrisResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEnabledAllIdPs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEnabledAllIdPsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getIdPByName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idPName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getIdPByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addIdP">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identityProvider" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateIdP">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="oldIdPName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="identityProvider" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllFederatedAuthenticators">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllFederatedAuthenticatorsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2438:FederatedAuthenticatorConfig"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProvisioningConnectors">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProvisioningConnectorsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2438:ProvisioningConnectorConfig"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateResidentIdP">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identityProvider" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllIdPs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllIdPsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResidentIdP">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResidentIdPResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteIdP">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idPName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.idp.carbon.wso2.org/xsd" xmlns:ax2436="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityProviderManagementException">
        <xs:complexContent>
          <xs:extension base="ax2435:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAllIdPsRequest">
    <wsdl:part name="parameters" element="ns:getAllIdPs"/>
  </wsdl:message>
  <wsdl:message name="getAllIdPsResponse">
    <wsdl:part name="parameters" element="ns:getAllIdPsResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentityProviderMgtServiceIdentityProviderManagementException">
    <wsdl:part name="parameters" element="ns:IdentityProviderMgtServiceIdentityProviderManagementException"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalClaimUrisRequest">
    <wsdl:part name="parameters" element="ns:getAllLocalClaimUris"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalClaimUrisResponse">
    <wsdl:part name="parameters" element="ns:getAllLocalClaimUrisResponse"/>
  </wsdl:message>
  <wsdl:message name="addIdPRequest">
    <wsdl:part name="parameters" element="ns:addIdP"/>
  </wsdl:message>
  <wsdl:message name="getResidentIdPRequest">
    <wsdl:part name="parameters" element="ns:getResidentIdP"/>
  </wsdl:message>
  <wsdl:message name="getResidentIdPResponse">
    <wsdl:part name="parameters" element="ns:getResidentIdPResponse"/>
  </wsdl:message>
  <wsdl:message name="getEnabledAllIdPsRequest">
    <wsdl:part name="parameters" element="ns:getEnabledAllIdPs"/>
  </wsdl:message>
  <wsdl:message name="getEnabledAllIdPsResponse">
    <wsdl:part name="parameters" element="ns:getEnabledAllIdPsResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllFederatedAuthenticatorsRequest">
    <wsdl:part name="parameters" element="ns:getAllFederatedAuthenticators"/>
  </wsdl:message>
  <wsdl:message name="getAllFederatedAuthenticatorsResponse">
    <wsdl:part name="parameters" element="ns:getAllFederatedAuthenticatorsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateResidentIdPRequest">
    <wsdl:part name="parameters" element="ns:updateResidentIdP"/>
  </wsdl:message>
  <wsdl:message name="deleteIdPRequest">
    <wsdl:part name="parameters" element="ns:deleteIdP"/>
  </wsdl:message>
  <wsdl:message name="getIdPByNameRequest">
    <wsdl:part name="parameters" element="ns:getIdPByName"/>
  </wsdl:message>
  <wsdl:message name="getIdPByNameResponse">
    <wsdl:part name="parameters" element="ns:getIdPByNameResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllProvisioningConnectorsRequest">
    <wsdl:part name="parameters" element="ns:getAllProvisioningConnectors"/>
  </wsdl:message>
  <wsdl:message name="getAllProvisioningConnectorsResponse">
    <wsdl:part name="parameters" element="ns:getAllProvisioningConnectorsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateIdPRequest">
    <wsdl:part name="parameters" element="ns:updateIdP"/>
  </wsdl:message>
  <wsdl:portType name="IdentityProviderMgtServicePortType">
    <wsdl:operation name="getAllIdPs">
      <wsdl:input message="ns:getAllIdPsRequest" wsaw:Action="urn:getAllIdPs"/>
      <wsdl:output message="ns:getAllIdPsResponse" wsaw:Action="urn:getAllIdPsResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getAllIdPsIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <wsdl:input message="ns:getAllLocalClaimUrisRequest" wsaw:Action="urn:getAllLocalClaimUris"/>
      <wsdl:output message="ns:getAllLocalClaimUrisResponse" wsaw:Action="urn:getAllLocalClaimUrisResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getAllLocalClaimUrisIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="addIdP">
      <wsdl:input message="ns:addIdPRequest" wsaw:Action="urn:addIdP"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:addIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getResidentIdP">
      <wsdl:input message="ns:getResidentIdPRequest" wsaw:Action="urn:getResidentIdP"/>
      <wsdl:output message="ns:getResidentIdPResponse" wsaw:Action="urn:getResidentIdPResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getResidentIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getEnabledAllIdPs">
      <wsdl:input message="ns:getEnabledAllIdPsRequest" wsaw:Action="urn:getEnabledAllIdPs"/>
      <wsdl:output message="ns:getEnabledAllIdPsResponse" wsaw:Action="urn:getEnabledAllIdPsResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getEnabledAllIdPsIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllFederatedAuthenticators">
      <wsdl:input message="ns:getAllFederatedAuthenticatorsRequest" wsaw:Action="urn:getAllFederatedAuthenticators"/>
      <wsdl:output message="ns:getAllFederatedAuthenticatorsResponse" wsaw:Action="urn:getAllFederatedAuthenticatorsResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getAllFederatedAuthenticatorsIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="updateResidentIdP">
      <wsdl:input message="ns:updateResidentIdPRequest" wsaw:Action="urn:updateResidentIdP"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:updateResidentIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteIdP">
      <wsdl:input message="ns:deleteIdPRequest" wsaw:Action="urn:deleteIdP"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:deleteIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getIdPByName">
      <wsdl:input message="ns:getIdPByNameRequest" wsaw:Action="urn:getIdPByName"/>
      <wsdl:output message="ns:getIdPByNameResponse" wsaw:Action="urn:getIdPByNameResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getIdPByNameIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllProvisioningConnectors">
      <wsdl:input message="ns:getAllProvisioningConnectorsRequest" wsaw:Action="urn:getAllProvisioningConnectors"/>
      <wsdl:output message="ns:getAllProvisioningConnectorsResponse" wsaw:Action="urn:getAllProvisioningConnectorsResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getAllProvisioningConnectorsIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="updateIdP">
      <wsdl:input message="ns:updateIdPRequest" wsaw:Action="urn:updateIdP"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:updateIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentityProviderMgtServiceSoap11Binding" type="ns:IdentityProviderMgtServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllIdPs">
      <soap:operation soapAction="urn:getAllIdPs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <soap:operation soapAction="urn:getAllLocalClaimUris" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addIdP">
      <soap:operation soapAction="urn:addIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResidentIdP">
      <soap:operation soapAction="urn:getResidentIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEnabledAllIdPs">
      <soap:operation soapAction="urn:getEnabledAllIdPs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllFederatedAuthenticators">
      <soap:operation soapAction="urn:getAllFederatedAuthenticators" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateResidentIdP">
      <soap:operation soapAction="urn:updateResidentIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteIdP">
      <soap:operation soapAction="urn:deleteIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIdPByName">
      <soap:operation soapAction="urn:getIdPByName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProvisioningConnectors">
      <soap:operation soapAction="urn:getAllProvisioningConnectors" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateIdP">
      <soap:operation soapAction="urn:updateIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityProviderMgtServiceSoap12Binding" type="ns:IdentityProviderMgtServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllIdPs">
      <soap12:operation soapAction="urn:getAllIdPs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <soap12:operation soapAction="urn:getAllLocalClaimUris" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addIdP">
      <soap12:operation soapAction="urn:addIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResidentIdP">
      <soap12:operation soapAction="urn:getResidentIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEnabledAllIdPs">
      <soap12:operation soapAction="urn:getEnabledAllIdPs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllFederatedAuthenticators">
      <soap12:operation soapAction="urn:getAllFederatedAuthenticators" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateResidentIdP">
      <soap12:operation soapAction="urn:updateResidentIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteIdP">
      <soap12:operation soapAction="urn:deleteIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIdPByName">
      <soap12:operation soapAction="urn:getIdPByName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProvisioningConnectors">
      <soap12:operation soapAction="urn:getAllProvisioningConnectors" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateIdP">
      <soap12:operation soapAction="urn:updateIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityProviderMgtServiceHttpBinding" type="ns:IdentityProviderMgtServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAllIdPs">
      <http:operation location="getAllIdPs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <http:operation location="getAllLocalClaimUris"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addIdP">
      <http:operation location="addIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getResidentIdP">
      <http:operation location="getResidentIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEnabledAllIdPs">
      <http:operation location="getEnabledAllIdPs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllFederatedAuthenticators">
      <http:operation location="getAllFederatedAuthenticators"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateResidentIdP">
      <http:operation location="updateResidentIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteIdP">
      <http:operation location="deleteIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getIdPByName">
      <http:operation location="getIdPByName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllProvisioningConnectors">
      <http:operation location="getAllProvisioningConnectors"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateIdP">
      <http:operation location="updateIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentityProviderMgtService">
    <wsdl:port name="IdentityProviderMgtServiceHttpsSoap11Endpoint" binding="ns:IdentityProviderMgtServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityProviderMgtServiceHttpsSoap12Endpoint" binding="ns:IdentityProviderMgtServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityProviderMgtServiceHttpsEndpoint" binding="ns:IdentityProviderMgtServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="f52624d8-3254-4f24-8c27-4fc5cbd45021" isOneWay="false" action="urn:addIdP" name="addIdP" bindingOperationName="addIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="94ee8556-9694-49da-813a-55f896607746" isOneWay="false" action="urn:deleteIdP" name="deleteIdP" bindingOperationName="deleteIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="63f55fc0-4668-4e83-955f-aa7d6cccc5e5" isOneWay="false" action="urn:getAllFederatedAuthenticators" name="getAllFederatedAuthenticators" bindingOperationName="getAllFederatedAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b6f1bedf-0620-4a96-9160-16d8d4c2f350" isOneWay="false" action="urn:getAllIdPs" name="getAllIdPs" bindingOperationName="getAllIdPs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9e98634f-de75-47da-931a-80b8c7f8496f" isOneWay="false" action="urn:getAllLocalClaimUris" name="getAllLocalClaimUris" bindingOperationName="getAllLocalClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="676d463e-7094-4c9d-9d5e-db3a06888255" isOneWay="false" action="urn:getAllProvisioningConnectors" name="getAllProvisioningConnectors" bindingOperationName="getAllProvisioningConnectors" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1dac2963-67e9-4a33-a143-af8b4791728c" isOneWay="false" action="urn:getEnabledAllIdPs" name="getEnabledAllIdPs" bindingOperationName="getEnabledAllIdPs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8201fd9f-8cb5-465b-bbc5-8855c65290d9" isOneWay="false" action="urn:getIdPByName" name="getIdPByName" bindingOperationName="getIdPByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ccb6d760-0c7a-44a1-a1e2-357a132a6f26" isOneWay="false" action="urn:getResidentIdP" name="getResidentIdP" bindingOperationName="getResidentIdP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="54f41320-3c16-474e-8e23-326715306a39" isOneWay="false" action="urn:updateIdP" name="updateIdP" bindingOperationName="updateIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d34767b9-4d51-4177-b644-c30778a0ebcf" isOneWay="false" action="urn:updateResidentIdP" name="updateResidentIdP" bindingOperationName="updateResidentIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="70feae7b-2c84-43f6-ad8b-8524de634e1b" wsaVersion="NONE" name="IdentitySAMLSSOConfigServiceSoap11Binding" type="wsdl" bindingName="{http://saml.sso.identity.carbon.wso2.org}IdentitySAMLSSOConfigServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/IdentitySAMLSSOConfigService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="af4b5cfb-a881-4562-b495-f2e30865bfe6" isOneWay="false" action="urn:addRPServiceProvider" name="addRPServiceProvider" bindingOperationName="addRPServiceProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="845a1a98-fff2-4f1f-9084-ba93c529a440" isOneWay="false" action="urn:getCertAliasOfPrimaryKeyStore" name="getCertAliasOfPrimaryKeyStore" bindingOperationName="getCertAliasOfPrimaryKeyStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3e8412f9-322f-4f3b-a84d-d28c5f38429a" isOneWay="false" action="urn:getClaimURIs" name="getClaimURIs" bindingOperationName="getClaimURIs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1699cfb2-9ebd-4b80-ba6b-31014f4f9219" isOneWay="false" action="urn:getDigestAlgorithmURIByConfig" name="getDigestAlgorithmURIByConfig" bindingOperationName="getDigestAlgorithmURIByConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="83de01c5-8f3c-4af1-868e-684d432d055b" isOneWay="false" action="urn:getDigestAlgorithmURIs" name="getDigestAlgorithmURIs" bindingOperationName="getDigestAlgorithmURIs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="32999b50-ceb6-437e-8dfc-25a4a58d4927" isOneWay="false" action="urn:getServiceProviders" name="getServiceProviders" bindingOperationName="getServiceProviders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c06ea1b7-fb4b-41d2-8e65-d8b3a2a96327" isOneWay="false" action="urn:getSigningAlgorithmUriByConfig" name="getSigningAlgorithmUriByConfig" bindingOperationName="getSigningAlgorithmUriByConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aada5bef-c9d6-4025-bd61-016e372e6e84" isOneWay="false" action="urn:getSigningAlgorithmUris" name="getSigningAlgorithmUris" bindingOperationName="getSigningAlgorithmUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f473f34e-5f27-48ef-9e15-4ebfffa08b17" isOneWay="false" action="urn:removeServiceProvider" name="removeServiceProvider" bindingOperationName="removeServiceProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b5857cb7-68c3-4445-8939-7208b286b89b" wsaVersion="NONE" name="IdentitySAMLSSOConfigServiceSoap12Binding" type="wsdl" bindingName="{http://saml.sso.identity.carbon.wso2.org}IdentitySAMLSSOConfigServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/IdentitySAMLSSOConfigService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentitySAMLSSOConfigService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentitySAMLSSOConfigService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://saml.sso.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2380="http://base.identity.carbon.wso2.org/xsd" xmlns:tns="http://saml.sso.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax2382="http://dto.saml.sso.identity.carbon.wso2.org/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentitySAMLSSOConfigService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2381="http://base.identity.carbon.wso2.org/xsd" xmlns:ax2383="http://dto.saml.sso.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.saml.sso.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentitySAMLSSOConfigServiceIdentityException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityException" nillable="true" type="ax2380:IdentityException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRPServiceProvider">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="spDto" nillable="true" type="ax2382:SAMLSSOServiceProviderDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRPServiceProviderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceProviders">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceProvidersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2382:SAMLSSOServiceProviderInfoDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCertAliasOfPrimaryKeyStore">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCertAliasOfPrimaryKeyStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSigningAlgorithmUris">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSigningAlgorithmUrisResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSigningAlgorithmUriByConfig">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSigningAlgorithmUriByConfigResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDigestAlgorithmURIs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDigestAlgorithmURIsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDigestAlgorithmURIByConfig">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDigestAlgorithmURIByConfigResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServiceProvider">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="issuer" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServiceProviderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimURIs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimURIsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.saml.sso.identity.carbon.wso2.org/xsd">
      <xs:complexType name="SAMLSSOServiceProviderDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="assertionConsumerUrl" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="assertionConsumerUrls" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeConsumingServiceIndex" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="certAlias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="defaultAssertionConsumerUrl" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="digestAlgorithmURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="doEnableEncryptedAssertion" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doSignAssertions" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doSignResponse" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doSingleLogout" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doValidateSignatureInRequests" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableAttributeProfile" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableAttributesByDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="idPInitSLOEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="idPInitSSOEnabled" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpInitSLOReturnToURLs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="issuer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="loginPageURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nameIDFormat" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nameIdClaimUri" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requestedAudiences" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requestedClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requestedRecipients" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="signingAlgorithmURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sloRequestURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sloResponseURL" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SAMLSSOServiceProviderInfoDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="pubCertFilePath" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceProviders" nillable="true" type="ax2382:SAMLSSOServiceProviderDTO"/>
          <xs:element minOccurs="0" name="tenantZero" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getSigningAlgorithmUrisRequest">
    <wsdl:part name="parameters" element="ns1:getSigningAlgorithmUris"/>
  </wsdl:message>
  <wsdl:message name="getSigningAlgorithmUrisResponse">
    <wsdl:part name="parameters" element="ns1:getSigningAlgorithmUrisResponse"/>
  </wsdl:message>
  <wsdl:message name="getSigningAlgorithmUriByConfigRequest">
    <wsdl:part name="parameters" element="ns1:getSigningAlgorithmUriByConfig"/>
  </wsdl:message>
  <wsdl:message name="getSigningAlgorithmUriByConfigResponse">
    <wsdl:part name="parameters" element="ns1:getSigningAlgorithmUriByConfigResponse"/>
  </wsdl:message>
  <wsdl:message name="getDigestAlgorithmURIByConfigRequest">
    <wsdl:part name="parameters" element="ns1:getDigestAlgorithmURIByConfig"/>
  </wsdl:message>
  <wsdl:message name="getDigestAlgorithmURIByConfigResponse">
    <wsdl:part name="parameters" element="ns1:getDigestAlgorithmURIByConfigResponse"/>
  </wsdl:message>
  <wsdl:message name="getClaimURIsRequest">
    <wsdl:part name="parameters" element="ns1:getClaimURIs"/>
  </wsdl:message>
  <wsdl:message name="getClaimURIsResponse">
    <wsdl:part name="parameters" element="ns1:getClaimURIsResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentitySAMLSSOConfigServiceIdentityException">
    <wsdl:part name="parameters" element="ns1:IdentitySAMLSSOConfigServiceIdentityException"/>
  </wsdl:message>
  <wsdl:message name="addRPServiceProviderRequest">
    <wsdl:part name="parameters" element="ns1:addRPServiceProvider"/>
  </wsdl:message>
  <wsdl:message name="addRPServiceProviderResponse">
    <wsdl:part name="parameters" element="ns1:addRPServiceProviderResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceProvidersRequest">
    <wsdl:part name="parameters" element="ns1:getServiceProviders"/>
  </wsdl:message>
  <wsdl:message name="getServiceProvidersResponse">
    <wsdl:part name="parameters" element="ns1:getServiceProvidersResponse"/>
  </wsdl:message>
  <wsdl:message name="getCertAliasOfPrimaryKeyStoreRequest">
    <wsdl:part name="parameters" element="ns1:getCertAliasOfPrimaryKeyStore"/>
  </wsdl:message>
  <wsdl:message name="getCertAliasOfPrimaryKeyStoreResponse">
    <wsdl:part name="parameters" element="ns1:getCertAliasOfPrimaryKeyStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="getDigestAlgorithmURIsRequest">
    <wsdl:part name="parameters" element="ns1:getDigestAlgorithmURIs"/>
  </wsdl:message>
  <wsdl:message name="getDigestAlgorithmURIsResponse">
    <wsdl:part name="parameters" element="ns1:getDigestAlgorithmURIsResponse"/>
  </wsdl:message>
  <wsdl:message name="removeServiceProviderRequest">
    <wsdl:part name="parameters" element="ns1:removeServiceProvider"/>
  </wsdl:message>
  <wsdl:message name="removeServiceProviderResponse">
    <wsdl:part name="parameters" element="ns1:removeServiceProviderResponse"/>
  </wsdl:message>
  <wsdl:portType name="IdentitySAMLSSOConfigServicePortType">
    <wsdl:operation name="getSigningAlgorithmUris">
      <wsdl:input message="tns:getSigningAlgorithmUrisRequest" wsaw:Action="urn:getSigningAlgorithmUris"/>
      <wsdl:output message="tns:getSigningAlgorithmUrisResponse" wsaw:Action="urn:getSigningAlgorithmUrisResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSigningAlgorithmUriByConfig">
      <wsdl:input message="tns:getSigningAlgorithmUriByConfigRequest" wsaw:Action="urn:getSigningAlgorithmUriByConfig"/>
      <wsdl:output message="tns:getSigningAlgorithmUriByConfigResponse" wsaw:Action="urn:getSigningAlgorithmUriByConfigResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIByConfig">
      <wsdl:input message="tns:getDigestAlgorithmURIByConfigRequest" wsaw:Action="urn:getDigestAlgorithmURIByConfig"/>
      <wsdl:output message="tns:getDigestAlgorithmURIByConfigResponse" wsaw:Action="urn:getDigestAlgorithmURIByConfigResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimURIs">
      <wsdl:input message="tns:getClaimURIsRequest" wsaw:Action="urn:getClaimURIs"/>
      <wsdl:output message="tns:getClaimURIsResponse" wsaw:Action="urn:getClaimURIsResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:getClaimURIsIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="addRPServiceProvider">
      <wsdl:input message="tns:addRPServiceProviderRequest" wsaw:Action="urn:addRPServiceProvider"/>
      <wsdl:output message="tns:addRPServiceProviderResponse" wsaw:Action="urn:addRPServiceProviderResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:addRPServiceProviderIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviders">
      <wsdl:input message="tns:getServiceProvidersRequest" wsaw:Action="urn:getServiceProviders"/>
      <wsdl:output message="tns:getServiceProvidersResponse" wsaw:Action="urn:getServiceProvidersResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:getServiceProvidersIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <wsdl:input message="tns:getCertAliasOfPrimaryKeyStoreRequest" wsaw:Action="urn:getCertAliasOfPrimaryKeyStore"/>
      <wsdl:output message="tns:getCertAliasOfPrimaryKeyStoreResponse" wsaw:Action="urn:getCertAliasOfPrimaryKeyStoreResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:getCertAliasOfPrimaryKeyStoreIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIs">
      <wsdl:input message="tns:getDigestAlgorithmURIsRequest" wsaw:Action="urn:getDigestAlgorithmURIs"/>
      <wsdl:output message="tns:getDigestAlgorithmURIsResponse" wsaw:Action="urn:getDigestAlgorithmURIsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeServiceProvider">
      <wsdl:input message="tns:removeServiceProviderRequest" wsaw:Action="urn:removeServiceProvider"/>
      <wsdl:output message="tns:removeServiceProviderResponse" wsaw:Action="urn:removeServiceProviderResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:removeServiceProviderIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentitySAMLSSOConfigServiceSoap11Binding" type="tns:IdentitySAMLSSOConfigServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSigningAlgorithmUris">
      <soap:operation soapAction="urn:getSigningAlgorithmUris" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSigningAlgorithmUriByConfig">
      <soap:operation soapAction="urn:getSigningAlgorithmUriByConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIByConfig">
      <soap:operation soapAction="urn:getDigestAlgorithmURIByConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClaimURIs">
      <soap:operation soapAction="urn:getClaimURIs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRPServiceProvider">
      <soap:operation soapAction="urn:addRPServiceProvider" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviders">
      <soap:operation soapAction="urn:getServiceProviders" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <soap:operation soapAction="urn:getCertAliasOfPrimaryKeyStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIs">
      <soap:operation soapAction="urn:getDigestAlgorithmURIs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceProvider">
      <soap:operation soapAction="urn:removeServiceProvider" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentitySAMLSSOConfigServiceSoap12Binding" type="tns:IdentitySAMLSSOConfigServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSigningAlgorithmUris">
      <soap12:operation soapAction="urn:getSigningAlgorithmUris" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSigningAlgorithmUriByConfig">
      <soap12:operation soapAction="urn:getSigningAlgorithmUriByConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIByConfig">
      <soap12:operation soapAction="urn:getDigestAlgorithmURIByConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClaimURIs">
      <soap12:operation soapAction="urn:getClaimURIs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRPServiceProvider">
      <soap12:operation soapAction="urn:addRPServiceProvider" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviders">
      <soap12:operation soapAction="urn:getServiceProviders" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <soap12:operation soapAction="urn:getCertAliasOfPrimaryKeyStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIs">
      <soap12:operation soapAction="urn:getDigestAlgorithmURIs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceProvider">
      <soap12:operation soapAction="urn:removeServiceProvider" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentitySAMLSSOConfigServiceHttpBinding" type="tns:IdentitySAMLSSOConfigServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getSigningAlgorithmUris">
      <http:operation location="getSigningAlgorithmUris"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSigningAlgorithmUriByConfig">
      <http:operation location="getSigningAlgorithmUriByConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIByConfig">
      <http:operation location="getDigestAlgorithmURIByConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClaimURIs">
      <http:operation location="getClaimURIs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRPServiceProvider">
      <http:operation location="addRPServiceProvider"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviders">
      <http:operation location="getServiceProviders"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <http:operation location="getCertAliasOfPrimaryKeyStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIs">
      <http:operation location="getDigestAlgorithmURIs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceProvider">
      <http:operation location="removeServiceProvider"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentitySAMLSSOConfigService">
    <wsdl:port name="IdentitySAMLSSOConfigServiceHttpsSoap11Endpoint" binding="tns:IdentitySAMLSSOConfigServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentitySAMLSSOConfigServiceHttpsSoap12Endpoint" binding="tns:IdentitySAMLSSOConfigServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentitySAMLSSOConfigServiceHttpsEndpoint" binding="tns:IdentitySAMLSSOConfigServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="4dda8276-85e0-402c-b7a8-b526dcbff4ae" isOneWay="false" action="urn:addRPServiceProvider" name="addRPServiceProvider" bindingOperationName="addRPServiceProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5f1c5ac3-20da-41ac-8976-f33217502ef9" isOneWay="false" action="urn:getCertAliasOfPrimaryKeyStore" name="getCertAliasOfPrimaryKeyStore" bindingOperationName="getCertAliasOfPrimaryKeyStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2ce66047-3bff-4c1a-872a-5a3361837e8d" isOneWay="false" action="urn:getClaimURIs" name="getClaimURIs" bindingOperationName="getClaimURIs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="458a5d77-36d1-4db2-bfe7-8d64873eb747" isOneWay="false" action="urn:getDigestAlgorithmURIByConfig" name="getDigestAlgorithmURIByConfig" bindingOperationName="getDigestAlgorithmURIByConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b689ec7d-867f-4c9e-aced-c3ecdb1ba8ed" isOneWay="false" action="urn:getDigestAlgorithmURIs" name="getDigestAlgorithmURIs" bindingOperationName="getDigestAlgorithmURIs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="80cd86d9-29b3-4ee7-87e0-1b53c068cdee" isOneWay="false" action="urn:getServiceProviders" name="getServiceProviders" bindingOperationName="getServiceProviders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3023e8c6-ae08-4c90-bb1d-c8c08875e1c6" isOneWay="false" action="urn:getSigningAlgorithmUriByConfig" name="getSigningAlgorithmUriByConfig" bindingOperationName="getSigningAlgorithmUriByConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66504c04-61ea-45cb-832e-6d0111cd6833" isOneWay="false" action="urn:getSigningAlgorithmUris" name="getSigningAlgorithmUris" bindingOperationName="getSigningAlgorithmUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4cc28f61-aa9a-4b12-93ca-b391dea35f6a" isOneWay="false" action="urn:removeServiceProvider" name="removeServiceProvider" bindingOperationName="removeServiceProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d48e143f-922a-4392-8201-1072148afd3b" wsaVersion="NONE" name="IdentitySTSAdminServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.sts.identity.carbon.wso2.org}IdentitySTSAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/IdentitySTSAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="a9e45e17-e8e5-429b-aeea-8b741d73c517" isOneWay="false" action="urn:readCardIssuerConfiguration" name="readCardIssuerConfiguration" bindingOperationName="readCardIssuerConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5882cce8-c5ed-42a9-ac51-356e71a12207" isOneWay="false" action="urn:updateCardIssueConfiguration" name="updateCardIssueConfiguration" bindingOperationName="updateCardIssueConfiguration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="bda0983d-8d85-43d3-8031-5a2b58859e16" wsaVersion="NONE" name="IdentitySTSAdminServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.sts.identity.carbon.wso2.org}IdentitySTSAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/IdentitySTSAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentitySTSAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IdentitySTSAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.sts.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.sts.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2384="http://dto.mgt.sts.identity.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentitySTSAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2385="http://dto.mgt.sts.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://dto.mgt.sts.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentitySTSAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentitySTSAdminServiceException" nillable="true" type="ns1:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="readCardIssuerConfiguration">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="readCardIssuerConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2384:CardIssuerDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateCardIssueConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="issuer" nillable="true" type="ax2384:CardIssuerDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.sts.identity.carbon.wso2.org/xsd">
      <xs:complexType name="CardIssuerDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="cardName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="supportedTokenTypes" nillable="true" type="ax2384:CardIssuerTokenDTO"/>
          <xs:element minOccurs="0" name="symmetricBinding" type="xs:boolean"/>
          <xs:element minOccurs="0" name="validPeriodInDays" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CardIssuerTokenDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="supported" type="xs:boolean"/>
          <xs:element minOccurs="0" name="tokenType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateCardIssueConfigurationRequest">
    <wsdl:part name="parameters" element="ns1:updateCardIssueConfiguration"/>
  </wsdl:message>
  <wsdl:message name="IdentitySTSAdminServiceException">
    <wsdl:part name="parameters" element="ns1:IdentitySTSAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="readCardIssuerConfigurationRequest">
    <wsdl:part name="parameters" element="ns1:readCardIssuerConfiguration"/>
  </wsdl:message>
  <wsdl:message name="readCardIssuerConfigurationResponse">
    <wsdl:part name="parameters" element="ns1:readCardIssuerConfigurationResponse"/>
  </wsdl:message>
  <wsdl:portType name="IdentitySTSAdminServicePortType">
    <wsdl:operation name="updateCardIssueConfiguration">
      <wsdl:input message="tns:updateCardIssueConfigurationRequest" wsaw:Action="urn:updateCardIssueConfiguration"/>
      <wsdl:fault message="tns:IdentitySTSAdminServiceException" name="IdentitySTSAdminServiceException" wsaw:Action="urn:updateCardIssueConfigurationIdentitySTSAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="readCardIssuerConfiguration">
      <wsdl:input message="tns:readCardIssuerConfigurationRequest" wsaw:Action="urn:readCardIssuerConfiguration"/>
      <wsdl:output message="tns:readCardIssuerConfigurationResponse" wsaw:Action="urn:readCardIssuerConfigurationResponse"/>
      <wsdl:fault message="tns:IdentitySTSAdminServiceException" name="IdentitySTSAdminServiceException" wsaw:Action="urn:readCardIssuerConfigurationIdentitySTSAdminServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentitySTSAdminServiceSoap11Binding" type="tns:IdentitySTSAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCardIssueConfiguration">
      <soap:operation soapAction="urn:updateCardIssueConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentitySTSAdminServiceException">
        <soap:fault use="literal" name="IdentitySTSAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readCardIssuerConfiguration">
      <soap:operation soapAction="urn:readCardIssuerConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySTSAdminServiceException">
        <soap:fault use="literal" name="IdentitySTSAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentitySTSAdminServiceSoap12Binding" type="tns:IdentitySTSAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCardIssueConfiguration">
      <soap12:operation soapAction="urn:updateCardIssueConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentitySTSAdminServiceException">
        <soap12:fault use="literal" name="IdentitySTSAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readCardIssuerConfiguration">
      <soap12:operation soapAction="urn:readCardIssuerConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySTSAdminServiceException">
        <soap12:fault use="literal" name="IdentitySTSAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentitySTSAdminServiceHttpBinding" type="tns:IdentitySTSAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateCardIssueConfiguration">
      <http:operation location="updateCardIssueConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="readCardIssuerConfiguration">
      <http:operation location="readCardIssuerConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentitySTSAdminService">
    <wsdl:port name="IdentitySTSAdminServiceHttpsSoap11Endpoint" binding="tns:IdentitySTSAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentitySTSAdminServiceHttpsSoap12Endpoint" binding="tns:IdentitySTSAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentitySTSAdminServiceHttpsEndpoint" binding="tns:IdentitySTSAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="7208d08e-3739-4f54-84ca-40ff9a3e3a72" isOneWay="false" action="urn:readCardIssuerConfiguration" name="readCardIssuerConfiguration" bindingOperationName="readCardIssuerConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c2c7bd6-21a8-4392-8541-1748af3cad65" isOneWay="false" action="urn:updateCardIssueConfiguration" name="updateCardIssueConfiguration" bindingOperationName="updateCardIssueConfiguration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e5a62bae-d433-43d5-b6c8-6e16f4cc55e3" wsaVersion="NONE" name="IWAAuthenticatorSoap12Binding" type="wsdl" bindingName="{http://iwa.authenticator.identity.carbon.wso2.org}IWAAuthenticatorSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/IWAAuthenticator.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="06ab8361-9c7a-4b41-8d20-d21caa931fec" isOneWay="false" action="urn:canHandle" name="canHandle" bindingOperationName="canHandle" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e79bdcac-f80b-419c-b0ab-d7ea35f5316f" isOneWay="false" action="urn:login" name="login" bindingOperationName="login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b6690540-1d22-4bc8-b76c-f891d8dd73be" wsaVersion="NONE" name="IWAAuthenticatorSoap11Binding" type="wsdl" bindingName="{http://iwa.authenticator.identity.carbon.wso2.org}IWAAuthenticatorSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/IWAAuthenticator.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IWAAuthenticator.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/IWAAuthenticator.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://iwa.authenticator.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2168="http://util.axis2.apache.org/xsd" xmlns:ax2202="http://transport.axis2.apache.org/xsd" xmlns:ax2148="http://threadpool.util.axis2.apache.org/xsd" xmlns:ns="http://iwa.authenticator.identity.carbon.wso2.org" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2182="http://schema.commons.ws.apache.org/xsd" xmlns:ax2161="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2140="http://lifecycle.attachments.axiom.apache.org/xsd" xmlns:ax2184="http://dom.w3c.org/xsd" xmlns:ax2186="http://constants.schema.commons.ws.apache.org/xsd" xmlns:ax2164="http://net.java/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2143="http://description.axis2.apache.org/xsd" xmlns:ax2166="http://securevault.wso2.org/xsd" xmlns:ax2144="http://engine.axis2.apache.org/xsd" xmlns:ax2200="http://client.axis2.apache.org/xsd" xmlns:ax2145="http://clustering.axis2.apache.org/xsd" xmlns:ax2179="http://neethi.apache.org/xsd" xmlns:ax2135="http://attachments.axiom.apache.org/xsd" xmlns:ax2136="http://io.java/xsd" xmlns:ax2138="http://util.java/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2152="http://management.clustering.axis2.apache.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2197="http://addressing.axis2.apache.org/xsd" xmlns:ax2176="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:ax2155="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2134="http://context.axis2.apache.org/xsd" xmlns:ax2191="http://soap.axiom.apache.org/xsd" xmlns:ax2170="http://transaction.axis2.apache.org/xsd" xmlns:ax2192="http://om.axiom.apache.org/xsd" xmlns:ax2209="http://common.core.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsp:Policy wsu:Id="75eda0ae50db9459e34a0c3daf8fd1b6f28930ceedf1f41a" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsp:ExactlyOne>
      <wsp:All/>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="SigOnly" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsp:ExactlyOne>
      <wsp:All>
        <sp:AsymmetricBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <wsp:Policy>
            <sp:InitiatorToken>
              <wsp:Policy>
                <sp:X509Token sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient">
                  <wsp:Policy>
                    <sp:RequireThumbprintReference/>
                    <sp:WssX509V3Token10/>
                  </wsp:Policy>
                </sp:X509Token>
              </wsp:Policy>
            </sp:InitiatorToken>
            <sp:RecipientToken>
              <wsp:Policy>
                <sp:X509Token sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Never">
                  <wsp:Policy>
                    <sp:RequireThumbprintReference/>
                    <sp:WssX509V3Token10/>
                  </wsp:Policy>
                </sp:X509Token>
              </wsp:Policy>
            </sp:RecipientToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:Basic256/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
            <sp:IncludeTimestamp/>
            <sp:OnlySignEntireHeadersAndBody/>
          </wsp:Policy>
        </sp:AsymmetricBinding>
        <sp:Wss10 xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <sp:Policy>
            <sp:MustSupportRefKeyIdentifier/>
            <sp:MustSupportRefIssuerSerial/>
          </sp:Policy>
        </sp:Wss10>
        <sp:SignedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <sp:Body/>
        </sp:SignedParts>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsdl:documentation>IWAAuthenticator</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://transaction.axis2.apache.org/xsd">
      <xs:complexType name="TransactionConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="transactionManager" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="transactionTimeout" type="xs:int"/>
          <xs:element minOccurs="0" name="userTransaction" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://neethi.apache.org/xsd" xmlns:ax2180="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType abstract="true" name="AbstractPolicyOperator">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
          <xs:element minOccurs="0" name="firstPolicyComponent" nillable="true" type="ax2179:PolicyComponent"/>
          <xs:element minOccurs="0" name="policyComponents" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="PolicyComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="xs:short"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="All">
        <xs:complexContent>
          <xs:extension base="ax2179:AbstractPolicyOperator">
            <xs:sequence>
              <xs:element minOccurs="0" name="assertions" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="type" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Policy">
        <xs:complexContent>
          <xs:extension base="ax2179:All">
            <xs:sequence>
              <xs:element minOccurs="0" name="alternatives" nillable="true" type="ax2180:Iterator"/>
              <xs:element minOccurs="0" name="attributes" nillable="true" type="ax2180:Map"/>
              <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="type" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://constants.schema.commons.ws.apache.org/xsd">
      <xs:complexType abstract="true" name="Enum">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://threadpool.util.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="ThreadFactory">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schema.commons.ws.apache.org/xsd" xmlns:ax2183="http://util.java/xsd" xmlns:ax2185="http://dom.w3c.org/xsd" xmlns:ax2187="http://constants.schema.commons.ws.apache.org/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://dom.w3c.org/xsd"/>
      <xs:import namespace="http://constants.schema.commons.ws.apache.org/xsd"/>
      <xs:complexType abstract="true" name="XmlSchemaObject">
        <xs:sequence>
          <xs:element minOccurs="0" name="lineNumber" type="xs:int"/>
          <xs:element minOccurs="0" name="linePosition" type="xs:int"/>
          <xs:element minOccurs="0" name="metaInfoMap" nillable="true" type="ax2183:Map"/>
          <xs:element minOccurs="0" name="sourceURI" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="XmlSchemaAnnotated">
        <xs:complexContent>
          <xs:extension base="ax2182:XmlSchemaObject">
            <xs:sequence>
              <xs:element minOccurs="0" name="annotation" nillable="true" type="ax2182:XmlSchemaAnnotation"/>
              <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="unhandledAttributes" nillable="true" type="ax2184:Attr"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaAnnotation">
        <xs:complexContent>
          <xs:extension base="ax2182:XmlSchemaObject">
            <xs:sequence>
              <xs:element minOccurs="0" name="items" nillable="true" type="ax2182:XmlSchemaObjectCollection"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaObjectCollection">
        <xs:sequence>
          <xs:element minOccurs="0" name="count" type="xs:int"/>
          <xs:element minOccurs="0" name="iterator" nillable="true" type="ax2183:Iterator"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="XmlSchemaParticle">
        <xs:complexContent>
          <xs:extension base="ax2182:XmlSchemaAnnotated">
            <xs:sequence>
              <xs:element minOccurs="0" name="maxOccurs" type="xs:long"/>
              <xs:element minOccurs="0" name="minOccurs" type="xs:long"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaElement">
        <xs:complexContent>
          <xs:extension base="ax2182:XmlSchemaParticle">
            <xs:sequence>
              <xs:element minOccurs="0" name="QName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="abstract" type="xs:boolean"/>
              <xs:element minOccurs="0" name="block" nillable="true" type="ax2182:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="blockResolved" nillable="true" type="ax2182:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="constraints" nillable="true" type="ax2182:XmlSchemaObjectCollection"/>
              <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="elementType" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="final" nillable="true" type="ax2182:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="fixedValue" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="form" nillable="true" type="ax2182:XmlSchemaForm"/>
              <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="nillable" type="xs:boolean"/>
              <xs:element minOccurs="0" name="refName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="schemaType" nillable="true" type="ax2182:XmlSchemaType"/>
              <xs:element minOccurs="0" name="schemaTypeName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="substitutionGroup" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="type" nillable="true" type="ax2182:XmlSchemaType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaDerivationMethod">
        <xs:complexContent>
          <xs:extension base="ax2186:Enum">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="values" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaForm">
        <xs:complexContent>
          <xs:extension base="ax2186:Enum">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="values" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaType">
        <xs:complexContent>
          <xs:extension base="ax2182:XmlSchemaAnnotated">
            <xs:sequence>
              <xs:element minOccurs="0" name="QName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="baseSchemaType" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="baseSchemaTypeName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="dataType" nillable="true" type="ax2182:XmlSchemaDatatype"/>
              <xs:element minOccurs="0" name="deriveBy" nillable="true" type="ax2182:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="final" nillable="true" type="ax2182:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="finalResolved" nillable="true" type="ax2182:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="mixed" type="xs:boolean"/>
              <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="XmlSchemaDatatype">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="TargetResolver">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://lifecycle.attachments.axiom.apache.org/xsd">
      <xs:complexType abstract="true" name="LifecycleManager">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.core.carbon.wso2.org/xsd">
      <xs:complexType name="AuthenticationException">
        <xs:sequence>
          <xs:element minOccurs="0" name="uiErrorCode" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://soap.axiom.apache.org/xsd" xmlns:ax2193="http://om.axiom.apache.org/xsd" xmlns:ax2194="http://util.java/xsd">
      <xs:import namespace="http://om.axiom.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType abstract="true" name="SOAPEnvelope">
        <xs:sequence>
          <xs:element minOccurs="0" name="SOAPBodyFirstElementLocalName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SOAPBodyFirstElementNS" nillable="true" type="ax2193:OMNamespace"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="ax2191:SOAPBody"/>
          <xs:element minOccurs="0" name="header" nillable="true" type="ax2191:SOAPHeader"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="ax2191:SOAPVersion"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPBody">
        <xs:sequence>
          <xs:element minOccurs="0" name="fault" nillable="true" type="ax2191:SOAPFault"/>
          <xs:element minOccurs="0" name="firstElementLocalName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="firstElementNS" nillable="true" type="ax2193:OMNamespace"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFault">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="ax2191:SOAPFaultCode"/>
          <xs:element minOccurs="0" name="detail" nillable="true" type="ax2191:SOAPFaultDetail"/>
          <xs:element minOccurs="0" name="exception" nillable="true"/>
          <xs:element minOccurs="0" name="node" nillable="true" type="ax2191:SOAPFaultNode"/>
          <xs:element minOccurs="0" name="reason" nillable="true" type="ax2191:SOAPFaultReason"/>
          <xs:element minOccurs="0" name="role" nillable="true" type="ax2191:SOAPFaultRole"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultCode">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="allDetailEntries" nillable="true" type="ax2138:Iterator"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="nodeValue" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultReason">
        <xs:sequence>
          <xs:element minOccurs="0" name="allSoapTexts" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="firstSOAPText" nillable="true" type="ax2191:SOAPFaultText"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultText">
        <xs:sequence>
          <xs:element minOccurs="0" name="lang" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultRole">
        <xs:sequence>
          <xs:element minOccurs="0" name="roleValue" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPHeader">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPVersion">
        <xs:sequence>
          <xs:element minOccurs="0" name="encodingURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="envelopeURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultCodeQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="faultDetailQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="faultReasonQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="faultRoleQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="mustUnderstandFaultCode" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="nextRoleURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="receiverFaultCode" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="roleAttributeQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="senderFaultCode" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://attachments.axiom.apache.org/xsd" xmlns:ax2137="http://io.java/xsd" xmlns:ax2141="http://lifecycle.attachments.axiom.apache.org/xsd" xmlns:ax2139="http://util.java/xsd">
      <xs:import namespace="http://io.java/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://lifecycle.attachments.axiom.apache.org/xsd"/>
      <xs:complexType name="Attachments">
        <xs:sequence>
          <xs:element minOccurs="0" name="SOAPPartContentID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SOAPPartContentType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SOAPPartInputStream" nillable="true" type="ax2136:InputStream"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="allContentIDs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attachmentSpecType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="contentIDList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="contentIDSet" nillable="true" type="ax2138:Set"/>
          <xs:element minOccurs="0" name="contentLength" type="xs:long"/>
          <xs:element minOccurs="0" name="incomingAttachmentStreams" nillable="true" type="ax2135:IncomingAttachmentStreams"/>
          <xs:element minOccurs="0" name="incomingAttachmentsAsSingleStream" nillable="true" type="ax2136:InputStream"/>
          <xs:element minOccurs="0" name="lifecycleManager" nillable="true" type="ax2140:LifecycleManager"/>
          <xs:element minOccurs="0" name="map" nillable="true" type="ax2138:Map"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="IncomingAttachmentStreams">
        <xs:sequence>
          <xs:element minOccurs="0" name="nextStream" nillable="true" type="ax2135:IncomingAttachmentInputStream"/>
          <xs:element minOccurs="0" name="readyToGetNextStream" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IncomingAttachmentInputStream">
        <xs:complexContent>
          <xs:extension base="ax2136:InputStream">
            <xs:sequence>
              <xs:element minOccurs="0" name="contentId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="contentLocation" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="contentType" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="headers" nillable="true" type="ax2138:Map"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://transport.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="TransportListener">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="TransportSender">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dom.w3c.org/xsd">
      <xs:complexType abstract="true" name="Attr">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ownerElement" nillable="true" type="ax2184:Element"/>
          <xs:element minOccurs="0" name="schemaTypeInfo" nillable="true" type="ax2184:TypeInfo"/>
          <xs:element minOccurs="0" name="specified" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="schemaTypeInfo" nillable="true" type="ax2184:TypeInfo"/>
          <xs:element minOccurs="0" name="tagName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="TypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="typeNamespace" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://client.axis2.apache.org/xsd" xmlns:ax2201="http://addressing.axis2.apache.org/xsd" xmlns:ax2203="http://transport.axis2.apache.org/xsd" xmlns:ax2206="http://description.axis2.apache.org/xsd">
      <xs:import namespace="http://addressing.axis2.apache.org/xsd"/>
      <xs:import namespace="http://transport.axis2.apache.org/xsd"/>
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:complexType name="Options">
        <xs:sequence>
          <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="callTransportCleanup" type="xs:boolean"/>
          <xs:element minOccurs="0" name="exceptionToBeThrownOnSOAPFault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="faultTo" nillable="true" type="ax2201:EndpointReference"/>
          <xs:element minOccurs="0" name="from" nillable="true" type="ax2201:EndpointReference"/>
          <xs:element minOccurs="0" name="listener" nillable="true" type="ax2202:TransportListener"/>
          <xs:element minOccurs="0" name="logCorrelationIDString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="manageSession" type="xs:boolean"/>
          <xs:element minOccurs="0" name="messageId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parent" nillable="true" type="ax2200:Options"/>
          <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="relatesTo" nillable="true" type="ax2201:RelatesTo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="relationships" nillable="true" type="ax2201:RelatesTo"/>
          <xs:element minOccurs="0" name="replyTo" nillable="true" type="ax2201:EndpointReference"/>
          <xs:element minOccurs="0" name="soapVersionURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="timeOutInMilliSeconds" type="xs:long"/>
          <xs:element minOccurs="0" name="to" nillable="true" type="ax2201:EndpointReference"/>
          <xs:element minOccurs="0" name="transportIn" nillable="true" type="ax2206:TransportInDescription"/>
          <xs:element minOccurs="0" name="transportInProtocol" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="transportOut" nillable="true" type="ax2206:TransportOutDescription"/>
          <xs:element minOccurs="0" name="useSeparateListener" type="xs:boolean"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.java/xsd">
      <xs:complexType abstract="true" name="Set">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Map">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Iterator">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="LinkedList">
        <xs:sequence>
          <xs:element minOccurs="0" name="first" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="last" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LinkedHashMap">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://io.java/xsd">
      <xs:complexType abstract="true" name="InputStream">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://iwa.authenticator.identity.carbon.wso2.org" xmlns:ax2210="http://common.core.carbon.wso2.org/xsd" xmlns:ax2208="http://context.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://common.core.carbon.wso2.org/xsd"/>
      <xs:element name="canHandle">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="msgContext" nillable="true" type="ax2208:MessageContext"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="canHandleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IWAAuthenticatorAuthenticationException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="AuthenticationException" nillable="true" type="ax2210:AuthenticationException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="login">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="windowsLoggedInUser" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="remoteAddress" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="loginResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://management.clustering.axis2.apache.org/xsd" xmlns:ax2153="http://context.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="NodeManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2153:ConfigurationContext"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://description.axis2.apache.org/xsd" xmlns:ax2205="http://transport.axis2.apache.org/xsd" xmlns:ax2181="http://neethi.apache.org/xsd" xmlns:ax2172="http://engine.axis2.apache.org/xsd" xmlns:ax2173="http://util.java/xsd" xmlns:ax2174="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2175="http://net.java/xsd" xmlns:ax2188="http://schema.commons.ws.apache.org/xsd" xmlns:ax2178="http://java2wsdl.description.axis2.apache.org/xsd">
      <xs:import namespace="http://engine.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://util.deployment.axis2.apache.org/xsd"/>
      <xs:import namespace="http://net.java/xsd"/>
      <xs:import namespace="http://java2wsdl.description.axis2.apache.org/xsd"/>
      <xs:import namespace="http://neethi.apache.org/xsd"/>
      <xs:import namespace="http://schema.commons.ws.apache.org/xsd"/>
      <xs:import namespace="http://transport.axis2.apache.org/xsd"/>
      <xs:complexType name="AxisMessage">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisOperation" nillable="true" type="ax2143:AxisOperation"/>
          <xs:element minOccurs="0" name="direction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="effectivePolicy" nillable="true" type="ax2181:Policy"/>
          <xs:element minOccurs="0" name="elementQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extensibilityAttributes" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="messageFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="messagePartName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="modulerefs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="partName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyUpdated" type="xs:boolean"/>
          <xs:element minOccurs="0" name="schemaElement" nillable="true" type="ax2182:XmlSchemaElement"/>
          <xs:element minOccurs="0" name="soapHeaders" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="wrapped" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="AxisOperation">
        <xs:sequence>
          <xs:element minOccurs="0" name="WSAMappingList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="axisService" nillable="true" type="ax2143:AxisService"/>
          <xs:element minOccurs="0" name="axisSpecificMEPConstant" type="xs:int"/>
          <xs:element minOccurs="0" name="controlOperation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="faultAction" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultActionNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultMessages" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inputAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="messageExchangePattern" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="messageReceiver" nillable="true" type="ax2144:MessageReceiver"/>
          <xs:element minOccurs="0" name="messages" nillable="true" type="ax2138:Iterator"/>
          <xs:element minOccurs="0" name="moduleRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outputAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="phasesInFaultFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesOutFaultFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesOutFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="remainingPhasesInFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="soapAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="style" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsamappingList" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AxisService">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="EPRs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="WSAddressingFlag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="axisServiceGroup" nillable="true" type="ax2143:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="classLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="clientSide" type="xs:boolean"/>
          <xs:element minOccurs="0" name="controlOperations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="customSchemaNamePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="customSchemaNameSuffix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="customWsdl" type="xs:boolean"/>
          <xs:element minOccurs="0" name="elementFormDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableAllTransports" type="xs:boolean"/>
          <xs:element minOccurs="0" name="endpointName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="endpointURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="endpoints" nillable="true" type="ax2138:Map"/>
          <xs:element minOccurs="0" name="excludeInfo" nillable="true" type="ax2161:ExcludeInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="exposedTransports" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="ax2164:URL"/>
          <xs:element minOccurs="0" name="importedNamespaces" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="lastUpdate" type="xs:long"/>
          <xs:element minOccurs="0" name="lastupdate" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageElementQNameToOperationMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="modifyUserWSDLPortAddress" type="xs:boolean"/>
          <xs:element minOccurs="0" name="modules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nameSpacesMap" nillable="true" type="ax2138:Map"/>
          <xs:element minOccurs="0" name="namespaceMap" nillable="true" type="ax2138:Map"/>
          <xs:element minOccurs="0" name="objectSupplier" nillable="true" type="ax2144:ObjectSupplier"/>
          <xs:element minOccurs="0" name="operations" nillable="true" type="ax2138:Iterator"/>
          <xs:element minOccurs="0" name="operationsNameList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="p2nMap" nillable="true" type="ax2138:Map"/>
          <xs:element minOccurs="0" name="parent" nillable="true" type="ax2143:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="portTypeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="publishedOperations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="schema" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="schemaLocationsAdjusted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="schemaMappingTable" nillable="true" type="ax2138:Map"/>
          <xs:element minOccurs="0" name="schemaTargetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schemaTargetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schematargetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schematargetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceLifeCycle" nillable="true" type="ax2144:ServiceLifeCycle"/>
          <xs:element minOccurs="0" name="setEndpointsToAllUsedBindings" type="xs:boolean"/>
          <xs:element minOccurs="0" name="soapNsUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="typeTable" nillable="true" type="ax2176:TypeTable"/>
          <xs:element minOccurs="0" name="useDefaultChains" type="xs:boolean"/>
          <xs:element minOccurs="0" name="useUserWSDL" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wsdlFound" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AxisServiceGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisDescription" nillable="true" type="ax2144:AxisConfiguration"/>
          <xs:element minOccurs="0" name="foundWebResources" type="xs:boolean"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="moduleRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroupClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="services" nillable="true" type="ax2138:Iterator"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransportInDescription">
        <xs:sequence>
          <xs:element minOccurs="0" name="faultFlow" nillable="true" type="ax2143:Flow"/>
          <xs:element minOccurs="0" name="faultPhase" nillable="true" type="ax2144:Phase"/>
          <xs:element minOccurs="0" name="inFlow" nillable="true" type="ax2143:Flow"/>
          <xs:element minOccurs="0" name="inPhase" nillable="true" type="ax2144:Phase"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parameters" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="receiver" nillable="true" type="ax2202:TransportListener"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Flow">
        <xs:sequence>
          <xs:element minOccurs="0" name="handlerCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="HandlerDescription">
        <xs:sequence>
          <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="handler" nillable="true" type="ax2144:Handler"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parameters" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="parent" nillable="true" type="ax2143:ParameterInclude"/>
          <xs:element minOccurs="0" name="rules" nillable="true" type="ax2143:PhaseRule"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="ParameterInclude">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PhaseRule">
        <xs:sequence>
          <xs:element minOccurs="0" name="after" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="before" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="phaseFirst" type="xs:boolean"/>
          <xs:element minOccurs="0" name="phaseLast" type="xs:boolean"/>
          <xs:element minOccurs="0" name="phaseName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransportOutDescription">
        <xs:sequence>
          <xs:element minOccurs="0" name="faultFlow" nillable="true" type="ax2143:Flow"/>
          <xs:element minOccurs="0" name="faultPhase" nillable="true" type="ax2144:Phase"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="outFlow" nillable="true" type="ax2143:Flow"/>
          <xs:element minOccurs="0" name="outPhase" nillable="true" type="ax2144:Phase"/>
          <xs:element minOccurs="0" name="parameters" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="sender" nillable="true" type="ax2202:TransportSender"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://om.axiom.apache.org/xsd">
      <xs:complexType abstract="true" name="OMNamespace">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="namespaceURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="prefix" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://context.axis2.apache.org/xsd" xmlns:ax2146="http://engine.axis2.apache.org/xsd" xmlns:ax2149="http://threadpool.util.axis2.apache.org/xsd" xmlns:ax2190="http://neethi.apache.org/xsd" xmlns:ax2207="http://client.axis2.apache.org/xsd" xmlns:ax2195="http://soap.axiom.apache.org/xsd" xmlns:ax2196="http://util.java/xsd" xmlns:ax2142="http://attachments.axiom.apache.org/xsd" xmlns:ax2199="http://addressing.axis2.apache.org/xsd" xmlns:ax2189="http://description.axis2.apache.org/xsd">
      <xs:import namespace="http://attachments.axiom.apache.org/xsd"/>
      <xs:import namespace="http://engine.axis2.apache.org/xsd"/>
      <xs:import namespace="http://threadpool.util.axis2.apache.org/xsd"/>
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:import namespace="http://neethi.apache.org/xsd"/>
      <xs:import namespace="http://soap.axiom.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://addressing.axis2.apache.org/xsd"/>
      <xs:import namespace="http://client.axis2.apache.org/xsd"/>
      <xs:complexType name="MessageContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="FLOW" type="xs:int"/>
          <xs:element minOccurs="0" name="SOAP11" type="xs:boolean"/>
          <xs:element minOccurs="0" name="WSAAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="WSAMessageId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attachmentMap" nillable="true" type="ax2142:Attachments"/>
          <xs:element minOccurs="0" name="axisMessage" nillable="true" type="ax2143:AxisMessage"/>
          <xs:element minOccurs="0" name="axisOperation" nillable="true" type="ax2143:AxisOperation"/>
          <xs:element minOccurs="0" name="axisService" nillable="true" type="ax2143:AxisService"/>
          <xs:element minOccurs="0" name="axisServiceGroup" nillable="true" type="ax2143:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="currentHandlerIndex" type="xs:int"/>
          <xs:element minOccurs="0" name="currentPhaseIndex" type="xs:int"/>
          <xs:element minOccurs="0" name="doingMTOM" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doingREST" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doingSwA" type="xs:boolean"/>
          <xs:element minOccurs="0" name="effectivePolicy" nillable="true" type="ax2179:Policy"/>
          <xs:element minOccurs="0" name="envelope" nillable="true" type="ax2195:SOAPEnvelope"/>
          <xs:element minOccurs="0" name="executedPhases" nillable="true" type="ax2138:Iterator"/>
          <xs:element minOccurs="0" name="executedPhasesExplicit" nillable="true" type="ax2138:LinkedList"/>
          <xs:element minOccurs="0" name="executionChain" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="failureReason" nillable="true"/>
          <xs:element minOccurs="0" name="fault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="faultTo" nillable="true" type="ax2197:EndpointReference"/>
          <xs:element minOccurs="0" name="from" nillable="true" type="ax2197:EndpointReference"/>
          <xs:element minOccurs="0" name="headerPresent" type="xs:boolean"/>
          <xs:element minOccurs="0" name="inboundContentLength" type="xs:long"/>
          <xs:element minOccurs="0" name="incomingTransportName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="isSOAP11Explicit" type="xs:boolean"/>
          <xs:element minOccurs="0" name="logCorrelationID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logIDString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="messageID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="newThreadRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="operationContext" nillable="true" type="ax2134:OperationContext"/>
          <xs:element minOccurs="0" name="options" nillable="true" type="ax2207:Options"/>
          <xs:element minOccurs="0" name="optionsExplicit" nillable="true" type="ax2207:Options"/>
          <xs:element minOccurs="0" name="outputWritten" type="xs:boolean"/>
          <xs:element minOccurs="0" name="paused" type="xs:boolean"/>
          <xs:element minOccurs="0" name="processingFault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="properties" nillable="true" type="ax2138:Map"/>
          <xs:element minOccurs="0" name="relatesTo" nillable="true" type="ax2197:RelatesTo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="relationships" nillable="true" type="ax2197:RelatesTo"/>
          <xs:element minOccurs="0" name="replyTo" nillable="true" type="ax2197:EndpointReference"/>
          <xs:element minOccurs="0" name="responseWritten" type="xs:boolean"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="selfManagedDataMapExplicit" nillable="true" type="ax2138:LinkedHashMap"/>
          <xs:element minOccurs="0" name="serverSide" type="xs:boolean"/>
          <xs:element minOccurs="0" name="serviceContext" nillable="true" type="ax2134:ServiceContext"/>
          <xs:element minOccurs="0" name="serviceContextID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupContext" nillable="true" type="ax2134:ServiceGroupContext"/>
          <xs:element minOccurs="0" name="serviceGroupContextId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sessionContext" nillable="true" type="ax2134:SessionContext"/>
          <xs:element minOccurs="0" name="soapAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="to" nillable="true" type="ax2197:EndpointReference"/>
          <xs:element minOccurs="0" name="transportIn" nillable="true" type="ax2143:TransportInDescription"/>
          <xs:element minOccurs="0" name="transportOut" nillable="true" type="ax2143:TransportOutDescription"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConfigurationContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="anyOperationContextRegistered" type="xs:boolean"/>
          <xs:element minOccurs="0" name="axisConfiguration" nillable="true" type="ax2146:AxisConfiguration"/>
          <xs:element minOccurs="0" name="contextRoot" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="listenerManager" nillable="true" type="ax2146:ListenerManager"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceContextPath" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceGroupContextIDs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupContextTimeoutInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="serviceGroupContextTimoutInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="serviceGroupContexts" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="servicePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="threadPool" nillable="true" type="ax2148:ThreadFactory"/>
          <xs:element minOccurs="0" name="transportManager" nillable="true" type="ax2146:ListenerManager"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OperationContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisOperation" nillable="true" type="ax2143:AxisOperation"/>
          <xs:element minOccurs="0" name="complete" type="xs:boolean"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logCorrelationIDString" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageContexts" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceContext" nillable="true" type="ax2134:ServiceContext"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisService" nillable="true" type="ax2143:AxisService"/>
          <xs:element minOccurs="0" name="cachingOperationContext" type="xs:boolean"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="groupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastOperationContext" nillable="true" type="ax2134:OperationContext"/>
          <xs:element minOccurs="0" name="logCorrelationIDString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="myEPR" nillable="true" type="ax2197:EndpointReference"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceGroupContext" nillable="true" type="ax2134:ServiceGroupContext"/>
          <xs:element minOccurs="0" name="targetEPR" nillable="true" type="ax2197:EndpointReference"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceGroupContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" nillable="true" type="ax2143:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceContexts" nillable="true" type="ax2138:Iterator"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SessionContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="cookieID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastTouchedTime" type="xs:long"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceGroupContext" nillable="true" type="ax2138:Iterator"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2162="http://description.axis2.apache.org/xsd">
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:complexType name="PhasesInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="INPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="IN_FaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="OUTPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="OUT_FaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalInFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalInflow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalOutPhaseList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationInFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationInPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationOutFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationOutPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationPhases" nillable="true" type="ax2162:AxisOperation"/>
          <xs:element minOccurs="0" name="outFaultPhaseList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExcludeInfo">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://net.java/xsd">
      <xs:complexType name="URL">
        <xs:sequence>
          <xs:element minOccurs="0" name="authority" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="content" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="defaultPort" type="xs:int"/>
          <xs:element minOccurs="0" name="file" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="host" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="port" type="xs:int"/>
          <xs:element minOccurs="0" name="protocol" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="query" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ref" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userInfo" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://addressing.axis2.apache.org/xsd" xmlns:ax2198="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType name="EndpointReference">
        <xs:sequence>
          <xs:element minOccurs="0" name="WSAddressingAnonymous" type="xs:boolean"/>
          <xs:element minOccurs="0" name="address" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="addressAttributes" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allReferenceParameters" nillable="true" type="ax2138:Map"/>
          <xs:element minOccurs="0" name="attributes" nillable="true" type="xs:anyType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="extensibleElements" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="logCorrelationIDString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="metaData" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadataAttributes" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="referenceParameters" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RelatesTo">
        <xs:sequence>
          <xs:element minOccurs="0" name="extensibilityAttributes" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="relationshipType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://securevault.wso2.org/xsd">
      <xs:complexType name="SecretResolver">
        <xs:sequence>
          <xs:element minOccurs="0" name="initialized" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://engine.axis2.apache.org/xsd" xmlns:ax2147="http://context.axis2.apache.org/xsd" xmlns:ax2169="http://util.axis2.apache.org/xsd" xmlns:ax2159="http://clustering.axis2.apache.org/xsd" xmlns:ax2204="http://description.axis2.apache.org/xsd" xmlns:ax2160="http://util.java/xsd" xmlns:ax2171="http://transaction.axis2.apache.org/xsd" xmlns:ax2163="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2165="http://net.java/xsd" xmlns:ax2167="http://securevault.wso2.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://clustering.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://util.deployment.axis2.apache.org/xsd"/>
      <xs:import namespace="http://net.java/xsd"/>
      <xs:import namespace="http://securevault.wso2.org/xsd"/>
      <xs:import namespace="http://util.axis2.apache.org/xsd"/>
      <xs:import namespace="http://transaction.axis2.apache.org/xsd"/>
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:complexType name="AxisConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="childFirstClassLoading" type="xs:boolean"/>
          <xs:element minOccurs="0" name="clusteringAgent" nillable="true" type="ax2145:ClusteringAgent"/>
          <xs:element minOccurs="0" name="configurator" nillable="true" type="ax2144:AxisConfigurator"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultyModules" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultyServices" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultyServicesDuetoModules" nillable="true" type="ax2160:Map"/>
          <xs:element minOccurs="0" name="globalModules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalOutPhase" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFaultFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inPhasesUptoAndIncludingPostDispatch" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="localPolicyAssertions" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="moduleClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="modules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="observersList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFaultFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesInfo" nillable="true" type="ax2161:PhasesInfo"/>
          <xs:element minOccurs="0" name="repository" nillable="true" type="ax2164:URL"/>
          <xs:element minOccurs="0" name="secretResolver" nillable="true" type="ax2166:SecretResolver"/>
          <xs:element minOccurs="0" name="serviceClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroups" nillable="true" type="ax2160:Iterator"/>
          <xs:element minOccurs="0" name="services" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="start" type="xs:boolean"/>
          <xs:element minOccurs="0" name="systemClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="targetResolverChain" nillable="true" type="ax2168:TargetResolver"/>
          <xs:element minOccurs="0" name="transactionConfig" nillable="true" type="ax2171:TransactionConfiguration"/>
          <xs:element minOccurs="0" name="transactionConfiguration" nillable="true" type="ax2171:TransactionConfiguration"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="transportsIn" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="transportsOut" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ListenerManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configctx" nillable="true" type="ax2147:ConfigurationContext"/>
          <xs:element minOccurs="0" name="shutdownHookRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="stopped" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="AxisConfigurator">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisConfiguration" nillable="true" type="ax2144:AxisConfiguration"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="ObjectSupplier">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="ServiceLifeCycle">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="MessageReceiver">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Phase">
        <xs:sequence>
          <xs:element minOccurs="0" name="handlerCount" type="xs:int"/>
          <xs:element minOccurs="0" name="handlerDesc" nillable="true" type="ax2204:HandlerDescription"/>
          <xs:element minOccurs="0" name="handlers" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="phaseFirst" nillable="true" type="ax2144:Handler"/>
          <xs:element minOccurs="0" name="phaseLast" nillable="true" type="ax2144:Handler"/>
          <xs:element minOccurs="0" name="phaseName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Handler">
        <xs:sequence>
          <xs:element minOccurs="0" name="handlerDesc" nillable="true" type="ax2204:HandlerDescription"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2157="http://util.java/xsd" xmlns:ax2156="http://context.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType abstract="true" name="StateManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2134:ConfigurationContext"/>
          <xs:element minOccurs="0" name="replicationExcludePatterns" nillable="true" type="ax2157:Map"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://clustering.axis2.apache.org/xsd" xmlns:ax2158="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2150="http://context.axis2.apache.org/xsd" xmlns:ax2151="http://util.java/xsd" xmlns:ax2154="http://management.clustering.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://management.clustering.axis2.apache.org/xsd"/>
      <xs:import namespace="http://state.clustering.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="ClusteringAgent">
        <xs:sequence>
          <xs:element minOccurs="0" name="aliveMemberCount" type="xs:int"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2150:ConfigurationContext"/>
          <xs:element minOccurs="0" name="coordinator" type="xs:boolean"/>
          <xs:element minOccurs="0" name="domains" nillable="true" type="ax2138:Set"/>
          <xs:element minOccurs="0" name="members" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="nodeManager" nillable="true" type="ax2152:NodeManager"/>
          <xs:element minOccurs="0" name="stateManager" nillable="true" type="ax2158:StateManager"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:ax2177="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType name="TypeTable">
        <xs:sequence>
          <xs:element minOccurs="0" name="complexSchemaMap" nillable="true" type="ax2138:Map"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="canHandleRequest">
    <wsdl:part name="parameters" element="ns:canHandle"/>
  </wsdl:message>
  <wsdl:message name="canHandleResponse">
    <wsdl:part name="parameters" element="ns:canHandleResponse"/>
  </wsdl:message>
  <wsdl:message name="loginRequest">
    <wsdl:part name="parameters" element="ns:login"/>
  </wsdl:message>
  <wsdl:message name="loginResponse">
    <wsdl:part name="parameters" element="ns:loginResponse"/>
  </wsdl:message>
  <wsdl:message name="IWAAuthenticatorAuthenticationException">
    <wsdl:part name="parameters" element="ns:IWAAuthenticatorAuthenticationException"/>
  </wsdl:message>
  <wsdl:portType name="IWAAuthenticatorPortType" wsp:PolicyURIs="#75eda0ae50db9459e34a0c3daf8fd1b6f28930ceedf1f41a #SigOnly" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy">
    <wsdl:operation name="canHandle">
      <wsdl:input message="ns:canHandleRequest" wsaw:Action="urn:canHandle"/>
      <wsdl:output message="ns:canHandleResponse" wsaw:Action="urn:canHandleResponse"/>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdl:input message="ns:loginRequest" wsaw:Action="urn:login"/>
      <wsdl:output message="ns:loginResponse" wsaw:Action="urn:loginResponse"/>
      <wsdl:fault message="ns:IWAAuthenticatorAuthenticationException" name="IWAAuthenticatorAuthenticationException" wsaw:Action="urn:loginIWAAuthenticatorAuthenticationException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IWAAuthenticatorSoap11Binding" type="ns:IWAAuthenticatorPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="canHandle">
      <soap:operation soapAction="urn:canHandle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap:operation soapAction="urn:login" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IWAAuthenticatorAuthenticationException">
        <soap:fault use="literal" name="IWAAuthenticatorAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IWAAuthenticatorSoap12Binding" type="ns:IWAAuthenticatorPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="canHandle">
      <soap12:operation soapAction="urn:canHandle" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap12:operation soapAction="urn:login" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IWAAuthenticatorAuthenticationException">
        <soap12:fault use="literal" name="IWAAuthenticatorAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IWAAuthenticatorHttpBinding" type="ns:IWAAuthenticatorPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="canHandle">
      <http:operation location="canHandle"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <http:operation location="login"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IWAAuthenticator">
    <wsdl:port name="IWAAuthenticatorHttpsSoap11Endpoint" binding="ns:IWAAuthenticatorSoap11Binding">
      <soap:address location="https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IWAAuthenticatorHttpsSoap12Endpoint" binding="ns:IWAAuthenticatorSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IWAAuthenticatorHttpsEndpoint" binding="ns:IWAAuthenticatorHttpBinding">
      <http:address location="https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="578de337-ce21-4737-81a3-f20f9cc42776" isOneWay="false" action="urn:canHandle" name="canHandle" bindingOperationName="canHandle" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="341df888-9ca2-4239-9ab6-9bac500dbfed" isOneWay="false" action="urn:login" name="login" bindingOperationName="login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e959aeeb-9be2-4045-a9c2-291c77176466" wsaVersion="NONE" name="JaggeryAppAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.app.jaggery.jaggeryjs.org}JaggeryAppAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/JaggeryAppAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="347c6e60-e1db-4edd-8b90-a62eee62bc87" isOneWay="false" action="urn:uploadWebapp" name="uploadWebapp" bindingOperationName="uploadWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="0d687562-bbc1-4512-9b32-5f138ed02a82" wsaVersion="NONE" name="JaggeryAppAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.app.jaggery.jaggeryjs.org}JaggeryAppAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/JaggeryAppAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/JaggeryAppAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/JaggeryAppAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.app.jaggery.jaggeryjs.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.app.jaggery.jaggeryjs.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax21="http://mgt.webapp.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>JaggeryAppAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax22="http://mgt.webapp.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://mgt.webapp.carbon.wso2.org/xsd"/>
      <xs:element name="uploadWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappUploadDataList" nillable="true" type="ax22:WebappUploadData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadWebappResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.webapp.carbon.wso2.org/xsd">
      <xs:complexType name="WebappUploadData">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadWebappRequest">
    <wsdl:part name="parameters" element="ns1:uploadWebapp"/>
  </wsdl:message>
  <wsdl:message name="uploadWebappResponse">
    <wsdl:part name="parameters" element="ns1:uploadWebappResponse"/>
  </wsdl:message>
  <wsdl:portType name="JaggeryAppAdminPortType">
    <wsdl:operation name="uploadWebapp">
      <wsdl:input message="tns:uploadWebappRequest" wsaw:Action="urn:uploadWebapp"/>
      <wsdl:output message="tns:uploadWebappResponse" wsaw:Action="urn:uploadWebappResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="JaggeryAppAdminSoap11Binding" type="tns:JaggeryAppAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadWebapp">
      <soap:operation soapAction="urn:uploadWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="JaggeryAppAdminSoap12Binding" type="tns:JaggeryAppAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadWebapp">
      <soap12:operation soapAction="urn:uploadWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="JaggeryAppAdminHttpBinding" type="tns:JaggeryAppAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadWebapp">
      <http:operation location="uploadWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="JaggeryAppAdmin">
    <wsdl:port name="JaggeryAppAdminHttpsSoap11Endpoint" binding="tns:JaggeryAppAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="JaggeryAppAdminHttpsSoap12Endpoint" binding="tns:JaggeryAppAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="JaggeryAppAdminHttpsEndpoint" binding="tns:JaggeryAppAdminHttpBinding">
      <http:address location="https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="b9d512e4-29f7-4763-a09b-d9eb3547efae" isOneWay="false" action="urn:uploadWebapp" name="uploadWebapp" bindingOperationName="uploadWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="53615fee-b195-401e-8016-cb1ec4dab98f" wsaVersion="NONE" name="KeyStoreAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.keystore.security.carbon.wso2.org}KeyStoreAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/KeyStoreAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="7238f0c4-5adb-45de-9d1b-7df81bb98c32" isOneWay="false" action="urn:addKeyStore" name="addKeyStore" bindingOperationName="addKeyStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8163b064-2de6-490b-b08c-a2eb079695db" isOneWay="false" action="urn:addTrustStore" name="addTrustStore" bindingOperationName="addTrustStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3762c7b5-dc1a-4302-8a8b-f0d8066a3912" isOneWay="false" action="urn:deleteStore" name="deleteStore" bindingOperationName="deleteStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="adc1805e-eb45-4cd2-be21-687bf07494e8" isOneWay="false" action="urn:getKeystoreInfo" name="getKeystoreInfo" bindingOperationName="getKeystoreInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b617bbab-dbf2-40b1-9431-6c22882f7c98" isOneWay="false" action="urn:getKeyStores" name="getKeyStores" bindingOperationName="getKeyStores" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="73523e0e-0549-424a-8afb-7ee8afff7a3a" isOneWay="false" action="urn:getPaginatedKeystoreInfo" name="getPaginatedKeystoreInfo" bindingOperationName="getPaginatedKeystoreInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="04b827c6-3df2-47dc-a708-4079710898ea" isOneWay="false" action="urn:getStoreEntries" name="getStoreEntries" bindingOperationName="getStoreEntries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3e9e747e-8335-432c-bd2d-d574d9cdbfd2" isOneWay="false" action="urn:importCertToStore" name="importCertToStore" bindingOperationName="importCertToStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="04640a2c-5329-4ad3-8d14-d9d82936c679" isOneWay="false" action="urn:removeCertFromStore" name="removeCertFromStore" bindingOperationName="removeCertFromStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d475186f-76ae-4ef6-bafb-6739ccdc6daa" wsaVersion="NONE" name="KeyStoreAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.keystore.security.carbon.wso2.org}KeyStoreAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/KeyStoreAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/KeyStoreAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/KeyStoreAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.keystore.security.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2553="http://service.keystore.security.carbon.wso2.org/xsd" xmlns:ns="http://service.keystore.security.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2549="http://security.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2550="http://base.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>KeyStoreAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.keystore.security.carbon.wso2.org" xmlns:ax2554="http://service.keystore.security.carbon.wso2.org/xsd" xmlns:ax2552="http://security.carbon.wso2.org/xsd">
      <xs:import namespace="http://security.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://service.keystore.security.carbon.wso2.org/xsd"/>
      <xs:element name="KeyStoreAdminServiceSecurityConfigException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SecurityConfigException" nillable="true" type="ax2549:SecurityConfigException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStoreEntries">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStoreEntriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedKeystoreInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedKeystoreInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2553:PaginatedKeyStoreData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importCertToStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileData" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTrustStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fileData" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="filename" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getKeystoreInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getKeystoreInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2553:KeyStoreData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeCertFromStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addKeyStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fileData" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="filename" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pvtkeyPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getKeyStores">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getKeyStoresResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2553:KeyStoreData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.keystore.security.carbon.wso2.org/xsd">
      <xs:complexType name="PaginatedKeyStoreData">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="ax2553:CertData"/>
          <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="keyStoreType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="keyValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="paginatedCertData" nillable="true" type="ax2553:PaginatedCertData"/>
          <xs:element minOccurs="0" name="privateStore" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pubKeyFilePath" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CertData">
        <xs:sequence>
          <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="issuerDN" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notAfter" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notBefore" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="publicKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serialNumber" nillable="true" type="xs:integer"/>
          <xs:element minOccurs="0" name="subjectDN" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaginatedCertData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="certDataSet" nillable="true" type="ax2553:CertData"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="KeyStoreData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="certs" nillable="true" type="ax2553:CertData"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="ax2553:CertData"/>
          <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="keyStoreType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="keyValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="privateStore" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pubKeyFilePath" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://security.carbon.wso2.org/xsd" xmlns:ax2551="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="SecurityConfigException">
        <xs:complexContent>
          <xs:extension base="ax2550:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="addKeyStoreRequest">
    <wsdl:part name="parameters" element="ns:addKeyStore"/>
  </wsdl:message>
  <wsdl:message name="KeyStoreAdminServiceSecurityConfigException">
    <wsdl:part name="parameters" element="ns:KeyStoreAdminServiceSecurityConfigException"/>
  </wsdl:message>
  <wsdl:message name="getStoreEntriesRequest">
    <wsdl:part name="parameters" element="ns:getStoreEntries"/>
  </wsdl:message>
  <wsdl:message name="getStoreEntriesResponse">
    <wsdl:part name="parameters" element="ns:getStoreEntriesResponse"/>
  </wsdl:message>
  <wsdl:message name="getKeyStoresRequest">
    <wsdl:part name="parameters" element="ns:getKeyStores"/>
  </wsdl:message>
  <wsdl:message name="getKeyStoresResponse">
    <wsdl:part name="parameters" element="ns:getKeyStoresResponse"/>
  </wsdl:message>
  <wsdl:message name="removeCertFromStoreRequest">
    <wsdl:part name="parameters" element="ns:removeCertFromStore"/>
  </wsdl:message>
  <wsdl:message name="importCertToStoreRequest">
    <wsdl:part name="parameters" element="ns:importCertToStore"/>
  </wsdl:message>
  <wsdl:message name="addTrustStoreRequest">
    <wsdl:part name="parameters" element="ns:addTrustStore"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedKeystoreInfoRequest">
    <wsdl:part name="parameters" element="ns:getPaginatedKeystoreInfo"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedKeystoreInfoResponse">
    <wsdl:part name="parameters" element="ns:getPaginatedKeystoreInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getKeystoreInfoRequest">
    <wsdl:part name="parameters" element="ns:getKeystoreInfo"/>
  </wsdl:message>
  <wsdl:message name="getKeystoreInfoResponse">
    <wsdl:part name="parameters" element="ns:getKeystoreInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteStoreRequest">
    <wsdl:part name="parameters" element="ns:deleteStore"/>
  </wsdl:message>
  <wsdl:portType name="KeyStoreAdminServicePortType">
    <wsdl:operation name="addKeyStore">
      <wsdl:input message="ns:addKeyStoreRequest" wsaw:Action="urn:addKeyStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:addKeyStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getStoreEntries">
      <wsdl:input message="ns:getStoreEntriesRequest" wsaw:Action="urn:getStoreEntries"/>
      <wsdl:output message="ns:getStoreEntriesResponse" wsaw:Action="urn:getStoreEntriesResponse"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:getStoreEntriesKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getKeyStores">
      <wsdl:input message="ns:getKeyStoresRequest" wsaw:Action="urn:getKeyStores"/>
      <wsdl:output message="ns:getKeyStoresResponse" wsaw:Action="urn:getKeyStoresResponse"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:getKeyStoresKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="removeCertFromStore">
      <wsdl:input message="ns:removeCertFromStoreRequest" wsaw:Action="urn:removeCertFromStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:removeCertFromStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="importCertToStore">
      <wsdl:input message="ns:importCertToStoreRequest" wsaw:Action="urn:importCertToStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:importCertToStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="addTrustStore">
      <wsdl:input message="ns:addTrustStoreRequest" wsaw:Action="urn:addTrustStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:addTrustStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedKeystoreInfo">
      <wsdl:input message="ns:getPaginatedKeystoreInfoRequest" wsaw:Action="urn:getPaginatedKeystoreInfo"/>
      <wsdl:output message="ns:getPaginatedKeystoreInfoResponse" wsaw:Action="urn:getPaginatedKeystoreInfoResponse"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:getPaginatedKeystoreInfoKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getKeystoreInfo">
      <wsdl:input message="ns:getKeystoreInfoRequest" wsaw:Action="urn:getKeystoreInfo"/>
      <wsdl:output message="ns:getKeystoreInfoResponse" wsaw:Action="urn:getKeystoreInfoResponse"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:getKeystoreInfoKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteStore">
      <wsdl:input message="ns:deleteStoreRequest" wsaw:Action="urn:deleteStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:deleteStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="KeyStoreAdminServiceSoap11Binding" type="ns:KeyStoreAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="addKeyStore">
      <soap:operation soapAction="urn:addKeyStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStoreEntries">
      <soap:operation soapAction="urn:getStoreEntries" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKeyStores">
      <soap:operation soapAction="urn:getKeyStores" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCertFromStore">
      <soap:operation soapAction="urn:removeCertFromStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importCertToStore">
      <soap:operation soapAction="urn:importCertToStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTrustStore">
      <soap:operation soapAction="urn:addTrustStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedKeystoreInfo">
      <soap:operation soapAction="urn:getPaginatedKeystoreInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKeystoreInfo">
      <soap:operation soapAction="urn:getKeystoreInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteStore">
      <soap:operation soapAction="urn:deleteStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="KeyStoreAdminServiceSoap12Binding" type="ns:KeyStoreAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="addKeyStore">
      <soap12:operation soapAction="urn:addKeyStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStoreEntries">
      <soap12:operation soapAction="urn:getStoreEntries" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKeyStores">
      <soap12:operation soapAction="urn:getKeyStores" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCertFromStore">
      <soap12:operation soapAction="urn:removeCertFromStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importCertToStore">
      <soap12:operation soapAction="urn:importCertToStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTrustStore">
      <soap12:operation soapAction="urn:addTrustStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedKeystoreInfo">
      <soap12:operation soapAction="urn:getPaginatedKeystoreInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKeystoreInfo">
      <soap12:operation soapAction="urn:getKeystoreInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteStore">
      <soap12:operation soapAction="urn:deleteStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="KeyStoreAdminServiceHttpBinding" type="ns:KeyStoreAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="addKeyStore">
      <http:operation location="addKeyStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getStoreEntries">
      <http:operation location="getStoreEntries"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeyStores">
      <http:operation location="getKeyStores"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeCertFromStore">
      <http:operation location="removeCertFromStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="importCertToStore">
      <http:operation location="importCertToStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addTrustStore">
      <http:operation location="addTrustStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedKeystoreInfo">
      <http:operation location="getPaginatedKeystoreInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeystoreInfo">
      <http:operation location="getKeystoreInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteStore">
      <http:operation location="deleteStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="KeyStoreAdminService">
    <wsdl:port name="KeyStoreAdminServiceHttpsSoap11Endpoint" binding="ns:KeyStoreAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="KeyStoreAdminServiceHttpsSoap12Endpoint" binding="ns:KeyStoreAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="KeyStoreAdminServiceHttpsEndpoint" binding="ns:KeyStoreAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="d94ade67-15be-4699-9c5e-2d24249aee2b" isOneWay="false" action="urn:addKeyStore" name="addKeyStore" bindingOperationName="addKeyStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2d65ae3f-2521-4623-a96a-aeb17fae9abf" isOneWay="false" action="urn:addTrustStore" name="addTrustStore" bindingOperationName="addTrustStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1300a14c-766a-4bac-9a2b-220172ce49f7" isOneWay="false" action="urn:deleteStore" name="deleteStore" bindingOperationName="deleteStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7a54b66e-5892-47fc-b5ad-025e581b13d3" isOneWay="false" action="urn:getKeystoreInfo" name="getKeystoreInfo" bindingOperationName="getKeystoreInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="80647742-4e79-4866-9703-48bcc2b1bb5e" isOneWay="false" action="urn:getKeyStores" name="getKeyStores" bindingOperationName="getKeyStores" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="63e5bb8f-018c-4c3c-9864-45ecc6ec3176" isOneWay="false" action="urn:getPaginatedKeystoreInfo" name="getPaginatedKeystoreInfo" bindingOperationName="getPaginatedKeystoreInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2d411db6-55a4-4774-91ee-1196f88d20ae" isOneWay="false" action="urn:getStoreEntries" name="getStoreEntries" bindingOperationName="getStoreEntries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="33117405-bc1d-4af3-878e-651897e4564a" isOneWay="false" action="urn:importCertToStore" name="importCertToStore" bindingOperationName="importCertToStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0fb992ad-58a1-488d-aea3-13921fd3c974" isOneWay="false" action="urn:removeCertFromStore" name="removeCertFromStore" bindingOperationName="removeCertFromStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e0449a3a-1c49-4805-9ed7-d3ba9ac3d6b3" wsaVersion="NONE" name="LoggedUserInfoAdminSoap11Binding" type="wsdl" bindingName="{http://loggeduserinfo.services.core.carbon.wso2.org}LoggedUserInfoAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/LoggedUserInfoAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="93f11b6d-c588-4fba-a7ab-98421baf0628" isOneWay="false" action="urn:getUserInfo" name="getUserInfo" bindingOperationName="getUserInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c81c4d6f-1016-4756-9a0d-e21e8ef8f102" wsaVersion="NONE" name="LoggedUserInfoAdminSoap12Binding" type="wsdl" bindingName="{http://loggeduserinfo.services.core.carbon.wso2.org}LoggedUserInfoAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/LoggedUserInfoAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LoggedUserInfoAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LoggedUserInfoAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://loggeduserinfo.services.core.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://loggeduserinfo.services.core.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax296="http://common.core.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>LoggedUserInfoAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.core.carbon.wso2.org/xsd">
      <xs:complexType name="LoggedUserInfo">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="UIPermissionOfUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordExpiration" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://loggeduserinfo.services.core.carbon.wso2.org" xmlns:ax297="http://common.core.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.core.carbon.wso2.org/xsd"/>
      <xs:element name="LoggedUserInfoAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LoggedUserInfoAdminException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getUserInfo">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax296:LoggedUserInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getUserInfoRequest">
    <wsdl:part name="parameters" element="ns:getUserInfo"/>
  </wsdl:message>
  <wsdl:message name="getUserInfoResponse">
    <wsdl:part name="parameters" element="ns:getUserInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="LoggedUserInfoAdminException">
    <wsdl:part name="parameters" element="ns:LoggedUserInfoAdminException"/>
  </wsdl:message>
  <wsdl:portType name="LoggedUserInfoAdminPortType">
    <wsdl:operation name="getUserInfo">
      <wsdl:input message="ns:getUserInfoRequest" wsaw:Action="urn:getUserInfo"/>
      <wsdl:output message="ns:getUserInfoResponse" wsaw:Action="urn:getUserInfoResponse"/>
      <wsdl:fault message="ns:LoggedUserInfoAdminException" name="LoggedUserInfoAdminException" wsaw:Action="urn:getUserInfoLoggedUserInfoAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LoggedUserInfoAdminSoap11Binding" type="ns:LoggedUserInfoAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getUserInfo">
      <soap:operation soapAction="urn:getUserInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggedUserInfoAdminException">
        <soap:fault use="literal" name="LoggedUserInfoAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoggedUserInfoAdminSoap12Binding" type="ns:LoggedUserInfoAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getUserInfo">
      <soap12:operation soapAction="urn:getUserInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggedUserInfoAdminException">
        <soap12:fault use="literal" name="LoggedUserInfoAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoggedUserInfoAdminHttpBinding" type="ns:LoggedUserInfoAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getUserInfo">
      <http:operation location="getUserInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LoggedUserInfoAdmin">
    <wsdl:port name="LoggedUserInfoAdminHttpsSoap11Endpoint" binding="ns:LoggedUserInfoAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoggedUserInfoAdminHttpsSoap12Endpoint" binding="ns:LoggedUserInfoAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoggedUserInfoAdminHttpsEndpoint" binding="ns:LoggedUserInfoAdminHttpBinding">
      <http:address location="https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="63407b2f-da2b-4ea5-a323-5ae05aaebdc3" isOneWay="false" action="urn:getUserInfo" name="getUserInfo" bindingOperationName="getUserInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8f85084b-111b-4b2c-8209-ae31804c8584" wsaVersion="NONE" name="LoggingAdminSoap11Binding" type="wsdl" bindingName="{http://service.logging.carbon.wso2.org}LoggingAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/LoggingAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="072befa5-57d8-482d-be83-368289ba367d" isOneWay="false" action="urn:getAllLoggerData" name="getAllLoggerData" bindingOperationName="getAllLoggerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5862645a-48b1-4939-8c62-a69b8d56181a" isOneWay="false" action="urn:getAppenderData" name="getAppenderData" bindingOperationName="getAppenderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="15c1b780-1474-4d8e-b306-6755250b05f6" isOneWay="false" action="urn:getLoggerData" name="getLoggerData" bindingOperationName="getLoggerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1a3786c8-c282-435e-84d3-40d2acd349bc" isOneWay="false" action="urn:getSyslogData" name="getSyslogData" bindingOperationName="getSyslogData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="af1eeade-35ba-4232-b3bf-bd66f21d8644" isOneWay="false" action="urn:getSystemLog" name="getSystemLog" bindingOperationName="getSystemLog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aae88c8b-d8eb-40c7-9f81-5a82866f6fcc" isOneWay="false" action="urn:isStratosService" name="isStratosService" bindingOperationName="isStratosService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ad90b320-dc3f-43ee-8a9a-cbf007611089" isOneWay="false" action="urn:removeSyslogPattern" name="removeSyslogPattern" bindingOperationName="removeSyslogPattern" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="38eae7d0-2c8b-4e35-975d-4d1dc862fdf7" isOneWay="false" action="urn:updateAllAppenderData" name="updateAllAppenderData" bindingOperationName="updateAllAppenderData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cd6a1728-7e23-46c0-b9fa-3a800d1945b2" isOneWay="false" action="urn:updateLoggerData" name="updateLoggerData" bindingOperationName="updateLoggerData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c9d0c68-5ede-4324-9f84-882ac424bffc" isOneWay="false" action="urn:updateSyslogConfig" name="updateSyslogConfig" bindingOperationName="updateSyslogConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="19125025-6dbd-41a5-9049-9da016fcd494" isOneWay="false" action="urn:updateSystemLog" name="updateSystemLog" bindingOperationName="updateSystemLog" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="afe2f961-d012-4aff-a54c-2080b7c54734" wsaVersion="NONE" name="LoggingAdminSoap12Binding" type="wsdl" bindingName="{http://service.logging.carbon.wso2.org}LoggingAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/LoggingAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LoggingAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LoggingAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.logging.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://service.logging.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2440="http://data.service.logging.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ax2442="http://service.logging.carbon.wso2.org/xsd">
  <wsdl:documentation>LoggingAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.logging.carbon.wso2.org/xsd">
      <xs:complexType name="LoggingAdminException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2443="http://service.logging.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2441="http://data.service.logging.carbon.wso2.org/xsd">
      <xs:import namespace="http://data.service.logging.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://service.logging.carbon.wso2.org/xsd"/>
      <xs:element name="LoggingAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LoggingAdminException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getSystemLog">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemLogResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2440:LogData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLoggerData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logNameFilter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="beginsWith" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLoggerDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2440:LoggerData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LoggingAdminLoggingAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LoggingAdminException" nillable="true" type="ax2443:LoggingAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateSyslogConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="url" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="port" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="realm" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppenderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appenderName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppenderDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2440:AppenderData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoggerData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="loggerName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoggerDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2440:LoggerData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSyslogData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSyslogDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2440:SyslogData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeSyslogPattern">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appenderPattern" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeSyslogPatternResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateAllAppenderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appenderName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="appenderPattern" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="threshold" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="logFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="sysLogHost" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="facility" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="persist" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isStratosService">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isStratosServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateSystemLog">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logLevel" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="logPattern" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="persist" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateLoggerData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="loggerName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="loggerLevel" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="additivity" type="xs:boolean"/>
            <xs:element minOccurs="0" name="persist" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.service.logging.carbon.wso2.org/xsd">
      <xs:complexType name="LogData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="appenderData" nillable="true" type="ax2440:AppenderData"/>
          <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logLevel" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logPattern" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="loggerData" nillable="true" type="ax2440:LoggerData"/>
          <xs:element minOccurs="0" name="selectedAppenderData" nillable="true" type="ax2440:AppenderData"/>
          <xs:element minOccurs="0" name="selectedLoggerData" nillable="true" type="ax2440:LoggerData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AppenderData">
        <xs:sequence>
          <xs:element minOccurs="0" name="facility" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="isFileAppender" type="xs:boolean"/>
          <xs:element minOccurs="0" name="isSysLogAppender" type="xs:boolean"/>
          <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pattern" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sysLogHost" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="threshold" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoggerData">
        <xs:sequence>
          <xs:element minOccurs="0" name="additivity" type="xs:boolean"/>
          <xs:element minOccurs="0" name="level" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parentName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SyslogData">
        <xs:sequence>
          <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="port" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="realm" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="url" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateSyslogConfigRequest">
    <wsdl:part name="parameters" element="ns1:updateSyslogConfig"/>
  </wsdl:message>
  <wsdl:message name="LoggingAdminLoggingAdminException">
    <wsdl:part name="parameters" element="ns1:LoggingAdminLoggingAdminException"/>
  </wsdl:message>
  <wsdl:message name="removeSyslogPatternRequest">
    <wsdl:part name="parameters" element="ns1:removeSyslogPattern"/>
  </wsdl:message>
  <wsdl:message name="removeSyslogPatternResponse">
    <wsdl:part name="parameters" element="ns1:removeSyslogPatternResponse"/>
  </wsdl:message>
  <wsdl:message name="updateAllAppenderDataRequest">
    <wsdl:part name="parameters" element="ns1:updateAllAppenderData"/>
  </wsdl:message>
  <wsdl:message name="LoggingAdminException">
    <wsdl:part name="parameters" element="ns1:LoggingAdminException"/>
  </wsdl:message>
  <wsdl:message name="isStratosServiceRequest">
    <wsdl:part name="parameters" element="ns1:isStratosService"/>
  </wsdl:message>
  <wsdl:message name="isStratosServiceResponse">
    <wsdl:part name="parameters" element="ns1:isStratosServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllLoggerDataRequest">
    <wsdl:part name="parameters" element="ns1:getAllLoggerData"/>
  </wsdl:message>
  <wsdl:message name="getAllLoggerDataResponse">
    <wsdl:part name="parameters" element="ns1:getAllLoggerDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getLoggerDataRequest">
    <wsdl:part name="parameters" element="ns1:getLoggerData"/>
  </wsdl:message>
  <wsdl:message name="getLoggerDataResponse">
    <wsdl:part name="parameters" element="ns1:getLoggerDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getSyslogDataRequest">
    <wsdl:part name="parameters" element="ns1:getSyslogData"/>
  </wsdl:message>
  <wsdl:message name="getSyslogDataResponse">
    <wsdl:part name="parameters" element="ns1:getSyslogDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemLogRequest">
    <wsdl:part name="parameters" element="ns1:getSystemLog"/>
  </wsdl:message>
  <wsdl:message name="getSystemLogResponse">
    <wsdl:part name="parameters" element="ns1:getSystemLogResponse"/>
  </wsdl:message>
  <wsdl:message name="getAppenderDataRequest">
    <wsdl:part name="parameters" element="ns1:getAppenderData"/>
  </wsdl:message>
  <wsdl:message name="getAppenderDataResponse">
    <wsdl:part name="parameters" element="ns1:getAppenderDataResponse"/>
  </wsdl:message>
  <wsdl:message name="updateSystemLogRequest">
    <wsdl:part name="parameters" element="ns1:updateSystemLog"/>
  </wsdl:message>
  <wsdl:message name="updateLoggerDataRequest">
    <wsdl:part name="parameters" element="ns1:updateLoggerData"/>
  </wsdl:message>
  <wsdl:portType name="LoggingAdminPortType">
    <wsdl:operation name="updateSyslogConfig">
      <wsdl:input message="tns:updateSyslogConfigRequest" wsaw:Action="urn:updateSyslogConfig"/>
      <wsdl:fault message="tns:LoggingAdminLoggingAdminException" name="LoggingAdminLoggingAdminException" wsaw:Action="urn:updateSyslogConfigLoggingAdminLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="removeSyslogPattern">
      <wsdl:input message="tns:removeSyslogPatternRequest" wsaw:Action="urn:removeSyslogPattern"/>
      <wsdl:output message="tns:removeSyslogPatternResponse" wsaw:Action="urn:removeSyslogPatternResponse"/>
    </wsdl:operation>
    <wsdl:operation name="updateAllAppenderData">
      <wsdl:input message="tns:updateAllAppenderDataRequest" wsaw:Action="urn:updateAllAppenderData"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:updateAllAppenderDataLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="isStratosService">
      <wsdl:input message="tns:isStratosServiceRequest" wsaw:Action="urn:isStratosService"/>
      <wsdl:output message="tns:isStratosServiceResponse" wsaw:Action="urn:isStratosServiceResponse"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:isStratosServiceLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllLoggerData">
      <wsdl:input message="tns:getAllLoggerDataRequest" wsaw:Action="urn:getAllLoggerData"/>
      <wsdl:output message="tns:getAllLoggerDataResponse" wsaw:Action="urn:getAllLoggerDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getLoggerData">
      <wsdl:input message="tns:getLoggerDataRequest" wsaw:Action="urn:getLoggerData"/>
      <wsdl:output message="tns:getLoggerDataResponse" wsaw:Action="urn:getLoggerDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSyslogData">
      <wsdl:input message="tns:getSyslogDataRequest" wsaw:Action="urn:getSyslogData"/>
      <wsdl:output message="tns:getSyslogDataResponse" wsaw:Action="urn:getSyslogDataResponse"/>
      <wsdl:fault message="tns:LoggingAdminLoggingAdminException" name="LoggingAdminLoggingAdminException" wsaw:Action="urn:getSyslogDataLoggingAdminLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemLog">
      <wsdl:input message="tns:getSystemLogRequest" wsaw:Action="urn:getSystemLog"/>
      <wsdl:output message="tns:getSystemLogResponse" wsaw:Action="urn:getSystemLogResponse"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:getSystemLogLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAppenderData">
      <wsdl:input message="tns:getAppenderDataRequest" wsaw:Action="urn:getAppenderData"/>
      <wsdl:output message="tns:getAppenderDataResponse" wsaw:Action="urn:getAppenderDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="updateSystemLog">
      <wsdl:input message="tns:updateSystemLogRequest" wsaw:Action="urn:updateSystemLog"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:updateSystemLogLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updateLoggerData">
      <wsdl:input message="tns:updateLoggerDataRequest" wsaw:Action="urn:updateLoggerData"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:updateLoggerDataLoggingAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LoggingAdminSoap11Binding" type="tns:LoggingAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateSyslogConfig">
      <soap:operation soapAction="urn:updateSyslogConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminLoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminLoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeSyslogPattern">
      <soap:operation soapAction="urn:removeSyslogPattern" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAllAppenderData">
      <soap:operation soapAction="urn:updateAllAppenderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isStratosService">
      <soap:operation soapAction="urn:isStratosService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLoggerData">
      <soap:operation soapAction="urn:getAllLoggerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLoggerData">
      <soap:operation soapAction="urn:getLoggerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSyslogData">
      <soap:operation soapAction="urn:getSyslogData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminLoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminLoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSystemLog">
      <soap:operation soapAction="urn:getSystemLog" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppenderData">
      <soap:operation soapAction="urn:getAppenderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSystemLog">
      <soap:operation soapAction="urn:updateSystemLog" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLoggerData">
      <soap:operation soapAction="urn:updateLoggerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoggingAdminSoap12Binding" type="tns:LoggingAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateSyslogConfig">
      <soap12:operation soapAction="urn:updateSyslogConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminLoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminLoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeSyslogPattern">
      <soap12:operation soapAction="urn:removeSyslogPattern" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAllAppenderData">
      <soap12:operation soapAction="urn:updateAllAppenderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isStratosService">
      <soap12:operation soapAction="urn:isStratosService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLoggerData">
      <soap12:operation soapAction="urn:getAllLoggerData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLoggerData">
      <soap12:operation soapAction="urn:getLoggerData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSyslogData">
      <soap12:operation soapAction="urn:getSyslogData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminLoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminLoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSystemLog">
      <soap12:operation soapAction="urn:getSystemLog" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppenderData">
      <soap12:operation soapAction="urn:getAppenderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSystemLog">
      <soap12:operation soapAction="urn:updateSystemLog" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLoggerData">
      <soap12:operation soapAction="urn:updateLoggerData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoggingAdminHttpBinding" type="tns:LoggingAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateSyslogConfig">
      <http:operation location="updateSyslogConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeSyslogPattern">
      <http:operation location="removeSyslogPattern"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAllAppenderData">
      <http:operation location="updateAllAppenderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isStratosService">
      <http:operation location="isStratosService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllLoggerData">
      <http:operation location="getAllLoggerData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLoggerData">
      <http:operation location="getLoggerData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSyslogData">
      <http:operation location="getSyslogData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemLog">
      <http:operation location="getSystemLog"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAppenderData">
      <http:operation location="getAppenderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSystemLog">
      <http:operation location="updateSystemLog"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateLoggerData">
      <http:operation location="updateLoggerData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LoggingAdmin">
    <wsdl:port name="LoggingAdminHttpsSoap11Endpoint" binding="tns:LoggingAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoggingAdminHttpsSoap12Endpoint" binding="tns:LoggingAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoggingAdminHttpsEndpoint" binding="tns:LoggingAdminHttpBinding">
      <http:address location="https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="01aecdb7-6103-4db8-8d80-38fde1433a46" isOneWay="false" action="urn:getAllLoggerData" name="getAllLoggerData" bindingOperationName="getAllLoggerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f903a5c1-eaed-433e-b940-d2ccb4345102" isOneWay="false" action="urn:getAppenderData" name="getAppenderData" bindingOperationName="getAppenderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a5f1666b-e48e-4024-94a9-79e7e38f5ddf" isOneWay="false" action="urn:getLoggerData" name="getLoggerData" bindingOperationName="getLoggerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b31d3805-6dfc-4f19-afe8-64036872a66e" isOneWay="false" action="urn:getSyslogData" name="getSyslogData" bindingOperationName="getSyslogData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f684fa3d-ee20-42b5-b400-a4f69a67fb64" isOneWay="false" action="urn:getSystemLog" name="getSystemLog" bindingOperationName="getSystemLog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c7e9ea51-3b95-4325-9cd6-72010df000a4" isOneWay="false" action="urn:isStratosService" name="isStratosService" bindingOperationName="isStratosService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e293b280-5428-42ee-8ea5-a2218daa649a" isOneWay="false" action="urn:removeSyslogPattern" name="removeSyslogPattern" bindingOperationName="removeSyslogPattern" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1ae7fc40-05e7-4803-b186-e367266b93e0" isOneWay="false" action="urn:updateAllAppenderData" name="updateAllAppenderData" bindingOperationName="updateAllAppenderData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f8979af-ce12-4b55-ba6c-20a684cc9157" isOneWay="false" action="urn:updateLoggerData" name="updateLoggerData" bindingOperationName="updateLoggerData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fccfb133-a623-4cd9-8e56-e8ae0511921b" isOneWay="false" action="urn:updateSyslogConfig" name="updateSyslogConfig" bindingOperationName="updateSyslogConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3822cbf5-e0f1-44fd-b8e7-7a7b45b6ac70" isOneWay="false" action="urn:updateSystemLog" name="updateSystemLog" bindingOperationName="updateSystemLog" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="cbc6c4ba-9410-4c10-96fc-c7adc178fa55" wsaVersion="NONE" name="LoginStatisticsAdminSoap12Binding" type="wsdl" bindingName="{http://stats.authentication.services.core.carbon.wso2.org}LoginStatisticsAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/LoginStatisticsAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LoginStatisticsAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LoginStatisticsAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://stats.authentication.services.core.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax298="http://stats.authentication.services.core.carbon.wso2.org/xsd" xmlns:ns="http://stats.authentication.services.core.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>LoginStatisticsAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://stats.authentication.services.core.carbon.wso2.org" xmlns:ax299="http://stats.authentication.services.core.carbon.wso2.org/xsd">
      <xs:import namespace="http://stats.authentication.services.core.carbon.wso2.org/xsd"/>
      <xs:element name="getUserBasedLoginAttempts">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserBasedLoginAttemptsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax298:UserAttempts"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoginAttempts">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoginAttemptsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax298:LoginAttempts"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://stats.authentication.services.core.carbon.wso2.org/xsd">
      <xs:complexType name="UserAttempts">
        <xs:sequence>
          <xs:element minOccurs="0" name="failedLogins" type="xs:int"/>
          <xs:element minOccurs="0" name="totalLogins" type="xs:int"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoginAttempts">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="loginAttempts" nillable="true" type="ax298:LoginAttempt"/>
          <xs:element minOccurs="0" name="totalAttempts" type="xs:int"/>
          <xs:element minOccurs="0" name="totalFailedAttempts" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoginAttempt">
        <xs:sequence>
          <xs:element minOccurs="0" name="failureReason" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="remoteAddress" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="successful" type="xs:boolean"/>
          <xs:element minOccurs="0" name="timestamp" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getLoginAttemptsRequest">
    <wsdl:part name="parameters" element="ns:getLoginAttempts"/>
  </wsdl:message>
  <wsdl:message name="getLoginAttemptsResponse">
    <wsdl:part name="parameters" element="ns:getLoginAttemptsResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserBasedLoginAttemptsRequest">
    <wsdl:part name="parameters" element="ns:getUserBasedLoginAttempts"/>
  </wsdl:message>
  <wsdl:message name="getUserBasedLoginAttemptsResponse">
    <wsdl:part name="parameters" element="ns:getUserBasedLoginAttemptsResponse"/>
  </wsdl:message>
  <wsdl:portType name="LoginStatisticsAdminPortType">
    <wsdl:operation name="getLoginAttempts">
      <wsdl:input message="ns:getLoginAttemptsRequest" wsaw:Action="urn:getLoginAttempts"/>
      <wsdl:output message="ns:getLoginAttemptsResponse" wsaw:Action="urn:getLoginAttemptsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <wsdl:input message="ns:getUserBasedLoginAttemptsRequest" wsaw:Action="urn:getUserBasedLoginAttempts"/>
      <wsdl:output message="ns:getUserBasedLoginAttemptsResponse" wsaw:Action="urn:getUserBasedLoginAttemptsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LoginStatisticsAdminSoap11Binding" type="ns:LoginStatisticsAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getLoginAttempts">
      <soap:operation soapAction="urn:getLoginAttempts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <soap:operation soapAction="urn:getUserBasedLoginAttempts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoginStatisticsAdminSoap12Binding" type="ns:LoginStatisticsAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getLoginAttempts">
      <soap12:operation soapAction="urn:getLoginAttempts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <soap12:operation soapAction="urn:getUserBasedLoginAttempts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoginStatisticsAdminHttpBinding" type="ns:LoginStatisticsAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getLoginAttempts">
      <http:operation location="getLoginAttempts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <http:operation location="getUserBasedLoginAttempts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LoginStatisticsAdmin">
    <wsdl:port name="LoginStatisticsAdminHttpsSoap11Endpoint" binding="ns:LoginStatisticsAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoginStatisticsAdminHttpsSoap12Endpoint" binding="ns:LoginStatisticsAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoginStatisticsAdminHttpsEndpoint" binding="ns:LoginStatisticsAdminHttpBinding">
      <http:address location="https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap11Endpoint/</con:endpoint><con:endpoint>https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="7132ab2b-39ae-49c4-9fc9-266dec5d8e10" isOneWay="false" action="urn:getLoginAttempts" name="getLoginAttempts" bindingOperationName="getLoginAttempts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="2bec149b-94b8-46ae-bcf5-c5daccc52328" isOneWay="false" action="urn:getUserBasedLoginAttempts" name="getUserBasedLoginAttempts" bindingOperationName="getUserBasedLoginAttempts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="498d3e87-8fc7-4481-a054-d17596f110d1" wsaVersion="NONE" name="LoginStatisticsAdminSoap11Binding" type="wsdl" bindingName="{http://stats.authentication.services.core.carbon.wso2.org}LoginStatisticsAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/LoginStatisticsAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LoginStatisticsAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LoginStatisticsAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://stats.authentication.services.core.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax298="http://stats.authentication.services.core.carbon.wso2.org/xsd" xmlns:ns="http://stats.authentication.services.core.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>LoginStatisticsAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://stats.authentication.services.core.carbon.wso2.org" xmlns:ax299="http://stats.authentication.services.core.carbon.wso2.org/xsd">
      <xs:import namespace="http://stats.authentication.services.core.carbon.wso2.org/xsd"/>
      <xs:element name="getUserBasedLoginAttempts">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserBasedLoginAttemptsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax298:UserAttempts"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoginAttempts">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoginAttemptsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax298:LoginAttempts"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://stats.authentication.services.core.carbon.wso2.org/xsd">
      <xs:complexType name="UserAttempts">
        <xs:sequence>
          <xs:element minOccurs="0" name="failedLogins" type="xs:int"/>
          <xs:element minOccurs="0" name="totalLogins" type="xs:int"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoginAttempts">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="loginAttempts" nillable="true" type="ax298:LoginAttempt"/>
          <xs:element minOccurs="0" name="totalAttempts" type="xs:int"/>
          <xs:element minOccurs="0" name="totalFailedAttempts" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoginAttempt">
        <xs:sequence>
          <xs:element minOccurs="0" name="failureReason" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="remoteAddress" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="successful" type="xs:boolean"/>
          <xs:element minOccurs="0" name="timestamp" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getLoginAttemptsRequest">
    <wsdl:part name="parameters" element="ns:getLoginAttempts"/>
  </wsdl:message>
  <wsdl:message name="getLoginAttemptsResponse">
    <wsdl:part name="parameters" element="ns:getLoginAttemptsResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserBasedLoginAttemptsRequest">
    <wsdl:part name="parameters" element="ns:getUserBasedLoginAttempts"/>
  </wsdl:message>
  <wsdl:message name="getUserBasedLoginAttemptsResponse">
    <wsdl:part name="parameters" element="ns:getUserBasedLoginAttemptsResponse"/>
  </wsdl:message>
  <wsdl:portType name="LoginStatisticsAdminPortType">
    <wsdl:operation name="getLoginAttempts">
      <wsdl:input message="ns:getLoginAttemptsRequest" wsaw:Action="urn:getLoginAttempts"/>
      <wsdl:output message="ns:getLoginAttemptsResponse" wsaw:Action="urn:getLoginAttemptsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <wsdl:input message="ns:getUserBasedLoginAttemptsRequest" wsaw:Action="urn:getUserBasedLoginAttempts"/>
      <wsdl:output message="ns:getUserBasedLoginAttemptsResponse" wsaw:Action="urn:getUserBasedLoginAttemptsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LoginStatisticsAdminSoap11Binding" type="ns:LoginStatisticsAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getLoginAttempts">
      <soap:operation soapAction="urn:getLoginAttempts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <soap:operation soapAction="urn:getUserBasedLoginAttempts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoginStatisticsAdminSoap12Binding" type="ns:LoginStatisticsAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getLoginAttempts">
      <soap12:operation soapAction="urn:getLoginAttempts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <soap12:operation soapAction="urn:getUserBasedLoginAttempts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoginStatisticsAdminHttpBinding" type="ns:LoginStatisticsAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getLoginAttempts">
      <http:operation location="getLoginAttempts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <http:operation location="getUserBasedLoginAttempts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LoginStatisticsAdmin">
    <wsdl:port name="LoginStatisticsAdminHttpsSoap11Endpoint" binding="ns:LoginStatisticsAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoginStatisticsAdminHttpsSoap12Endpoint" binding="ns:LoginStatisticsAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoginStatisticsAdminHttpsEndpoint" binding="ns:LoginStatisticsAdminHttpBinding">
      <http:address location="https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="e013a7cd-50ab-4b23-8114-ac5e7e1843d4" isOneWay="false" action="urn:getLoginAttempts" name="getLoginAttempts" bindingOperationName="getLoginAttempts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="29eb217d-012d-4176-a9dd-67a2dd68efb0" isOneWay="false" action="urn:getUserBasedLoginAttempts" name="getUserBasedLoginAttempts" bindingOperationName="getUserBasedLoginAttempts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="da193111-4240-4cb6-9622-5af9a162ba77" wsaVersion="NONE" name="LogViewerSoap12Binding" type="wsdl" bindingName="{http://service.logging.carbon.wso2.org}LogViewerSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/LogViewer.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/LogViewer.LogViewerHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="785d4fe7-9566-418b-9747-46f1a4d0b20c" isOneWay="false" action="urn:clearLogs" name="clearLogs" bindingOperationName="clearLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="527da12d-ec2c-481b-a524-b73c757420d7" isOneWay="false" action="urn:downloadArchivedLogFiles" name="downloadArchivedLogFiles" bindingOperationName="downloadArchivedLogFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e94d8f99-dee2-46e2-ab4a-6108b628d3d2" isOneWay="false" action="urn:getAllSystemLogs" name="getAllSystemLogs" bindingOperationName="getAllSystemLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c285980d-a249-4969-bfde-8f365fccc7af" isOneWay="false" action="urn:getApplicationLogs" name="getApplicationLogs" bindingOperationName="getApplicationLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa2f528f-845e-4abb-a036-17211473eeca" isOneWay="false" action="urn:getApplicationNames" name="getApplicationNames" bindingOperationName="getApplicationNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e4d55242-921a-4ee5-90de-ffd43ffff2a6" isOneWay="false" action="urn:getLineNumbers" name="getLineNumbers" bindingOperationName="getLineNumbers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f416b5b1-f7c1-4d13-ab03-7643d42800d0" isOneWay="false" action="urn:getLocalLogFiles" name="getLocalLogFiles" bindingOperationName="getLocalLogFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="632cebbb-54a6-4c87-a8ef-bce4a54d4203" isOneWay="false" action="urn:getLogLinesFromFile" name="getLogLinesFromFile" bindingOperationName="getLogLinesFromFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f2945511-8669-408a-b688-713b494f659d" isOneWay="false" action="urn:getLogs" name="getLogs" bindingOperationName="getLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="94fced75-9746-45cd-868f-426897c9cce6" isOneWay="false" action="urn:getNoOfLogEvents" name="getNoOfLogEvents" bindingOperationName="getNoOfLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d11a569-8c68-4eb4-be70-c16c1c3a7c18" isOneWay="false" action="urn:getPaginatedApplicationLogEvents" name="getPaginatedApplicationLogEvents" bindingOperationName="getPaginatedApplicationLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f41ddafb-7396-48a4-9407-4d831f59020d" isOneWay="false" action="urn:getPaginatedLogEvents" name="getPaginatedLogEvents" bindingOperationName="getPaginatedLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bbb987a1-2d9c-42b7-bfe2-78d730935021" isOneWay="false" action="urn:getPaginatedLogFileInfo" name="getPaginatedLogFileInfo" bindingOperationName="getPaginatedLogFileInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="26dfc87f-094d-427f-8e28-6c2fce2477ac" isOneWay="false" action="urn:getServiceNames" name="getServiceNames" bindingOperationName="getServiceNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fbb887d3-e2ef-40dd-942f-cc3f210fd931" isOneWay="false" action="urn:isFileAppenderConfiguredForST" name="isFileAppenderConfiguredForST" bindingOperationName="isFileAppenderConfiguredForST" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f4764201-5396-40a8-befa-f4a052e0984d" isOneWay="false" action="urn:isManager" name="isManager" bindingOperationName="isManager" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="872ece2e-8f25-4a93-b303-69cec7226420" isOneWay="false" action="urn:isValidTenant" name="isValidTenant" bindingOperationName="isValidTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e0dcb00-eda8-44be-b31d-1f869c2c47eb" isOneWay="false" action="urn:isValidTenantDomain" name="isValidTenantDomain" bindingOperationName="isValidTenantDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9774f731-87d2-417f-910a-ffd5e0ebf881" wsaVersion="NONE" name="LogViewerSoap11Binding" type="wsdl" bindingName="{http://service.logging.carbon.wso2.org}LogViewerSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/LogViewer.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LogViewer.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/LogViewer.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.logging.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2444="http://service.logging.carbon.wso2.org/xsd" xmlns:ax2446="http://data.service.logging.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://service.logging.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>LogViewer</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.logging.carbon.wso2.org/xsd">
      <xs:complexType name="LogViewerException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2445="http://service.logging.carbon.wso2.org/xsd" xmlns:ax2447="http://data.service.logging.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://service.logging.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://data.service.logging.carbon.wso2.org/xsd"/>
      <xs:element name="LogViewerLogViewerException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LogViewerException" nillable="true" type="ax2444:LogViewerException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedLogFileInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedLogFileInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2446:PaginatedLogFileInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLocalLogFiles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLocalLogFilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2446:PaginatedLogFileInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadArchivedLogFiles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadArchivedLogFilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isValidTenantDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isValidTenantDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isManager">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isManagerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isValidTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isValidTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LogViewerException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LogViewerException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getLineNumbers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLineNumbersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLogLinesFromFile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxLogs" type="xs:int"/>
            <xs:element minOccurs="0" name="start" type="xs:int"/>
            <xs:element minOccurs="0" name="end" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLogLinesFromFileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isFileAppenderConfiguredForST">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isFileAppenderConfiguredForSTResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSystemLogs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSystemLogsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2446:LogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedLogEvents">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedLogEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2446:PaginatedLogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedApplicationLogEvents">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedApplicationLogEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2446:PaginatedLogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNoOfLogEvents">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNoOfLogEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationLogs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="appName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationLogsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2446:LogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearLogs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearLogsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLogs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLogsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2446:LogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceNames">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.service.logging.carbon.wso2.org/xsd">
      <xs:complexType name="PaginatedLogFileInfo">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="logFileInfo" nillable="true" type="ax2446:LogFileInfo"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LogFileInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="fileSize" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logDate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LogEvent">
        <xs:sequence>
          <xs:element minOccurs="0" name="appName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="instance" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ip" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logger" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="priority" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="stacktrace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tenantId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaginatedLogEvent">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="logInfo" nillable="true" type="ax2446:LogEvent"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="clearLogsRequest">
    <wsdl:part name="parameters" element="ns1:clearLogs"/>
  </wsdl:message>
  <wsdl:message name="clearLogsResponse">
    <wsdl:part name="parameters" element="ns1:clearLogsResponse"/>
  </wsdl:message>
  <wsdl:message name="downloadArchivedLogFilesRequest">
    <wsdl:part name="parameters" element="ns1:downloadArchivedLogFiles"/>
  </wsdl:message>
  <wsdl:message name="downloadArchivedLogFilesResponse">
    <wsdl:part name="parameters" element="ns1:downloadArchivedLogFilesResponse"/>
  </wsdl:message>
  <wsdl:message name="LogViewerLogViewerException">
    <wsdl:part name="parameters" element="ns1:LogViewerLogViewerException"/>
  </wsdl:message>
  <wsdl:message name="getApplicationNamesRequest">
    <wsdl:part name="parameters" element="ns1:getApplicationNames"/>
  </wsdl:message>
  <wsdl:message name="getApplicationNamesResponse">
    <wsdl:part name="parameters" element="ns1:getApplicationNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="getLocalLogFilesRequest">
    <wsdl:part name="parameters" element="ns1:getLocalLogFiles"/>
  </wsdl:message>
  <wsdl:message name="getLocalLogFilesResponse">
    <wsdl:part name="parameters" element="ns1:getLocalLogFilesResponse"/>
  </wsdl:message>
  <wsdl:message name="isFileAppenderConfiguredForSTRequest">
    <wsdl:part name="parameters" element="ns1:isFileAppenderConfiguredForST"/>
  </wsdl:message>
  <wsdl:message name="isFileAppenderConfiguredForSTResponse">
    <wsdl:part name="parameters" element="ns1:isFileAppenderConfiguredForSTResponse"/>
  </wsdl:message>
  <wsdl:message name="getNoOfLogEventsRequest">
    <wsdl:part name="parameters" element="ns1:getNoOfLogEvents"/>
  </wsdl:message>
  <wsdl:message name="getNoOfLogEventsResponse">
    <wsdl:part name="parameters" element="ns1:getNoOfLogEventsResponse"/>
  </wsdl:message>
  <wsdl:message name="isValidTenantDomainRequest">
    <wsdl:part name="parameters" element="ns1:isValidTenantDomain"/>
  </wsdl:message>
  <wsdl:message name="isValidTenantDomainResponse">
    <wsdl:part name="parameters" element="ns1:isValidTenantDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedLogFileInfoRequest">
    <wsdl:part name="parameters" element="ns1:getPaginatedLogFileInfo"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedLogFileInfoResponse">
    <wsdl:part name="parameters" element="ns1:getPaginatedLogFileInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getLogsRequest">
    <wsdl:part name="parameters" element="ns1:getLogs"/>
  </wsdl:message>
  <wsdl:message name="getLogsResponse">
    <wsdl:part name="parameters" element="ns1:getLogsResponse"/>
  </wsdl:message>
  <wsdl:message name="isValidTenantRequest">
    <wsdl:part name="parameters" element="ns1:isValidTenant"/>
  </wsdl:message>
  <wsdl:message name="isValidTenantResponse">
    <wsdl:part name="parameters" element="ns1:isValidTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="getLineNumbersRequest">
    <wsdl:part name="parameters" element="ns1:getLineNumbers"/>
  </wsdl:message>
  <wsdl:message name="getLineNumbersResponse">
    <wsdl:part name="parameters" element="ns1:getLineNumbersResponse"/>
  </wsdl:message>
  <wsdl:message name="LogViewerException">
    <wsdl:part name="parameters" element="ns1:LogViewerException"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedApplicationLogEventsRequest">
    <wsdl:part name="parameters" element="ns1:getPaginatedApplicationLogEvents"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedApplicationLogEventsResponse">
    <wsdl:part name="parameters" element="ns1:getPaginatedApplicationLogEventsResponse"/>
  </wsdl:message>
  <wsdl:message name="getApplicationLogsRequest">
    <wsdl:part name="parameters" element="ns1:getApplicationLogs"/>
  </wsdl:message>
  <wsdl:message name="getApplicationLogsResponse">
    <wsdl:part name="parameters" element="ns1:getApplicationLogsResponse"/>
  </wsdl:message>
  <wsdl:message name="getLogLinesFromFileRequest">
    <wsdl:part name="parameters" element="ns1:getLogLinesFromFile"/>
  </wsdl:message>
  <wsdl:message name="getLogLinesFromFileResponse">
    <wsdl:part name="parameters" element="ns1:getLogLinesFromFileResponse"/>
  </wsdl:message>
  <wsdl:message name="isManagerRequest">
    <wsdl:part name="parameters" element="ns1:isManager"/>
  </wsdl:message>
  <wsdl:message name="isManagerResponse">
    <wsdl:part name="parameters" element="ns1:isManagerResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceNamesRequest">
    <wsdl:part name="parameters" element="ns1:getServiceNames"/>
  </wsdl:message>
  <wsdl:message name="getServiceNamesResponse">
    <wsdl:part name="parameters" element="ns1:getServiceNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllSystemLogsRequest">
    <wsdl:part name="parameters" element="ns1:getAllSystemLogs"/>
  </wsdl:message>
  <wsdl:message name="getAllSystemLogsResponse">
    <wsdl:part name="parameters" element="ns1:getAllSystemLogsResponse"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedLogEventsRequest">
    <wsdl:part name="parameters" element="ns1:getPaginatedLogEvents"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedLogEventsResponse">
    <wsdl:part name="parameters" element="ns1:getPaginatedLogEventsResponse"/>
  </wsdl:message>
  <wsdl:portType name="LogViewerPortType">
    <wsdl:operation name="clearLogs">
      <wsdl:input message="tns:clearLogsRequest" wsaw:Action="urn:clearLogs"/>
      <wsdl:output message="tns:clearLogsResponse" wsaw:Action="urn:clearLogsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadArchivedLogFiles">
      <wsdl:input message="tns:downloadArchivedLogFilesRequest" wsaw:Action="urn:downloadArchivedLogFiles"/>
      <wsdl:output message="tns:downloadArchivedLogFilesResponse" wsaw:Action="urn:downloadArchivedLogFilesResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:downloadArchivedLogFilesLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getApplicationNames">
      <wsdl:input message="tns:getApplicationNamesRequest" wsaw:Action="urn:getApplicationNames"/>
      <wsdl:output message="tns:getApplicationNamesResponse" wsaw:Action="urn:getApplicationNamesResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getApplicationNamesLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getLocalLogFiles">
      <wsdl:input message="tns:getLocalLogFilesRequest" wsaw:Action="urn:getLocalLogFiles"/>
      <wsdl:output message="tns:getLocalLogFilesResponse" wsaw:Action="urn:getLocalLogFilesResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getLocalLogFilesLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="isFileAppenderConfiguredForST">
      <wsdl:input message="tns:isFileAppenderConfiguredForSTRequest" wsaw:Action="urn:isFileAppenderConfiguredForST"/>
      <wsdl:output message="tns:isFileAppenderConfiguredForSTResponse" wsaw:Action="urn:isFileAppenderConfiguredForSTResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getNoOfLogEvents">
      <wsdl:input message="tns:getNoOfLogEventsRequest" wsaw:Action="urn:getNoOfLogEvents"/>
      <wsdl:output message="tns:getNoOfLogEventsResponse" wsaw:Action="urn:getNoOfLogEventsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getNoOfLogEventsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="isValidTenantDomain">
      <wsdl:input message="tns:isValidTenantDomainRequest" wsaw:Action="urn:isValidTenantDomain"/>
      <wsdl:output message="tns:isValidTenantDomainResponse" wsaw:Action="urn:isValidTenantDomainResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogFileInfo">
      <wsdl:input message="tns:getPaginatedLogFileInfoRequest" wsaw:Action="urn:getPaginatedLogFileInfo"/>
      <wsdl:output message="tns:getPaginatedLogFileInfoResponse" wsaw:Action="urn:getPaginatedLogFileInfoResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getPaginatedLogFileInfoLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <wsdl:input message="tns:getLogsRequest" wsaw:Action="urn:getLogs"/>
      <wsdl:output message="tns:getLogsResponse" wsaw:Action="urn:getLogsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getLogsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="isValidTenant">
      <wsdl:input message="tns:isValidTenantRequest" wsaw:Action="urn:isValidTenant"/>
      <wsdl:output message="tns:isValidTenantResponse" wsaw:Action="urn:isValidTenantResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getLineNumbers">
      <wsdl:input message="tns:getLineNumbersRequest" wsaw:Action="urn:getLineNumbers"/>
      <wsdl:output message="tns:getLineNumbersResponse" wsaw:Action="urn:getLineNumbersResponse"/>
      <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:getLineNumbersLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedApplicationLogEvents">
      <wsdl:input message="tns:getPaginatedApplicationLogEventsRequest" wsaw:Action="urn:getPaginatedApplicationLogEvents"/>
      <wsdl:output message="tns:getPaginatedApplicationLogEventsResponse" wsaw:Action="urn:getPaginatedApplicationLogEventsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getPaginatedApplicationLogEventsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getApplicationLogs">
      <wsdl:input message="tns:getApplicationLogsRequest" wsaw:Action="urn:getApplicationLogs"/>
      <wsdl:output message="tns:getApplicationLogsResponse" wsaw:Action="urn:getApplicationLogsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getApplicationLogsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getLogLinesFromFile">
      <wsdl:input message="tns:getLogLinesFromFileRequest" wsaw:Action="urn:getLogLinesFromFile"/>
      <wsdl:output message="tns:getLogLinesFromFileResponse" wsaw:Action="urn:getLogLinesFromFileResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getLogLinesFromFileLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="isManager">
      <wsdl:input message="tns:isManagerRequest" wsaw:Action="urn:isManager"/>
      <wsdl:output message="tns:isManagerResponse" wsaw:Action="urn:isManagerResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceNames">
      <wsdl:input message="tns:getServiceNamesRequest" wsaw:Action="urn:getServiceNames"/>
      <wsdl:output message="tns:getServiceNamesResponse" wsaw:Action="urn:getServiceNamesResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getServiceNamesLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSystemLogs">
      <wsdl:input message="tns:getAllSystemLogsRequest" wsaw:Action="urn:getAllSystemLogs"/>
      <wsdl:output message="tns:getAllSystemLogsResponse" wsaw:Action="urn:getAllSystemLogsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getAllSystemLogsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogEvents">
      <wsdl:input message="tns:getPaginatedLogEventsRequest" wsaw:Action="urn:getPaginatedLogEvents"/>
      <wsdl:output message="tns:getPaginatedLogEventsResponse" wsaw:Action="urn:getPaginatedLogEventsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getPaginatedLogEventsLogViewerLogViewerException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LogViewerSoap11Binding" type="tns:LogViewerPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="clearLogs">
      <soap:operation soapAction="urn:clearLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadArchivedLogFiles">
      <soap:operation soapAction="urn:downloadArchivedLogFiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationNames">
      <soap:operation soapAction="urn:getApplicationNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLocalLogFiles">
      <soap:operation soapAction="urn:getLocalLogFiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isFileAppenderConfiguredForST">
      <soap:operation soapAction="urn:isFileAppenderConfiguredForST" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNoOfLogEvents">
      <soap:operation soapAction="urn:getNoOfLogEvents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidTenantDomain">
      <soap:operation soapAction="urn:isValidTenantDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogFileInfo">
      <soap:operation soapAction="urn:getPaginatedLogFileInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <soap:operation soapAction="urn:getLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidTenant">
      <soap:operation soapAction="urn:isValidTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLineNumbers">
      <soap:operation soapAction="urn:getLineNumbers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerException">
        <soap:fault use="literal" name="LogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedApplicationLogEvents">
      <soap:operation soapAction="urn:getPaginatedApplicationLogEvents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationLogs">
      <soap:operation soapAction="urn:getApplicationLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogLinesFromFile">
      <soap:operation soapAction="urn:getLogLinesFromFile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isManager">
      <soap:operation soapAction="urn:isManager" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceNames">
      <soap:operation soapAction="urn:getServiceNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSystemLogs">
      <soap:operation soapAction="urn:getAllSystemLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogEvents">
      <soap:operation soapAction="urn:getPaginatedLogEvents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LogViewerSoap12Binding" type="tns:LogViewerPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="clearLogs">
      <soap12:operation soapAction="urn:clearLogs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadArchivedLogFiles">
      <soap12:operation soapAction="urn:downloadArchivedLogFiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationNames">
      <soap12:operation soapAction="urn:getApplicationNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLocalLogFiles">
      <soap12:operation soapAction="urn:getLocalLogFiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isFileAppenderConfiguredForST">
      <soap12:operation soapAction="urn:isFileAppenderConfiguredForST" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNoOfLogEvents">
      <soap12:operation soapAction="urn:getNoOfLogEvents" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidTenantDomain">
      <soap12:operation soapAction="urn:isValidTenantDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogFileInfo">
      <soap12:operation soapAction="urn:getPaginatedLogFileInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <soap12:operation soapAction="urn:getLogs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidTenant">
      <soap12:operation soapAction="urn:isValidTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLineNumbers">
      <soap12:operation soapAction="urn:getLineNumbers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerException">
        <soap12:fault use="literal" name="LogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedApplicationLogEvents">
      <soap12:operation soapAction="urn:getPaginatedApplicationLogEvents" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationLogs">
      <soap12:operation soapAction="urn:getApplicationLogs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogLinesFromFile">
      <soap12:operation soapAction="urn:getLogLinesFromFile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isManager">
      <soap12:operation soapAction="urn:isManager" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceNames">
      <soap12:operation soapAction="urn:getServiceNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSystemLogs">
      <soap12:operation soapAction="urn:getAllSystemLogs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogEvents">
      <soap12:operation soapAction="urn:getPaginatedLogEvents" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LogViewerHttpBinding" type="tns:LogViewerPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="clearLogs">
      <http:operation location="clearLogs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadArchivedLogFiles">
      <http:operation location="downloadArchivedLogFiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getApplicationNames">
      <http:operation location="getApplicationNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLocalLogFiles">
      <http:operation location="getLocalLogFiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isFileAppenderConfiguredForST">
      <http:operation location="isFileAppenderConfiguredForST"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNoOfLogEvents">
      <http:operation location="getNoOfLogEvents"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isValidTenantDomain">
      <http:operation location="isValidTenantDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogFileInfo">
      <http:operation location="getPaginatedLogFileInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <http:operation location="getLogs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isValidTenant">
      <http:operation location="isValidTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLineNumbers">
      <http:operation location="getLineNumbers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedApplicationLogEvents">
      <http:operation location="getPaginatedApplicationLogEvents"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getApplicationLogs">
      <http:operation location="getApplicationLogs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLogLinesFromFile">
      <http:operation location="getLogLinesFromFile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isManager">
      <http:operation location="isManager"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceNames">
      <http:operation location="getServiceNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllSystemLogs">
      <http:operation location="getAllSystemLogs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogEvents">
      <http:operation location="getPaginatedLogEvents"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LogViewer">
    <wsdl:port name="LogViewerHttpsSoap11Endpoint" binding="tns:LogViewerSoap11Binding">
      <soap:address location="https://localhost:9443/services/LogViewer.LogViewerHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LogViewerHttpsSoap12Endpoint" binding="tns:LogViewerSoap12Binding">
      <soap12:address location="https://localhost:9443/services/LogViewer.LogViewerHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LogViewerHttpsEndpoint" binding="tns:LogViewerHttpBinding">
      <http:address location="https://localhost:9443/services/LogViewer.LogViewerHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/LogViewer.LogViewerHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="e157ef27-8f85-4df7-b161-e75bbf8abc8f" isOneWay="false" action="urn:clearLogs" name="clearLogs" bindingOperationName="clearLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eb102b02-e330-470e-80b4-8be0474220b2" isOneWay="false" action="urn:downloadArchivedLogFiles" name="downloadArchivedLogFiles" bindingOperationName="downloadArchivedLogFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69282f3d-b981-40e9-8154-235cf50bdf6e" isOneWay="false" action="urn:getAllSystemLogs" name="getAllSystemLogs" bindingOperationName="getAllSystemLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e92aa640-fa51-48fe-811d-aa5d74d0708f" isOneWay="false" action="urn:getApplicationLogs" name="getApplicationLogs" bindingOperationName="getApplicationLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1b5db933-27be-473c-ace0-1dc4f49bf1f2" isOneWay="false" action="urn:getApplicationNames" name="getApplicationNames" bindingOperationName="getApplicationNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b1716c42-aadd-4c83-82d5-3ac4ac377666" isOneWay="false" action="urn:getLineNumbers" name="getLineNumbers" bindingOperationName="getLineNumbers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ddf2d5f6-4435-459b-b341-5452fd4e673e" isOneWay="false" action="urn:getLocalLogFiles" name="getLocalLogFiles" bindingOperationName="getLocalLogFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e67a2e8e-c6b6-43a7-9746-8a51f3249f3c" isOneWay="false" action="urn:getLogLinesFromFile" name="getLogLinesFromFile" bindingOperationName="getLogLinesFromFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f04f9e10-ae0a-4e43-9995-5ca1410ea58a" isOneWay="false" action="urn:getLogs" name="getLogs" bindingOperationName="getLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5255e9ba-2e6c-441f-8162-7ca8195608ed" isOneWay="false" action="urn:getNoOfLogEvents" name="getNoOfLogEvents" bindingOperationName="getNoOfLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="27034a2c-d8f2-4709-b164-156e3b16a98c" isOneWay="false" action="urn:getPaginatedApplicationLogEvents" name="getPaginatedApplicationLogEvents" bindingOperationName="getPaginatedApplicationLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fbfc04f0-7a23-4915-b00a-c86c181ff980" isOneWay="false" action="urn:getPaginatedLogEvents" name="getPaginatedLogEvents" bindingOperationName="getPaginatedLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f8fd925-d2f2-4588-98ca-413a7f31e582" isOneWay="false" action="urn:getPaginatedLogFileInfo" name="getPaginatedLogFileInfo" bindingOperationName="getPaginatedLogFileInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d9de07e5-f7d8-4e99-b47e-d8c385296883" isOneWay="false" action="urn:getServiceNames" name="getServiceNames" bindingOperationName="getServiceNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="71d94e94-61ea-45cd-a7cd-e329e42d1416" isOneWay="false" action="urn:isFileAppenderConfiguredForST" name="isFileAppenderConfiguredForST" bindingOperationName="isFileAppenderConfiguredForST" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="24b182c3-9c6e-44f2-8d56-3f7e502fac0d" isOneWay="false" action="urn:isManager" name="isManager" bindingOperationName="isManager" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6e11aeb4-1301-4427-8bee-6e68f68a28bd" isOneWay="false" action="urn:isValidTenant" name="isValidTenant" bindingOperationName="isValidTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e2098e0-1423-4cdf-949f-73db535f68e1" isOneWay="false" action="urn:isValidTenantDomain" name="isValidTenantDomain" bindingOperationName="isValidTenantDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="dbe18f7e-485b-4707-8952-a5ffa9a46e49" wsaVersion="NONE" name="MetricsDataServiceSoap11Binding" type="wsdl" bindingName="{http://service.data.metrics.carbon.wso2.org}MetricsDataServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/MetricsDataService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="4c87ff18-6b18-4788-834f-fd3e58b8221f" isOneWay="false" action="urn:findLastMetrics" name="findLastMetrics" bindingOperationName="findLastMetrics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c58b89b1-1535-4b43-ad6a-a46950ef3b49" isOneWay="false" action="urn:findMetricsByTimePeriod" name="findMetricsByTimePeriod" bindingOperationName="findMetricsByTimePeriod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d812bc85-eb97-4162-b5c9-cf961b782314" isOneWay="false" action="urn:getAllSources" name="getAllSources" bindingOperationName="getAllSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="987697a2-603b-4cbe-bda0-0e470278b98b" wsaVersion="NONE" name="MetricsDataServiceSoap12Binding" type="wsdl" bindingName="{http://service.data.metrics.carbon.wso2.org}MetricsDataServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/MetricsDataService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/MetricsDataService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/MetricsDataService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.data.metrics.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2448="http://common.data.metrics.carbon.wso2.org/xsd" xmlns:ns="http://service.data.metrics.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2450="http://service.data.metrics.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>MetricsDataService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.data.metrics.carbon.wso2.org/xsd">
      <xs:complexType name="MetricData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="data" nillable="true" type="ax2450:ArrayOfBigDecimal"/>
          <xs:element minOccurs="0" name="metadata" nillable="true" type="ax2450:Metadata"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfBigDecimal">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="array" nillable="true" type="xs:decimal"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Metadata">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="names" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="types" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.data.metrics.carbon.wso2.org/xsd">
      <xs:complexType name="MetricList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="metric" nillable="true" type="ax2448:Metric"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Metric">
        <xs:sequence>
          <xs:element minOccurs="0" name="attr" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="format" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.data.metrics.carbon.wso2.org" xmlns:ax2451="http://service.data.metrics.carbon.wso2.org/xsd" xmlns:ax2449="http://common.data.metrics.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.data.metrics.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://service.data.metrics.carbon.wso2.org/xsd"/>
      <xs:element name="getAllSources">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSourcesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findLastMetrics">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="metrics" nillable="true" type="ax2448:MetricList"/>
            <xs:element minOccurs="0" name="source" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="from" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findLastMetricsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2450:MetricData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findMetricsByTimePeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="metrics" nillable="true" type="ax2448:MetricList"/>
            <xs:element minOccurs="0" name="source" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="startTime" type="xs:long"/>
            <xs:element minOccurs="0" name="endTime" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findMetricsByTimePeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2450:MetricData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="findLastMetricsRequest">
    <wsdl:part name="parameters" element="ns:findLastMetrics"/>
  </wsdl:message>
  <wsdl:message name="findLastMetricsResponse">
    <wsdl:part name="parameters" element="ns:findLastMetricsResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllSourcesRequest">
    <wsdl:part name="parameters" element="ns:getAllSources"/>
  </wsdl:message>
  <wsdl:message name="getAllSourcesResponse">
    <wsdl:part name="parameters" element="ns:getAllSourcesResponse"/>
  </wsdl:message>
  <wsdl:message name="findMetricsByTimePeriodRequest">
    <wsdl:part name="parameters" element="ns:findMetricsByTimePeriod"/>
  </wsdl:message>
  <wsdl:message name="findMetricsByTimePeriodResponse">
    <wsdl:part name="parameters" element="ns:findMetricsByTimePeriodResponse"/>
  </wsdl:message>
  <wsdl:portType name="MetricsDataServicePortType">
    <wsdl:operation name="findLastMetrics">
      <wsdl:input message="ns:findLastMetricsRequest" wsaw:Action="urn:findLastMetrics"/>
      <wsdl:output message="ns:findLastMetricsResponse" wsaw:Action="urn:findLastMetricsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSources">
      <wsdl:input message="ns:getAllSourcesRequest" wsaw:Action="urn:getAllSources"/>
      <wsdl:output message="ns:getAllSourcesResponse" wsaw:Action="urn:getAllSourcesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="findMetricsByTimePeriod">
      <wsdl:input message="ns:findMetricsByTimePeriodRequest" wsaw:Action="urn:findMetricsByTimePeriod"/>
      <wsdl:output message="ns:findMetricsByTimePeriodResponse" wsaw:Action="urn:findMetricsByTimePeriodResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MetricsDataServiceSoap11Binding" type="ns:MetricsDataServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="findLastMetrics">
      <soap:operation soapAction="urn:findLastMetrics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllSources">
      <soap:operation soapAction="urn:getAllSources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMetricsByTimePeriod">
      <soap:operation soapAction="urn:findMetricsByTimePeriod" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MetricsDataServiceSoap12Binding" type="ns:MetricsDataServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="findLastMetrics">
      <soap12:operation soapAction="urn:findLastMetrics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllSources">
      <soap12:operation soapAction="urn:getAllSources" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMetricsByTimePeriod">
      <soap12:operation soapAction="urn:findMetricsByTimePeriod" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MetricsDataServiceHttpBinding" type="ns:MetricsDataServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="findLastMetrics">
      <http:operation location="findLastMetrics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllSources">
      <http:operation location="getAllSources"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMetricsByTimePeriod">
      <http:operation location="findMetricsByTimePeriod"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MetricsDataService">
    <wsdl:port name="MetricsDataServiceHttpsSoap11Endpoint" binding="ns:MetricsDataServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="MetricsDataServiceHttpsSoap12Endpoint" binding="ns:MetricsDataServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="MetricsDataServiceHttpsEndpoint" binding="ns:MetricsDataServiceHttpBinding">
      <http:address location="https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="52525e06-d94b-4f40-b752-21c7d06c067a" isOneWay="false" action="urn:findLastMetrics" name="findLastMetrics" bindingOperationName="findLastMetrics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c0f8cfd8-2bd2-40fd-9ab8-ec62e279dc5c" isOneWay="false" action="urn:findMetricsByTimePeriod" name="findMetricsByTimePeriod" bindingOperationName="findMetricsByTimePeriod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="214edc7b-12b3-4ba9-a6de-91a67b2340d7" isOneWay="false" action="urn:getAllSources" name="getAllSources" bindingOperationName="getAllSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ec581a71-8528-4a4e-aa85-5d83796143d2" wsaVersion="NONE" name="ModuleAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.mgt.module.carbon.wso2.org}ModuleAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/ModuleAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="2128d842-ae8c-455d-9ef8-b5e4be4407ed" isOneWay="false" action="urn:disengageModuleForOperation" name="disengageModuleForOperation" bindingOperationName="disengageModuleForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="42651baa-5d77-487d-b89f-a4006f2dc3ad" isOneWay="false" action="urn:disengageModuleForService" name="disengageModuleForService" bindingOperationName="disengageModuleForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="558ab9cf-c48c-47b8-afd9-dd61ebed0964" isOneWay="false" action="urn:disengageModuleForServiceGroup" name="disengageModuleForServiceGroup" bindingOperationName="disengageModuleForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab80f514-ab60-438d-a820-db657d3c6d7d" isOneWay="false" action="urn:disengageModuleFromSystem" name="disengageModuleFromSystem" bindingOperationName="disengageModuleFromSystem" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="228e5c73-8614-49b2-878a-d6c6a132e308" isOneWay="false" action="urn:engageModuleForOperation" name="engageModuleForOperation" bindingOperationName="engageModuleForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bf4c64b0-a8bd-4ef0-b6f2-61638df10590" isOneWay="false" action="urn:engageModuleForService" name="engageModuleForService" bindingOperationName="engageModuleForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ae1ed847-661d-44cf-b6cc-ba84c9f31f14" isOneWay="false" action="urn:engageModuleForServiceGroup" name="engageModuleForServiceGroup" bindingOperationName="engageModuleForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66b002ae-8081-40be-9297-5e9b2d07c9f2" isOneWay="false" action="urn:getModuleInfo" name="getModuleInfo" bindingOperationName="getModuleInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f12c18ae-13d9-4df4-bfe6-22b2413c0c35" isOneWay="false" action="urn:getModuleParameters" name="getModuleParameters" bindingOperationName="getModuleParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d0fe7682-7d25-431f-b80f-bb0355d7508d" isOneWay="false" action="urn:globallyDisengageModule" name="globallyDisengageModule" bindingOperationName="globallyDisengageModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ccf19aee-2c4f-4735-b582-5a7a86fa0e50" isOneWay="false" action="urn:globallyEngageModule" name="globallyEngageModule" bindingOperationName="globallyEngageModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cae3b16a-d06c-4d06-ba50-c83cf9d6dd42" isOneWay="false" action="urn:listGloballyEngagedModules" name="listGloballyEngagedModules" bindingOperationName="listGloballyEngagedModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="20d22e2f-46f6-44e5-b87c-b5c43d8ed67c" isOneWay="false" action="urn:listModules" name="listModules" bindingOperationName="listModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="24f6c4c9-c020-455c-8c58-a475d5c91abc" isOneWay="false" action="urn:listModulesForOperation" name="listModulesForOperation" bindingOperationName="listModulesForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86ec1d4e-2c8f-476e-a92c-5ac04af46d8b" isOneWay="false" action="urn:listModulesForService" name="listModulesForService" bindingOperationName="listModulesForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66d13899-9e33-4873-bf6b-917504698628" isOneWay="false" action="urn:listModulesForServiceGroup" name="listModulesForServiceGroup" bindingOperationName="listModulesForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2f20ca4d-563c-4ebc-9a58-8546c1eacca4" isOneWay="false" action="urn:removeModule" name="removeModule" bindingOperationName="removeModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1652ca1d-67b9-4e72-a508-a3e563e3ae16" isOneWay="false" action="urn:removeModuleParameter" name="removeModuleParameter" bindingOperationName="removeModuleParameter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="88b70595-27ff-4f14-903d-4d96bba0156d" isOneWay="false" action="urn:setModuleParameters" name="setModuleParameters" bindingOperationName="setModuleParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c008413f-6e9a-4540-91d8-7b0880b2aaac" isOneWay="false" action="urn:uploadModule" name="uploadModule" bindingOperationName="uploadModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="feb60a75-0880-4464-b329-28aa9c432f23" wsaVersion="NONE" name="ModuleAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.mgt.module.carbon.wso2.org}ModuleAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/ModuleAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ModuleAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ModuleAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.mgt.module.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://service.mgt.module.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2452="http://mgt.module.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ModuleAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.module.carbon.wso2.org/xsd">
      <xs:complexType name="ModuleMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="engagedGlobalLevel" type="xs:boolean"/>
          <xs:element minOccurs="0" name="engagedOperationLevel" type="xs:boolean"/>
          <xs:element minOccurs="0" name="engagedServiceGroupLevel" type="xs:boolean"/>
          <xs:element minOccurs="0" name="engagedServiceLevel" type="xs:boolean"/>
          <xs:element minOccurs="0" name="managedModule" type="xs:boolean"/>
          <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="modulename" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ModuleMgtException">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="level" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ModuleUploadData">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.mgt.module.carbon.wso2.org" xmlns:ax2453="http://mgt.module.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.module.carbon.wso2.org/xsd"/>
      <xs:element name="listGloballyEngagedModules">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listGloballyEngagedModulesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModules">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ModuleAdminServiceModuleMgtException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ModuleMgtException" nillable="true" type="ax2452:ModuleMgtException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForOperation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForOperationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModuleInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModuleInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="globallyEngageModule">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="globallyEngageModuleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForOperation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForOperationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForOperation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForOperationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="globallyDisengageModule">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="globallyDisengageModuleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadModule">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="moduleUploadData" nillable="true" type="ax2452:ModuleUploadData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadModuleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModuleParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModuleParametersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setModuleParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="parameters" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeModuleParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeModuleParameterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleFromSystem">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleFromSystemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeModule">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeModuleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="disengageModuleFromSystemRequest">
    <wsdl:part name="parameters" element="ns:disengageModuleFromSystem"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleFromSystemResponse">
    <wsdl:part name="parameters" element="ns:disengageModuleFromSystemResponse"/>
  </wsdl:message>
  <wsdl:message name="ModuleAdminServiceModuleMgtException">
    <wsdl:part name="parameters" element="ns:ModuleAdminServiceModuleMgtException"/>
  </wsdl:message>
  <wsdl:message name="listModulesForOperationRequest">
    <wsdl:part name="parameters" element="ns:listModulesForOperation"/>
  </wsdl:message>
  <wsdl:message name="listModulesForOperationResponse">
    <wsdl:part name="parameters" element="ns:listModulesForOperationResponse"/>
  </wsdl:message>
  <wsdl:message name="listGloballyEngagedModulesRequest">
    <wsdl:part name="parameters" element="ns:listGloballyEngagedModules"/>
  </wsdl:message>
  <wsdl:message name="listGloballyEngagedModulesResponse">
    <wsdl:part name="parameters" element="ns:listGloballyEngagedModulesResponse"/>
  </wsdl:message>
  <wsdl:message name="listModulesForServiceRequest">
    <wsdl:part name="parameters" element="ns:listModulesForService"/>
  </wsdl:message>
  <wsdl:message name="listModulesForServiceResponse">
    <wsdl:part name="parameters" element="ns:listModulesForServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="globallyEngageModuleRequest">
    <wsdl:part name="parameters" element="ns:globallyEngageModule"/>
  </wsdl:message>
  <wsdl:message name="globallyEngageModuleResponse">
    <wsdl:part name="parameters" element="ns:globallyEngageModuleResponse"/>
  </wsdl:message>
  <wsdl:message name="globallyDisengageModuleRequest">
    <wsdl:part name="parameters" element="ns:globallyDisengageModule"/>
  </wsdl:message>
  <wsdl:message name="globallyDisengageModuleResponse">
    <wsdl:part name="parameters" element="ns:globallyDisengageModuleResponse"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForOperationRequest">
    <wsdl:part name="parameters" element="ns:disengageModuleForOperation"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForOperationResponse">
    <wsdl:part name="parameters" element="ns:disengageModuleForOperationResponse"/>
  </wsdl:message>
  <wsdl:message name="removeModuleRequest">
    <wsdl:part name="parameters" element="ns:removeModule"/>
  </wsdl:message>
  <wsdl:message name="removeModuleResponse">
    <wsdl:part name="parameters" element="ns:removeModuleResponse"/>
  </wsdl:message>
  <wsdl:message name="listModulesRequest">
    <wsdl:part name="parameters" element="ns:listModules"/>
  </wsdl:message>
  <wsdl:message name="listModulesResponse">
    <wsdl:part name="parameters" element="ns:listModulesResponse"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForServiceGroupRequest">
    <wsdl:part name="parameters" element="ns:engageModuleForServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForServiceGroupResponse">
    <wsdl:part name="parameters" element="ns:engageModuleForServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="getModuleInfoRequest">
    <wsdl:part name="parameters" element="ns:getModuleInfo"/>
  </wsdl:message>
  <wsdl:message name="getModuleInfoResponse">
    <wsdl:part name="parameters" element="ns:getModuleInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForServiceRequest">
    <wsdl:part name="parameters" element="ns:engageModuleForService"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForServiceResponse">
    <wsdl:part name="parameters" element="ns:engageModuleForServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForServiceGroupRequest">
    <wsdl:part name="parameters" element="ns:disengageModuleForServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForServiceGroupResponse">
    <wsdl:part name="parameters" element="ns:disengageModuleForServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="removeModuleParameterRequest">
    <wsdl:part name="parameters" element="ns:removeModuleParameter"/>
  </wsdl:message>
  <wsdl:message name="removeModuleParameterResponse">
    <wsdl:part name="parameters" element="ns:removeModuleParameterResponse"/>
  </wsdl:message>
  <wsdl:message name="uploadModuleRequest">
    <wsdl:part name="parameters" element="ns:uploadModule"/>
  </wsdl:message>
  <wsdl:message name="uploadModuleResponse">
    <wsdl:part name="parameters" element="ns:uploadModuleResponse"/>
  </wsdl:message>
  <wsdl:message name="setModuleParametersRequest">
    <wsdl:part name="parameters" element="ns:setModuleParameters"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForServiceRequest">
    <wsdl:part name="parameters" element="ns:disengageModuleForService"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForServiceResponse">
    <wsdl:part name="parameters" element="ns:disengageModuleForServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForOperationRequest">
    <wsdl:part name="parameters" element="ns:engageModuleForOperation"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForOperationResponse">
    <wsdl:part name="parameters" element="ns:engageModuleForOperationResponse"/>
  </wsdl:message>
  <wsdl:message name="getModuleParametersRequest">
    <wsdl:part name="parameters" element="ns:getModuleParameters"/>
  </wsdl:message>
  <wsdl:message name="getModuleParametersResponse">
    <wsdl:part name="parameters" element="ns:getModuleParametersResponse"/>
  </wsdl:message>
  <wsdl:message name="listModulesForServiceGroupRequest">
    <wsdl:part name="parameters" element="ns:listModulesForServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="listModulesForServiceGroupResponse">
    <wsdl:part name="parameters" element="ns:listModulesForServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:portType name="ModuleAdminServicePortType">
    <wsdl:operation name="disengageModuleFromSystem">
      <wsdl:input message="ns:disengageModuleFromSystemRequest" wsaw:Action="urn:disengageModuleFromSystem"/>
      <wsdl:output message="ns:disengageModuleFromSystemResponse" wsaw:Action="urn:disengageModuleFromSystemResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:disengageModuleFromSystemModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="listModulesForOperation">
      <wsdl:input message="ns:listModulesForOperationRequest" wsaw:Action="urn:listModulesForOperation"/>
      <wsdl:output message="ns:listModulesForOperationResponse" wsaw:Action="urn:listModulesForOperationResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:listModulesForOperationModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="listGloballyEngagedModules">
      <wsdl:input message="ns:listGloballyEngagedModulesRequest" wsaw:Action="urn:listGloballyEngagedModules"/>
      <wsdl:output message="ns:listGloballyEngagedModulesResponse" wsaw:Action="urn:listGloballyEngagedModulesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listModulesForService">
      <wsdl:input message="ns:listModulesForServiceRequest" wsaw:Action="urn:listModulesForService"/>
      <wsdl:output message="ns:listModulesForServiceResponse" wsaw:Action="urn:listModulesForServiceResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:listModulesForServiceModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="globallyEngageModule">
      <wsdl:input message="ns:globallyEngageModuleRequest" wsaw:Action="urn:globallyEngageModule"/>
      <wsdl:output message="ns:globallyEngageModuleResponse" wsaw:Action="urn:globallyEngageModuleResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:globallyEngageModuleModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="globallyDisengageModule">
      <wsdl:input message="ns:globallyDisengageModuleRequest" wsaw:Action="urn:globallyDisengageModule"/>
      <wsdl:output message="ns:globallyDisengageModuleResponse" wsaw:Action="urn:globallyDisengageModuleResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:globallyDisengageModuleModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForOperation">
      <wsdl:input message="ns:disengageModuleForOperationRequest" wsaw:Action="urn:disengageModuleForOperation"/>
      <wsdl:output message="ns:disengageModuleForOperationResponse" wsaw:Action="urn:disengageModuleForOperationResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:disengageModuleForOperationModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="removeModule">
      <wsdl:input message="ns:removeModuleRequest" wsaw:Action="urn:removeModule"/>
      <wsdl:output message="ns:removeModuleResponse" wsaw:Action="urn:removeModuleResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:removeModuleModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="listModules">
      <wsdl:input message="ns:listModulesRequest" wsaw:Action="urn:listModules"/>
      <wsdl:output message="ns:listModulesResponse" wsaw:Action="urn:listModulesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForServiceGroup">
      <wsdl:input message="ns:engageModuleForServiceGroupRequest" wsaw:Action="urn:engageModuleForServiceGroup"/>
      <wsdl:output message="ns:engageModuleForServiceGroupResponse" wsaw:Action="urn:engageModuleForServiceGroupResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:engageModuleForServiceGroupModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="getModuleInfo">
      <wsdl:input message="ns:getModuleInfoRequest" wsaw:Action="urn:getModuleInfo"/>
      <wsdl:output message="ns:getModuleInfoResponse" wsaw:Action="urn:getModuleInfoResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:getModuleInfoModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForService">
      <wsdl:input message="ns:engageModuleForServiceRequest" wsaw:Action="urn:engageModuleForService"/>
      <wsdl:output message="ns:engageModuleForServiceResponse" wsaw:Action="urn:engageModuleForServiceResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:engageModuleForServiceModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForServiceGroup">
      <wsdl:input message="ns:disengageModuleForServiceGroupRequest" wsaw:Action="urn:disengageModuleForServiceGroup"/>
      <wsdl:output message="ns:disengageModuleForServiceGroupResponse" wsaw:Action="urn:disengageModuleForServiceGroupResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:disengageModuleForServiceGroupModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="removeModuleParameter">
      <wsdl:input message="ns:removeModuleParameterRequest" wsaw:Action="urn:removeModuleParameter"/>
      <wsdl:output message="ns:removeModuleParameterResponse" wsaw:Action="urn:removeModuleParameterResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:removeModuleParameterModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="uploadModule">
      <wsdl:input message="ns:uploadModuleRequest" wsaw:Action="urn:uploadModule"/>
      <wsdl:output message="ns:uploadModuleResponse" wsaw:Action="urn:uploadModuleResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setModuleParameters">
      <wsdl:input message="ns:setModuleParametersRequest" wsaw:Action="urn:setModuleParameters"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:setModuleParametersModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForService">
      <wsdl:input message="ns:disengageModuleForServiceRequest" wsaw:Action="urn:disengageModuleForService"/>
      <wsdl:output message="ns:disengageModuleForServiceResponse" wsaw:Action="urn:disengageModuleForServiceResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:disengageModuleForServiceModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForOperation">
      <wsdl:input message="ns:engageModuleForOperationRequest" wsaw:Action="urn:engageModuleForOperation"/>
      <wsdl:output message="ns:engageModuleForOperationResponse" wsaw:Action="urn:engageModuleForOperationResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:engageModuleForOperationModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="getModuleParameters">
      <wsdl:input message="ns:getModuleParametersRequest" wsaw:Action="urn:getModuleParameters"/>
      <wsdl:output message="ns:getModuleParametersResponse" wsaw:Action="urn:getModuleParametersResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:getModuleParametersModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="listModulesForServiceGroup">
      <wsdl:input message="ns:listModulesForServiceGroupRequest" wsaw:Action="urn:listModulesForServiceGroup"/>
      <wsdl:output message="ns:listModulesForServiceGroupResponse" wsaw:Action="urn:listModulesForServiceGroupResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:listModulesForServiceGroupModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ModuleAdminServiceSoap11Binding" type="ns:ModuleAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="disengageModuleFromSystem">
      <soap:operation soapAction="urn:disengageModuleFromSystem" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModulesForOperation">
      <soap:operation soapAction="urn:listModulesForOperation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listGloballyEngagedModules">
      <soap:operation soapAction="urn:listGloballyEngagedModules" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForService">
      <soap:operation soapAction="urn:listModulesForService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="globallyEngageModule">
      <soap:operation soapAction="urn:globallyEngageModule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="globallyDisengageModule">
      <soap:operation soapAction="urn:globallyDisengageModule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForOperation">
      <soap:operation soapAction="urn:disengageModuleForOperation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModule">
      <soap:operation soapAction="urn:removeModule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModules">
      <soap:operation soapAction="urn:listModules" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForServiceGroup">
      <soap:operation soapAction="urn:engageModuleForServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleInfo">
      <soap:operation soapAction="urn:getModuleInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForService">
      <soap:operation soapAction="urn:engageModuleForService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForServiceGroup">
      <soap:operation soapAction="urn:disengageModuleForServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModuleParameter">
      <soap:operation soapAction="urn:removeModuleParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadModule">
      <soap:operation soapAction="urn:uploadModule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setModuleParameters">
      <soap:operation soapAction="urn:setModuleParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForService">
      <soap:operation soapAction="urn:disengageModuleForService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForOperation">
      <soap:operation soapAction="urn:engageModuleForOperation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleParameters">
      <soap:operation soapAction="urn:getModuleParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModulesForServiceGroup">
      <soap:operation soapAction="urn:listModulesForServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ModuleAdminServiceSoap12Binding" type="ns:ModuleAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="disengageModuleFromSystem">
      <soap12:operation soapAction="urn:disengageModuleFromSystem" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModulesForOperation">
      <soap12:operation soapAction="urn:listModulesForOperation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listGloballyEngagedModules">
      <soap12:operation soapAction="urn:listGloballyEngagedModules" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForService">
      <soap12:operation soapAction="urn:listModulesForService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="globallyEngageModule">
      <soap12:operation soapAction="urn:globallyEngageModule" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="globallyDisengageModule">
      <soap12:operation soapAction="urn:globallyDisengageModule" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForOperation">
      <soap12:operation soapAction="urn:disengageModuleForOperation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModule">
      <soap12:operation soapAction="urn:removeModule" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModules">
      <soap12:operation soapAction="urn:listModules" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForServiceGroup">
      <soap12:operation soapAction="urn:engageModuleForServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleInfo">
      <soap12:operation soapAction="urn:getModuleInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForService">
      <soap12:operation soapAction="urn:engageModuleForService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForServiceGroup">
      <soap12:operation soapAction="urn:disengageModuleForServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModuleParameter">
      <soap12:operation soapAction="urn:removeModuleParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadModule">
      <soap12:operation soapAction="urn:uploadModule" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setModuleParameters">
      <soap12:operation soapAction="urn:setModuleParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForService">
      <soap12:operation soapAction="urn:disengageModuleForService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForOperation">
      <soap12:operation soapAction="urn:engageModuleForOperation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleParameters">
      <soap12:operation soapAction="urn:getModuleParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModulesForServiceGroup">
      <soap12:operation soapAction="urn:listModulesForServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ModuleAdminServiceHttpBinding" type="ns:ModuleAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="disengageModuleFromSystem">
      <http:operation location="disengageModuleFromSystem"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForOperation">
      <http:operation location="listModulesForOperation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listGloballyEngagedModules">
      <http:operation location="listGloballyEngagedModules"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForService">
      <http:operation location="listModulesForService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="globallyEngageModule">
      <http:operation location="globallyEngageModule"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="globallyDisengageModule">
      <http:operation location="globallyDisengageModule"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForOperation">
      <http:operation location="disengageModuleForOperation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeModule">
      <http:operation location="removeModule"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModules">
      <http:operation location="listModules"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForServiceGroup">
      <http:operation location="engageModuleForServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getModuleInfo">
      <http:operation location="getModuleInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForService">
      <http:operation location="engageModuleForService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForServiceGroup">
      <http:operation location="disengageModuleForServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeModuleParameter">
      <http:operation location="removeModuleParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="uploadModule">
      <http:operation location="uploadModule"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setModuleParameters">
      <http:operation location="setModuleParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForService">
      <http:operation location="disengageModuleForService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForOperation">
      <http:operation location="engageModuleForOperation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getModuleParameters">
      <http:operation location="getModuleParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForServiceGroup">
      <http:operation location="listModulesForServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ModuleAdminService">
    <wsdl:port name="ModuleAdminServiceHttpsSoap11Endpoint" binding="ns:ModuleAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ModuleAdminServiceHttpsSoap12Endpoint" binding="ns:ModuleAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ModuleAdminServiceHttpsEndpoint" binding="ns:ModuleAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="bfc4ea75-0b42-485e-bea1-915b55cbf411" isOneWay="false" action="urn:disengageModuleForOperation" name="disengageModuleForOperation" bindingOperationName="disengageModuleForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d66b224d-fb05-48d0-8f8c-d9420a18eee3" isOneWay="false" action="urn:disengageModuleForService" name="disengageModuleForService" bindingOperationName="disengageModuleForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="beae47f1-edaa-4d8d-b4c5-cf3dedca37cc" isOneWay="false" action="urn:disengageModuleForServiceGroup" name="disengageModuleForServiceGroup" bindingOperationName="disengageModuleForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="40b1024d-2b5e-4b0a-9822-62267cedba85" isOneWay="false" action="urn:disengageModuleFromSystem" name="disengageModuleFromSystem" bindingOperationName="disengageModuleFromSystem" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="96b7ab12-5e9a-4535-a39d-5a2c78cd0682" isOneWay="false" action="urn:engageModuleForOperation" name="engageModuleForOperation" bindingOperationName="engageModuleForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="45d0cc8b-69fe-4f3d-a4ce-0231ee7aa0ff" isOneWay="false" action="urn:engageModuleForService" name="engageModuleForService" bindingOperationName="engageModuleForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5a96d0e6-eb47-4a1e-8c98-843253fcb1ad" isOneWay="false" action="urn:engageModuleForServiceGroup" name="engageModuleForServiceGroup" bindingOperationName="engageModuleForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="23d57aa6-c7ed-4b91-8414-291e9c48fca8" isOneWay="false" action="urn:getModuleInfo" name="getModuleInfo" bindingOperationName="getModuleInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c11270e6-eed5-4320-8390-bcd1ed1f9d62" isOneWay="false" action="urn:getModuleParameters" name="getModuleParameters" bindingOperationName="getModuleParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="935a7931-0f72-4067-9cf8-37cfd6b37a60" isOneWay="false" action="urn:globallyDisengageModule" name="globallyDisengageModule" bindingOperationName="globallyDisengageModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="50d21d3d-017b-4dce-8dd6-48c50bfd38bf" isOneWay="false" action="urn:globallyEngageModule" name="globallyEngageModule" bindingOperationName="globallyEngageModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5a46a05c-5979-4316-b5e1-eaaba124b8ae" isOneWay="false" action="urn:listGloballyEngagedModules" name="listGloballyEngagedModules" bindingOperationName="listGloballyEngagedModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dece6841-c592-4e71-9b95-12c2bd58dff6" isOneWay="false" action="urn:listModules" name="listModules" bindingOperationName="listModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b32c2bd-748b-4eb0-a168-ccdbc18bf4b1" isOneWay="false" action="urn:listModulesForOperation" name="listModulesForOperation" bindingOperationName="listModulesForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b087f792-eab9-465e-b4d3-da1000f1493c" isOneWay="false" action="urn:listModulesForService" name="listModulesForService" bindingOperationName="listModulesForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5dc719c4-3031-46f2-835a-18fdfddc9cfc" isOneWay="false" action="urn:listModulesForServiceGroup" name="listModulesForServiceGroup" bindingOperationName="listModulesForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="df38cecb-9311-4fcc-942e-1732a0f1bad2" isOneWay="false" action="urn:removeModule" name="removeModule" bindingOperationName="removeModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c37d31fc-3850-49d9-bee8-377a4e86fe97" isOneWay="false" action="urn:removeModuleParameter" name="removeModuleParameter" bindingOperationName="removeModuleParameter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fdfc6f85-35d7-4b43-a1d1-312e33961c41" isOneWay="false" action="urn:setModuleParameters" name="setModuleParameters" bindingOperationName="setModuleParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7aa6be84-7c78-4001-ae56-38c5938c93eb" isOneWay="false" action="urn:uploadModule" name="uploadModule" bindingOperationName="uploadModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9e9aee30-b468-43f3-8706-98291513ec41" wsaVersion="NONE" name="MultipleCredentialsUserAdminSoap12Binding" type="wsdl" bindingName="{http://multiplecredentials.mgt.user.carbon.wso2.org}MultipleCredentialsUserAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/MultipleCredentialsUserAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="435ab891-e1da-40c7-a8fa-e3f671098cfe" isOneWay="false" action="urn:addCredential" name="addCredential" bindingOperationName="addCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="74601fda-0fb4-4774-b0d5-421e110c7bea" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8c7a16e3-1c4b-44e9-8ab7-affa679e323b" isOneWay="false" action="urn:addUsers" name="addUsers" bindingOperationName="addUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ef135764-89ea-493e-a0d5-2a8c8de53ce0" isOneWay="false" action="urn:addUserWithUserId" name="addUserWithUserId" bindingOperationName="addUserWithUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="603b78fc-6c89-42e6-8f45-a8ab5496b0fb" isOneWay="false" action="urn:authenticate" name="authenticate" bindingOperationName="authenticate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="80071768-487e-454d-8f02-b6c7d4faeaaa" isOneWay="false" action="urn:deleteCredential" name="deleteCredential" bindingOperationName="deleteCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d6cd5bb3-fea8-4e1b-b8e4-c66e8ca0d39d" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fbe5a740-167a-47b7-b6b0-ffbbe805eeef" isOneWay="false" action="urn:deleteUserClaimValue" name="deleteUserClaimValue" bindingOperationName="deleteUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52920085-7594-4c36-9e8a-dbb8022bc76d" isOneWay="false" action="urn:deleteUserClaimValues" name="deleteUserClaimValues" bindingOperationName="deleteUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dbeb49cb-2c61-4823-94ea-c3cbe53f58e7" isOneWay="false" action="urn:getAllUserClaimValues" name="getAllUserClaimValues" bindingOperationName="getAllUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="71f5409b-7595-4ce8-860f-8c4beea3ce3c" isOneWay="false" action="urn:getCredentials" name="getCredentials" bindingOperationName="getCredentials" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff67c5a5-8108-426c-8c43-4ce134db4768" isOneWay="false" action="urn:getUserClaimValue" name="getUserClaimValue" bindingOperationName="getUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e70212d6-d9db-4dbe-8ad9-c8d51401c534" isOneWay="false" action="urn:getUserClaimValues" name="getUserClaimValues" bindingOperationName="getUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6864c733-9c6f-46cc-b2b2-4da6b544ed44" isOneWay="false" action="urn:getUserId" name="getUserId" bindingOperationName="getUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e868d4d4-9d28-4294-b401-ed93dfa48ac3" isOneWay="false" action="urn:setUserClaimValue" name="setUserClaimValue" bindingOperationName="setUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f5d4a7dc-e129-417b-a34d-7a0a1d864868" isOneWay="false" action="urn:setUserClaimValues" name="setUserClaimValues" bindingOperationName="setUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a982219-607b-4db4-b4e3-12d26d03cc40" isOneWay="false" action="urn:updateCredential" name="updateCredential" bindingOperationName="updateCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="949d1c3f-83da-492a-88d2-ba340dc4d6ea" wsaVersion="NONE" name="MultipleCredentialsUserAdminSoap11Binding" type="wsdl" bindingName="{http://multiplecredentials.mgt.user.carbon.wso2.org}MultipleCredentialsUserAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/MultipleCredentialsUserAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/MultipleCredentialsUserAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/MultipleCredentialsUserAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://multiplecredentials.mgt.user.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://multiplecredentials.mgt.user.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2692="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2694="http://multiplecredentials.core.user.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>MultipleCredentialsUserAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.mgt.user.carbon.wso2.org/xsd">
      <xs:complexType name="MultipleCredentialsUserAdminException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://multiplecredentials.mgt.user.carbon.wso2.org" xmlns:ax2693="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ax2695="http://multiplecredentials.core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.mgt.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://multiplecredentials.core.user.carbon.wso2.org/xsd"/>
      <xs:element name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="MultipleCredentialsUserAdminException" nillable="true" type="ax2692:MultipleCredentialsUserAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserWithUserId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roleList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2692:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCredential">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="anIdentifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roleList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2692:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteCredential">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUserClaimValuesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2692:ClaimValue"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roleList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2692:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCredentials">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="anIdentifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCredentialsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateCredential">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValueResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValuesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2692:ClaimValue"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2692:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://multiplecredentials.core.user.carbon.wso2.org/xsd">
      <xs:complexType name="Credential">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="credentialProperties" nillable="true" type="ax2694:CredentialProperty"/>
          <xs:element minOccurs="0" name="credentialsType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="secret" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CredentialProperty">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateCredentialRequest">
    <wsdl:part name="parameters" element="ns:updateCredential"/>
  </wsdl:message>
  <wsdl:message name="updateCredentialResponse"/>
  <wsdl:message name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
    <wsdl:part name="parameters" element="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:deleteUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValuesResponse"/>
  <wsdl:message name="authenticateRequest">
    <wsdl:part name="parameters" element="ns:authenticate"/>
  </wsdl:message>
  <wsdl:message name="authenticateResponse">
    <wsdl:part name="parameters" element="ns:authenticateResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserRequest">
    <wsdl:part name="parameters" element="ns:addUser"/>
  </wsdl:message>
  <wsdl:message name="addUserResponse"/>
  <wsdl:message name="getCredentialsRequest">
    <wsdl:part name="parameters" element="ns:getCredentials"/>
  </wsdl:message>
  <wsdl:message name="getCredentialsResponse">
    <wsdl:part name="parameters" element="ns:getCredentialsResponse"/>
  </wsdl:message>
  <wsdl:message name="addCredentialRequest">
    <wsdl:part name="parameters" element="ns:addCredential"/>
  </wsdl:message>
  <wsdl:message name="addCredentialResponse"/>
  <wsdl:message name="addUsersRequest">
    <wsdl:part name="parameters" element="ns:addUsers"/>
  </wsdl:message>
  <wsdl:message name="addUsersResponse"/>
  <wsdl:message name="setUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:setUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="setUserClaimValuesResponse"/>
  <wsdl:message name="deleteUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:deleteUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValueResponse"/>
  <wsdl:message name="setUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:setUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="setUserClaimValueResponse"/>
  <wsdl:message name="getUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValuesResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValueResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValueResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserRequest">
    <wsdl:part name="parameters" element="ns:deleteUser"/>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse"/>
  <wsdl:message name="getAllUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:getAllUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="getAllUserClaimValuesResponse">
    <wsdl:part name="parameters" element="ns:getAllUserClaimValuesResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserWithUserIdRequest">
    <wsdl:part name="parameters" element="ns:addUserWithUserId"/>
  </wsdl:message>
  <wsdl:message name="addUserWithUserIdResponse"/>
  <wsdl:message name="getUserIdRequest">
    <wsdl:part name="parameters" element="ns:getUserId"/>
  </wsdl:message>
  <wsdl:message name="getUserIdResponse">
    <wsdl:part name="parameters" element="ns:getUserIdResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteCredentialRequest">
    <wsdl:part name="parameters" element="ns:deleteCredential"/>
  </wsdl:message>
  <wsdl:message name="deleteCredentialResponse"/>
  <wsdl:portType name="MultipleCredentialsUserAdminPortType">
    <wsdl:operation name="updateCredential">
      <wsdl:input message="ns:updateCredentialRequest" wsaw:Action="urn:updateCredential"/>
      <wsdl:output message="ns:updateCredentialResponse" wsaw:Action="urn:updateCredentialResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:updateCredentialMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <wsdl:input message="ns:deleteUserClaimValuesRequest" wsaw:Action="urn:deleteUserClaimValues"/>
      <wsdl:output message="ns:deleteUserClaimValuesResponse" wsaw:Action="urn:deleteUserClaimValuesResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:deleteUserClaimValuesMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <wsdl:input message="ns:authenticateRequest" wsaw:Action="urn:authenticate"/>
      <wsdl:output message="ns:authenticateResponse" wsaw:Action="urn:authenticateResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:authenticateMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdl:input message="ns:addUserRequest" wsaw:Action="urn:addUser"/>
      <wsdl:output message="ns:addUserResponse" wsaw:Action="urn:addUserResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:addUserMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getCredentials">
      <wsdl:input message="ns:getCredentialsRequest" wsaw:Action="urn:getCredentials"/>
      <wsdl:output message="ns:getCredentialsResponse" wsaw:Action="urn:getCredentialsResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getCredentialsMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addCredential">
      <wsdl:input message="ns:addCredentialRequest" wsaw:Action="urn:addCredential"/>
      <wsdl:output message="ns:addCredentialResponse" wsaw:Action="urn:addCredentialResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:addCredentialMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addUsers">
      <wsdl:input message="ns:addUsersRequest" wsaw:Action="urn:addUsers"/>
      <wsdl:output message="ns:addUsersResponse" wsaw:Action="urn:addUsersResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:addUsersMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <wsdl:input message="ns:setUserClaimValuesRequest" wsaw:Action="urn:setUserClaimValues"/>
      <wsdl:output message="ns:setUserClaimValuesResponse" wsaw:Action="urn:setUserClaimValuesResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:setUserClaimValuesMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <wsdl:input message="ns:deleteUserClaimValueRequest" wsaw:Action="urn:deleteUserClaimValue"/>
      <wsdl:output message="ns:deleteUserClaimValueResponse" wsaw:Action="urn:deleteUserClaimValueResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:deleteUserClaimValueMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <wsdl:input message="ns:setUserClaimValueRequest" wsaw:Action="urn:setUserClaimValue"/>
      <wsdl:output message="ns:setUserClaimValueResponse" wsaw:Action="urn:setUserClaimValueResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:setUserClaimValueMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <wsdl:input message="ns:getUserClaimValuesRequest" wsaw:Action="urn:getUserClaimValues"/>
      <wsdl:output message="ns:getUserClaimValuesResponse" wsaw:Action="urn:getUserClaimValuesResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getUserClaimValuesMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <wsdl:input message="ns:getUserClaimValueRequest" wsaw:Action="urn:getUserClaimValue"/>
      <wsdl:output message="ns:getUserClaimValueResponse" wsaw:Action="urn:getUserClaimValueResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getUserClaimValueMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="ns:deleteUserRequest" wsaw:Action="urn:deleteUser"/>
      <wsdl:output message="ns:deleteUserResponse" wsaw:Action="urn:deleteUserResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:deleteUserMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllUserClaimValues">
      <wsdl:input message="ns:getAllUserClaimValuesRequest" wsaw:Action="urn:getAllUserClaimValues"/>
      <wsdl:output message="ns:getAllUserClaimValuesResponse" wsaw:Action="urn:getAllUserClaimValuesResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getAllUserClaimValuesMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserWithUserId">
      <wsdl:input message="ns:addUserWithUserIdRequest" wsaw:Action="urn:addUserWithUserId"/>
      <wsdl:output message="ns:addUserWithUserIdResponse" wsaw:Action="urn:addUserWithUserIdResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:addUserWithUserIdMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <wsdl:input message="ns:getUserIdRequest" wsaw:Action="urn:getUserId"/>
      <wsdl:output message="ns:getUserIdResponse" wsaw:Action="urn:getUserIdResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getUserIdMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteCredential">
      <wsdl:input message="ns:deleteCredentialRequest" wsaw:Action="urn:deleteCredential"/>
      <wsdl:output message="ns:deleteCredentialResponse" wsaw:Action="urn:deleteCredentialResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:deleteCredentialMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MultipleCredentialsUserAdminSoap11Binding" type="ns:MultipleCredentialsUserAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCredential">
      <soap:operation soapAction="urn:updateCredential" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <soap:operation soapAction="urn:deleteUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <soap:operation soapAction="urn:authenticate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCredentials">
      <soap:operation soapAction="urn:getCredentials" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCredential">
      <soap:operation soapAction="urn:addCredential" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUsers">
      <soap:operation soapAction="urn:addUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <soap:operation soapAction="urn:setUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <soap:operation soapAction="urn:deleteUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <soap:operation soapAction="urn:setUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <soap:operation soapAction="urn:getUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <soap:operation soapAction="urn:getUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserClaimValues">
      <soap:operation soapAction="urn:getAllUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserWithUserId">
      <soap:operation soapAction="urn:addUserWithUserId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <soap:operation soapAction="urn:getUserId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCredential">
      <soap:operation soapAction="urn:deleteCredential" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MultipleCredentialsUserAdminSoap12Binding" type="ns:MultipleCredentialsUserAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCredential">
      <soap12:operation soapAction="urn:updateCredential" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <soap12:operation soapAction="urn:deleteUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <soap12:operation soapAction="urn:authenticate" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap12:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCredentials">
      <soap12:operation soapAction="urn:getCredentials" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCredential">
      <soap12:operation soapAction="urn:addCredential" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUsers">
      <soap12:operation soapAction="urn:addUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <soap12:operation soapAction="urn:setUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <soap12:operation soapAction="urn:deleteUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <soap12:operation soapAction="urn:setUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <soap12:operation soapAction="urn:getUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <soap12:operation soapAction="urn:getUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap12:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserClaimValues">
      <soap12:operation soapAction="urn:getAllUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserWithUserId">
      <soap12:operation soapAction="urn:addUserWithUserId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <soap12:operation soapAction="urn:getUserId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCredential">
      <soap12:operation soapAction="urn:deleteCredential" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MultipleCredentialsUserAdminHttpBinding" type="ns:MultipleCredentialsUserAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateCredential">
      <http:operation location="updateCredential"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <http:operation location="deleteUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <http:operation location="authenticate"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <http:operation location="addUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCredentials">
      <http:operation location="getCredentials"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addCredential">
      <http:operation location="addCredential"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUsers">
      <http:operation location="addUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <http:operation location="setUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <http:operation location="deleteUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <http:operation location="setUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <http:operation location="getUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <http:operation location="getUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <http:operation location="deleteUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllUserClaimValues">
      <http:operation location="getAllUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserWithUserId">
      <http:operation location="addUserWithUserId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <http:operation location="getUserId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteCredential">
      <http:operation location="deleteCredential"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MultipleCredentialsUserAdmin">
    <wsdl:port name="MultipleCredentialsUserAdminHttpsSoap11Endpoint" binding="ns:MultipleCredentialsUserAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="MultipleCredentialsUserAdminHttpsSoap12Endpoint" binding="ns:MultipleCredentialsUserAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="MultipleCredentialsUserAdminHttpsEndpoint" binding="ns:MultipleCredentialsUserAdminHttpBinding">
      <http:address location="https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="d7542a08-323e-4f4e-88a7-83e4ccf11303" isOneWay="false" action="urn:addCredential" name="addCredential" bindingOperationName="addCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f87c1cf5-3e63-42db-9ed8-c0400e8852ec" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1a35ed1a-a7ea-4083-ab7f-1a717718222d" isOneWay="false" action="urn:addUsers" name="addUsers" bindingOperationName="addUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="957892d7-4c61-4ac8-914a-60fc361555dd" isOneWay="false" action="urn:addUserWithUserId" name="addUserWithUserId" bindingOperationName="addUserWithUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7eabb00b-36da-4182-be68-8989c36b1295" isOneWay="false" action="urn:authenticate" name="authenticate" bindingOperationName="authenticate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="338c7c12-a2dd-4473-84e8-cea0b49843ba" isOneWay="false" action="urn:deleteCredential" name="deleteCredential" bindingOperationName="deleteCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0a56f149-e985-4590-99d3-09297489be18" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="774b4235-7156-43e2-b566-955596bc6b6c" isOneWay="false" action="urn:deleteUserClaimValue" name="deleteUserClaimValue" bindingOperationName="deleteUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3c62794-f60f-4505-abd3-3e23b7fdda7c" isOneWay="false" action="urn:deleteUserClaimValues" name="deleteUserClaimValues" bindingOperationName="deleteUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fe31e0ff-e28f-44d9-afb4-8c63408cb308" isOneWay="false" action="urn:getAllUserClaimValues" name="getAllUserClaimValues" bindingOperationName="getAllUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e8974000-60c6-46c6-bf1b-965e8be45148" isOneWay="false" action="urn:getCredentials" name="getCredentials" bindingOperationName="getCredentials" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4585154a-b260-4a9a-a410-26183a9e7d78" isOneWay="false" action="urn:getUserClaimValue" name="getUserClaimValue" bindingOperationName="getUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08d7ca9e-8104-48a2-a77b-02ec94025bbe" isOneWay="false" action="urn:getUserClaimValues" name="getUserClaimValues" bindingOperationName="getUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="90808ce4-bb10-444a-a2e0-c7794eff23fd" isOneWay="false" action="urn:getUserId" name="getUserId" bindingOperationName="getUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c472fff-103d-4dd6-a3a2-4f4009f32eab" isOneWay="false" action="urn:setUserClaimValue" name="setUserClaimValue" bindingOperationName="setUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cefce673-fa6b-41e7-bdbf-ec4e1fde5275" isOneWay="false" action="urn:setUserClaimValues" name="setUserClaimValues" bindingOperationName="setUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58f45072-131a-48b3-acca-4b910f2765aa" isOneWay="false" action="urn:updateCredential" name="updateCredential" bindingOperationName="updateCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f3d83319-9b73-4d7d-9f34-a07cd55bdb6e" wsaVersion="NONE" name="NDataSourceAdminSoap12Binding" type="wsdl" bindingName="{http://services.core.ndatasource.carbon.wso2.org}NDataSourceAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/NDataSourceAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="99addf53-6285-48d7-8779-f5c7f4d1a34e" isOneWay="false" action="urn:addDataSource" name="addDataSource" bindingOperationName="addDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7978438e-dc71-48fd-bab3-0d37a950fd4c" isOneWay="false" action="urn:deleteDataSource" name="deleteDataSource" bindingOperationName="deleteDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c5198993-92c0-448e-a0dd-b227eb9938db" isOneWay="false" action="urn:getAllDataSources" name="getAllDataSources" bindingOperationName="getAllDataSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="919b6c55-cbb7-4c6b-940a-395c7e9996cf" isOneWay="false" action="urn:getAllDataSourcesForType" name="getAllDataSourcesForType" bindingOperationName="getAllDataSourcesForType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5fc82bf2-dd52-4040-af20-439af9e42858" isOneWay="false" action="urn:getDataSource" name="getDataSource" bindingOperationName="getDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9df59222-64e7-4f2c-bc5d-c1e97c28768e" isOneWay="false" action="urn:getDataSourceTypes" name="getDataSourceTypes" bindingOperationName="getDataSourceTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8a2812b5-f96d-490a-a23d-b810b1c53766" isOneWay="false" action="urn:reloadAllDataSources" name="reloadAllDataSources" bindingOperationName="reloadAllDataSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d40af1c4-ad0c-4e5c-aa8b-d59cf67956f0" isOneWay="false" action="urn:reloadDataSource" name="reloadDataSource" bindingOperationName="reloadDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="424c1768-f873-4ee4-8a76-05b25cf23f6d" isOneWay="false" action="urn:testDataSourceConnection" name="testDataSourceConnection" bindingOperationName="testDataSourceConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f9cc291a-50f2-41c1-8078-0f1585f0096e" wsaVersion="NONE" name="NDataSourceAdminSoap11Binding" type="wsdl" bindingName="{http://services.core.ndatasource.carbon.wso2.org}NDataSourceAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/NDataSourceAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/NDataSourceAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/NDataSourceAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.core.ndatasource.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2454="http://common.ndatasource.carbon.wso2.org/xsd" xmlns:ax2456="http://services.core.ndatasource.carbon.wso2.org/xsd" xmlns:ax2457="http://core.ndatasource.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://services.core.ndatasource.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>NDataSourceAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.core.ndatasource.carbon.wso2.org/xsd" xmlns:ax2458="http://core.ndatasource.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.ndatasource.carbon.wso2.org/xsd"/>
      <xs:complexType name="WSDataSourceInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="dsMetaInfo" nillable="true" type="ax2456:WSDataSourceMetaInfo"/>
          <xs:element minOccurs="0" name="dsStatus" nillable="true" type="ax2457:DataSourceStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDataSourceMetaInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="definition" nillable="true" type="ax2456:WSDataSourceMetaInfo_WSDataSourceDefinition"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="jndiConfig" nillable="true" type="ax2457:JNDIConfig"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="system" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDataSourceMetaInfo_WSDataSourceDefinition">
        <xs:sequence>
          <xs:element minOccurs="0" name="dsXMLConfiguration" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2455="http://common.ndatasource.carbon.wso2.org/xsd" xmlns:ax2459="http://services.core.ndatasource.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://common.ndatasource.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://services.core.ndatasource.carbon.wso2.org/xsd"/>
      <xs:element name="NDataSourceAdminDataSourceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DataSourceException" nillable="true" type="ax2454:DataSourceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllDataSources">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllDataSourcesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2456:WSDataSourceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllDataSourcesForType">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllDataSourcesForTypeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2456:WSDataSourceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDataSourceTypes">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDataSourceTypesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadAllDataSources">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadAllDataSourcesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsmInfo" nillable="true" type="ax2456:WSDataSourceMetaInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="testDataSourceConnection">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsmInfo" nillable="true" type="ax2456:WSDataSourceMetaInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="testDataSourceConnectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2456:WSDataSourceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.ndatasource.carbon.wso2.org/xsd">
      <xs:complexType name="JNDIConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="environment" nillable="true" type="ax2457:JNDIConfig_EnvEntry"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="useDataSourceFactory" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="JNDIConfig_EnvEntry">
        <xs:sequence>
          <xs:element minOccurs="0" name="encrypted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DataSourceStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="details" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mode" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.ndatasource.carbon.wso2.org/xsd">
      <xs:complexType name="DataSourceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="deleteDataSourceRequest">
    <wsdl:part name="parameters" element="ns1:deleteDataSource"/>
  </wsdl:message>
  <wsdl:message name="deleteDataSourceResponse">
    <wsdl:part name="parameters" element="ns1:deleteDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="NDataSourceAdminDataSourceException">
    <wsdl:part name="parameters" element="ns1:NDataSourceAdminDataSourceException"/>
  </wsdl:message>
  <wsdl:message name="getDataSourceRequest">
    <wsdl:part name="parameters" element="ns1:getDataSource"/>
  </wsdl:message>
  <wsdl:message name="getDataSourceResponse">
    <wsdl:part name="parameters" element="ns1:getDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllDataSourcesRequest">
    <wsdl:part name="parameters" element="ns1:getAllDataSources"/>
  </wsdl:message>
  <wsdl:message name="getAllDataSourcesResponse">
    <wsdl:part name="parameters" element="ns1:getAllDataSourcesResponse"/>
  </wsdl:message>
  <wsdl:message name="testDataSourceConnectionRequest">
    <wsdl:part name="parameters" element="ns1:testDataSourceConnection"/>
  </wsdl:message>
  <wsdl:message name="testDataSourceConnectionResponse">
    <wsdl:part name="parameters" element="ns1:testDataSourceConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="reloadDataSourceRequest">
    <wsdl:part name="parameters" element="ns1:reloadDataSource"/>
  </wsdl:message>
  <wsdl:message name="reloadDataSourceResponse">
    <wsdl:part name="parameters" element="ns1:reloadDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="getDataSourceTypesRequest">
    <wsdl:part name="parameters" element="ns1:getDataSourceTypes"/>
  </wsdl:message>
  <wsdl:message name="getDataSourceTypesResponse">
    <wsdl:part name="parameters" element="ns1:getDataSourceTypesResponse"/>
  </wsdl:message>
  <wsdl:message name="reloadAllDataSourcesRequest">
    <wsdl:part name="parameters" element="ns1:reloadAllDataSources"/>
  </wsdl:message>
  <wsdl:message name="reloadAllDataSourcesResponse">
    <wsdl:part name="parameters" element="ns1:reloadAllDataSourcesResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllDataSourcesForTypeRequest">
    <wsdl:part name="parameters" element="ns1:getAllDataSourcesForType"/>
  </wsdl:message>
  <wsdl:message name="getAllDataSourcesForTypeResponse">
    <wsdl:part name="parameters" element="ns1:getAllDataSourcesForTypeResponse"/>
  </wsdl:message>
  <wsdl:message name="addDataSourceRequest">
    <wsdl:part name="parameters" element="ns1:addDataSource"/>
  </wsdl:message>
  <wsdl:message name="addDataSourceResponse">
    <wsdl:part name="parameters" element="ns1:addDataSourceResponse"/>
  </wsdl:message>
  <wsdl:portType name="NDataSourceAdminPortType">
    <wsdl:operation name="deleteDataSource">
      <wsdl:input message="tns:deleteDataSourceRequest" wsaw:Action="urn:deleteDataSource"/>
      <wsdl:output message="tns:deleteDataSourceResponse" wsaw:Action="urn:deleteDataSourceResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:deleteDataSourceNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <wsdl:input message="tns:getDataSourceRequest" wsaw:Action="urn:getDataSource"/>
      <wsdl:output message="tns:getDataSourceResponse" wsaw:Action="urn:getDataSourceResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:getDataSourceNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSources">
      <wsdl:input message="tns:getAllDataSourcesRequest" wsaw:Action="urn:getAllDataSources"/>
      <wsdl:output message="tns:getAllDataSourcesResponse" wsaw:Action="urn:getAllDataSourcesResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:getAllDataSourcesNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="testDataSourceConnection">
      <wsdl:input message="tns:testDataSourceConnectionRequest" wsaw:Action="urn:testDataSourceConnection"/>
      <wsdl:output message="tns:testDataSourceConnectionResponse" wsaw:Action="urn:testDataSourceConnectionResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:testDataSourceConnectionNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="reloadDataSource">
      <wsdl:input message="tns:reloadDataSourceRequest" wsaw:Action="urn:reloadDataSource"/>
      <wsdl:output message="tns:reloadDataSourceResponse" wsaw:Action="urn:reloadDataSourceResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:reloadDataSourceNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="getDataSourceTypes">
      <wsdl:input message="tns:getDataSourceTypesRequest" wsaw:Action="urn:getDataSourceTypes"/>
      <wsdl:output message="tns:getDataSourceTypesResponse" wsaw:Action="urn:getDataSourceTypesResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:getDataSourceTypesNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="reloadAllDataSources">
      <wsdl:input message="tns:reloadAllDataSourcesRequest" wsaw:Action="urn:reloadAllDataSources"/>
      <wsdl:output message="tns:reloadAllDataSourcesResponse" wsaw:Action="urn:reloadAllDataSourcesResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:reloadAllDataSourcesNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSourcesForType">
      <wsdl:input message="tns:getAllDataSourcesForTypeRequest" wsaw:Action="urn:getAllDataSourcesForType"/>
      <wsdl:output message="tns:getAllDataSourcesForTypeResponse" wsaw:Action="urn:getAllDataSourcesForTypeResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:getAllDataSourcesForTypeNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="addDataSource">
      <wsdl:input message="tns:addDataSourceRequest" wsaw:Action="urn:addDataSource"/>
      <wsdl:output message="tns:addDataSourceResponse" wsaw:Action="urn:addDataSourceResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:addDataSourceNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="NDataSourceAdminSoap11Binding" type="tns:NDataSourceAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="deleteDataSource">
      <soap:operation soapAction="urn:deleteDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <soap:operation soapAction="urn:getDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSources">
      <soap:operation soapAction="urn:getAllDataSources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testDataSourceConnection">
      <soap:operation soapAction="urn:testDataSourceConnection" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadDataSource">
      <soap:operation soapAction="urn:reloadDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSourceTypes">
      <soap:operation soapAction="urn:getDataSourceTypes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadAllDataSources">
      <soap:operation soapAction="urn:reloadAllDataSources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSourcesForType">
      <soap:operation soapAction="urn:getAllDataSourcesForType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDataSource">
      <soap:operation soapAction="urn:addDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="NDataSourceAdminSoap12Binding" type="tns:NDataSourceAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="deleteDataSource">
      <soap12:operation soapAction="urn:deleteDataSource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <soap12:operation soapAction="urn:getDataSource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSources">
      <soap12:operation soapAction="urn:getAllDataSources" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testDataSourceConnection">
      <soap12:operation soapAction="urn:testDataSourceConnection" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadDataSource">
      <soap12:operation soapAction="urn:reloadDataSource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSourceTypes">
      <soap12:operation soapAction="urn:getDataSourceTypes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadAllDataSources">
      <soap12:operation soapAction="urn:reloadAllDataSources" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSourcesForType">
      <soap12:operation soapAction="urn:getAllDataSourcesForType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDataSource">
      <soap12:operation soapAction="urn:addDataSource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="NDataSourceAdminHttpBinding" type="tns:NDataSourceAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="deleteDataSource">
      <http:operation location="deleteDataSource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <http:operation location="getDataSource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSources">
      <http:operation location="getAllDataSources"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="testDataSourceConnection">
      <http:operation location="testDataSourceConnection"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reloadDataSource">
      <http:operation location="reloadDataSource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDataSourceTypes">
      <http:operation location="getDataSourceTypes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reloadAllDataSources">
      <http:operation location="reloadAllDataSources"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSourcesForType">
      <http:operation location="getAllDataSourcesForType"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addDataSource">
      <http:operation location="addDataSource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="NDataSourceAdmin">
    <wsdl:port name="NDataSourceAdminHttpsSoap11Endpoint" binding="tns:NDataSourceAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="NDataSourceAdminHttpsSoap12Endpoint" binding="tns:NDataSourceAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="NDataSourceAdminHttpsEndpoint" binding="tns:NDataSourceAdminHttpBinding">
      <http:address location="https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="f7c12ca1-8e1a-41c7-8eed-e08c519d62cc" isOneWay="false" action="urn:addDataSource" name="addDataSource" bindingOperationName="addDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="740e83ee-4592-479c-bf1a-0987c7bf9448" isOneWay="false" action="urn:deleteDataSource" name="deleteDataSource" bindingOperationName="deleteDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="99d64880-ff30-4102-a729-08ea058b79b0" isOneWay="false" action="urn:getAllDataSources" name="getAllDataSources" bindingOperationName="getAllDataSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7fa84b9-6157-42b2-9aa1-f9000edfd191" isOneWay="false" action="urn:getAllDataSourcesForType" name="getAllDataSourcesForType" bindingOperationName="getAllDataSourcesForType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b3b05b36-c357-4943-94a6-0d24d6667064" isOneWay="false" action="urn:getDataSource" name="getDataSource" bindingOperationName="getDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c38c506b-5ca0-400f-aacb-9061cfb5af23" isOneWay="false" action="urn:getDataSourceTypes" name="getDataSourceTypes" bindingOperationName="getDataSourceTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4915d3e2-ab61-4cf8-9517-9e2e7f0cba84" isOneWay="false" action="urn:reloadAllDataSources" name="reloadAllDataSources" bindingOperationName="reloadAllDataSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c90c1b90-cc8f-4586-a0af-1a5c57153503" isOneWay="false" action="urn:reloadDataSource" name="reloadDataSource" bindingOperationName="reloadDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7392f199-033a-447f-bc9f-f03f2e4ec51f" isOneWay="false" action="urn:testDataSourceConnection" name="testDataSourceConnection" bindingOperationName="testDataSourceConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="5bab532f-0862-4adf-b1e2-883dfb0dd1bd" wsaVersion="NONE" name="OAuth2TokenValidationServiceSoap11Binding" type="wsdl" bindingName="{http://oauth2.identity.carbon.wso2.org}OAuth2TokenValidationServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/OAuth2TokenValidationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="a33448c5-9d2f-4709-8394-8152df6ed162" isOneWay="false" action="urn:buildIntrospectionResponse" name="buildIntrospectionResponse" bindingOperationName="buildIntrospectionResponse" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="68518362-bfb8-43ad-8b2d-f76f4d8ee1e0" isOneWay="false" action="urn:findOAuthConsumerIfTokenIsValid" name="findOAuthConsumerIfTokenIsValid" bindingOperationName="findOAuthConsumerIfTokenIsValid" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5059a5cf-7cfa-436e-a652-86e887a845f9" isOneWay="false" action="urn:validate" name="validate" bindingOperationName="validate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="bf8d7678-259f-4d3b-8108-c0d8db95a491" wsaVersion="NONE" name="OAuth2TokenValidationServiceSoap12Binding" type="wsdl" bindingName="{http://oauth2.identity.carbon.wso2.org}OAuth2TokenValidationServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/OAuth2TokenValidationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/OAuth2TokenValidationService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/OAuth2TokenValidationService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://oauth2.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://oauth2.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2350="http://dto.oauth2.identity.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>OAuth2TokenValidationService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2351="http://dto.oauth2.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://dto.oauth2.identity.carbon.wso2.org/xsd"/>
      <xs:element name="findOAuthConsumerIfTokenIsValid">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="validationReqDTO" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findOAuthConsumerIfTokenIsValidResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2350:OAuth2ClientApplicationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="buildIntrospectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="validationReq" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="buildIntrospectionResponseResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2350:OAuth2IntrospectionResponseDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="validationReqDTO" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2350:OAuth2TokenValidationResponseDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.oauth2.identity.carbon.wso2.org/xsd">
      <xs:complexType name="OAuth2TokenValidationRequestDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="accessToken" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO_OAuth2AccessToken"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="context" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO_TokenValidationContextParam"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredClaimURIs" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2TokenValidationRequestDTO_OAuth2AccessToken">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tokenType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2TokenValidationRequestDTO_TokenValidationContextParam">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2ClientApplicationDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="accessTokenValidationResponse" nillable="true" type="ax2350:OAuth2TokenValidationResponseDTO"/>
          <xs:element minOccurs="0" name="consumerKey" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2TokenValidationResponseDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="authorizationContextToken" nillable="true" type="ax2350:OAuth2TokenValidationResponseDTO_AuthorizationContextToken"/>
          <xs:element minOccurs="0" name="authorizedUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorMsg" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="expiryTime" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2TokenValidationResponseDTO_AuthorizationContextToken">
        <xs:sequence>
          <xs:element minOccurs="0" name="tokenString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tokenType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2IntrospectionResponseDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="aud" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="clientId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="exp" type="xs:long"/>
          <xs:element minOccurs="0" name="iat" type="xs:long"/>
          <xs:element minOccurs="0" name="iss" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="jti" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nbf" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sub" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tokenType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userContext" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="buildIntrospectionResponseRequest">
    <wsdl:part name="parameters" element="ns1:buildIntrospectionResponse"/>
  </wsdl:message>
  <wsdl:message name="buildIntrospectionResponseResponse">
    <wsdl:part name="parameters" element="ns1:buildIntrospectionResponseResponse"/>
  </wsdl:message>
  <wsdl:message name="findOAuthConsumerIfTokenIsValidRequest">
    <wsdl:part name="parameters" element="ns1:findOAuthConsumerIfTokenIsValid"/>
  </wsdl:message>
  <wsdl:message name="findOAuthConsumerIfTokenIsValidResponse">
    <wsdl:part name="parameters" element="ns1:findOAuthConsumerIfTokenIsValidResponse"/>
  </wsdl:message>
  <wsdl:message name="validateRequest">
    <wsdl:part name="parameters" element="ns1:validate"/>
  </wsdl:message>
  <wsdl:message name="validateResponse">
    <wsdl:part name="parameters" element="ns1:validateResponse"/>
  </wsdl:message>
  <wsdl:portType name="OAuth2TokenValidationServicePortType">
    <wsdl:operation name="buildIntrospectionResponse">
      <wsdl:input message="tns:buildIntrospectionResponseRequest" wsaw:Action="urn:buildIntrospectionResponse"/>
      <wsdl:output message="tns:buildIntrospectionResponseResponse" wsaw:Action="urn:buildIntrospectionResponseResponse"/>
    </wsdl:operation>
    <wsdl:operation name="findOAuthConsumerIfTokenIsValid">
      <wsdl:input message="tns:findOAuthConsumerIfTokenIsValidRequest" wsaw:Action="urn:findOAuthConsumerIfTokenIsValid"/>
      <wsdl:output message="tns:findOAuthConsumerIfTokenIsValidResponse" wsaw:Action="urn:findOAuthConsumerIfTokenIsValidResponse"/>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <wsdl:input message="tns:validateRequest" wsaw:Action="urn:validate"/>
      <wsdl:output message="tns:validateResponse" wsaw:Action="urn:validateResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OAuth2TokenValidationServiceSoap11Binding" type="tns:OAuth2TokenValidationServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="buildIntrospectionResponse">
      <soap:operation soapAction="urn:buildIntrospectionResponse" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOAuthConsumerIfTokenIsValid">
      <soap:operation soapAction="urn:findOAuthConsumerIfTokenIsValid" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <soap:operation soapAction="urn:validate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuth2TokenValidationServiceSoap12Binding" type="tns:OAuth2TokenValidationServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="buildIntrospectionResponse">
      <soap12:operation soapAction="urn:buildIntrospectionResponse" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOAuthConsumerIfTokenIsValid">
      <soap12:operation soapAction="urn:findOAuthConsumerIfTokenIsValid" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <soap12:operation soapAction="urn:validate" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuth2TokenValidationServiceHttpBinding" type="tns:OAuth2TokenValidationServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="buildIntrospectionResponse">
      <http:operation location="buildIntrospectionResponse"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOAuthConsumerIfTokenIsValid">
      <http:operation location="findOAuthConsumerIfTokenIsValid"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <http:operation location="validate"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OAuth2TokenValidationService">
    <wsdl:port name="OAuth2TokenValidationServiceHttpsSoap11Endpoint" binding="tns:OAuth2TokenValidationServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuth2TokenValidationServiceHttpsSoap12Endpoint" binding="tns:OAuth2TokenValidationServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuth2TokenValidationServiceHttpsEndpoint" binding="tns:OAuth2TokenValidationServiceHttpBinding">
      <http:address location="https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="d3e4f29a-c9ee-4d00-aa1b-a6aaf6744620" isOneWay="false" action="urn:buildIntrospectionResponse" name="buildIntrospectionResponse" bindingOperationName="buildIntrospectionResponse" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69908e0f-0193-4ad0-bdcd-6577be9b5659" isOneWay="false" action="urn:findOAuthConsumerIfTokenIsValid" name="findOAuthConsumerIfTokenIsValid" bindingOperationName="findOAuthConsumerIfTokenIsValid" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2efc2944-31ac-4104-b46c-1852c8ea5edb" isOneWay="false" action="urn:validate" name="validate" bindingOperationName="validate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="51f47ab5-3451-4e8c-b214-8c879e93b79d" wsaVersion="NONE" name="OAuthAdminServiceSoap12Binding" type="wsdl" bindingName="{http://oauth.identity.carbon.wso2.org}OAuthAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/OAuthAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="cff2b837-a982-465e-bcb7-6b5e3fa7c63e" isOneWay="false" action="urn:getAllOAuthApplicationData" name="getAllOAuthApplicationData" bindingOperationName="getAllOAuthApplicationData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5695997e-120c-42e8-98ed-72c9f63e62f7" isOneWay="false" action="urn:getAllowedGrantTypes" name="getAllowedGrantTypes" bindingOperationName="getAllowedGrantTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="60b10c65-83fd-4544-b641-5b1c7845f237" isOneWay="false" action="urn:getAppsAuthorizedByUser" name="getAppsAuthorizedByUser" bindingOperationName="getAppsAuthorizedByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5f21a84d-8718-4574-a0ac-a21fc194b308" isOneWay="false" action="urn:getOAuthApplicationData" name="getOAuthApplicationData" bindingOperationName="getOAuthApplicationData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4df100c3-011e-40ec-92ee-76befe89b343" isOneWay="false" action="urn:getOAuthApplicationDataByAppName" name="getOAuthApplicationDataByAppName" bindingOperationName="getOAuthApplicationDataByAppName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6a975e6-ac56-483b-b13c-83e25b2045d2" isOneWay="false" action="urn:registerOAuthApplicationData" name="registerOAuthApplicationData" bindingOperationName="registerOAuthApplicationData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e01d2c43-1b48-4959-ab8f-506bfb1f689a" isOneWay="false" action="urn:registerOAuthConsumer" name="registerOAuthConsumer" bindingOperationName="registerOAuthConsumer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f4a62794-f978-47d9-b80c-79693355b000" isOneWay="false" action="urn:removeOAuthApplicationData" name="removeOAuthApplicationData" bindingOperationName="removeOAuthApplicationData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="44ba0b7e-dca7-4e35-a1fc-8b7c6c985a55" isOneWay="false" action="urn:revokeAuthzForAppsByResoureOwner" name="revokeAuthzForAppsByResoureOwner" bindingOperationName="revokeAuthzForAppsByResoureOwner" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9e018f8a-c4d1-449f-a00f-5619fec6c079" isOneWay="false" action="urn:updateConsumerApplication" name="updateConsumerApplication" bindingOperationName="updateConsumerApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="323037b7-20c2-40bf-9459-6a4a7afdaaf0" wsaVersion="NONE" name="OAuthAdminServiceSoap11Binding" type="wsdl" bindingName="{http://oauth.identity.carbon.wso2.org}OAuthAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/OAuthAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/OAuthAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/OAuthAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://oauth.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2344="http://oauth.identity.carbon.wso2.org/xsd" xmlns:ax2345="http://base.identity.carbon.wso2.org/xsd" xmlns:ax2348="http://dto.oauth.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://oauth.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>OAuthAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2347="http://oauth.identity.carbon.wso2.org/xsd" xmlns:ax2349="http://dto.oauth.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://oauth.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.oauth.identity.carbon.wso2.org/xsd"/>
      <xs:element name="OAuthAdminServiceIdentityOAuthAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityOAuthAdminException" nillable="true" type="ax2344:IdentityOAuthAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="revokeAuthzForAppsByResoureOwner">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="revokeRequestDTO" nillable="true" type="ax2348:OAuthRevocationRequestDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="revokeAuthzForAppsByResoureOwnerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2348:OAuthRevocationResponseDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedGrantTypes">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedGrantTypesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerOAuthConsumer">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerOAuthConsumerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllOAuthApplicationData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllOAuthApplicationDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOAuthApplicationData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="consumerKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOAuthApplicationDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOAuthApplicationDataByAppName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOAuthApplicationDataByAppNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerOAuthApplicationData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="application" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateConsumerApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="consumerAppDTO" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeOAuthApplicationData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="consumerKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppsAuthorizedByUser">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppsAuthorizedByUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://oauth.identity.carbon.wso2.org/xsd" xmlns:ax2346="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityOAuthAdminException">
        <xs:complexContent>
          <xs:extension base="ax2345:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.oauth.identity.carbon.wso2.org/xsd">
      <xs:complexType name="OAuthRevocationRequestDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="apps" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authzUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="consumerKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="consumerSecret" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuthRevocationResponseDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="error" type="xs:boolean"/>
          <xs:element minOccurs="0" name="errorCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorMsg" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuthConsumerAppDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="OAuthVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="callbackUrl" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="grantTypes" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthConsumerKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthConsumerSecret" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAppsAuthorizedByUserRequest">
    <wsdl:part name="parameters" element="ns1:getAppsAuthorizedByUser"/>
  </wsdl:message>
  <wsdl:message name="getAppsAuthorizedByUserResponse">
    <wsdl:part name="parameters" element="ns1:getAppsAuthorizedByUserResponse"/>
  </wsdl:message>
  <wsdl:message name="OAuthAdminServiceIdentityOAuthAdminException">
    <wsdl:part name="parameters" element="ns1:OAuthAdminServiceIdentityOAuthAdminException"/>
  </wsdl:message>
  <wsdl:message name="getAllOAuthApplicationDataRequest">
    <wsdl:part name="parameters" element="ns1:getAllOAuthApplicationData"/>
  </wsdl:message>
  <wsdl:message name="getAllOAuthApplicationDataResponse">
    <wsdl:part name="parameters" element="ns1:getAllOAuthApplicationDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllowedGrantTypesRequest">
    <wsdl:part name="parameters" element="ns1:getAllowedGrantTypes"/>
  </wsdl:message>
  <wsdl:message name="getAllowedGrantTypesResponse">
    <wsdl:part name="parameters" element="ns1:getAllowedGrantTypesResponse"/>
  </wsdl:message>
  <wsdl:message name="getOAuthApplicationDataByAppNameRequest">
    <wsdl:part name="parameters" element="ns1:getOAuthApplicationDataByAppName"/>
  </wsdl:message>
  <wsdl:message name="getOAuthApplicationDataByAppNameResponse">
    <wsdl:part name="parameters" element="ns1:getOAuthApplicationDataByAppNameResponse"/>
  </wsdl:message>
  <wsdl:message name="updateConsumerApplicationRequest">
    <wsdl:part name="parameters" element="ns1:updateConsumerApplication"/>
  </wsdl:message>
  <wsdl:message name="registerOAuthConsumerRequest">
    <wsdl:part name="parameters" element="ns1:registerOAuthConsumer"/>
  </wsdl:message>
  <wsdl:message name="registerOAuthConsumerResponse">
    <wsdl:part name="parameters" element="ns1:registerOAuthConsumerResponse"/>
  </wsdl:message>
  <wsdl:message name="registerOAuthApplicationDataRequest">
    <wsdl:part name="parameters" element="ns1:registerOAuthApplicationData"/>
  </wsdl:message>
  <wsdl:message name="removeOAuthApplicationDataRequest">
    <wsdl:part name="parameters" element="ns1:removeOAuthApplicationData"/>
  </wsdl:message>
  <wsdl:message name="getOAuthApplicationDataRequest">
    <wsdl:part name="parameters" element="ns1:getOAuthApplicationData"/>
  </wsdl:message>
  <wsdl:message name="getOAuthApplicationDataResponse">
    <wsdl:part name="parameters" element="ns1:getOAuthApplicationDataResponse"/>
  </wsdl:message>
  <wsdl:message name="revokeAuthzForAppsByResoureOwnerRequest">
    <wsdl:part name="parameters" element="ns1:revokeAuthzForAppsByResoureOwner"/>
  </wsdl:message>
  <wsdl:message name="revokeAuthzForAppsByResoureOwnerResponse">
    <wsdl:part name="parameters" element="ns1:revokeAuthzForAppsByResoureOwnerResponse"/>
  </wsdl:message>
  <wsdl:portType name="OAuthAdminServicePortType">
    <wsdl:operation name="getAppsAuthorizedByUser">
      <wsdl:input message="tns:getAppsAuthorizedByUserRequest" wsaw:Action="urn:getAppsAuthorizedByUser"/>
      <wsdl:output message="tns:getAppsAuthorizedByUserResponse" wsaw:Action="urn:getAppsAuthorizedByUserResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:getAppsAuthorizedByUserOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllOAuthApplicationData">
      <wsdl:input message="tns:getAllOAuthApplicationDataRequest" wsaw:Action="urn:getAllOAuthApplicationData"/>
      <wsdl:output message="tns:getAllOAuthApplicationDataResponse" wsaw:Action="urn:getAllOAuthApplicationDataResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:getAllOAuthApplicationDataOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllowedGrantTypes">
      <wsdl:input message="tns:getAllowedGrantTypesRequest" wsaw:Action="urn:getAllowedGrantTypes"/>
      <wsdl:output message="tns:getAllowedGrantTypesResponse" wsaw:Action="urn:getAllowedGrantTypesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationDataByAppName">
      <wsdl:input message="tns:getOAuthApplicationDataByAppNameRequest" wsaw:Action="urn:getOAuthApplicationDataByAppName"/>
      <wsdl:output message="tns:getOAuthApplicationDataByAppNameResponse" wsaw:Action="urn:getOAuthApplicationDataByAppNameResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:getOAuthApplicationDataByAppNameOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updateConsumerApplication">
      <wsdl:input message="tns:updateConsumerApplicationRequest" wsaw:Action="urn:updateConsumerApplication"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:updateConsumerApplicationOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthConsumer">
      <wsdl:input message="tns:registerOAuthConsumerRequest" wsaw:Action="urn:registerOAuthConsumer"/>
      <wsdl:output message="tns:registerOAuthConsumerResponse" wsaw:Action="urn:registerOAuthConsumerResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:registerOAuthConsumerOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthApplicationData">
      <wsdl:input message="tns:registerOAuthApplicationDataRequest" wsaw:Action="urn:registerOAuthApplicationData"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:registerOAuthApplicationDataOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="removeOAuthApplicationData">
      <wsdl:input message="tns:removeOAuthApplicationDataRequest" wsaw:Action="urn:removeOAuthApplicationData"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:removeOAuthApplicationDataOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationData">
      <wsdl:input message="tns:getOAuthApplicationDataRequest" wsaw:Action="urn:getOAuthApplicationData"/>
      <wsdl:output message="tns:getOAuthApplicationDataResponse" wsaw:Action="urn:getOAuthApplicationDataResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:getOAuthApplicationDataOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="revokeAuthzForAppsByResoureOwner">
      <wsdl:input message="tns:revokeAuthzForAppsByResoureOwnerRequest" wsaw:Action="urn:revokeAuthzForAppsByResoureOwner"/>
      <wsdl:output message="tns:revokeAuthzForAppsByResoureOwnerResponse" wsaw:Action="urn:revokeAuthzForAppsByResoureOwnerResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:revokeAuthzForAppsByResoureOwnerOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OAuthAdminServiceSoap11Binding" type="tns:OAuthAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAppsAuthorizedByUser">
      <soap:operation soapAction="urn:getAppsAuthorizedByUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOAuthApplicationData">
      <soap:operation soapAction="urn:getAllOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedGrantTypes">
      <soap:operation soapAction="urn:getAllowedGrantTypes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationDataByAppName">
      <soap:operation soapAction="urn:getOAuthApplicationDataByAppName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateConsumerApplication">
      <soap:operation soapAction="urn:updateConsumerApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthConsumer">
      <soap:operation soapAction="urn:registerOAuthConsumer" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthApplicationData">
      <soap:operation soapAction="urn:registerOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOAuthApplicationData">
      <soap:operation soapAction="urn:removeOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationData">
      <soap:operation soapAction="urn:getOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeAuthzForAppsByResoureOwner">
      <soap:operation soapAction="urn:revokeAuthzForAppsByResoureOwner" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuthAdminServiceSoap12Binding" type="tns:OAuthAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAppsAuthorizedByUser">
      <soap12:operation soapAction="urn:getAppsAuthorizedByUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOAuthApplicationData">
      <soap12:operation soapAction="urn:getAllOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedGrantTypes">
      <soap12:operation soapAction="urn:getAllowedGrantTypes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationDataByAppName">
      <soap12:operation soapAction="urn:getOAuthApplicationDataByAppName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateConsumerApplication">
      <soap12:operation soapAction="urn:updateConsumerApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthConsumer">
      <soap12:operation soapAction="urn:registerOAuthConsumer" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthApplicationData">
      <soap12:operation soapAction="urn:registerOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOAuthApplicationData">
      <soap12:operation soapAction="urn:removeOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationData">
      <soap12:operation soapAction="urn:getOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeAuthzForAppsByResoureOwner">
      <soap12:operation soapAction="urn:revokeAuthzForAppsByResoureOwner" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuthAdminServiceHttpBinding" type="tns:OAuthAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAppsAuthorizedByUser">
      <http:operation location="getAppsAuthorizedByUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllOAuthApplicationData">
      <http:operation location="getAllOAuthApplicationData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllowedGrantTypes">
      <http:operation location="getAllowedGrantTypes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationDataByAppName">
      <http:operation location="getOAuthApplicationDataByAppName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateConsumerApplication">
      <http:operation location="updateConsumerApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthConsumer">
      <http:operation location="registerOAuthConsumer"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthApplicationData">
      <http:operation location="registerOAuthApplicationData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeOAuthApplicationData">
      <http:operation location="removeOAuthApplicationData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationData">
      <http:operation location="getOAuthApplicationData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="revokeAuthzForAppsByResoureOwner">
      <http:operation location="revokeAuthzForAppsByResoureOwner"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OAuthAdminService">
    <wsdl:port name="OAuthAdminServiceHttpsSoap11Endpoint" binding="tns:OAuthAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuthAdminServiceHttpsSoap12Endpoint" binding="tns:OAuthAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuthAdminServiceHttpsEndpoint" binding="tns:OAuthAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="fd86004e-2692-4d0d-ac02-73d1f62a82cd" isOneWay="false" action="urn:getAllOAuthApplicationData" name="getAllOAuthApplicationData" bindingOperationName="getAllOAuthApplicationData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dda7e5e7-138e-46fd-a35e-8da4a082cbea" isOneWay="false" action="urn:getAllowedGrantTypes" name="getAllowedGrantTypes" bindingOperationName="getAllowedGrantTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="854ce0d3-0db8-4890-8f11-603ad5b1e27d" isOneWay="false" action="urn:getAppsAuthorizedByUser" name="getAppsAuthorizedByUser" bindingOperationName="getAppsAuthorizedByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52aa283d-ccc4-417f-a216-50b807c388e9" isOneWay="false" action="urn:getOAuthApplicationData" name="getOAuthApplicationData" bindingOperationName="getOAuthApplicationData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="492682a5-62bd-42d6-9d4c-d15faaba856e" isOneWay="false" action="urn:getOAuthApplicationDataByAppName" name="getOAuthApplicationDataByAppName" bindingOperationName="getOAuthApplicationDataByAppName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="446d0e95-8941-4c9a-ab10-1c7a4000769c" isOneWay="false" action="urn:registerOAuthApplicationData" name="registerOAuthApplicationData" bindingOperationName="registerOAuthApplicationData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="62207e9e-6132-4a14-a498-328057e3568b" isOneWay="false" action="urn:registerOAuthConsumer" name="registerOAuthConsumer" bindingOperationName="registerOAuthConsumer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="83306c34-80ad-4c89-9c54-acaa53218433" isOneWay="false" action="urn:removeOAuthApplicationData" name="removeOAuthApplicationData" bindingOperationName="removeOAuthApplicationData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="afcae145-eef5-4a4d-af68-87508e035928" isOneWay="false" action="urn:revokeAuthzForAppsByResoureOwner" name="revokeAuthzForAppsByResoureOwner" bindingOperationName="revokeAuthzForAppsByResoureOwner" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8c499449-6c1a-4182-b07e-bab5a7337d6a" isOneWay="false" action="urn:updateConsumerApplication" name="updateConsumerApplication" bindingOperationName="updateConsumerApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1251408c-0b50-4c28-abf9-486aef4e1809" wsaVersion="NONE" name="OAuthServiceSoap12Binding" type="wsdl" bindingName="{http://oauth.identity.carbon.wso2.org}OAuthServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/OAuthService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/OAuthService.OAuthServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="ff4323ce-c38f-4ad8-9b71-61d994ff8d2d" isOneWay="false" action="urn:authorizeOauthRequestToken" name="authorizeOauthRequestToken" bindingOperationName="authorizeOauthRequestToken" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="39358010-a89c-4921-915a-b6c6fa79d281" isOneWay="false" action="urn:getAccessToken" name="getAccessToken" bindingOperationName="getAccessToken" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ecdffb21-391d-4d81-9b0c-814e542eed85" isOneWay="false" action="urn:getOauthRequestToken" name="getOauthRequestToken" bindingOperationName="getOauthRequestToken" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9dccd186-45bf-46c8-83af-e10367a35108" isOneWay="false" action="urn:getScopeAndAppName" name="getScopeAndAppName" bindingOperationName="getScopeAndAppName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e36126e-36cd-41a4-a958-ff6a8c297f8f" isOneWay="false" action="urn:isOAuthConsumerValid" name="isOAuthConsumerValid" bindingOperationName="isOAuthConsumerValid" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="303bd85f-a7e2-4cab-9cf9-d04cd784af7f" isOneWay="false" action="urn:validateAuthenticationRequest" name="validateAuthenticationRequest" bindingOperationName="validateAuthenticationRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6de6256b-5790-4d34-9e82-10ee25ca7894" wsaVersion="NONE" name="OAuthServiceSoap11Binding" type="wsdl" bindingName="{http://oauth.identity.carbon.wso2.org}OAuthServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/OAuthService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/OAuthService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/OAuthService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://oauth.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2335="http://base.identity.carbon.wso2.org/xsd" xmlns:ax2337="http://dto.oauth.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2339="http://common.core.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2341="http://oauth.identity.carbon.wso2.org/xsd" xmlns:tns="http://oauth.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>OAuthService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2336="http://base.identity.carbon.wso2.org/xsd" xmlns:ax2340="http://common.core.carbon.wso2.org/xsd" xmlns:ax2338="http://dto.oauth.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2343="http://oauth.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.oauth.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://common.core.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://oauth.identity.carbon.wso2.org/xsd"/>
      <xs:element name="OAuthServiceIdentityException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityException" nillable="true" type="ax2335:IdentityException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isOAuthConsumerValid">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="oauthConsumer" nillable="true" type="ax2337:OAuthConsumerDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isOAuthConsumerValidResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OAuthServiceAuthenticationException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="AuthenticationException" nillable="true" type="ax2339:AuthenticationException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OAuthServiceIdentityOAuthAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityOAuthAdminException" nillable="true" type="ax2341:IdentityOAuthAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOauthRequestToken">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="params" nillable="true" type="ax2341:Parameters"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOauthRequestTokenResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2341:Parameters"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authorizeOauthRequestToken">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="params" nillable="true" type="ax2341:Parameters"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authorizeOauthRequestTokenResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2341:Parameters"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OAuthServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="OAuthServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getScopeAndAppName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="oauthToken" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getScopeAndAppNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2341:Parameters"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validateAuthenticationRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="params" nillable="true" type="ax2341:Parameters"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validateAuthenticationRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2341:Parameters"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccessToken">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="params" nillable="true" type="ax2341:Parameters"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccessTokenResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2341:Parameters"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.core.carbon.wso2.org/xsd">
      <xs:complexType name="AuthenticationException">
        <xs:sequence>
          <xs:element minOccurs="0" name="uiErrorCode" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://oauth.identity.carbon.wso2.org/xsd" xmlns:ax2342="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityOAuthAdminException">
        <xs:complexContent>
          <xs:extension base="ax2335:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Parameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="accessTokenIssued" type="xs:boolean"/>
          <xs:element minOccurs="0" name="appName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorizedbyUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorizedbyUserPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="baseString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="callbackConfirmed" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="httpMethod" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthCallback" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthConsumerKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthNonce" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthSignature" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthSignatureMethod" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthTimeStamp" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthToken" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthTokenSecret" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthTokenVerifier" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.oauth.identity.carbon.wso2.org/xsd">
      <xs:complexType name="OAuthConsumerDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="baseString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="httpMethod" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthConsumerKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthNonce" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthSignature" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthSignatureMethod" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthTimeStamp" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getScopeAndAppNameRequest">
    <wsdl:part name="parameters" element="ns1:getScopeAndAppName"/>
  </wsdl:message>
  <wsdl:message name="getScopeAndAppNameResponse">
    <wsdl:part name="parameters" element="ns1:getScopeAndAppNameResponse"/>
  </wsdl:message>
  <wsdl:message name="OAuthServiceException">
    <wsdl:part name="parameters" element="ns1:OAuthServiceException"/>
  </wsdl:message>
  <wsdl:message name="getOauthRequestTokenRequest">
    <wsdl:part name="parameters" element="ns1:getOauthRequestToken"/>
  </wsdl:message>
  <wsdl:message name="getOauthRequestTokenResponse">
    <wsdl:part name="parameters" element="ns1:getOauthRequestTokenResponse"/>
  </wsdl:message>
  <wsdl:message name="OAuthServiceAuthenticationException">
    <wsdl:part name="parameters" element="ns1:OAuthServiceAuthenticationException"/>
  </wsdl:message>
  <wsdl:message name="OAuthServiceIdentityOAuthAdminException">
    <wsdl:part name="parameters" element="ns1:OAuthServiceIdentityOAuthAdminException"/>
  </wsdl:message>
  <wsdl:message name="authorizeOauthRequestTokenRequest">
    <wsdl:part name="parameters" element="ns1:authorizeOauthRequestToken"/>
  </wsdl:message>
  <wsdl:message name="authorizeOauthRequestTokenResponse">
    <wsdl:part name="parameters" element="ns1:authorizeOauthRequestTokenResponse"/>
  </wsdl:message>
  <wsdl:message name="OAuthServiceIdentityException">
    <wsdl:part name="parameters" element="ns1:OAuthServiceIdentityException"/>
  </wsdl:message>
  <wsdl:message name="isOAuthConsumerValidRequest">
    <wsdl:part name="parameters" element="ns1:isOAuthConsumerValid"/>
  </wsdl:message>
  <wsdl:message name="isOAuthConsumerValidResponse">
    <wsdl:part name="parameters" element="ns1:isOAuthConsumerValidResponse"/>
  </wsdl:message>
  <wsdl:message name="validateAuthenticationRequestRequest">
    <wsdl:part name="parameters" element="ns1:validateAuthenticationRequest"/>
  </wsdl:message>
  <wsdl:message name="validateAuthenticationRequestResponse">
    <wsdl:part name="parameters" element="ns1:validateAuthenticationRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="getAccessTokenRequest">
    <wsdl:part name="parameters" element="ns1:getAccessToken"/>
  </wsdl:message>
  <wsdl:message name="getAccessTokenResponse">
    <wsdl:part name="parameters" element="ns1:getAccessTokenResponse"/>
  </wsdl:message>
  <wsdl:portType name="OAuthServicePortType">
    <wsdl:operation name="getScopeAndAppName">
      <wsdl:input message="tns:getScopeAndAppNameRequest" wsaw:Action="urn:getScopeAndAppName"/>
      <wsdl:output message="tns:getScopeAndAppNameResponse" wsaw:Action="urn:getScopeAndAppNameResponse"/>
      <wsdl:fault message="tns:OAuthServiceException" name="OAuthServiceException" wsaw:Action="urn:getScopeAndAppNameOAuthServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getOauthRequestToken">
      <wsdl:input message="tns:getOauthRequestTokenRequest" wsaw:Action="urn:getOauthRequestToken"/>
      <wsdl:output message="tns:getOauthRequestTokenResponse" wsaw:Action="urn:getOauthRequestTokenResponse"/>
      <wsdl:fault message="tns:OAuthServiceAuthenticationException" name="OAuthServiceAuthenticationException" wsaw:Action="urn:getOauthRequestTokenOAuthServiceAuthenticationException"/>
      <wsdl:fault message="tns:OAuthServiceIdentityOAuthAdminException" name="OAuthServiceIdentityOAuthAdminException" wsaw:Action="urn:getOauthRequestTokenOAuthServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="authorizeOauthRequestToken">
      <wsdl:input message="tns:authorizeOauthRequestTokenRequest" wsaw:Action="urn:authorizeOauthRequestToken"/>
      <wsdl:output message="tns:authorizeOauthRequestTokenResponse" wsaw:Action="urn:authorizeOauthRequestTokenResponse"/>
      <wsdl:fault message="tns:OAuthServiceIdentityException" name="OAuthServiceIdentityException" wsaw:Action="urn:authorizeOauthRequestTokenOAuthServiceIdentityException"/>
      <wsdl:fault message="tns:OAuthServiceAuthenticationException" name="OAuthServiceAuthenticationException" wsaw:Action="urn:authorizeOauthRequestTokenOAuthServiceAuthenticationException"/>
    </wsdl:operation>
    <wsdl:operation name="isOAuthConsumerValid">
      <wsdl:input message="tns:isOAuthConsumerValidRequest" wsaw:Action="urn:isOAuthConsumerValid"/>
      <wsdl:output message="tns:isOAuthConsumerValidResponse" wsaw:Action="urn:isOAuthConsumerValidResponse"/>
      <wsdl:fault message="tns:OAuthServiceIdentityException" name="OAuthServiceIdentityException" wsaw:Action="urn:isOAuthConsumerValidOAuthServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="validateAuthenticationRequest">
      <wsdl:input message="tns:validateAuthenticationRequestRequest" wsaw:Action="urn:validateAuthenticationRequest"/>
      <wsdl:output message="tns:validateAuthenticationRequestResponse" wsaw:Action="urn:validateAuthenticationRequestResponse"/>
      <wsdl:fault message="tns:OAuthServiceAuthenticationException" name="OAuthServiceAuthenticationException" wsaw:Action="urn:validateAuthenticationRequestOAuthServiceAuthenticationException"/>
      <wsdl:fault message="tns:OAuthServiceIdentityException" name="OAuthServiceIdentityException" wsaw:Action="urn:validateAuthenticationRequestOAuthServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccessToken">
      <wsdl:input message="tns:getAccessTokenRequest" wsaw:Action="urn:getAccessToken"/>
      <wsdl:output message="tns:getAccessTokenResponse" wsaw:Action="urn:getAccessTokenResponse"/>
      <wsdl:fault message="tns:OAuthServiceIdentityOAuthAdminException" name="OAuthServiceIdentityOAuthAdminException" wsaw:Action="urn:getAccessTokenOAuthServiceIdentityOAuthAdminException"/>
      <wsdl:fault message="tns:OAuthServiceAuthenticationException" name="OAuthServiceAuthenticationException" wsaw:Action="urn:getAccessTokenOAuthServiceAuthenticationException"/>
      <wsdl:fault message="tns:OAuthServiceIdentityException" name="OAuthServiceIdentityException" wsaw:Action="urn:getAccessTokenOAuthServiceIdentityException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OAuthServiceSoap11Binding" type="tns:OAuthServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getScopeAndAppName">
      <soap:operation soapAction="urn:getScopeAndAppName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceException">
        <soap:fault use="literal" name="OAuthServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOauthRequestToken">
      <soap:operation soapAction="urn:getOauthRequestToken" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceAuthenticationException">
        <soap:fault use="literal" name="OAuthServiceAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeOauthRequestToken">
      <soap:operation soapAction="urn:authorizeOauthRequestToken" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityException">
        <soap:fault use="literal" name="OAuthServiceIdentityException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceAuthenticationException">
        <soap:fault use="literal" name="OAuthServiceAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isOAuthConsumerValid">
      <soap:operation soapAction="urn:isOAuthConsumerValid" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityException">
        <soap:fault use="literal" name="OAuthServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateAuthenticationRequest">
      <soap:operation soapAction="urn:validateAuthenticationRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityException">
        <soap:fault use="literal" name="OAuthServiceIdentityException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceAuthenticationException">
        <soap:fault use="literal" name="OAuthServiceAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccessToken">
      <soap:operation soapAction="urn:getAccessToken" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityException">
        <soap:fault use="literal" name="OAuthServiceIdentityException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceAuthenticationException">
        <soap:fault use="literal" name="OAuthServiceAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuthServiceSoap12Binding" type="tns:OAuthServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getScopeAndAppName">
      <soap12:operation soapAction="urn:getScopeAndAppName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceException">
        <soap12:fault use="literal" name="OAuthServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOauthRequestToken">
      <soap12:operation soapAction="urn:getOauthRequestToken" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceAuthenticationException">
        <soap12:fault use="literal" name="OAuthServiceAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeOauthRequestToken">
      <soap12:operation soapAction="urn:authorizeOauthRequestToken" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityException">
        <soap12:fault use="literal" name="OAuthServiceIdentityException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceAuthenticationException">
        <soap12:fault use="literal" name="OAuthServiceAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isOAuthConsumerValid">
      <soap12:operation soapAction="urn:isOAuthConsumerValid" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityException">
        <soap12:fault use="literal" name="OAuthServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateAuthenticationRequest">
      <soap12:operation soapAction="urn:validateAuthenticationRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityException">
        <soap12:fault use="literal" name="OAuthServiceIdentityException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceAuthenticationException">
        <soap12:fault use="literal" name="OAuthServiceAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccessToken">
      <soap12:operation soapAction="urn:getAccessToken" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthServiceIdentityException">
        <soap12:fault use="literal" name="OAuthServiceIdentityException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
      <wsdl:fault name="OAuthServiceAuthenticationException">
        <soap12:fault use="literal" name="OAuthServiceAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuthServiceHttpBinding" type="tns:OAuthServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getScopeAndAppName">
      <http:operation location="getScopeAndAppName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOauthRequestToken">
      <http:operation location="getOauthRequestToken"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="authorizeOauthRequestToken">
      <http:operation location="authorizeOauthRequestToken"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isOAuthConsumerValid">
      <http:operation location="isOAuthConsumerValid"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validateAuthenticationRequest">
      <http:operation location="validateAuthenticationRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAccessToken">
      <http:operation location="getAccessToken"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OAuthService">
    <wsdl:port name="OAuthServiceHttpsSoap11Endpoint" binding="tns:OAuthServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/OAuthService.OAuthServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuthServiceHttpsSoap12Endpoint" binding="tns:OAuthServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/OAuthService.OAuthServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuthServiceHttpsEndpoint" binding="tns:OAuthServiceHttpBinding">
      <http:address location="https://localhost:9443/services/OAuthService.OAuthServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/OAuthService.OAuthServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="64991b1c-659b-482d-bec9-04fb22410569" isOneWay="false" action="urn:authorizeOauthRequestToken" name="authorizeOauthRequestToken" bindingOperationName="authorizeOauthRequestToken" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6456a6b1-8556-42d3-b068-3fef585a6866" isOneWay="false" action="urn:getAccessToken" name="getAccessToken" bindingOperationName="getAccessToken" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f7a8521-7fd5-4cc5-9584-4a62909f253a" isOneWay="false" action="urn:getOauthRequestToken" name="getOauthRequestToken" bindingOperationName="getOauthRequestToken" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="28743c34-2faf-427a-8e20-f9513b3b8401" isOneWay="false" action="urn:getScopeAndAppName" name="getScopeAndAppName" bindingOperationName="getScopeAndAppName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e580775-a512-419f-a7e2-c9a7087301d4" isOneWay="false" action="urn:isOAuthConsumerValid" name="isOAuthConsumerValid" bindingOperationName="isOAuthConsumerValid" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e8ffabde-01f9-4bfd-8dc0-f2a901ad7a6d" isOneWay="false" action="urn:validateAuthenticationRequest" name="validateAuthenticationRequest" bindingOperationName="validateAuthenticationRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="24c1d31e-909f-42ac-84e2-34e220d4e78c" wsaVersion="NONE" name="OperationAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.operation.carbon.wso2.org}OperationAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/OperationAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/OperationAdmin.OperationAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="3470b683-26ee-42d8-9d5c-c51630e695f7" isOneWay="false" action="urn:configureMTOM" name="configureMTOM" bindingOperationName="configureMTOM" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08958dde-2301-4f63-aacb-0735668c6ad4" isOneWay="false" action="urn:getDeclaredOperationParameters" name="getDeclaredOperationParameters" bindingOperationName="getDeclaredOperationParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c0880b43-1d2c-467c-829f-bebaba9deba2" isOneWay="false" action="urn:getOperationMetaData" name="getOperationMetaData" bindingOperationName="getOperationMetaData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="678a5bdb-2f6c-444b-b2e7-e41629368b67" isOneWay="false" action="urn:getOperationParameters" name="getOperationParameters" bindingOperationName="getOperationParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3c45b3d9-68e3-41e3-b2bc-236fae8504ab" isOneWay="false" action="urn:getOperationStatistics" name="getOperationStatistics" bindingOperationName="getOperationStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b15ed29e-2bcc-4081-afa8-3daccd71c2bf" isOneWay="false" action="urn:listAllOperations" name="listAllOperations" bindingOperationName="listAllOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8745b90b-0bc9-4b9e-91e8-343b588f8eec" isOneWay="false" action="urn:listControlOperations" name="listControlOperations" bindingOperationName="listControlOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="15719f6c-0fb2-4800-b3b7-107c6651d52f" isOneWay="false" action="urn:listOperationPhaseHandlers" name="listOperationPhaseHandlers" bindingOperationName="listOperationPhaseHandlers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3ae26f40-cd7c-4f6b-8d18-0c4afb0a957a" isOneWay="false" action="urn:listOperationPhases" name="listOperationPhases" bindingOperationName="listOperationPhases" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1573ac0a-bff5-4487-841f-2dafcebff3dc" isOneWay="false" action="urn:listPublishedOperations" name="listPublishedOperations" bindingOperationName="listPublishedOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7429956b-ad3b-4d9a-b095-ecf93db930cb" isOneWay="false" action="urn:removeOperationParameter" name="removeOperationParameter" bindingOperationName="removeOperationParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="43ae357b-51f4-4c31-8dc1-095b857f105d" isOneWay="false" action="urn:setOperationParameters" name="setOperationParameters" bindingOperationName="setOperationParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="04540694-49e8-4abd-919d-f9f243d1c2b3" wsaVersion="NONE" name="OperationAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.operation.carbon.wso2.org}OperationAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/OperationAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/OperationAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/OperationAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.operation.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.operation.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2460="http://mgt.operation.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>OperationAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2461="http://mgt.operation.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://mgt.operation.carbon.wso2.org/xsd"/>
      <xs:element name="configureMTOM">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="flag" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationStatistics">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationStatisticsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationParametersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeclaredOperationParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeclaredOperationParametersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setOperationParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationId" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="parameters" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeOperationParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listOperationPhases">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="flow" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listOperationPhasesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listOperationPhaseHandlers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="flow" type="xs:int"/>
            <xs:element minOccurs="0" name="phaseName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listOperationPhaseHandlersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationMetaData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationMetaDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllOperations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllOperationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaDataWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listControlOperations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listControlOperationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listPublishedOperations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listPublishedOperationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.operation.carbon.wso2.org/xsd">
      <xs:complexType name="OperationMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="controlOperation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableMTOM" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OperationMetaDataWrapper">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="controlOperations" nillable="true" type="ax2460:OperationMetaData"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="publishedOperations" nillable="true" type="ax2460:OperationMetaData"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getOperationStatisticsRequest">
    <wsdl:part name="parameters" element="ns1:getOperationStatistics"/>
  </wsdl:message>
  <wsdl:message name="getOperationStatisticsResponse">
    <wsdl:part name="parameters" element="ns1:getOperationStatisticsResponse"/>
  </wsdl:message>
  <wsdl:message name="listOperationPhasesRequest">
    <wsdl:part name="parameters" element="ns1:listOperationPhases"/>
  </wsdl:message>
  <wsdl:message name="listOperationPhasesResponse">
    <wsdl:part name="parameters" element="ns1:listOperationPhasesResponse"/>
  </wsdl:message>
  <wsdl:message name="listOperationPhaseHandlersRequest">
    <wsdl:part name="parameters" element="ns1:listOperationPhaseHandlers"/>
  </wsdl:message>
  <wsdl:message name="listOperationPhaseHandlersResponse">
    <wsdl:part name="parameters" element="ns1:listOperationPhaseHandlersResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationParametersRequest">
    <wsdl:part name="parameters" element="ns1:getOperationParameters"/>
  </wsdl:message>
  <wsdl:message name="getOperationParametersResponse">
    <wsdl:part name="parameters" element="ns1:getOperationParametersResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationMetaDataRequest">
    <wsdl:part name="parameters" element="ns1:getOperationMetaData"/>
  </wsdl:message>
  <wsdl:message name="getOperationMetaDataResponse">
    <wsdl:part name="parameters" element="ns1:getOperationMetaDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getDeclaredOperationParametersRequest">
    <wsdl:part name="parameters" element="ns1:getDeclaredOperationParameters"/>
  </wsdl:message>
  <wsdl:message name="getDeclaredOperationParametersResponse">
    <wsdl:part name="parameters" element="ns1:getDeclaredOperationParametersResponse"/>
  </wsdl:message>
  <wsdl:message name="configureMTOMRequest">
    <wsdl:part name="parameters" element="ns1:configureMTOM"/>
  </wsdl:message>
  <wsdl:message name="setOperationParametersRequest">
    <wsdl:part name="parameters" element="ns1:setOperationParameters"/>
  </wsdl:message>
  <wsdl:message name="listPublishedOperationsRequest">
    <wsdl:part name="parameters" element="ns1:listPublishedOperations"/>
  </wsdl:message>
  <wsdl:message name="listPublishedOperationsResponse">
    <wsdl:part name="parameters" element="ns1:listPublishedOperationsResponse"/>
  </wsdl:message>
  <wsdl:message name="removeOperationParameterRequest">
    <wsdl:part name="parameters" element="ns1:removeOperationParameter"/>
  </wsdl:message>
  <wsdl:message name="listAllOperationsRequest">
    <wsdl:part name="parameters" element="ns1:listAllOperations"/>
  </wsdl:message>
  <wsdl:message name="listAllOperationsResponse">
    <wsdl:part name="parameters" element="ns1:listAllOperationsResponse"/>
  </wsdl:message>
  <wsdl:message name="listControlOperationsRequest">
    <wsdl:part name="parameters" element="ns1:listControlOperations"/>
  </wsdl:message>
  <wsdl:message name="listControlOperationsResponse">
    <wsdl:part name="parameters" element="ns1:listControlOperationsResponse"/>
  </wsdl:message>
  <wsdl:portType name="OperationAdminPortType">
    <wsdl:operation name="getOperationStatistics">
      <wsdl:input message="tns:getOperationStatisticsRequest" wsaw:Action="urn:getOperationStatistics"/>
      <wsdl:output message="tns:getOperationStatisticsResponse" wsaw:Action="urn:getOperationStatisticsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhases">
      <wsdl:input message="tns:listOperationPhasesRequest" wsaw:Action="urn:listOperationPhases"/>
      <wsdl:output message="tns:listOperationPhasesResponse" wsaw:Action="urn:listOperationPhasesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhaseHandlers">
      <wsdl:input message="tns:listOperationPhaseHandlersRequest" wsaw:Action="urn:listOperationPhaseHandlers"/>
      <wsdl:output message="tns:listOperationPhaseHandlersResponse" wsaw:Action="urn:listOperationPhaseHandlersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationParameters">
      <wsdl:input message="tns:getOperationParametersRequest" wsaw:Action="urn:getOperationParameters"/>
      <wsdl:output message="tns:getOperationParametersResponse" wsaw:Action="urn:getOperationParametersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationMetaData">
      <wsdl:input message="tns:getOperationMetaDataRequest" wsaw:Action="urn:getOperationMetaData"/>
      <wsdl:output message="tns:getOperationMetaDataResponse" wsaw:Action="urn:getOperationMetaDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getDeclaredOperationParameters">
      <wsdl:input message="tns:getDeclaredOperationParametersRequest" wsaw:Action="urn:getDeclaredOperationParameters"/>
      <wsdl:output message="tns:getDeclaredOperationParametersResponse" wsaw:Action="urn:getDeclaredOperationParametersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <wsdl:input message="tns:configureMTOMRequest" wsaw:Action="urn:configureMTOM"/>
    </wsdl:operation>
    <wsdl:operation name="setOperationParameters">
      <wsdl:input message="tns:setOperationParametersRequest" wsaw:Action="urn:setOperationParameters"/>
    </wsdl:operation>
    <wsdl:operation name="listPublishedOperations">
      <wsdl:input message="tns:listPublishedOperationsRequest" wsaw:Action="urn:listPublishedOperations"/>
      <wsdl:output message="tns:listPublishedOperationsResponse" wsaw:Action="urn:listPublishedOperationsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeOperationParameter">
      <wsdl:input message="tns:removeOperationParameterRequest" wsaw:Action="urn:removeOperationParameter"/>
    </wsdl:operation>
    <wsdl:operation name="listAllOperations">
      <wsdl:input message="tns:listAllOperationsRequest" wsaw:Action="urn:listAllOperations"/>
      <wsdl:output message="tns:listAllOperationsResponse" wsaw:Action="urn:listAllOperationsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listControlOperations">
      <wsdl:input message="tns:listControlOperationsRequest" wsaw:Action="urn:listControlOperations"/>
      <wsdl:output message="tns:listControlOperationsResponse" wsaw:Action="urn:listControlOperationsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OperationAdminSoap11Binding" type="tns:OperationAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getOperationStatistics">
      <soap:operation soapAction="urn:getOperationStatistics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhases">
      <soap:operation soapAction="urn:listOperationPhases" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhaseHandlers">
      <soap:operation soapAction="urn:listOperationPhaseHandlers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationParameters">
      <soap:operation soapAction="urn:getOperationParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationMetaData">
      <soap:operation soapAction="urn:getOperationMetaData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDeclaredOperationParameters">
      <soap:operation soapAction="urn:getDeclaredOperationParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <soap:operation soapAction="urn:configureMTOM" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setOperationParameters">
      <soap:operation soapAction="urn:setOperationParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listPublishedOperations">
      <soap:operation soapAction="urn:listPublishedOperations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeOperationParameter">
      <soap:operation soapAction="urn:removeOperationParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listAllOperations">
      <soap:operation soapAction="urn:listAllOperations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listControlOperations">
      <soap:operation soapAction="urn:listControlOperations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OperationAdminSoap12Binding" type="tns:OperationAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getOperationStatistics">
      <soap12:operation soapAction="urn:getOperationStatistics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhases">
      <soap12:operation soapAction="urn:listOperationPhases" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhaseHandlers">
      <soap12:operation soapAction="urn:listOperationPhaseHandlers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationParameters">
      <soap12:operation soapAction="urn:getOperationParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationMetaData">
      <soap12:operation soapAction="urn:getOperationMetaData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDeclaredOperationParameters">
      <soap12:operation soapAction="urn:getDeclaredOperationParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <soap12:operation soapAction="urn:configureMTOM" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setOperationParameters">
      <soap12:operation soapAction="urn:setOperationParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listPublishedOperations">
      <soap12:operation soapAction="urn:listPublishedOperations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeOperationParameter">
      <soap12:operation soapAction="urn:removeOperationParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listAllOperations">
      <soap12:operation soapAction="urn:listAllOperations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listControlOperations">
      <soap12:operation soapAction="urn:listControlOperations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OperationAdminHttpBinding" type="tns:OperationAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getOperationStatistics">
      <http:operation location="getOperationStatistics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhases">
      <http:operation location="listOperationPhases"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhaseHandlers">
      <http:operation location="listOperationPhaseHandlers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationParameters">
      <http:operation location="getOperationParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationMetaData">
      <http:operation location="getOperationMetaData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDeclaredOperationParameters">
      <http:operation location="getDeclaredOperationParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <http:operation location="configureMTOM"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setOperationParameters">
      <http:operation location="setOperationParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listPublishedOperations">
      <http:operation location="listPublishedOperations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeOperationParameter">
      <http:operation location="removeOperationParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listAllOperations">
      <http:operation location="listAllOperations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listControlOperations">
      <http:operation location="listControlOperations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OperationAdmin">
    <wsdl:port name="OperationAdminHttpsSoap11Endpoint" binding="tns:OperationAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/OperationAdmin.OperationAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OperationAdminHttpsSoap12Endpoint" binding="tns:OperationAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/OperationAdmin.OperationAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OperationAdminHttpsEndpoint" binding="tns:OperationAdminHttpBinding">
      <http:address location="https://localhost:9443/services/OperationAdmin.OperationAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/OperationAdmin.OperationAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="329a0b7e-d80d-49a5-8287-22d32569faf1" isOneWay="false" action="urn:configureMTOM" name="configureMTOM" bindingOperationName="configureMTOM" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed193c96-ebff-453c-8575-0e8c16cf8d23" isOneWay="false" action="urn:getDeclaredOperationParameters" name="getDeclaredOperationParameters" bindingOperationName="getDeclaredOperationParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dfad8e1b-1181-41d2-ad49-d18e1ecff517" isOneWay="false" action="urn:getOperationMetaData" name="getOperationMetaData" bindingOperationName="getOperationMetaData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9d5251e2-b6df-4480-8ebc-3ab78bb4a7d2" isOneWay="false" action="urn:getOperationParameters" name="getOperationParameters" bindingOperationName="getOperationParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c40c74c-827f-4d10-ae36-b4daa662f8dd" isOneWay="false" action="urn:getOperationStatistics" name="getOperationStatistics" bindingOperationName="getOperationStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ccb91c75-549e-428c-860d-b5692c8210f0" isOneWay="false" action="urn:listAllOperations" name="listAllOperations" bindingOperationName="listAllOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="35763f61-77ae-419d-ab7a-3dc12f081e8a" isOneWay="false" action="urn:listControlOperations" name="listControlOperations" bindingOperationName="listControlOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eea3db43-295b-43a2-842f-a9bc52d8712c" isOneWay="false" action="urn:listOperationPhaseHandlers" name="listOperationPhaseHandlers" bindingOperationName="listOperationPhaseHandlers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="909411eb-2b5a-498f-85fc-e8896604733c" isOneWay="false" action="urn:listOperationPhases" name="listOperationPhases" bindingOperationName="listOperationPhases" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="decd1f97-d342-4984-b65d-3a91bb60b160" isOneWay="false" action="urn:listPublishedOperations" name="listPublishedOperations" bindingOperationName="listPublishedOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a781c643-0225-4231-be9d-109ffcc0cf4b" isOneWay="false" action="urn:removeOperationParameter" name="removeOperationParameter" bindingOperationName="removeOperationParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="22fc2f23-66f8-4621-b33b-ea3d3aa41f71" isOneWay="false" action="urn:setOperationParameters" name="setOperationParameters" bindingOperationName="setOperationParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="84cc0337-72de-4e22-a4e1-ddb5a8209b1f" wsaVersion="NONE" name="ProfilesAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.profiles.registry.carbon.wso2.org}ProfilesAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/ProfilesAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="1b286ace-14f3-46c3-a9ad-4dcf42f8b0b1" isOneWay="false" action="urn:getUserProfile" name="getUserProfile" bindingOperationName="getUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c3249661-e1ab-4082-b5d0-c4e86181fa58" isOneWay="false" action="urn:putUserProfile" name="putUserProfile" bindingOperationName="putUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="aaf04992-e509-49e8-8b3e-da52d4516b87" wsaVersion="NONE" name="ProfilesAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.profiles.registry.carbon.wso2.org}ProfilesAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/ProfilesAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ProfilesAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ProfilesAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.profiles.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2522="http://beans.profiles.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.profiles.registry.carbon.wso2.org" xmlns:ax2514="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2515="http://api.registry.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2518="http://core.user.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax2519="http://api.user.carbon.wso2.org/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ProfilesAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.profiles.registry.carbon.wso2.org" xmlns:ax2517="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2521="http://core.user.carbon.wso2.org/xsd" xmlns:ax2523="http://beans.profiles.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://exceptions.core.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.profiles.registry.carbon.wso2.org/xsd"/>
      <xs:element name="ProfilesAdminServiceRegistryException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RegistryException" nillable="true" type="ax2514:RegistryException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ProfilesAdminServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2521:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2522:ProfilesBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="putUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="putUserProfileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2516="http://api.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="RegistryException">
        <xs:complexContent>
          <xs:extension base="ax2515:RegistryException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.profiles.registry.carbon.wso2.org/xsd">
      <xs:complexType name="ProfilesBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="mainDataString" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="profileNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2520="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2520:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.registry.carbon.wso2.org/xsd">
      <xs:complexType name="RegistryException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="putUserProfileRequest">
    <wsdl:part name="parameters" element="ns:putUserProfile"/>
  </wsdl:message>
  <wsdl:message name="putUserProfileResponse">
    <wsdl:part name="parameters" element="ns:putUserProfileResponse"/>
  </wsdl:message>
  <wsdl:message name="ProfilesAdminServiceRegistryException">
    <wsdl:part name="parameters" element="ns:ProfilesAdminServiceRegistryException"/>
  </wsdl:message>
  <wsdl:message name="ProfilesAdminServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:ProfilesAdminServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="getUserProfileRequest">
    <wsdl:part name="parameters" element="ns:getUserProfile"/>
  </wsdl:message>
  <wsdl:message name="getUserProfileResponse">
    <wsdl:part name="parameters" element="ns:getUserProfileResponse"/>
  </wsdl:message>
  <wsdl:portType name="ProfilesAdminServicePortType">
    <wsdl:operation name="putUserProfile">
      <wsdl:input message="ns:putUserProfileRequest" wsaw:Action="urn:putUserProfile"/>
      <wsdl:output message="ns:putUserProfileResponse" wsaw:Action="urn:putUserProfileResponse"/>
      <wsdl:fault message="ns:ProfilesAdminServiceRegistryException" name="ProfilesAdminServiceRegistryException" wsaw:Action="urn:putUserProfileProfilesAdminServiceRegistryException"/>
      <wsdl:fault message="ns:ProfilesAdminServiceUserStoreException" name="ProfilesAdminServiceUserStoreException" wsaw:Action="urn:putUserProfileProfilesAdminServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <wsdl:input message="ns:getUserProfileRequest" wsaw:Action="urn:getUserProfile"/>
      <wsdl:output message="ns:getUserProfileResponse" wsaw:Action="urn:getUserProfileResponse"/>
      <wsdl:fault message="ns:ProfilesAdminServiceRegistryException" name="ProfilesAdminServiceRegistryException" wsaw:Action="urn:getUserProfileProfilesAdminServiceRegistryException"/>
      <wsdl:fault message="ns:ProfilesAdminServiceUserStoreException" name="ProfilesAdminServiceUserStoreException" wsaw:Action="urn:getUserProfileProfilesAdminServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ProfilesAdminServiceSoap11Binding" type="ns:ProfilesAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="putUserProfile">
      <soap:operation soapAction="urn:putUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ProfilesAdminServiceRegistryException">
        <soap:fault use="literal" name="ProfilesAdminServiceRegistryException"/>
      </wsdl:fault>
      <wsdl:fault name="ProfilesAdminServiceUserStoreException">
        <soap:fault use="literal" name="ProfilesAdminServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <soap:operation soapAction="urn:getUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ProfilesAdminServiceRegistryException">
        <soap:fault use="literal" name="ProfilesAdminServiceRegistryException"/>
      </wsdl:fault>
      <wsdl:fault name="ProfilesAdminServiceUserStoreException">
        <soap:fault use="literal" name="ProfilesAdminServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ProfilesAdminServiceSoap12Binding" type="ns:ProfilesAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="putUserProfile">
      <soap12:operation soapAction="urn:putUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ProfilesAdminServiceRegistryException">
        <soap12:fault use="literal" name="ProfilesAdminServiceRegistryException"/>
      </wsdl:fault>
      <wsdl:fault name="ProfilesAdminServiceUserStoreException">
        <soap12:fault use="literal" name="ProfilesAdminServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <soap12:operation soapAction="urn:getUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ProfilesAdminServiceRegistryException">
        <soap12:fault use="literal" name="ProfilesAdminServiceRegistryException"/>
      </wsdl:fault>
      <wsdl:fault name="ProfilesAdminServiceUserStoreException">
        <soap12:fault use="literal" name="ProfilesAdminServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ProfilesAdminServiceHttpBinding" type="ns:ProfilesAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="putUserProfile">
      <http:operation location="putUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <http:operation location="getUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ProfilesAdminService">
    <wsdl:port name="ProfilesAdminServiceHttpsSoap11Endpoint" binding="ns:ProfilesAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ProfilesAdminServiceHttpsSoap12Endpoint" binding="ns:ProfilesAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ProfilesAdminServiceHttpsEndpoint" binding="ns:ProfilesAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="4ccc9964-ef92-4832-8e06-b0998500a63f" isOneWay="false" action="urn:getUserProfile" name="getUserProfile" bindingOperationName="getUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4ec09c54-ce0f-4e92-acb0-1ccae6f2f0e4" isOneWay="false" action="urn:putUserProfile" name="putUserProfile" bindingOperationName="putUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7a057208-9cf8-4ee4-b107-8e99115b8d2d" wsaVersion="NONE" name="PropertiesAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.properties.registry.carbon.wso2.org}PropertiesAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/PropertiesAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="829749b7-cc48-4de7-8f71-1b0e87109a97" isOneWay="false" action="urn:getProperties" name="getProperties" bindingOperationName="getProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7155e474-d168-4e62-8390-0eb20c30d712" isOneWay="false" action="urn:getRetentionProperties" name="getRetentionProperties" bindingOperationName="getRetentionProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7261b5e0-2721-4696-a6b7-748a37a03417" isOneWay="false" action="urn:removeProperty" name="removeProperty" bindingOperationName="removeProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e5d2f66a-3057-44ff-8434-af2a799a01ce" isOneWay="false" action="urn:setProperty" name="setProperty" bindingOperationName="setProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1cdecfbf-ba05-4f3b-aaca-38e34f0bff87" isOneWay="false" action="urn:setRetentionProperties" name="setRetentionProperties" bindingOperationName="setRetentionProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="767d40f2-fb0b-4024-bf69-7808fa787ce9" isOneWay="false" action="urn:updateProperty" name="updateProperty" bindingOperationName="updateProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="96559a10-ecb8-465e-839e-43414dce9875" wsaVersion="NONE" name="PropertiesAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.properties.registry.carbon.wso2.org}PropertiesAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/PropertiesAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/PropertiesAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/PropertiesAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.properties.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2524="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.properties.registry.carbon.wso2.org" xmlns:ax2525="http://api.registry.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2530="http://utils.properties.registry.carbon.wso2.org/xsd" xmlns:ax2528="http://beans.properties.registry.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>PropertiesAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.properties.registry.carbon.wso2.org/xsd">
      <xs:complexType name="Property">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.properties.registry.carbon.wso2.org/xsd" xmlns:ax2531="http://utils.properties.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://utils.properties.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="RetentionBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="deleteLocked" type="xs:boolean"/>
          <xs:element minOccurs="0" name="fromDate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="toDate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="writeLocked" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PropertiesBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="deleteLocked" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lifecycleProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2531:Property"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sysProperties" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="validationProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
          <xs:element minOccurs="0" name="writeLocked" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2526="http://api.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="RegistryException">
        <xs:complexContent>
          <xs:extension base="ax2525:RegistryException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.properties.registry.carbon.wso2.org" xmlns:ax2529="http://beans.properties.registry.carbon.wso2.org/xsd" xmlns:ax2527="http://exceptions.core.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://exceptions.core.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.properties.registry.carbon.wso2.org/xsd"/>
      <xs:element name="PropertiesAdminServiceRegistryException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RegistryException" nillable="true" type="ax2524:RegistryException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setRetentionProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="bean" nillable="true" type="ax2528:RetentionBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setRetentionPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRetentionProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRetentionPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2528:RetentionBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="viewProps" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2528:PropertiesBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.registry.carbon.wso2.org/xsd">
      <xs:complexType name="RegistryException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updatePropertyRequest">
    <wsdl:part name="parameters" element="ns:updateProperty"/>
  </wsdl:message>
  <wsdl:message name="PropertiesAdminServiceRegistryException">
    <wsdl:part name="parameters" element="ns:PropertiesAdminServiceRegistryException"/>
  </wsdl:message>
  <wsdl:message name="setPropertyRequest">
    <wsdl:part name="parameters" element="ns:setProperty"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesRequest">
    <wsdl:part name="parameters" element="ns:getProperties"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesResponse">
    <wsdl:part name="parameters" element="ns:getPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="setRetentionPropertiesRequest">
    <wsdl:part name="parameters" element="ns:setRetentionProperties"/>
  </wsdl:message>
  <wsdl:message name="setRetentionPropertiesResponse">
    <wsdl:part name="parameters" element="ns:setRetentionPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="getRetentionPropertiesRequest">
    <wsdl:part name="parameters" element="ns:getRetentionProperties"/>
  </wsdl:message>
  <wsdl:message name="getRetentionPropertiesResponse">
    <wsdl:part name="parameters" element="ns:getRetentionPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="removePropertyRequest">
    <wsdl:part name="parameters" element="ns:removeProperty"/>
  </wsdl:message>
  <wsdl:portType name="PropertiesAdminServicePortType">
    <wsdl:operation name="updateProperty">
      <wsdl:input message="ns:updatePropertyRequest" wsaw:Action="urn:updateProperty"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:updatePropertyPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <wsdl:input message="ns:setPropertyRequest" wsaw:Action="urn:setProperty"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:setPropertyPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <wsdl:input message="ns:getPropertiesRequest" wsaw:Action="urn:getProperties"/>
      <wsdl:output message="ns:getPropertiesResponse" wsaw:Action="urn:getPropertiesResponse"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:getPropertiesPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="setRetentionProperties">
      <wsdl:input message="ns:setRetentionPropertiesRequest" wsaw:Action="urn:setRetentionProperties"/>
      <wsdl:output message="ns:setRetentionPropertiesResponse" wsaw:Action="urn:setRetentionPropertiesResponse"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:setRetentionPropertiesPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getRetentionProperties">
      <wsdl:input message="ns:getRetentionPropertiesRequest" wsaw:Action="urn:getRetentionProperties"/>
      <wsdl:output message="ns:getRetentionPropertiesResponse" wsaw:Action="urn:getRetentionPropertiesResponse"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:getRetentionPropertiesPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
      <wsdl:input message="ns:removePropertyRequest" wsaw:Action="urn:removeProperty"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:removePropertyPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PropertiesAdminServiceSoap11Binding" type="ns:PropertiesAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateProperty">
      <soap:operation soapAction="urn:updateProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <soap:operation soapAction="urn:setProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap:operation soapAction="urn:getProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRetentionProperties">
      <soap:operation soapAction="urn:setRetentionProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRetentionProperties">
      <soap:operation soapAction="urn:getRetentionProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
      <soap:operation soapAction="urn:removeProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PropertiesAdminServiceSoap12Binding" type="ns:PropertiesAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateProperty">
      <soap12:operation soapAction="urn:updateProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <soap12:operation soapAction="urn:setProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap12:operation soapAction="urn:getProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRetentionProperties">
      <soap12:operation soapAction="urn:setRetentionProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRetentionProperties">
      <soap12:operation soapAction="urn:getRetentionProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
      <soap12:operation soapAction="urn:removeProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PropertiesAdminServiceHttpBinding" type="ns:PropertiesAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateProperty">
      <http:operation location="updateProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <http:operation location="setProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <http:operation location="getProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setRetentionProperties">
      <http:operation location="setRetentionProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRetentionProperties">
      <http:operation location="getRetentionProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
      <http:operation location="removeProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PropertiesAdminService">
    <wsdl:port name="PropertiesAdminServiceHttpsSoap11Endpoint" binding="ns:PropertiesAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="PropertiesAdminServiceHttpsSoap12Endpoint" binding="ns:PropertiesAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="PropertiesAdminServiceHttpsEndpoint" binding="ns:PropertiesAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="0e32b8ad-6ccf-433f-b458-98b27a28445b" isOneWay="false" action="urn:getProperties" name="getProperties" bindingOperationName="getProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5d4565ab-9eb1-477e-b436-0fa5e6cb2246" isOneWay="false" action="urn:getRetentionProperties" name="getRetentionProperties" bindingOperationName="getRetentionProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8221bda6-f86f-486b-88b2-ec15a70e71d5" isOneWay="false" action="urn:removeProperty" name="removeProperty" bindingOperationName="removeProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b03e98e5-de03-454e-8e76-aee5a2ee8700" isOneWay="false" action="urn:setProperty" name="setProperty" bindingOperationName="setProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0c68de8c-9180-42cf-9f72-f18012a3a4b7" isOneWay="false" action="urn:setRetentionProperties" name="setRetentionProperties" bindingOperationName="setRetentionProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5b92da29-967a-48e5-86a5-c4a1d90d4086" isOneWay="false" action="urn:updateProperty" name="updateProperty" bindingOperationName="updateProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="344910d8-2f22-43ea-9141-9635479988a1" wsaVersion="NONE" name="ProvisioningAdminServiceSoap11Binding" type="wsdl" bindingName="{http://prov.services.mgt.feature.carbon.wso2.org}ProvisioningAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/ProvisioningAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c89bf0ad-fb31-492b-938b-b944ed05b4e7" isOneWay="false" action="urn:getAllInstalledFeatures" name="getAllInstalledFeatures" bindingOperationName="getAllInstalledFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bec8604a-6f0e-4fee-a14a-cd0543d79fe3" isOneWay="false" action="urn:getFeatureLicenseInfo" name="getFeatureLicenseInfo" bindingOperationName="getFeatureLicenseInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48e73758-273e-4ce9-b5a9-db08a1f541ba" isOneWay="false" action="urn:getInstalledFeatureInfo" name="getInstalledFeatureInfo" bindingOperationName="getInstalledFeatureInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0124090a-4ba6-486e-aea5-3a2e8a2c85fe" isOneWay="false" action="urn:getInstalledFeaturesWithProperty" name="getInstalledFeaturesWithProperty" bindingOperationName="getInstalledFeaturesWithProperty" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d4a9afae-7393-4c75-930c-315c4406fb33" isOneWay="false" action="urn:getLicensingInformation" name="getLicensingInformation" bindingOperationName="getLicensingInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c9c1abd6-ac6e-494b-a09f-8f08d302c2fc" isOneWay="false" action="urn:getProfileHistory" name="getProfileHistory" bindingOperationName="getProfileHistory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3a35c9b-ce4b-45d0-b9ee-19582d0f20e4" isOneWay="false" action="urn:performProvisioningAction" name="performProvisioningAction" bindingOperationName="performProvisioningAction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="91dc7c0a-fbfb-4fca-a848-e88568166447" isOneWay="false" action="urn:removeAllConsoleFeatures" name="removeAllConsoleFeatures" bindingOperationName="removeAllConsoleFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="72717a5a-1ece-41cf-970b-9c2857c4751f" isOneWay="false" action="urn:removeAllServerFeatures" name="removeAllServerFeatures" bindingOperationName="removeAllServerFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ebf423ec-2021-4084-ac99-b40f96f0c584" isOneWay="false" action="urn:reviewProvisioningAction" name="reviewProvisioningAction" bindingOperationName="reviewProvisioningAction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b8f3e53c-41d8-4743-9a54-069151639487" wsaVersion="NONE" name="ProvisioningAdminServiceSoap12Binding" type="wsdl" bindingName="{http://prov.services.mgt.feature.carbon.wso2.org}ProvisioningAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/ProvisioningAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ProvisioningAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ProvisioningAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://prov.services.mgt.feature.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2118="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://prov.services.mgt.feature.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ProvisioningAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2119="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd">
      <xs:import namespace="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd"/>
      <xs:element name="getLicensingInformation">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLicensingInformationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:LicenseInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstalledFeatureInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstalledFeatureInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2118:FeatureInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reviewProvisioningAction">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="provActionInfo" nillable="true" type="ax2118:ProvisioningActionInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reviewProvisioningActionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2118:ProvisioningActionResultInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFeatureLicenseInfo">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFeatureLicenseInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:LicenseFeatureHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllInstalledFeatures">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllInstalledFeaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:Feature"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllServerFeatures">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllServerFeaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllConsoleFeatures">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllConsoleFeaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstalledFeaturesWithProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstalledFeaturesWithPropertyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:FeatureInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="performProvisioningAction">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="actionType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="performProvisioningActionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileHistory">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileHistoryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:ProfileHistory"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd">
      <xs:complexType name="LicenseInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="URL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="copyrightInfo" nillable="true" type="ax2118:CopyrightInfo"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="licenseInfo" nillable="true" type="ax2118:LicenseInfo"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CopyrightInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="URL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProvisioningActionInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="actionType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="featuresToInstall" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="featuresToUninstall" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element minOccurs="0" name="timestamp" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProvisioningActionResultInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="detailedDescription" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="failedUninstallableFeatures" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="failedinstallableFeatures" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element minOccurs="0" name="proceedWithInstallation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provActionID" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="reviewedInstallableFeatures" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="reviewedUninstallableFeatures" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element minOccurs="0" name="size" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LicenseFeatureHolder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="featureInfo" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element minOccurs="0" name="licenseInfo" nillable="true" type="ax2118:LicenseInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Feature">
        <xs:sequence>
          <xs:element minOccurs="0" name="featureDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="installed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredFeatures" nillable="true" type="ax2118:Feature"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProfileHistory">
        <xs:sequence>
          <xs:element minOccurs="0" name="summary" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="timestamp" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getFeatureLicenseInfoRequest">
    <wsdl:part name="parameters" element="ns1:getFeatureLicenseInfo"/>
  </wsdl:message>
  <wsdl:message name="getFeatureLicenseInfoResponse">
    <wsdl:part name="parameters" element="ns1:getFeatureLicenseInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getInstalledFeaturesWithPropertyRequest">
    <wsdl:part name="parameters" element="ns1:getInstalledFeaturesWithProperty"/>
  </wsdl:message>
  <wsdl:message name="getInstalledFeaturesWithPropertyResponse">
    <wsdl:part name="parameters" element="ns1:getInstalledFeaturesWithPropertyResponse"/>
  </wsdl:message>
  <wsdl:message name="removeAllConsoleFeaturesRequest">
    <wsdl:part name="parameters" element="ns1:removeAllConsoleFeatures"/>
  </wsdl:message>
  <wsdl:message name="removeAllConsoleFeaturesResponse">
    <wsdl:part name="parameters" element="ns1:removeAllConsoleFeaturesResponse"/>
  </wsdl:message>
  <wsdl:message name="performProvisioningActionRequest">
    <wsdl:part name="parameters" element="ns1:performProvisioningAction"/>
  </wsdl:message>
  <wsdl:message name="performProvisioningActionResponse">
    <wsdl:part name="parameters" element="ns1:performProvisioningActionResponse"/>
  </wsdl:message>
  <wsdl:message name="getLicensingInformationRequest">
    <wsdl:part name="parameters" element="ns1:getLicensingInformation"/>
  </wsdl:message>
  <wsdl:message name="getLicensingInformationResponse">
    <wsdl:part name="parameters" element="ns1:getLicensingInformationResponse"/>
  </wsdl:message>
  <wsdl:message name="reviewProvisioningActionRequest">
    <wsdl:part name="parameters" element="ns1:reviewProvisioningAction"/>
  </wsdl:message>
  <wsdl:message name="reviewProvisioningActionResponse">
    <wsdl:part name="parameters" element="ns1:reviewProvisioningActionResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllInstalledFeaturesRequest">
    <wsdl:part name="parameters" element="ns1:getAllInstalledFeatures"/>
  </wsdl:message>
  <wsdl:message name="getAllInstalledFeaturesResponse">
    <wsdl:part name="parameters" element="ns1:getAllInstalledFeaturesResponse"/>
  </wsdl:message>
  <wsdl:message name="getInstalledFeatureInfoRequest">
    <wsdl:part name="parameters" element="ns1:getInstalledFeatureInfo"/>
  </wsdl:message>
  <wsdl:message name="getInstalledFeatureInfoResponse">
    <wsdl:part name="parameters" element="ns1:getInstalledFeatureInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getProfileHistoryRequest">
    <wsdl:part name="parameters" element="ns1:getProfileHistory"/>
  </wsdl:message>
  <wsdl:message name="getProfileHistoryResponse">
    <wsdl:part name="parameters" element="ns1:getProfileHistoryResponse"/>
  </wsdl:message>
  <wsdl:message name="removeAllServerFeaturesRequest">
    <wsdl:part name="parameters" element="ns1:removeAllServerFeatures"/>
  </wsdl:message>
  <wsdl:message name="removeAllServerFeaturesResponse">
    <wsdl:part name="parameters" element="ns1:removeAllServerFeaturesResponse"/>
  </wsdl:message>
  <wsdl:portType name="ProvisioningAdminServicePortType">
    <wsdl:operation name="getFeatureLicenseInfo">
      <wsdl:input message="tns:getFeatureLicenseInfoRequest" wsaw:Action="urn:getFeatureLicenseInfo"/>
      <wsdl:output message="tns:getFeatureLicenseInfoResponse" wsaw:Action="urn:getFeatureLicenseInfoResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeaturesWithProperty">
      <wsdl:input message="tns:getInstalledFeaturesWithPropertyRequest" wsaw:Action="urn:getInstalledFeaturesWithProperty"/>
      <wsdl:output message="tns:getInstalledFeaturesWithPropertyResponse" wsaw:Action="urn:getInstalledFeaturesWithPropertyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeAllConsoleFeatures">
      <wsdl:input message="tns:removeAllConsoleFeaturesRequest" wsaw:Action="urn:removeAllConsoleFeatures"/>
      <wsdl:output message="tns:removeAllConsoleFeaturesResponse" wsaw:Action="urn:removeAllConsoleFeaturesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="performProvisioningAction">
      <wsdl:input message="tns:performProvisioningActionRequest" wsaw:Action="urn:performProvisioningAction"/>
      <wsdl:output message="tns:performProvisioningActionResponse" wsaw:Action="urn:performProvisioningActionResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getLicensingInformation">
      <wsdl:input message="tns:getLicensingInformationRequest" wsaw:Action="urn:getLicensingInformation"/>
      <wsdl:output message="tns:getLicensingInformationResponse" wsaw:Action="urn:getLicensingInformationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="reviewProvisioningAction">
      <wsdl:input message="tns:reviewProvisioningActionRequest" wsaw:Action="urn:reviewProvisioningAction"/>
      <wsdl:output message="tns:reviewProvisioningActionResponse" wsaw:Action="urn:reviewProvisioningActionResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAllInstalledFeatures">
      <wsdl:input message="tns:getAllInstalledFeaturesRequest" wsaw:Action="urn:getAllInstalledFeatures"/>
      <wsdl:output message="tns:getAllInstalledFeaturesResponse" wsaw:Action="urn:getAllInstalledFeaturesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatureInfo">
      <wsdl:input message="tns:getInstalledFeatureInfoRequest" wsaw:Action="urn:getInstalledFeatureInfo"/>
      <wsdl:output message="tns:getInstalledFeatureInfoResponse" wsaw:Action="urn:getInstalledFeatureInfoResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getProfileHistory">
      <wsdl:input message="tns:getProfileHistoryRequest" wsaw:Action="urn:getProfileHistory"/>
      <wsdl:output message="tns:getProfileHistoryResponse" wsaw:Action="urn:getProfileHistoryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeAllServerFeatures">
      <wsdl:input message="tns:removeAllServerFeaturesRequest" wsaw:Action="urn:removeAllServerFeatures"/>
      <wsdl:output message="tns:removeAllServerFeaturesResponse" wsaw:Action="urn:removeAllServerFeaturesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ProvisioningAdminServiceSoap11Binding" type="tns:ProvisioningAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getFeatureLicenseInfo">
      <soap:operation soapAction="urn:getFeatureLicenseInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeaturesWithProperty">
      <soap:operation soapAction="urn:getInstalledFeaturesWithProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllConsoleFeatures">
      <soap:operation soapAction="urn:removeAllConsoleFeatures" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="performProvisioningAction">
      <soap:operation soapAction="urn:performProvisioningAction" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLicensingInformation">
      <soap:operation soapAction="urn:getLicensingInformation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reviewProvisioningAction">
      <soap:operation soapAction="urn:reviewProvisioningAction" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllInstalledFeatures">
      <soap:operation soapAction="urn:getAllInstalledFeatures" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatureInfo">
      <soap:operation soapAction="urn:getInstalledFeatureInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProfileHistory">
      <soap:operation soapAction="urn:getProfileHistory" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllServerFeatures">
      <soap:operation soapAction="urn:removeAllServerFeatures" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ProvisioningAdminServiceSoap12Binding" type="tns:ProvisioningAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getFeatureLicenseInfo">
      <soap12:operation soapAction="urn:getFeatureLicenseInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeaturesWithProperty">
      <soap12:operation soapAction="urn:getInstalledFeaturesWithProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllConsoleFeatures">
      <soap12:operation soapAction="urn:removeAllConsoleFeatures" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="performProvisioningAction">
      <soap12:operation soapAction="urn:performProvisioningAction" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLicensingInformation">
      <soap12:operation soapAction="urn:getLicensingInformation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reviewProvisioningAction">
      <soap12:operation soapAction="urn:reviewProvisioningAction" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllInstalledFeatures">
      <soap12:operation soapAction="urn:getAllInstalledFeatures" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatureInfo">
      <soap12:operation soapAction="urn:getInstalledFeatureInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProfileHistory">
      <soap12:operation soapAction="urn:getProfileHistory" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllServerFeatures">
      <soap12:operation soapAction="urn:removeAllServerFeatures" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ProvisioningAdminServiceHttpBinding" type="tns:ProvisioningAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getFeatureLicenseInfo">
      <http:operation location="getFeatureLicenseInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeaturesWithProperty">
      <http:operation location="getInstalledFeaturesWithProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllConsoleFeatures">
      <http:operation location="removeAllConsoleFeatures"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="performProvisioningAction">
      <http:operation location="performProvisioningAction"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLicensingInformation">
      <http:operation location="getLicensingInformation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reviewProvisioningAction">
      <http:operation location="reviewProvisioningAction"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllInstalledFeatures">
      <http:operation location="getAllInstalledFeatures"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatureInfo">
      <http:operation location="getInstalledFeatureInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProfileHistory">
      <http:operation location="getProfileHistory"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllServerFeatures">
      <http:operation location="removeAllServerFeatures"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ProvisioningAdminService">
    <wsdl:port name="ProvisioningAdminServiceHttpsSoap11Endpoint" binding="tns:ProvisioningAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ProvisioningAdminServiceHttpsSoap12Endpoint" binding="tns:ProvisioningAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ProvisioningAdminServiceHttpsEndpoint" binding="tns:ProvisioningAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="35c1d537-9b99-4d22-aee3-c462099add10" isOneWay="false" action="urn:getAllInstalledFeatures" name="getAllInstalledFeatures" bindingOperationName="getAllInstalledFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c70d9586-cd30-4c96-92d4-4dc4c1ebb9eb" isOneWay="false" action="urn:getFeatureLicenseInfo" name="getFeatureLicenseInfo" bindingOperationName="getFeatureLicenseInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f513a49a-b6a9-4f09-a62e-ccd85152dc13" isOneWay="false" action="urn:getInstalledFeatureInfo" name="getInstalledFeatureInfo" bindingOperationName="getInstalledFeatureInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f742a4a6-4c4f-4215-a055-a2d8910ed192" isOneWay="false" action="urn:getInstalledFeaturesWithProperty" name="getInstalledFeaturesWithProperty" bindingOperationName="getInstalledFeaturesWithProperty" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b8c7b651-e583-4b4b-84dd-888d856318d5" isOneWay="false" action="urn:getLicensingInformation" name="getLicensingInformation" bindingOperationName="getLicensingInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f651eed5-abb7-4a1b-a687-27b3eb708013" isOneWay="false" action="urn:getProfileHistory" name="getProfileHistory" bindingOperationName="getProfileHistory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cdf8650c-e77c-4aaf-a504-888b6bb592dd" isOneWay="false" action="urn:performProvisioningAction" name="performProvisioningAction" bindingOperationName="performProvisioningAction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d3e1b8bf-25fa-46d8-af9c-a4a194cb7feb" isOneWay="false" action="urn:removeAllConsoleFeatures" name="removeAllConsoleFeatures" bindingOperationName="removeAllConsoleFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3797c941-7eb1-4c9e-a1cf-16546c1d3c6f" isOneWay="false" action="urn:removeAllServerFeatures" name="removeAllServerFeatures" bindingOperationName="removeAllServerFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="826a512f-0cd6-494f-9b2f-82fa77f83ff9" isOneWay="false" action="urn:reviewProvisioningAction" name="reviewProvisioningAction" bindingOperationName="reviewProvisioningAction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="0852d169-ce8c-4bf9-96ca-4c526b47a38f" wsaVersion="NONE" name="RegistryAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.server.registry.carbon.wso2.org}RegistryAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/RegistryAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="9d25dedc-c12f-4e27-8745-d5dbb81776e9" isOneWay="false" action="urn:getHTTPPermalink" name="getHTTPPermalink" bindingOperationName="getHTTPPermalink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66b3e04f-54a8-4d02-ba63-4685c2fdc8b5" isOneWay="false" action="urn:getHTTPSPermalink" name="getHTTPSPermalink" bindingOperationName="getHTTPSPermalink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="db6607b6-ce14-4904-b8d9-96dccc903fff" isOneWay="false" action="urn:isRegistryReadOnly" name="isRegistryReadOnly" bindingOperationName="isRegistryReadOnly" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9efe3084-e258-446d-99f3-35ff66ce44ea" wsaVersion="NONE" name="RegistryAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.server.registry.carbon.wso2.org}RegistryAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/RegistryAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RegistryAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RegistryAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.server.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://service.server.registry.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RegistryAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.server.registry.carbon.wso2.org">
      <xs:element name="getHTTPPermalink">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHTTPPermalinkResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHTTPSPermalink">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHTTPSPermalinkResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isRegistryReadOnly">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isRegistryReadOnlyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getHTTPPermalinkRequest">
    <wsdl:part name="parameters" element="ns:getHTTPPermalink"/>
  </wsdl:message>
  <wsdl:message name="getHTTPPermalinkResponse">
    <wsdl:part name="parameters" element="ns:getHTTPPermalinkResponse"/>
  </wsdl:message>
  <wsdl:message name="isRegistryReadOnlyRequest">
    <wsdl:part name="parameters" element="ns:isRegistryReadOnly"/>
  </wsdl:message>
  <wsdl:message name="isRegistryReadOnlyResponse">
    <wsdl:part name="parameters" element="ns:isRegistryReadOnlyResponse"/>
  </wsdl:message>
  <wsdl:message name="getHTTPSPermalinkRequest">
    <wsdl:part name="parameters" element="ns:getHTTPSPermalink"/>
  </wsdl:message>
  <wsdl:message name="getHTTPSPermalinkResponse">
    <wsdl:part name="parameters" element="ns:getHTTPSPermalinkResponse"/>
  </wsdl:message>
  <wsdl:portType name="RegistryAdminServicePortType">
    <wsdl:operation name="getHTTPPermalink">
      <wsdl:input message="ns:getHTTPPermalinkRequest" wsaw:Action="urn:getHTTPPermalink"/>
      <wsdl:output message="ns:getHTTPPermalinkResponse" wsaw:Action="urn:getHTTPPermalinkResponse"/>
    </wsdl:operation>
    <wsdl:operation name="isRegistryReadOnly">
      <wsdl:input message="ns:isRegistryReadOnlyRequest" wsaw:Action="urn:isRegistryReadOnly"/>
      <wsdl:output message="ns:isRegistryReadOnlyResponse" wsaw:Action="urn:isRegistryReadOnlyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getHTTPSPermalink">
      <wsdl:input message="ns:getHTTPSPermalinkRequest" wsaw:Action="urn:getHTTPSPermalink"/>
      <wsdl:output message="ns:getHTTPSPermalinkResponse" wsaw:Action="urn:getHTTPSPermalinkResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RegistryAdminServiceSoap11Binding" type="ns:RegistryAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getHTTPPermalink">
      <soap:operation soapAction="urn:getHTTPPermalink" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isRegistryReadOnly">
      <soap:operation soapAction="urn:isRegistryReadOnly" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getHTTPSPermalink">
      <soap:operation soapAction="urn:getHTTPSPermalink" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RegistryAdminServiceSoap12Binding" type="ns:RegistryAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getHTTPPermalink">
      <soap12:operation soapAction="urn:getHTTPPermalink" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isRegistryReadOnly">
      <soap12:operation soapAction="urn:isRegistryReadOnly" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getHTTPSPermalink">
      <soap12:operation soapAction="urn:getHTTPSPermalink" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RegistryAdminServiceHttpBinding" type="ns:RegistryAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getHTTPPermalink">
      <http:operation location="getHTTPPermalink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isRegistryReadOnly">
      <http:operation location="isRegistryReadOnly"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getHTTPSPermalink">
      <http:operation location="getHTTPSPermalink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RegistryAdminService">
    <wsdl:port name="RegistryAdminServiceHttpsSoap11Endpoint" binding="ns:RegistryAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RegistryAdminServiceHttpsSoap12Endpoint" binding="ns:RegistryAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RegistryAdminServiceHttpsEndpoint" binding="ns:RegistryAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="08837e47-4806-44ca-bcfc-99fb7f39c644" isOneWay="false" action="urn:getHTTPPermalink" name="getHTTPPermalink" bindingOperationName="getHTTPPermalink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86c1e88c-6aaa-4dcc-ac30-3934865b057b" isOneWay="false" action="urn:getHTTPSPermalink" name="getHTTPSPermalink" bindingOperationName="getHTTPSPermalink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="734061e8-a7ec-40f1-bad5-5161b18cb19c" isOneWay="false" action="urn:isRegistryReadOnly" name="isRegistryReadOnly" bindingOperationName="isRegistryReadOnly" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="933997a1-6470-472c-8b58-391960b91564" wsaVersion="NONE" name="RemoteAuthorizationManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteAuthorizationManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/RemoteAuthorizationManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="f42ca446-3a36-424e-a1eb-f814c6adc562" isOneWay="false" action="urn:authorizeRole" name="authorizeRole" bindingOperationName="authorizeRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="42d73f58-9b0c-4b9a-97b3-bc80da87f548" isOneWay="false" action="urn:authorizeUser" name="authorizeUser" bindingOperationName="authorizeUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a54b72f7-1f3f-471f-9e7b-ac6c9e4d84d1" isOneWay="false" action="urn:clearAllRoleAuthorization" name="clearAllRoleAuthorization" bindingOperationName="clearAllRoleAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="38a759df-0be3-4f59-bdd4-6019caf62ee5" isOneWay="false" action="urn:clearAllUserAuthorization" name="clearAllUserAuthorization" bindingOperationName="clearAllUserAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6092daea-6790-4ab2-96cf-1e1b87c9ea49" isOneWay="false" action="urn:clearResourceAuthorizations" name="clearResourceAuthorizations" bindingOperationName="clearResourceAuthorizations" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7ada48da-9687-476a-97b9-630f641664d9" isOneWay="false" action="urn:clearRoleActionOnAllResources" name="clearRoleActionOnAllResources" bindingOperationName="clearRoleActionOnAllResources" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a8fdbd8a-173a-41d7-b9f0-a4979b4a4fe3" isOneWay="false" action="urn:clearRoleAuthorization" name="clearRoleAuthorization" bindingOperationName="clearRoleAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f0489d4-be4e-4feb-b019-02d34f2344a1" isOneWay="false" action="urn:clearUserAuthorization" name="clearUserAuthorization" bindingOperationName="clearUserAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6323ed1f-c301-4af4-a89b-e4d6d069560c" isOneWay="false" action="urn:denyRole" name="denyRole" bindingOperationName="denyRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1faa259d-3533-4ed1-b58f-d3423131622c" isOneWay="false" action="urn:denyUser" name="denyUser" bindingOperationName="denyUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f08a1357-5dcc-436a-b416-6fd2bcc826bf" isOneWay="false" action="urn:getAllowedRolesForResource" name="getAllowedRolesForResource" bindingOperationName="getAllowedRolesForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9596d58-e4cf-4bdb-8397-e4fb4d20a35a" isOneWay="false" action="urn:getAllowedUIResourcesForUser" name="getAllowedUIResourcesForUser" bindingOperationName="getAllowedUIResourcesForUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="74a5b8a1-154b-4568-a9e1-6f6f7d98fd37" isOneWay="false" action="urn:getDeniedRolesForResource" name="getDeniedRolesForResource" bindingOperationName="getDeniedRolesForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8904f931-c136-46ac-871f-e2c36d0a9a0a" isOneWay="false" action="urn:getExplicitlyAllowedUsersForResource" name="getExplicitlyAllowedUsersForResource" bindingOperationName="getExplicitlyAllowedUsersForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4bead3af-c84e-45c2-9a88-c45c17a6b0ea" isOneWay="false" action="urn:getExplicitlyDeniedUsersForResource" name="getExplicitlyDeniedUsersForResource" bindingOperationName="getExplicitlyDeniedUsersForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="976c38a5-c12e-49b3-a3e2-b3808a6c0c67" isOneWay="false" action="urn:isRoleAuthorized" name="isRoleAuthorized" bindingOperationName="isRoleAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="67115b87-7bee-49fa-a7b5-4a2c59d60192" isOneWay="false" action="urn:isUserAuthorized" name="isUserAuthorized" bindingOperationName="isUserAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1ed0cf27-ffb8-4eb3-854d-f13bda80da92" isOneWay="false" action="urn:resetPermissionOnUpdateRole" name="resetPermissionOnUpdateRole" bindingOperationName="resetPermissionOnUpdateRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e5f66e74-2f13-4e6c-99d9-32082ce78321" wsaVersion="NONE" name="RemoteAuthorizationManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteAuthorizationManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/RemoteAuthorizationManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteAuthorizationManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteAuthorizationManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2652="http://core.user.carbon.wso2.org/xsd" xmlns:ax2653="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteAuthorizationManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2655="http://core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteAuthorizationManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2652:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllRoleAuthorization">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllUserAuthorization">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearUserAuthorization">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearRoleAuthorization">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearRoleActionOnAllResources">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearResourceAuthorizations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedUIResourcesForUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionRootPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedUIResourcesForUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resetPermissionOnUpdateRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newRoleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isUserAuthorized">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isUserAuthorizedResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isRoleAuthorized">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isRoleAuthorizedResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExplicitlyAllowedUsersForResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExplicitlyAllowedUsersForResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedRolesForResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedRolesForResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeniedRolesForResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeniedRolesForResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExplicitlyDeniedUsersForResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExplicitlyDeniedUsersForResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authorizeUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authorizeRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="denyUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="denyRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2654="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2653:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="authorizeUserRequest">
    <wsdl:part name="parameters" element="ns:authorizeUser"/>
  </wsdl:message>
  <wsdl:message name="RemoteAuthorizationManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteAuthorizationManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="isUserAuthorizedRequest">
    <wsdl:part name="parameters" element="ns:isUserAuthorized"/>
  </wsdl:message>
  <wsdl:message name="isUserAuthorizedResponse">
    <wsdl:part name="parameters" element="ns:isUserAuthorizedResponse"/>
  </wsdl:message>
  <wsdl:message name="clearAllUserAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearAllUserAuthorization"/>
  </wsdl:message>
  <wsdl:message name="denyUserRequest">
    <wsdl:part name="parameters" element="ns:denyUser"/>
  </wsdl:message>
  <wsdl:message name="clearUserAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearUserAuthorization"/>
  </wsdl:message>
  <wsdl:message name="getExplicitlyDeniedUsersForResourceRequest">
    <wsdl:part name="parameters" element="ns:getExplicitlyDeniedUsersForResource"/>
  </wsdl:message>
  <wsdl:message name="getExplicitlyDeniedUsersForResourceResponse">
    <wsdl:part name="parameters" element="ns:getExplicitlyDeniedUsersForResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="authorizeRoleRequest">
    <wsdl:part name="parameters" element="ns:authorizeRole"/>
  </wsdl:message>
  <wsdl:message name="getDeniedRolesForResourceRequest">
    <wsdl:part name="parameters" element="ns:getDeniedRolesForResource"/>
  </wsdl:message>
  <wsdl:message name="getDeniedRolesForResourceResponse">
    <wsdl:part name="parameters" element="ns:getDeniedRolesForResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllowedUIResourcesForUserRequest">
    <wsdl:part name="parameters" element="ns:getAllowedUIResourcesForUser"/>
  </wsdl:message>
  <wsdl:message name="getAllowedUIResourcesForUserResponse">
    <wsdl:part name="parameters" element="ns:getAllowedUIResourcesForUserResponse"/>
  </wsdl:message>
  <wsdl:message name="isRoleAuthorizedRequest">
    <wsdl:part name="parameters" element="ns:isRoleAuthorized"/>
  </wsdl:message>
  <wsdl:message name="isRoleAuthorizedResponse">
    <wsdl:part name="parameters" element="ns:isRoleAuthorizedResponse"/>
  </wsdl:message>
  <wsdl:message name="denyRoleRequest">
    <wsdl:part name="parameters" element="ns:denyRole"/>
  </wsdl:message>
  <wsdl:message name="clearRoleAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearRoleAuthorization"/>
  </wsdl:message>
  <wsdl:message name="getExplicitlyAllowedUsersForResourceRequest">
    <wsdl:part name="parameters" element="ns:getExplicitlyAllowedUsersForResource"/>
  </wsdl:message>
  <wsdl:message name="getExplicitlyAllowedUsersForResourceResponse">
    <wsdl:part name="parameters" element="ns:getExplicitlyAllowedUsersForResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="clearAllRoleAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearAllRoleAuthorization"/>
  </wsdl:message>
  <wsdl:message name="resetPermissionOnUpdateRoleRequest">
    <wsdl:part name="parameters" element="ns:resetPermissionOnUpdateRole"/>
  </wsdl:message>
  <wsdl:message name="clearRoleActionOnAllResourcesRequest">
    <wsdl:part name="parameters" element="ns:clearRoleActionOnAllResources"/>
  </wsdl:message>
  <wsdl:message name="getAllowedRolesForResourceRequest">
    <wsdl:part name="parameters" element="ns:getAllowedRolesForResource"/>
  </wsdl:message>
  <wsdl:message name="getAllowedRolesForResourceResponse">
    <wsdl:part name="parameters" element="ns:getAllowedRolesForResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="clearResourceAuthorizationsRequest">
    <wsdl:part name="parameters" element="ns:clearResourceAuthorizations"/>
  </wsdl:message>
  <wsdl:portType name="RemoteAuthorizationManagerServicePortType">
    <wsdl:operation name="authorizeUser">
      <wsdl:input message="ns:authorizeUserRequest" wsaw:Action="urn:authorizeUser"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:authorizeUserRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <wsdl:input message="ns:isUserAuthorizedRequest" wsaw:Action="urn:isUserAuthorized"/>
      <wsdl:output message="ns:isUserAuthorizedResponse" wsaw:Action="urn:isUserAuthorizedResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:isUserAuthorizedRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <wsdl:input message="ns:clearAllUserAuthorizationRequest" wsaw:Action="urn:clearAllUserAuthorization"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearAllUserAuthorizationRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="denyUser">
      <wsdl:input message="ns:denyUserRequest" wsaw:Action="urn:denyUser"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:denyUserRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <wsdl:input message="ns:clearUserAuthorizationRequest" wsaw:Action="urn:clearUserAuthorization"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearUserAuthorizationRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <wsdl:input message="ns:getExplicitlyDeniedUsersForResourceRequest" wsaw:Action="urn:getExplicitlyDeniedUsersForResource"/>
      <wsdl:output message="ns:getExplicitlyDeniedUsersForResourceResponse" wsaw:Action="urn:getExplicitlyDeniedUsersForResourceResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getExplicitlyDeniedUsersForResourceRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <wsdl:input message="ns:authorizeRoleRequest" wsaw:Action="urn:authorizeRole"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:authorizeRoleRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <wsdl:input message="ns:getDeniedRolesForResourceRequest" wsaw:Action="urn:getDeniedRolesForResource"/>
      <wsdl:output message="ns:getDeniedRolesForResourceResponse" wsaw:Action="urn:getDeniedRolesForResourceResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getDeniedRolesForResourceRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <wsdl:input message="ns:getAllowedUIResourcesForUserRequest" wsaw:Action="urn:getAllowedUIResourcesForUser"/>
      <wsdl:output message="ns:getAllowedUIResourcesForUserResponse" wsaw:Action="urn:getAllowedUIResourcesForUserResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getAllowedUIResourcesForUserRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <wsdl:input message="ns:isRoleAuthorizedRequest" wsaw:Action="urn:isRoleAuthorized"/>
      <wsdl:output message="ns:isRoleAuthorizedResponse" wsaw:Action="urn:isRoleAuthorizedResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:isRoleAuthorizedRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <wsdl:input message="ns:denyRoleRequest" wsaw:Action="urn:denyRole"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:denyRoleRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <wsdl:input message="ns:clearRoleAuthorizationRequest" wsaw:Action="urn:clearRoleAuthorization"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearRoleAuthorizationRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <wsdl:input message="ns:getExplicitlyAllowedUsersForResourceRequest" wsaw:Action="urn:getExplicitlyAllowedUsersForResource"/>
      <wsdl:output message="ns:getExplicitlyAllowedUsersForResourceResponse" wsaw:Action="urn:getExplicitlyAllowedUsersForResourceResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getExplicitlyAllowedUsersForResourceRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <wsdl:input message="ns:clearAllRoleAuthorizationRequest" wsaw:Action="urn:clearAllRoleAuthorization"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearAllRoleAuthorizationRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <wsdl:input message="ns:resetPermissionOnUpdateRoleRequest" wsaw:Action="urn:resetPermissionOnUpdateRole"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:resetPermissionOnUpdateRoleRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <wsdl:input message="ns:clearRoleActionOnAllResourcesRequest" wsaw:Action="urn:clearRoleActionOnAllResources"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearRoleActionOnAllResourcesRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <wsdl:input message="ns:getAllowedRolesForResourceRequest" wsaw:Action="urn:getAllowedRolesForResource"/>
      <wsdl:output message="ns:getAllowedRolesForResourceResponse" wsaw:Action="urn:getAllowedRolesForResourceResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getAllowedRolesForResourceRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <wsdl:input message="ns:clearResourceAuthorizationsRequest" wsaw:Action="urn:clearResourceAuthorizations"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearResourceAuthorizationsRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteAuthorizationManagerServiceSoap11Binding" type="ns:RemoteAuthorizationManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="authorizeUser">
      <soap:operation soapAction="urn:authorizeUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <soap:operation soapAction="urn:isUserAuthorized" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <soap:operation soapAction="urn:clearAllUserAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyUser">
      <soap:operation soapAction="urn:denyUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <soap:operation soapAction="urn:clearUserAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <soap:operation soapAction="urn:getExplicitlyDeniedUsersForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <soap:operation soapAction="urn:authorizeRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <soap:operation soapAction="urn:getDeniedRolesForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <soap:operation soapAction="urn:getAllowedUIResourcesForUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <soap:operation soapAction="urn:isRoleAuthorized" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <soap:operation soapAction="urn:denyRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <soap:operation soapAction="urn:clearRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <soap:operation soapAction="urn:getExplicitlyAllowedUsersForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <soap:operation soapAction="urn:clearAllRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <soap:operation soapAction="urn:resetPermissionOnUpdateRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <soap:operation soapAction="urn:clearRoleActionOnAllResources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <soap:operation soapAction="urn:getAllowedRolesForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <soap:operation soapAction="urn:clearResourceAuthorizations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteAuthorizationManagerServiceSoap12Binding" type="ns:RemoteAuthorizationManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="authorizeUser">
      <soap12:operation soapAction="urn:authorizeUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <soap12:operation soapAction="urn:isUserAuthorized" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <soap12:operation soapAction="urn:clearAllUserAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyUser">
      <soap12:operation soapAction="urn:denyUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <soap12:operation soapAction="urn:clearUserAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <soap12:operation soapAction="urn:getExplicitlyDeniedUsersForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <soap12:operation soapAction="urn:authorizeRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <soap12:operation soapAction="urn:getDeniedRolesForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <soap12:operation soapAction="urn:getAllowedUIResourcesForUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <soap12:operation soapAction="urn:isRoleAuthorized" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <soap12:operation soapAction="urn:denyRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <soap12:operation soapAction="urn:clearRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <soap12:operation soapAction="urn:getExplicitlyAllowedUsersForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <soap12:operation soapAction="urn:clearAllRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <soap12:operation soapAction="urn:resetPermissionOnUpdateRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <soap12:operation soapAction="urn:clearRoleActionOnAllResources" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <soap12:operation soapAction="urn:getAllowedRolesForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <soap12:operation soapAction="urn:clearResourceAuthorizations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteAuthorizationManagerServiceHttpBinding" type="ns:RemoteAuthorizationManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="authorizeUser">
      <http:operation location="authorizeUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <http:operation location="isUserAuthorized"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <http:operation location="clearAllUserAuthorization"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="denyUser">
      <http:operation location="denyUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <http:operation location="clearUserAuthorization"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <http:operation location="getExplicitlyDeniedUsersForResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <http:operation location="authorizeRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <http:operation location="getDeniedRolesForResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <http:operation location="getAllowedUIResourcesForUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <http:operation location="isRoleAuthorized"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <http:operation location="denyRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <http:operation location="clearRoleAuthorization"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <http:operation location="getExplicitlyAllowedUsersForResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <http:operation location="clearAllRoleAuthorization"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <http:operation location="resetPermissionOnUpdateRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <http:operation location="clearRoleActionOnAllResources"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <http:operation location="getAllowedRolesForResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <http:operation location="clearResourceAuthorizations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteAuthorizationManagerService">
    <wsdl:port name="RemoteAuthorizationManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteAuthorizationManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteAuthorizationManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteAuthorizationManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteAuthorizationManagerServiceHttpsEndpoint" binding="ns:RemoteAuthorizationManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="8749e100-0a73-455a-ad97-522d1750ac61" isOneWay="false" action="urn:authorizeRole" name="authorizeRole" bindingOperationName="authorizeRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="74d9ae6b-18ab-47bd-a116-fda720e43a74" isOneWay="false" action="urn:authorizeUser" name="authorizeUser" bindingOperationName="authorizeUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7394fab-d457-4a51-aa9a-4bd03e972154" isOneWay="false" action="urn:clearAllRoleAuthorization" name="clearAllRoleAuthorization" bindingOperationName="clearAllRoleAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dc631983-7a7d-4e6a-bcb3-e5a12f8f374b" isOneWay="false" action="urn:clearAllUserAuthorization" name="clearAllUserAuthorization" bindingOperationName="clearAllUserAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b17c1a6b-814b-439a-b3d4-38830a122957" isOneWay="false" action="urn:clearResourceAuthorizations" name="clearResourceAuthorizations" bindingOperationName="clearResourceAuthorizations" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="84d7d661-1788-49eb-a47d-e7379865bf52" isOneWay="false" action="urn:clearRoleActionOnAllResources" name="clearRoleActionOnAllResources" bindingOperationName="clearRoleActionOnAllResources" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="45ec5d71-7909-4e22-a9c1-eb719061c652" isOneWay="false" action="urn:clearRoleAuthorization" name="clearRoleAuthorization" bindingOperationName="clearRoleAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ae19c086-4a2a-439a-93a2-eee94993a6c9" isOneWay="false" action="urn:clearUserAuthorization" name="clearUserAuthorization" bindingOperationName="clearUserAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="752e2419-bfbb-48dd-8c75-c8215a9a04e8" isOneWay="false" action="urn:denyRole" name="denyRole" bindingOperationName="denyRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79c648c5-3e2a-4894-864c-ce93319cc623" isOneWay="false" action="urn:denyUser" name="denyUser" bindingOperationName="denyUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dfafcbab-c824-4b4b-b5c2-a386cbae6d68" isOneWay="false" action="urn:getAllowedRolesForResource" name="getAllowedRolesForResource" bindingOperationName="getAllowedRolesForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="be3ed7bc-99ac-4394-97be-1acd62c85297" isOneWay="false" action="urn:getAllowedUIResourcesForUser" name="getAllowedUIResourcesForUser" bindingOperationName="getAllowedUIResourcesForUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6232c040-2447-4a1a-8a1a-2259e85e3ee2" isOneWay="false" action="urn:getDeniedRolesForResource" name="getDeniedRolesForResource" bindingOperationName="getDeniedRolesForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d228b070-3d4a-419a-ad7b-19110427fc9c" isOneWay="false" action="urn:getExplicitlyAllowedUsersForResource" name="getExplicitlyAllowedUsersForResource" bindingOperationName="getExplicitlyAllowedUsersForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1b1247a9-1483-4d7d-a850-3b685f76b927" isOneWay="false" action="urn:getExplicitlyDeniedUsersForResource" name="getExplicitlyDeniedUsersForResource" bindingOperationName="getExplicitlyDeniedUsersForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2a488313-424c-4325-8ae5-0890a48b0166" isOneWay="false" action="urn:isRoleAuthorized" name="isRoleAuthorized" bindingOperationName="isRoleAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e2374432-2dc6-4871-9de2-134f42e87530" isOneWay="false" action="urn:isUserAuthorized" name="isUserAuthorized" bindingOperationName="isUserAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="53541c3e-e9cd-4e38-8e3d-753084f99dc4" isOneWay="false" action="urn:resetPermissionOnUpdateRole" name="resetPermissionOnUpdateRole" bindingOperationName="resetPermissionOnUpdateRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="302229eb-232b-4ad2-9be8-e74f2346325b" wsaVersion="NONE" name="RemoteClaimManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteClaimManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/RemoteClaimManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="0a8ff656-2e41-4895-b193-15ff9329de2c" isOneWay="false" action="urn:addNewClaimMapping" name="addNewClaimMapping" bindingOperationName="addNewClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7a8e7cc8-d89f-4196-8992-5747e934de0e" isOneWay="false" action="urn:deleteClaimMapping" name="deleteClaimMapping" bindingOperationName="deleteClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1cda6b11-db3c-4fb9-bd3c-f9b90a3d2045" isOneWay="false" action="urn:getAllClaimMappings" name="getAllClaimMappings" bindingOperationName="getAllClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f581ce56-7115-4b53-935b-334e751f50e9" isOneWay="false" action="urn:getAllClaimUris" name="getAllClaimUris" bindingOperationName="getAllClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c908b004-cedf-448f-ab60-deceab45f6ed" isOneWay="false" action="urn:getAllRequiredClaimMappings" name="getAllRequiredClaimMappings" bindingOperationName="getAllRequiredClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3493b054-2bd2-4a46-9fe8-0ef5aa254a59" isOneWay="false" action="urn:getAllSupportClaimMappingsByDefault" name="getAllSupportClaimMappingsByDefault" bindingOperationName="getAllSupportClaimMappingsByDefault" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d2c6148e-bd9e-41ac-b9c7-b2de713a9ea4" isOneWay="false" action="urn:getAttributeName" name="getAttributeName" bindingOperationName="getAttributeName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d6215803-1e94-4a5c-a953-16cf4f02c653" isOneWay="false" action="urn:getAttributeNameFromDomain" name="getAttributeNameFromDomain" bindingOperationName="getAttributeNameFromDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a2c777bd-c002-42b6-ad99-8e61f6ba2063" isOneWay="false" action="urn:getClaim" name="getClaim" bindingOperationName="getClaim" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bed92468-ade4-42dd-ae32-fa60fcf5e6bd" isOneWay="false" action="urn:getClaimMapping" name="getClaimMapping" bindingOperationName="getClaimMapping" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0075fb66-7fa0-4270-9482-cde167b45fa2" isOneWay="false" action="urn:updateClaimMapping" name="updateClaimMapping" bindingOperationName="updateClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="aa425909-ecf7-4718-90ad-0d7f9c982340" wsaVersion="NONE" name="RemoteClaimManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteClaimManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/RemoteClaimManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteClaimManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteClaimManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2674="http://core.user.carbon.wso2.org/xsd" xmlns:ax2675="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteClaimManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Claim">
        <xs:sequence>
          <xs:element minOccurs="0" name="checkedAttribute" type="xs:boolean"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dialectURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="displayTag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="regEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="supportedByDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="claim" nillable="true" type="ax2675:Claim"/>
          <xs:element minOccurs="0" name="mappedAttribute" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mappedAttributeWithNoDomain" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="mappedAttributes" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2677="http://core.user.carbon.wso2.org/xsd" xmlns:ax2678="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteClaimManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2674:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttributeNameFromDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttributeNameFromDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttributeName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttributeNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaim">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2675:Claim"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappingResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSupportClaimMappingsByDefault">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSupportClaimMappingsByDefaultResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllClaimMappings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialectUri" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllClaimMappingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRequiredClaimMappings">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRequiredClaimMappingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllClaimUris">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllClaimUrisResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addNewClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mapping" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mapping" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mapping" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2676="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2675:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAllClaimMappingsRequest">
    <wsdl:part name="parameters" element="ns:getAllClaimMappings"/>
  </wsdl:message>
  <wsdl:message name="getAllClaimMappingsResponse">
    <wsdl:part name="parameters" element="ns:getAllClaimMappingsResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoteClaimManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteClaimManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingRequest">
    <wsdl:part name="parameters" element="ns:getClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingResponse">
    <wsdl:part name="parameters" element="ns:getClaimMappingResponse"/>
  </wsdl:message>
  <wsdl:message name="addNewClaimMappingRequest">
    <wsdl:part name="parameters" element="ns:addNewClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="getClaimRequest">
    <wsdl:part name="parameters" element="ns:getClaim"/>
  </wsdl:message>
  <wsdl:message name="getClaimResponse">
    <wsdl:part name="parameters" element="ns:getClaimResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllRequiredClaimMappingsRequest">
    <wsdl:part name="parameters" element="ns:getAllRequiredClaimMappings"/>
  </wsdl:message>
  <wsdl:message name="getAllRequiredClaimMappingsResponse">
    <wsdl:part name="parameters" element="ns:getAllRequiredClaimMappingsResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllClaimUrisRequest">
    <wsdl:part name="parameters" element="ns:getAllClaimUris"/>
  </wsdl:message>
  <wsdl:message name="getAllClaimUrisResponse">
    <wsdl:part name="parameters" element="ns:getAllClaimUrisResponse"/>
  </wsdl:message>
  <wsdl:message name="updateClaimMappingRequest">
    <wsdl:part name="parameters" element="ns:updateClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="getAttributeNameRequest">
    <wsdl:part name="parameters" element="ns:getAttributeName"/>
  </wsdl:message>
  <wsdl:message name="getAttributeNameResponse">
    <wsdl:part name="parameters" element="ns:getAttributeNameResponse"/>
  </wsdl:message>
  <wsdl:message name="getAttributeNameFromDomainRequest">
    <wsdl:part name="parameters" element="ns:getAttributeNameFromDomain"/>
  </wsdl:message>
  <wsdl:message name="getAttributeNameFromDomainResponse">
    <wsdl:part name="parameters" element="ns:getAttributeNameFromDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteClaimMappingRequest">
    <wsdl:part name="parameters" element="ns:deleteClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="getAllSupportClaimMappingsByDefaultRequest">
    <wsdl:part name="parameters" element="ns:getAllSupportClaimMappingsByDefault"/>
  </wsdl:message>
  <wsdl:message name="getAllSupportClaimMappingsByDefaultResponse">
    <wsdl:part name="parameters" element="ns:getAllSupportClaimMappingsByDefaultResponse"/>
  </wsdl:message>
  <wsdl:portType name="RemoteClaimManagerServicePortType">
    <wsdl:operation name="getAllClaimMappings">
      <wsdl:input message="ns:getAllClaimMappingsRequest" wsaw:Action="urn:getAllClaimMappings"/>
      <wsdl:output message="ns:getAllClaimMappingsResponse" wsaw:Action="urn:getAllClaimMappingsResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAllClaimMappingsRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimMapping">
      <wsdl:input message="ns:getClaimMappingRequest" wsaw:Action="urn:getClaimMapping"/>
      <wsdl:output message="ns:getClaimMappingResponse" wsaw:Action="urn:getClaimMappingResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getClaimMappingRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <wsdl:input message="ns:addNewClaimMappingRequest" wsaw:Action="urn:addNewClaimMapping"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:addNewClaimMappingRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaim">
      <wsdl:input message="ns:getClaimRequest" wsaw:Action="urn:getClaim"/>
      <wsdl:output message="ns:getClaimResponse" wsaw:Action="urn:getClaimResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getClaimRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllRequiredClaimMappings">
      <wsdl:input message="ns:getAllRequiredClaimMappingsRequest" wsaw:Action="urn:getAllRequiredClaimMappings"/>
      <wsdl:output message="ns:getAllRequiredClaimMappingsResponse" wsaw:Action="urn:getAllRequiredClaimMappingsResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAllRequiredClaimMappingsRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllClaimUris">
      <wsdl:input message="ns:getAllClaimUrisRequest" wsaw:Action="urn:getAllClaimUris"/>
      <wsdl:output message="ns:getAllClaimUrisResponse" wsaw:Action="urn:getAllClaimUrisResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAllClaimUrisRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateClaimMapping">
      <wsdl:input message="ns:updateClaimMappingRequest" wsaw:Action="urn:updateClaimMapping"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:updateClaimMappingRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <wsdl:input message="ns:getAttributeNameRequest" wsaw:Action="urn:getAttributeName"/>
      <wsdl:output message="ns:getAttributeNameResponse" wsaw:Action="urn:getAttributeNameResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAttributeNameRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNameFromDomain">
      <wsdl:input message="ns:getAttributeNameFromDomainRequest" wsaw:Action="urn:getAttributeNameFromDomain"/>
      <wsdl:output message="ns:getAttributeNameFromDomainResponse" wsaw:Action="urn:getAttributeNameFromDomainResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAttributeNameFromDomainRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteClaimMapping">
      <wsdl:input message="ns:deleteClaimMappingRequest" wsaw:Action="urn:deleteClaimMapping"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:deleteClaimMappingRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSupportClaimMappingsByDefault">
      <wsdl:input message="ns:getAllSupportClaimMappingsByDefaultRequest" wsaw:Action="urn:getAllSupportClaimMappingsByDefault"/>
      <wsdl:output message="ns:getAllSupportClaimMappingsByDefaultResponse" wsaw:Action="urn:getAllSupportClaimMappingsByDefaultResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAllSupportClaimMappingsByDefaultRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteClaimManagerServiceSoap11Binding" type="ns:RemoteClaimManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllClaimMappings">
      <soap:operation soapAction="urn:getAllClaimMappings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMapping">
      <soap:operation soapAction="urn:getClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <soap:operation soapAction="urn:addNewClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaim">
      <soap:operation soapAction="urn:getClaim" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRequiredClaimMappings">
      <soap:operation soapAction="urn:getAllRequiredClaimMappings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllClaimUris">
      <soap:operation soapAction="urn:getAllClaimUris" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateClaimMapping">
      <soap:operation soapAction="urn:updateClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <soap:operation soapAction="urn:getAttributeName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNameFromDomain">
      <soap:operation soapAction="urn:getAttributeNameFromDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteClaimMapping">
      <soap:operation soapAction="urn:deleteClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSupportClaimMappingsByDefault">
      <soap:operation soapAction="urn:getAllSupportClaimMappingsByDefault" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteClaimManagerServiceSoap12Binding" type="ns:RemoteClaimManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllClaimMappings">
      <soap12:operation soapAction="urn:getAllClaimMappings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMapping">
      <soap12:operation soapAction="urn:getClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <soap12:operation soapAction="urn:addNewClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaim">
      <soap12:operation soapAction="urn:getClaim" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRequiredClaimMappings">
      <soap12:operation soapAction="urn:getAllRequiredClaimMappings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllClaimUris">
      <soap12:operation soapAction="urn:getAllClaimUris" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateClaimMapping">
      <soap12:operation soapAction="urn:updateClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <soap12:operation soapAction="urn:getAttributeName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNameFromDomain">
      <soap12:operation soapAction="urn:getAttributeNameFromDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteClaimMapping">
      <soap12:operation soapAction="urn:deleteClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSupportClaimMappingsByDefault">
      <soap12:operation soapAction="urn:getAllSupportClaimMappingsByDefault" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteClaimManagerServiceHttpBinding" type="ns:RemoteClaimManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAllClaimMappings">
      <http:operation location="getAllClaimMappings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClaimMapping">
      <http:operation location="getClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <http:operation location="addNewClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getClaim">
      <http:operation location="getClaim"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRequiredClaimMappings">
      <http:operation location="getAllRequiredClaimMappings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllClaimUris">
      <http:operation location="getAllClaimUris"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateClaimMapping">
      <http:operation location="updateClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <http:operation location="getAttributeName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNameFromDomain">
      <http:operation location="getAttributeNameFromDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteClaimMapping">
      <http:operation location="deleteClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllSupportClaimMappingsByDefault">
      <http:operation location="getAllSupportClaimMappingsByDefault"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteClaimManagerService">
    <wsdl:port name="RemoteClaimManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteClaimManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteClaimManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteClaimManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteClaimManagerServiceHttpsEndpoint" binding="ns:RemoteClaimManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="0f258aa3-bd89-4385-8376-ec3307b48a22" isOneWay="false" action="urn:addNewClaimMapping" name="addNewClaimMapping" bindingOperationName="addNewClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12655c83-4eec-416a-87c3-8d6aa6937e4d" isOneWay="false" action="urn:deleteClaimMapping" name="deleteClaimMapping" bindingOperationName="deleteClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="77a852d4-d346-49dc-beca-f0659e1f8e70" isOneWay="false" action="urn:getAllClaimMappings" name="getAllClaimMappings" bindingOperationName="getAllClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c2cd977e-815f-4867-b0d6-b8f97e0ee08c" isOneWay="false" action="urn:getAllClaimUris" name="getAllClaimUris" bindingOperationName="getAllClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eba0ff2b-8210-4081-bcfd-c528c2433ee5" isOneWay="false" action="urn:getAllRequiredClaimMappings" name="getAllRequiredClaimMappings" bindingOperationName="getAllRequiredClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="76a8694b-eef9-431a-98b9-84c2ff7055af" isOneWay="false" action="urn:getAllSupportClaimMappingsByDefault" name="getAllSupportClaimMappingsByDefault" bindingOperationName="getAllSupportClaimMappingsByDefault" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6754e9e3-f253-4370-8731-727606f061fb" isOneWay="false" action="urn:getAttributeName" name="getAttributeName" bindingOperationName="getAttributeName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fc31e08e-44de-46b2-a3a3-74143110a990" isOneWay="false" action="urn:getAttributeNameFromDomain" name="getAttributeNameFromDomain" bindingOperationName="getAttributeNameFromDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7aa17bee-7871-402b-8380-f2614f248aa8" isOneWay="false" action="urn:getClaim" name="getClaim" bindingOperationName="getClaim" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aae187c8-5029-46aa-b89a-47429d6d41d4" isOneWay="false" action="urn:getClaimMapping" name="getClaimMapping" bindingOperationName="getClaimMapping" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ba11244a-b3cd-4ae5-89ec-1fa02268ba73" isOneWay="false" action="urn:updateClaimMapping" name="updateClaimMapping" bindingOperationName="updateClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="324c432e-42b5-4a8b-bf5a-17d229f767d8" wsaVersion="NONE" name="RemoteProfileConfigurationManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteProfileConfigurationManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/RemoteProfileConfigurationManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="e992822b-4703-4268-9b9c-e29115d20aa4" isOneWay="false" action="urn:addProfileConfig" name="addProfileConfig" bindingOperationName="addProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9acb2277-04f6-44d3-9105-e8377ab77c05" isOneWay="false" action="urn:deleteProfileConfig" name="deleteProfileConfig" bindingOperationName="deleteProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="89ce8506-3ca1-4f98-9877-6089a84b014d" isOneWay="false" action="urn:getAllProfiles" name="getAllProfiles" bindingOperationName="getAllProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cdb5721f-52a2-4410-b33d-bc02cf1a61dd" isOneWay="false" action="urn:getProfileConfig" name="getProfileConfig" bindingOperationName="getProfileConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eb98c5d6-90b8-455d-a20b-a77f96d56860" isOneWay="false" action="urn:updateProfileConfig" name="updateProfileConfig" bindingOperationName="updateProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6a9aa812-bd61-4866-b487-1bb64e599528" wsaVersion="NONE" name="RemoteProfileConfigurationManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteProfileConfigurationManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/RemoteProfileConfigurationManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteProfileConfigurationManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteProfileConfigurationManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2667="http://core.user.carbon.wso2.org/xsd" xmlns:ax2668="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2671="http://profile.core.user.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteProfileConfigurationManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="ProfileConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="dialectName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="hiddenClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="inheritedClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="overriddenClaims" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2670="http://core.user.carbon.wso2.org/xsd" xmlns:ax2673="http://profile.core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://profile.core.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2667:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileConfigResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addProfileConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileConfig" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateProfileConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileConfig" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteProfileConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileConfig" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProfiles">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProfilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2669="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2668:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://profile.core.user.carbon.wso2.org/xsd" xmlns:ax2672="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="ProfileConfiguration">
        <xs:complexContent>
          <xs:extension base="ax2668:ProfileConfiguration">
            <xs:sequence>
              <xs:element minOccurs="0" name="dialectName" nillable="true" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="hiddenClaims" nillable="true" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="inheritedClaims" nillable="true" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="overriddenClaims" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getProfileConfigRequest">
    <wsdl:part name="parameters" element="ns:getProfileConfig"/>
  </wsdl:message>
  <wsdl:message name="getProfileConfigResponse">
    <wsdl:part name="parameters" element="ns:getProfileConfigResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoteProfileConfigurationManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteProfileConfigurationManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="updateProfileConfigRequest">
    <wsdl:part name="parameters" element="ns:updateProfileConfig"/>
  </wsdl:message>
  <wsdl:message name="getAllProfilesRequest">
    <wsdl:part name="parameters" element="ns:getAllProfiles"/>
  </wsdl:message>
  <wsdl:message name="getAllProfilesResponse">
    <wsdl:part name="parameters" element="ns:getAllProfilesResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteProfileConfigRequest">
    <wsdl:part name="parameters" element="ns:deleteProfileConfig"/>
  </wsdl:message>
  <wsdl:message name="addProfileConfigRequest">
    <wsdl:part name="parameters" element="ns:addProfileConfig"/>
  </wsdl:message>
  <wsdl:portType name="RemoteProfileConfigurationManagerServicePortType">
    <wsdl:operation name="getProfileConfig">
      <wsdl:input message="ns:getProfileConfigRequest" wsaw:Action="urn:getProfileConfig"/>
      <wsdl:output message="ns:getProfileConfigResponse" wsaw:Action="urn:getProfileConfigResponse"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:getProfileConfigRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateProfileConfig">
      <wsdl:input message="ns:updateProfileConfigRequest" wsaw:Action="urn:updateProfileConfig"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:updateProfileConfigRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllProfiles">
      <wsdl:input message="ns:getAllProfilesRequest" wsaw:Action="urn:getAllProfiles"/>
      <wsdl:output message="ns:getAllProfilesResponse" wsaw:Action="urn:getAllProfilesResponse"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:getAllProfilesRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteProfileConfig">
      <wsdl:input message="ns:deleteProfileConfigRequest" wsaw:Action="urn:deleteProfileConfig"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:deleteProfileConfigRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addProfileConfig">
      <wsdl:input message="ns:addProfileConfigRequest" wsaw:Action="urn:addProfileConfig"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:addProfileConfigRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteProfileConfigurationManagerServiceSoap11Binding" type="ns:RemoteProfileConfigurationManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getProfileConfig">
      <soap:operation soapAction="urn:getProfileConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProfileConfig">
      <soap:operation soapAction="urn:updateProfileConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProfiles">
      <soap:operation soapAction="urn:getAllProfiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProfileConfig">
      <soap:operation soapAction="urn:deleteProfileConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addProfileConfig">
      <soap:operation soapAction="urn:addProfileConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteProfileConfigurationManagerServiceSoap12Binding" type="ns:RemoteProfileConfigurationManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getProfileConfig">
      <soap12:operation soapAction="urn:getProfileConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProfileConfig">
      <soap12:operation soapAction="urn:updateProfileConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProfiles">
      <soap12:operation soapAction="urn:getAllProfiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProfileConfig">
      <soap12:operation soapAction="urn:deleteProfileConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addProfileConfig">
      <soap12:operation soapAction="urn:addProfileConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteProfileConfigurationManagerServiceHttpBinding" type="ns:RemoteProfileConfigurationManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getProfileConfig">
      <http:operation location="getProfileConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateProfileConfig">
      <http:operation location="updateProfileConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllProfiles">
      <http:operation location="getAllProfiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteProfileConfig">
      <http:operation location="deleteProfileConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addProfileConfig">
      <http:operation location="addProfileConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteProfileConfigurationManagerService">
    <wsdl:port name="RemoteProfileConfigurationManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteProfileConfigurationManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteProfileConfigurationManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteProfileConfigurationManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteProfileConfigurationManagerServiceHttpsEndpoint" binding="ns:RemoteProfileConfigurationManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="338026db-310c-4324-a574-c17bb662db1c" isOneWay="false" action="urn:addProfileConfig" name="addProfileConfig" bindingOperationName="addProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="35d0450c-32fd-4a86-a735-4abfbc3e1119" isOneWay="false" action="urn:deleteProfileConfig" name="deleteProfileConfig" bindingOperationName="deleteProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="13cb922a-9b37-42cd-950a-ad6bfb051ac7" isOneWay="false" action="urn:getAllProfiles" name="getAllProfiles" bindingOperationName="getAllProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c07db704-efa5-43d2-8989-27217c485ce6" isOneWay="false" action="urn:getProfileConfig" name="getProfileConfig" bindingOperationName="getProfileConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cfc5414e-4c3c-4772-baef-68eebb103c73" isOneWay="false" action="urn:updateProfileConfig" name="updateProfileConfig" bindingOperationName="updateProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c2c9c47d-7fd0-42a9-9c8f-26a96672d1a9" wsaVersion="NONE" name="RemoteTenantManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteTenantManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/RemoteTenantManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="4087d1f2-bf91-49c4-a590-c5080615521b" isOneWay="false" action="urn:activateTenant" name="activateTenant" bindingOperationName="activateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0294ffd1-75ba-4bb0-85f0-77e458a66a3f" isOneWay="false" action="urn:addTenant" name="addTenant" bindingOperationName="addTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="493a941b-52d2-4478-a973-940696434bdd" isOneWay="false" action="urn:deactivateTenant" name="deactivateTenant" bindingOperationName="deactivateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="23a8c54a-591d-42bf-8fc0-7c749d5fed9c" isOneWay="false" action="urn:deleteTenant" name="deleteTenant" bindingOperationName="deleteTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="705465a4-99c9-4dda-b663-44bd926d7f72" isOneWay="false" action="urn:getAllTenants" name="getAllTenants" bindingOperationName="getAllTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7d7bd7b6-cc06-4659-a60a-97109b97680e" isOneWay="false" action="urn:getDomain" name="getDomain" bindingOperationName="getDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5eb11f93-3ce6-4532-be87-2ad8e06c8a8a" isOneWay="false" action="urn:getSuperTenantDomain" name="getSuperTenantDomain" bindingOperationName="getSuperTenantDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0fd9a413-9579-4426-b95b-91a5cf6883dc" isOneWay="false" action="urn:getTenant" name="getTenant" bindingOperationName="getTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7f02894-e345-4e52-a60d-245dae67ae55" isOneWay="false" action="urn:getTenantId" name="getTenantId" bindingOperationName="getTenantId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58f96b64-362c-4b18-b0ef-b0fe0c939c4c" isOneWay="false" action="urn:isTenantActive" name="isTenantActive" bindingOperationName="isTenantActive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7a536765-e0f4-4041-9a23-7d733a2b57c8" isOneWay="false" action="urn:updateTenant" name="updateTenant" bindingOperationName="updateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="df0e6f96-5b26-4c7d-b090-f274a6265442" wsaVersion="NONE" name="RemoteTenantManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteTenantManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/RemoteTenantManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteTenantManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteTenantManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2685="http://core.user.carbon.wso2.org/xsd" xmlns:ax2686="http://api.user.carbon.wso2.org/xsd" xmlns:ax2689="http://tenant.core.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteTenantManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Tenant">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="adminFirstName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminFullName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminLastName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdDate" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="email" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="realmConfig" nillable="true" type="ax2686:RealmConfiguration"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RealmConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="addAdmin" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorizationManagerClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="authzProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="everyOneRoleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="multipleCredentialProps" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordsExternallyManaged" type="xs:boolean"/>
          <xs:element minOccurs="0" name="persistedTimestamp" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realmClassName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="realmProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="secondaryRealmConfig" nillable="true" type="ax2686:RealmConfiguration"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="userStoreClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userStoreProperties" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2688="http://core.user.carbon.wso2.org/xsd" xmlns:ax2691="http://tenant.core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://tenant.core.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteTenantManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2685:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenant" nillable="true" type="ax2689:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenant" nillable="true" type="ax2689:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deactivateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isTenantActive">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isTenantActiveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSuperTenantDomain">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSuperTenantDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2689:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllTenants">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2689:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="activateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://tenant.core.user.carbon.wso2.org/xsd" xmlns:ax2690="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="Tenant">
        <xs:complexContent>
          <xs:extension base="ax2686:Tenant">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2687="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2686:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getSuperTenantDomainRequest">
    <wsdl:part name="parameters" element="ns:getSuperTenantDomain"/>
  </wsdl:message>
  <wsdl:message name="getSuperTenantDomainResponse">
    <wsdl:part name="parameters" element="ns:getSuperTenantDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoteTenantManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteTenantManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="getDomainRequest">
    <wsdl:part name="parameters" element="ns:getDomain"/>
  </wsdl:message>
  <wsdl:message name="getDomainResponse">
    <wsdl:part name="parameters" element="ns:getDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="deactivateTenantRequest">
    <wsdl:part name="parameters" element="ns:deactivateTenant"/>
  </wsdl:message>
  <wsdl:message name="addTenantRequest">
    <wsdl:part name="parameters" element="ns:addTenant"/>
  </wsdl:message>
  <wsdl:message name="addTenantResponse">
    <wsdl:part name="parameters" element="ns:addTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="updateTenantRequest">
    <wsdl:part name="parameters" element="ns:updateTenant"/>
  </wsdl:message>
  <wsdl:message name="deleteTenantRequest">
    <wsdl:part name="parameters" element="ns:deleteTenant"/>
  </wsdl:message>
  <wsdl:message name="isTenantActiveRequest">
    <wsdl:part name="parameters" element="ns:isTenantActive"/>
  </wsdl:message>
  <wsdl:message name="isTenantActiveResponse">
    <wsdl:part name="parameters" element="ns:isTenantActiveResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdRequest">
    <wsdl:part name="parameters" element="ns:getTenantId"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdResponse">
    <wsdl:part name="parameters" element="ns:getTenantIdResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantRequest">
    <wsdl:part name="parameters" element="ns:getTenant"/>
  </wsdl:message>
  <wsdl:message name="getTenantResponse">
    <wsdl:part name="parameters" element="ns:getTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllTenantsRequest">
    <wsdl:part name="parameters" element="ns:getAllTenants"/>
  </wsdl:message>
  <wsdl:message name="getAllTenantsResponse">
    <wsdl:part name="parameters" element="ns:getAllTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="activateTenantRequest">
    <wsdl:part name="parameters" element="ns:activateTenant"/>
  </wsdl:message>
  <wsdl:portType name="RemoteTenantManagerServicePortType">
    <wsdl:operation name="getSuperTenantDomain">
      <wsdl:input message="ns:getSuperTenantDomainRequest" wsaw:Action="urn:getSuperTenantDomain"/>
      <wsdl:output message="ns:getSuperTenantDomainResponse" wsaw:Action="urn:getSuperTenantDomainResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getSuperTenantDomainRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getDomain">
      <wsdl:input message="ns:getDomainRequest" wsaw:Action="urn:getDomain"/>
      <wsdl:output message="ns:getDomainResponse" wsaw:Action="urn:getDomainResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getDomainRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deactivateTenant">
      <wsdl:input message="ns:deactivateTenantRequest" wsaw:Action="urn:deactivateTenant"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:deactivateTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <wsdl:input message="ns:addTenantRequest" wsaw:Action="urn:addTenant"/>
      <wsdl:output message="ns:addTenantResponse" wsaw:Action="urn:addTenantResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:addTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <wsdl:input message="ns:updateTenantRequest" wsaw:Action="urn:updateTenant"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:updateTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <wsdl:input message="ns:deleteTenantRequest" wsaw:Action="urn:deleteTenant"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:deleteTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isTenantActive">
      <wsdl:input message="ns:isTenantActiveRequest" wsaw:Action="urn:isTenantActive"/>
      <wsdl:output message="ns:isTenantActiveResponse" wsaw:Action="urn:isTenantActiveResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:isTenantActiveRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <wsdl:input message="ns:getTenantIdRequest" wsaw:Action="urn:getTenantId"/>
      <wsdl:output message="ns:getTenantIdResponse" wsaw:Action="urn:getTenantIdResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getTenantIdRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <wsdl:input message="ns:getTenantRequest" wsaw:Action="urn:getTenant"/>
      <wsdl:output message="ns:getTenantResponse" wsaw:Action="urn:getTenantResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllTenants">
      <wsdl:input message="ns:getAllTenantsRequest" wsaw:Action="urn:getAllTenants"/>
      <wsdl:output message="ns:getAllTenantsResponse" wsaw:Action="urn:getAllTenantsResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getAllTenantsRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <wsdl:input message="ns:activateTenantRequest" wsaw:Action="urn:activateTenant"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:activateTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteTenantManagerServiceSoap11Binding" type="ns:RemoteTenantManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSuperTenantDomain">
      <soap:operation soapAction="urn:getSuperTenantDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomain">
      <soap:operation soapAction="urn:getDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateTenant">
      <soap:operation soapAction="urn:deactivateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <soap:operation soapAction="urn:addTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <soap:operation soapAction="urn:updateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <soap:operation soapAction="urn:deleteTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isTenantActive">
      <soap:operation soapAction="urn:isTenantActive" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <soap:operation soapAction="urn:getTenantId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <soap:operation soapAction="urn:getTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTenants">
      <soap:operation soapAction="urn:getAllTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <soap:operation soapAction="urn:activateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteTenantManagerServiceSoap12Binding" type="ns:RemoteTenantManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSuperTenantDomain">
      <soap12:operation soapAction="urn:getSuperTenantDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomain">
      <soap12:operation soapAction="urn:getDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateTenant">
      <soap12:operation soapAction="urn:deactivateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <soap12:operation soapAction="urn:addTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <soap12:operation soapAction="urn:updateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <soap12:operation soapAction="urn:deleteTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isTenantActive">
      <soap12:operation soapAction="urn:isTenantActive" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <soap12:operation soapAction="urn:getTenantId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <soap12:operation soapAction="urn:getTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTenants">
      <soap12:operation soapAction="urn:getAllTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <soap12:operation soapAction="urn:activateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteTenantManagerServiceHttpBinding" type="ns:RemoteTenantManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getSuperTenantDomain">
      <http:operation location="getSuperTenantDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDomain">
      <http:operation location="getDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deactivateTenant">
      <http:operation location="deactivateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <http:operation location="addTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <http:operation location="updateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <http:operation location="deleteTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isTenantActive">
      <http:operation location="isTenantActive"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <http:operation location="getTenantId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <http:operation location="getTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllTenants">
      <http:operation location="getAllTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <http:operation location="activateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteTenantManagerService">
    <wsdl:port name="RemoteTenantManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteTenantManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteTenantManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteTenantManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteTenantManagerServiceHttpsEndpoint" binding="ns:RemoteTenantManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="d7dbaf0b-48c2-4adf-8ebf-5c76f6c4ac96" isOneWay="false" action="urn:activateTenant" name="activateTenant" bindingOperationName="activateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="75c2d4ea-78e5-466b-a2f5-682a8115a63d" isOneWay="false" action="urn:addTenant" name="addTenant" bindingOperationName="addTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1cafc349-fb74-4a5d-83fe-16b4c137ca0e" isOneWay="false" action="urn:deactivateTenant" name="deactivateTenant" bindingOperationName="deactivateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="96b410ea-bff7-42fb-8461-e5e5245751c5" isOneWay="false" action="urn:deleteTenant" name="deleteTenant" bindingOperationName="deleteTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="82598c9d-f0e7-463f-91aa-eac841f6d5fc" isOneWay="false" action="urn:getAllTenants" name="getAllTenants" bindingOperationName="getAllTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eb72acc5-3568-46ec-b7be-d81e5e8c9176" isOneWay="false" action="urn:getDomain" name="getDomain" bindingOperationName="getDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3191b503-f8a9-41d3-9dd8-f25c6aa0d4ef" isOneWay="false" action="urn:getSuperTenantDomain" name="getSuperTenantDomain" bindingOperationName="getSuperTenantDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6310f57f-8869-4cc3-8e88-bf78fd87f5c5" isOneWay="false" action="urn:getTenant" name="getTenant" bindingOperationName="getTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ddd9eaae-ce06-4d8d-ae99-ecee0e400494" isOneWay="false" action="urn:getTenantId" name="getTenantId" bindingOperationName="getTenantId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9bbf32d5-5cf8-4a4b-bc11-c1c1f28098e7" isOneWay="false" action="urn:isTenantActive" name="isTenantActive" bindingOperationName="isTenantActive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3819ff73-7190-4682-916c-b5cc1de5920f" isOneWay="false" action="urn:updateTenant" name="updateTenant" bindingOperationName="updateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="899fde01-52f5-4fa0-9a7b-f87c12c1eb02" wsaVersion="NONE" name="RemoteUserRealmServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteUserRealmServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/RemoteUserRealmService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="951c76de-3309-401e-ba25-4294fd94d792" isOneWay="false" action="urn:getRealmConfiguration" name="getRealmConfiguration" bindingOperationName="getRealmConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f32e6c1d-34ff-4f25-9af3-16553b5afabd" wsaVersion="NONE" name="RemoteUserRealmServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteUserRealmServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/RemoteUserRealmService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteUserRealmService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteUserRealmService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:ax2679="http://core.user.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2680="http://api.user.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2683="http://dao.service.ws.um.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteUserRealmService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dao.service.ws.um.carbon.wso2.org/xsd">
      <xs:complexType name="RealmConfigurationDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorizationManagerClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="authzProperties" nillable="true" type="ax2683:RealmPropertyDTO"/>
          <xs:element minOccurs="0" name="everyOneRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="maxUserListLength" type="xs:int"/>
          <xs:element minOccurs="0" name="persistedTimestamp" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realmClassName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="realmProperties" nillable="true" type="ax2683:RealmPropertyDTO"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="userStoreClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userStoreProperties" nillable="true" type="ax2683:RealmPropertyDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RealmPropertyDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2682="http://core.user.carbon.wso2.org/xsd" xmlns:ax2684="http://dao.service.ws.um.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dao.service.ws.um.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteUserRealmServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2679:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRealmConfiguration">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRealmConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2683:RealmConfigurationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2681="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2680:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getRealmConfigurationRequest">
    <wsdl:part name="parameters" element="ns:getRealmConfiguration"/>
  </wsdl:message>
  <wsdl:message name="getRealmConfigurationResponse">
    <wsdl:part name="parameters" element="ns:getRealmConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoteUserRealmServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteUserRealmServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:portType name="RemoteUserRealmServicePortType">
    <wsdl:operation name="getRealmConfiguration">
      <wsdl:input message="ns:getRealmConfigurationRequest" wsaw:Action="urn:getRealmConfiguration"/>
      <wsdl:output message="ns:getRealmConfigurationResponse" wsaw:Action="urn:getRealmConfigurationResponse"/>
      <wsdl:fault message="ns:RemoteUserRealmServiceUserStoreException" name="RemoteUserRealmServiceUserStoreException" wsaw:Action="urn:getRealmConfigurationRemoteUserRealmServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteUserRealmServiceSoap11Binding" type="ns:RemoteUserRealmServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getRealmConfiguration">
      <soap:operation soapAction="urn:getRealmConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserRealmServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserRealmServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteUserRealmServiceSoap12Binding" type="ns:RemoteUserRealmServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getRealmConfiguration">
      <soap12:operation soapAction="urn:getRealmConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserRealmServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserRealmServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteUserRealmServiceHttpBinding" type="ns:RemoteUserRealmServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getRealmConfiguration">
      <http:operation location="getRealmConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteUserRealmService">
    <wsdl:port name="RemoteUserRealmServiceHttpsSoap11Endpoint" binding="ns:RemoteUserRealmServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteUserRealmServiceHttpsSoap12Endpoint" binding="ns:RemoteUserRealmServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteUserRealmServiceHttpsEndpoint" binding="ns:RemoteUserRealmServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="53da69a1-3a5f-4127-89a2-0fe8434d8c4c" isOneWay="false" action="urn:getRealmConfiguration" name="getRealmConfiguration" bindingOperationName="getRealmConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8a7ef5ac-5425-44c0-8042-33b92dfbe3dd" wsaVersion="NONE" name="RemoteUserStoreManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteUserStoreManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/RemoteUserStoreManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="d232e2d5-abb5-4dc0-b734-ddcf1dec4972" isOneWay="false" action="urn:addRole" name="addRole" bindingOperationName="addRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="23eadfb6-86b2-4e6e-9ee2-7b8e719112ec" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="929c4a8b-fbe1-4da4-86a3-6c77d08b11fc" isOneWay="false" action="urn:addUserClaimValue" name="addUserClaimValue" bindingOperationName="addUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5584fcc0-8939-46f2-ad14-325a895c9bcd" isOneWay="false" action="urn:addUserClaimValues" name="addUserClaimValues" bindingOperationName="addUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="608e6a4c-67a5-4747-a2b1-98fdfe96f19b" isOneWay="false" action="urn:authenticate" name="authenticate" bindingOperationName="authenticate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c84cc33b-5283-47e4-99c9-5fc647a50795" isOneWay="false" action="urn:deleteRole" name="deleteRole" bindingOperationName="deleteRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5e2abccc-7f1b-497d-9405-00e250024767" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="990dc27c-091f-4c2f-a592-943c8e91456c" isOneWay="false" action="urn:deleteUserClaimValue" name="deleteUserClaimValue" bindingOperationName="deleteUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bb6136fd-8c39-4d1f-a9d5-16b231c0c0e6" isOneWay="false" action="urn:deleteUserClaimValues" name="deleteUserClaimValues" bindingOperationName="deleteUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9dd21e9d-06ca-4549-9853-aba37188c9db" isOneWay="false" action="urn:getAllProfileNames" name="getAllProfileNames" bindingOperationName="getAllProfileNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c3d7e149-578e-4ed5-9064-4042545c19fe" isOneWay="false" action="urn:getHybridRoles" name="getHybridRoles" bindingOperationName="getHybridRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f1616be7-f8cf-4cd8-bbee-06d3931e4486" isOneWay="false" action="urn:getPasswordExpirationTime" name="getPasswordExpirationTime" bindingOperationName="getPasswordExpirationTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b25652c6-3a35-40ce-b97b-3250bc07a409" isOneWay="false" action="urn:getProfileNames" name="getProfileNames" bindingOperationName="getProfileNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e5f2c76a-7a33-4328-a682-ccf364e2a1a8" isOneWay="false" action="urn:getProperties" name="getProperties" bindingOperationName="getProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08592950-b490-4bac-8c7c-8bfcf2d20335" isOneWay="false" action="urn:getRoleListOfUser" name="getRoleListOfUser" bindingOperationName="getRoleListOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86dac51e-c2b1-4511-9850-5b1a3568859a" isOneWay="false" action="urn:getRoleNames" name="getRoleNames" bindingOperationName="getRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="09a3fef5-28fb-4b69-a8da-67696332d800" isOneWay="false" action="urn:getTenantId" name="getTenantId" bindingOperationName="getTenantId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d578d81c-e856-49c3-a8b7-0519c6e205a3" isOneWay="false" action="urn:getTenantIdofUser" name="getTenantIdofUser" bindingOperationName="getTenantIdofUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="761e9102-9799-4241-841f-56fc9e46c1ca" isOneWay="false" action="urn:getUserClaimValue" name="getUserClaimValue" bindingOperationName="getUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fbeb94db-5147-4fb6-8069-d94222a233bb" isOneWay="false" action="urn:getUserClaimValues" name="getUserClaimValues" bindingOperationName="getUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e78bb7a8-52ec-47d1-a3a4-2807dc334301" isOneWay="false" action="urn:getUserClaimValuesForClaims" name="getUserClaimValuesForClaims" bindingOperationName="getUserClaimValuesForClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1ac69def-4ac7-4e49-bc3c-37e7f63fde34" isOneWay="false" action="urn:getUserId" name="getUserId" bindingOperationName="getUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="50c40b47-6f31-4e52-8828-1e6a8c04ae38" isOneWay="false" action="urn:getUserList" name="getUserList" bindingOperationName="getUserList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b8194f2e-8c79-4b98-a83b-af2ae94f2be9" isOneWay="false" action="urn:getUserListOfRole" name="getUserListOfRole" bindingOperationName="getUserListOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cd2388a5-cf70-4673-8186-0a48fe55cde5" isOneWay="false" action="urn:isExistingRole" name="isExistingRole" bindingOperationName="isExistingRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="28e9c75e-3ff3-4395-a87a-4ed547e5ccbc" isOneWay="false" action="urn:isExistingUser" name="isExistingUser" bindingOperationName="isExistingUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a8e5e85-480d-44b2-bab8-5e87d1d58389" isOneWay="false" action="urn:isReadOnly" name="isReadOnly" bindingOperationName="isReadOnly" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bea48078-6ff5-467d-b1ec-35a91d2c1d39" isOneWay="false" action="urn:listUsers" name="listUsers" bindingOperationName="listUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="267f1f01-5073-48a7-be0a-73b9e0783921" isOneWay="false" action="urn:setUserClaimValue" name="setUserClaimValue" bindingOperationName="setUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e691385-ed31-445d-bb1e-55008ecc8bb1" isOneWay="false" action="urn:setUserClaimValues" name="setUserClaimValues" bindingOperationName="setUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed5fc72d-455b-4a12-bac0-38838fbf27bb" isOneWay="false" action="urn:updateCredential" name="updateCredential" bindingOperationName="updateCredential" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="70b803a3-984c-4b05-8db9-d90d778df637" isOneWay="false" action="urn:updateCredentialByAdmin" name="updateCredentialByAdmin" bindingOperationName="updateCredentialByAdmin" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ae06c965-94a1-4083-a7d2-4600b4696cdb" isOneWay="false" action="urn:updateRoleListOfUser" name="updateRoleListOfUser" bindingOperationName="updateRoleListOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f3abd248-8294-4cc7-a980-6568caa364bb" isOneWay="false" action="urn:updateRoleName" name="updateRoleName" bindingOperationName="updateRoleName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4336c21c-7d4c-4eed-92aa-20642dabe339" isOneWay="false" action="urn:updateUserListOfRole" name="updateUserListOfRole" bindingOperationName="updateUserListOfRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a66da8e4-90a0-4bf7-a625-be0476455176" wsaVersion="NONE" name="RemoteUserStoreManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteUserStoreManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/RemoteUserStoreManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteUserStoreManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RemoteUserStoreManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2664="http://tenant.core.user.carbon.wso2.org/xsd" xmlns:ax2656="http://core.user.carbon.wso2.org/xsd" xmlns:ax2657="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2660="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ax2662="http://dao.service.ws.um.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteUserStoreManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dao.service.ws.um.carbon.wso2.org/xsd">
      <xs:complexType name="PermissionDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dialectURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="displayTag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="regEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="supportedByDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Tenant">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="adminFirstName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminFullName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminLastName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdDate" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="email" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="realmConfig" nillable="true" type="ax2657:RealmConfiguration"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RealmConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="addAdmin" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorizationManagerClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="authzProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="everyOneRoleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="multipleCredentialProps" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordsExternallyManaged" type="xs:boolean"/>
          <xs:element minOccurs="0" name="persistedTimestamp" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realmClassName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="realmProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="secondaryRealmConfig" nillable="true" type="ax2657:RealmConfiguration"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="userStoreClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userStoreProperties" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.mgt.user.carbon.wso2.org/xsd">
      <xs:complexType name="ClaimValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2663="http://dao.service.ws.um.carbon.wso2.org/xsd" xmlns:ax2666="http://tenant.core.user.carbon.wso2.org/xsd" xmlns:ax2661="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ax2659="http://core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://common.mgt.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dao.service.ws.um.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://tenant.core.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteUserStoreManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2656:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2660:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValuesForClaims">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValuesForClaimsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2660:ClaimValue"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantIdofUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantIdofUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxItemLimit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="ax2663:PermissionDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRoleName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newRoleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantId">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roleList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2660:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="requirePasswordChange" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserList">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profile" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRoleListOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRoleListOfUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserListOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserListOfRoleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateCredential">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newCredential" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldCredential" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPasswordExpirationTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPasswordExpirationTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingRoleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRoleNames">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRoleNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claim" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValueResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValuesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2663:ClaimDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProfileNames">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProfileNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateCredentialByAdmin">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newCredential" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateUserListOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="deletedUsers" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newUsers" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRoleListOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="deletedRoles" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newRoles" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2660:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHybridRoles">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHybridRolesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenant" nillable="true" type="ax2664:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ns:ArrayOfString"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfString">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="array" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="isReadOnly">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://tenant.core.user.carbon.wso2.org/xsd" xmlns:ax2665="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="Tenant">
        <xs:complexContent>
          <xs:extension base="ax2665:Tenant">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2658="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2657:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateCredentialRequest">
    <wsdl:part name="parameters" element="ns:updateCredential"/>
  </wsdl:message>
  <wsdl:message name="RemoteUserStoreManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteUserStoreManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="getRoleNamesRequest">
    <wsdl:part name="parameters" element="ns:getRoleNames"/>
  </wsdl:message>
  <wsdl:message name="getRoleNamesResponse">
    <wsdl:part name="parameters" element="ns:getRoleNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:deleteUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="authenticateRequest">
    <wsdl:part name="parameters" element="ns:authenticate"/>
  </wsdl:message>
  <wsdl:message name="authenticateResponse">
    <wsdl:part name="parameters" element="ns:authenticateResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:addUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="isExistingUserRequest">
    <wsdl:part name="parameters" element="ns:isExistingUser"/>
  </wsdl:message>
  <wsdl:message name="isExistingUserResponse">
    <wsdl:part name="parameters" element="ns:isExistingUserResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserRequest">
    <wsdl:part name="parameters" element="ns:addUser"/>
  </wsdl:message>
  <wsdl:message name="updateRoleListOfUserRequest">
    <wsdl:part name="parameters" element="ns:updateRoleListOfUser"/>
  </wsdl:message>
  <wsdl:message name="getRoleListOfUserRequest">
    <wsdl:part name="parameters" element="ns:getRoleListOfUser"/>
  </wsdl:message>
  <wsdl:message name="getRoleListOfUserResponse">
    <wsdl:part name="parameters" element="ns:getRoleListOfUserResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllProfileNamesRequest">
    <wsdl:part name="parameters" element="ns:getAllProfileNames"/>
  </wsdl:message>
  <wsdl:message name="getAllProfileNamesResponse">
    <wsdl:part name="parameters" element="ns:getAllProfileNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserListRequest">
    <wsdl:part name="parameters" element="ns:getUserList"/>
  </wsdl:message>
  <wsdl:message name="getUserListResponse">
    <wsdl:part name="parameters" element="ns:getUserListResponse"/>
  </wsdl:message>
  <wsdl:message name="setUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:setUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:deleteUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="getHybridRolesRequest">
    <wsdl:part name="parameters" element="ns:getHybridRoles"/>
  </wsdl:message>
  <wsdl:message name="getHybridRolesResponse">
    <wsdl:part name="parameters" element="ns:getHybridRolesResponse"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyRequest">
    <wsdl:part name="parameters" element="ns:isReadOnly"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyResponse">
    <wsdl:part name="parameters" element="ns:isReadOnlyResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesForClaimsRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValuesForClaims"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesForClaimsResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValuesForClaimsResponse"/>
  </wsdl:message>
  <wsdl:message name="getPasswordExpirationTimeRequest">
    <wsdl:part name="parameters" element="ns:getPasswordExpirationTime"/>
  </wsdl:message>
  <wsdl:message name="getPasswordExpirationTimeResponse">
    <wsdl:part name="parameters" element="ns:getPasswordExpirationTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="updateUserListOfRoleRequest">
    <wsdl:part name="parameters" element="ns:updateUserListOfRole"/>
  </wsdl:message>
  <wsdl:message name="getUserListOfRoleRequest">
    <wsdl:part name="parameters" element="ns:getUserListOfRole"/>
  </wsdl:message>
  <wsdl:message name="getUserListOfRoleResponse">
    <wsdl:part name="parameters" element="ns:getUserListOfRoleResponse"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesRequest">
    <wsdl:part name="parameters" element="ns:getProperties"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesResponse">
    <wsdl:part name="parameters" element="ns:getPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdRequest">
    <wsdl:part name="parameters" element="ns:getTenantId"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdResponse">
    <wsdl:part name="parameters" element="ns:getTenantIdResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteRoleRequest">
    <wsdl:part name="parameters" element="ns:deleteRole"/>
  </wsdl:message>
  <wsdl:message name="isExistingRoleRequest">
    <wsdl:part name="parameters" element="ns:isExistingRole"/>
  </wsdl:message>
  <wsdl:message name="isExistingRoleResponse">
    <wsdl:part name="parameters" element="ns:isExistingRoleResponse"/>
  </wsdl:message>
  <wsdl:message name="updateCredentialByAdminRequest">
    <wsdl:part name="parameters" element="ns:updateCredentialByAdmin"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValuesResponse"/>
  </wsdl:message>
  <wsdl:message name="setUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:setUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="listUsersRequest">
    <wsdl:part name="parameters" element="ns:listUsers"/>
  </wsdl:message>
  <wsdl:message name="listUsersResponse">
    <wsdl:part name="parameters" element="ns:listUsersResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdofUserRequest">
    <wsdl:part name="parameters" element="ns:getTenantIdofUser"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdofUserResponse">
    <wsdl:part name="parameters" element="ns:getTenantIdofUserResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValueResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValueResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserRequest">
    <wsdl:part name="parameters" element="ns:deleteUser"/>
  </wsdl:message>
  <wsdl:message name="getProfileNamesRequest">
    <wsdl:part name="parameters" element="ns:getProfileNames"/>
  </wsdl:message>
  <wsdl:message name="getProfileNamesResponse">
    <wsdl:part name="parameters" element="ns:getProfileNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:addUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="updateRoleNameRequest">
    <wsdl:part name="parameters" element="ns:updateRoleName"/>
  </wsdl:message>
  <wsdl:message name="addRoleRequest">
    <wsdl:part name="parameters" element="ns:addRole"/>
  </wsdl:message>
  <wsdl:message name="getUserIdRequest">
    <wsdl:part name="parameters" element="ns:getUserId"/>
  </wsdl:message>
  <wsdl:message name="getUserIdResponse">
    <wsdl:part name="parameters" element="ns:getUserIdResponse"/>
  </wsdl:message>
  <wsdl:portType name="RemoteUserStoreManagerServicePortType">
    <wsdl:operation name="updateCredential">
      <wsdl:input message="ns:updateCredentialRequest" wsaw:Action="urn:updateCredential"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateCredentialRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getRoleNames">
      <wsdl:input message="ns:getRoleNamesRequest" wsaw:Action="urn:getRoleNames"/>
      <wsdl:output message="ns:getRoleNamesResponse" wsaw:Action="urn:getRoleNamesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getRoleNamesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <wsdl:input message="ns:deleteUserClaimValuesRequest" wsaw:Action="urn:deleteUserClaimValues"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:deleteUserClaimValuesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <wsdl:input message="ns:authenticateRequest" wsaw:Action="urn:authenticate"/>
      <wsdl:output message="ns:authenticateResponse" wsaw:Action="urn:authenticateResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:authenticateRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValues">
      <wsdl:input message="ns:addUserClaimValuesRequest" wsaw:Action="urn:addUserClaimValues"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:addUserClaimValuesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isExistingUser">
      <wsdl:input message="ns:isExistingUserRequest" wsaw:Action="urn:isExistingUser"/>
      <wsdl:output message="ns:isExistingUserResponse" wsaw:Action="urn:isExistingUserResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:isExistingUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdl:input message="ns:addUserRequest" wsaw:Action="urn:addUser"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:addUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateRoleListOfUser">
      <wsdl:input message="ns:updateRoleListOfUserRequest" wsaw:Action="urn:updateRoleListOfUser"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateRoleListOfUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getRoleListOfUser">
      <wsdl:input message="ns:getRoleListOfUserRequest" wsaw:Action="urn:getRoleListOfUser"/>
      <wsdl:output message="ns:getRoleListOfUserResponse" wsaw:Action="urn:getRoleListOfUserResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getRoleListOfUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllProfileNames">
      <wsdl:input message="ns:getAllProfileNamesRequest" wsaw:Action="urn:getAllProfileNames"/>
      <wsdl:output message="ns:getAllProfileNamesResponse" wsaw:Action="urn:getAllProfileNamesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getAllProfileNamesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserList">
      <wsdl:input message="ns:getUserListRequest" wsaw:Action="urn:getUserList"/>
      <wsdl:output message="ns:getUserListResponse" wsaw:Action="urn:getUserListResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserListRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <wsdl:input message="ns:setUserClaimValuesRequest" wsaw:Action="urn:setUserClaimValues"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:setUserClaimValuesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <wsdl:input message="ns:deleteUserClaimValueRequest" wsaw:Action="urn:deleteUserClaimValue"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:deleteUserClaimValueRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getHybridRoles">
      <wsdl:input message="ns:getHybridRolesRequest" wsaw:Action="urn:getHybridRoles"/>
      <wsdl:output message="ns:getHybridRolesResponse" wsaw:Action="urn:getHybridRolesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getHybridRolesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <wsdl:input message="ns:isReadOnlyRequest" wsaw:Action="urn:isReadOnly"/>
      <wsdl:output message="ns:isReadOnlyResponse" wsaw:Action="urn:isReadOnlyResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:isReadOnlyRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValuesForClaims">
      <wsdl:input message="ns:getUserClaimValuesForClaimsRequest" wsaw:Action="urn:getUserClaimValuesForClaims"/>
      <wsdl:output message="ns:getUserClaimValuesForClaimsResponse" wsaw:Action="urn:getUserClaimValuesForClaimsResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserClaimValuesForClaimsRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getPasswordExpirationTime">
      <wsdl:input message="ns:getPasswordExpirationTimeRequest" wsaw:Action="urn:getPasswordExpirationTime"/>
      <wsdl:output message="ns:getPasswordExpirationTimeResponse" wsaw:Action="urn:getPasswordExpirationTimeResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getPasswordExpirationTimeRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateUserListOfRole">
      <wsdl:input message="ns:updateUserListOfRoleRequest" wsaw:Action="urn:updateUserListOfRole"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateUserListOfRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserListOfRole">
      <wsdl:input message="ns:getUserListOfRoleRequest" wsaw:Action="urn:getUserListOfRole"/>
      <wsdl:output message="ns:getUserListOfRoleResponse" wsaw:Action="urn:getUserListOfRoleResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserListOfRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <wsdl:input message="ns:getPropertiesRequest" wsaw:Action="urn:getProperties"/>
      <wsdl:output message="ns:getPropertiesResponse" wsaw:Action="urn:getPropertiesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getPropertiesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <wsdl:input message="ns:getTenantIdRequest" wsaw:Action="urn:getTenantId"/>
      <wsdl:output message="ns:getTenantIdResponse" wsaw:Action="urn:getTenantIdResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getTenantIdRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <wsdl:input message="ns:deleteRoleRequest" wsaw:Action="urn:deleteRole"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:deleteRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isExistingRole">
      <wsdl:input message="ns:isExistingRoleRequest" wsaw:Action="urn:isExistingRole"/>
      <wsdl:output message="ns:isExistingRoleResponse" wsaw:Action="urn:isExistingRoleResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:isExistingRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateCredentialByAdmin">
      <wsdl:input message="ns:updateCredentialByAdminRequest" wsaw:Action="urn:updateCredentialByAdmin"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateCredentialByAdminRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <wsdl:input message="ns:getUserClaimValuesRequest" wsaw:Action="urn:getUserClaimValues"/>
      <wsdl:output message="ns:getUserClaimValuesResponse" wsaw:Action="urn:getUserClaimValuesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserClaimValuesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <wsdl:input message="ns:setUserClaimValueRequest" wsaw:Action="urn:setUserClaimValue"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:setUserClaimValueRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <wsdl:input message="ns:listUsersRequest" wsaw:Action="urn:listUsers"/>
      <wsdl:output message="ns:listUsersResponse" wsaw:Action="urn:listUsersResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:listUsersRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenantIdofUser">
      <wsdl:input message="ns:getTenantIdofUserRequest" wsaw:Action="urn:getTenantIdofUser"/>
      <wsdl:output message="ns:getTenantIdofUserResponse" wsaw:Action="urn:getTenantIdofUserResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getTenantIdofUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <wsdl:input message="ns:getUserClaimValueRequest" wsaw:Action="urn:getUserClaimValue"/>
      <wsdl:output message="ns:getUserClaimValueResponse" wsaw:Action="urn:getUserClaimValueResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserClaimValueRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="ns:deleteUserRequest" wsaw:Action="urn:deleteUser"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:deleteUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getProfileNames">
      <wsdl:input message="ns:getProfileNamesRequest" wsaw:Action="urn:getProfileNames"/>
      <wsdl:output message="ns:getProfileNamesResponse" wsaw:Action="urn:getProfileNamesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getProfileNamesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValue">
      <wsdl:input message="ns:addUserClaimValueRequest" wsaw:Action="urn:addUserClaimValue"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:addUserClaimValueRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <wsdl:input message="ns:updateRoleNameRequest" wsaw:Action="urn:updateRoleName"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateRoleNameRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <wsdl:input message="ns:addRoleRequest" wsaw:Action="urn:addRole"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:addRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <wsdl:input message="ns:getUserIdRequest" wsaw:Action="urn:getUserId"/>
      <wsdl:output message="ns:getUserIdResponse" wsaw:Action="urn:getUserIdResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserIdRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteUserStoreManagerServiceSoap11Binding" type="ns:RemoteUserStoreManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCredential">
      <soap:operation soapAction="urn:updateCredential" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoleNames">
      <soap:operation soapAction="urn:getRoleNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <soap:operation soapAction="urn:deleteUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <soap:operation soapAction="urn:authenticate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValues">
      <soap:operation soapAction="urn:addUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isExistingUser">
      <soap:operation soapAction="urn:isExistingUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleListOfUser">
      <soap:operation soapAction="urn:updateRoleListOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoleListOfUser">
      <soap:operation soapAction="urn:getRoleListOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProfileNames">
      <soap:operation soapAction="urn:getAllProfileNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserList">
      <soap:operation soapAction="urn:getUserList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <soap:operation soapAction="urn:setUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <soap:operation soapAction="urn:deleteUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <soap:operation soapAction="urn:isReadOnly" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHybridRoles">
      <soap:operation soapAction="urn:getHybridRoles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValuesForClaims">
      <soap:operation soapAction="urn:getUserClaimValuesForClaims" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPasswordExpirationTime">
      <soap:operation soapAction="urn:getPasswordExpirationTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserListOfRole">
      <soap:operation soapAction="urn:updateUserListOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserListOfRole">
      <soap:operation soapAction="urn:getUserListOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap:operation soapAction="urn:getProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <soap:operation soapAction="urn:getTenantId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <soap:operation soapAction="urn:deleteRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isExistingRole">
      <soap:operation soapAction="urn:isExistingRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCredentialByAdmin">
      <soap:operation soapAction="urn:updateCredentialByAdmin" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <soap:operation soapAction="urn:getUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <soap:operation soapAction="urn:setUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap:operation soapAction="urn:listUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantIdofUser">
      <soap:operation soapAction="urn:getTenantIdofUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <soap:operation soapAction="urn:getUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProfileNames">
      <soap:operation soapAction="urn:getProfileNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValue">
      <soap:operation soapAction="urn:addUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <soap:operation soapAction="urn:updateRoleName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap:operation soapAction="urn:addRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <soap:operation soapAction="urn:getUserId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteUserStoreManagerServiceSoap12Binding" type="ns:RemoteUserStoreManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCredential">
      <soap12:operation soapAction="urn:updateCredential" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoleNames">
      <soap12:operation soapAction="urn:getRoleNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <soap12:operation soapAction="urn:deleteUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <soap12:operation soapAction="urn:authenticate" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValues">
      <soap12:operation soapAction="urn:addUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isExistingUser">
      <soap12:operation soapAction="urn:isExistingUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap12:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleListOfUser">
      <soap12:operation soapAction="urn:updateRoleListOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoleListOfUser">
      <soap12:operation soapAction="urn:getRoleListOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProfileNames">
      <soap12:operation soapAction="urn:getAllProfileNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserList">
      <soap12:operation soapAction="urn:getUserList" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <soap12:operation soapAction="urn:setUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <soap12:operation soapAction="urn:deleteUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <soap12:operation soapAction="urn:isReadOnly" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHybridRoles">
      <soap12:operation soapAction="urn:getHybridRoles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValuesForClaims">
      <soap12:operation soapAction="urn:getUserClaimValuesForClaims" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPasswordExpirationTime">
      <soap12:operation soapAction="urn:getPasswordExpirationTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserListOfRole">
      <soap12:operation soapAction="urn:updateUserListOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserListOfRole">
      <soap12:operation soapAction="urn:getUserListOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap12:operation soapAction="urn:getProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <soap12:operation soapAction="urn:getTenantId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <soap12:operation soapAction="urn:deleteRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isExistingRole">
      <soap12:operation soapAction="urn:isExistingRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCredentialByAdmin">
      <soap12:operation soapAction="urn:updateCredentialByAdmin" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <soap12:operation soapAction="urn:getUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <soap12:operation soapAction="urn:setUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap12:operation soapAction="urn:listUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantIdofUser">
      <soap12:operation soapAction="urn:getTenantIdofUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <soap12:operation soapAction="urn:getUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap12:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProfileNames">
      <soap12:operation soapAction="urn:getProfileNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValue">
      <soap12:operation soapAction="urn:addUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <soap12:operation soapAction="urn:updateRoleName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap12:operation soapAction="urn:addRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <soap12:operation soapAction="urn:getUserId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteUserStoreManagerServiceHttpBinding" type="ns:RemoteUserStoreManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateCredential">
      <http:operation location="updateCredential"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getRoleNames">
      <http:operation location="getRoleNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <http:operation location="deleteUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <http:operation location="authenticate"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValues">
      <http:operation location="addUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isExistingUser">
      <http:operation location="isExistingUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <http:operation location="addUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateRoleListOfUser">
      <http:operation location="updateRoleListOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getRoleListOfUser">
      <http:operation location="getRoleListOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllProfileNames">
      <http:operation location="getAllProfileNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserList">
      <http:operation location="getUserList"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <http:operation location="setUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <http:operation location="deleteUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <http:operation location="isReadOnly"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getHybridRoles">
      <http:operation location="getHybridRoles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValuesForClaims">
      <http:operation location="getUserClaimValuesForClaims"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPasswordExpirationTime">
      <http:operation location="getPasswordExpirationTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateUserListOfRole">
      <http:operation location="updateUserListOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getUserListOfRole">
      <http:operation location="getUserListOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <http:operation location="getProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <http:operation location="getTenantId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <http:operation location="deleteRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isExistingRole">
      <http:operation location="isExistingRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateCredentialByAdmin">
      <http:operation location="updateCredentialByAdmin"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <http:operation location="getUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <http:operation location="setUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <http:operation location="listUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenantIdofUser">
      <http:operation location="getTenantIdofUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <http:operation location="getUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <http:operation location="deleteUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getProfileNames">
      <http:operation location="getProfileNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValue">
      <http:operation location="addUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <http:operation location="updateRoleName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <http:operation location="addRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <http:operation location="getUserId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteUserStoreManagerService">
    <wsdl:port name="RemoteUserStoreManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteUserStoreManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteUserStoreManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteUserStoreManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteUserStoreManagerServiceHttpsEndpoint" binding="ns:RemoteUserStoreManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="db0a26fe-c63a-4081-962d-80751d814f08" isOneWay="false" action="urn:addRole" name="addRole" bindingOperationName="addRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="54c6093b-5d68-4f89-99f5-043166497521" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="02a6b776-b808-4bfb-aac5-e9243e93ed99" isOneWay="false" action="urn:addUserClaimValue" name="addUserClaimValue" bindingOperationName="addUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9331fcd3-a612-4331-8944-63d89f3d22c5" isOneWay="false" action="urn:addUserClaimValues" name="addUserClaimValues" bindingOperationName="addUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aac3e9c3-1553-4bac-8be2-b52107262831" isOneWay="false" action="urn:authenticate" name="authenticate" bindingOperationName="authenticate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa6854e5-f2f1-48a0-8805-70e31d528399" isOneWay="false" action="urn:deleteRole" name="deleteRole" bindingOperationName="deleteRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5ba76951-8bf5-45fa-ad33-ffdedd2340b5" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="591d0dd8-ade4-4f1c-ba31-1b80a3b4b297" isOneWay="false" action="urn:deleteUserClaimValue" name="deleteUserClaimValue" bindingOperationName="deleteUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d6f2ff57-22ec-43a7-8abf-f1f0c4c55483" isOneWay="false" action="urn:deleteUserClaimValues" name="deleteUserClaimValues" bindingOperationName="deleteUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="adcd5859-344d-42a2-bdf4-8b22e125a285" isOneWay="false" action="urn:getAllProfileNames" name="getAllProfileNames" bindingOperationName="getAllProfileNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3604c36c-bba6-481d-a2fc-3643411a8a31" isOneWay="false" action="urn:getHybridRoles" name="getHybridRoles" bindingOperationName="getHybridRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="240c10be-8693-476d-8411-cab85d372328" isOneWay="false" action="urn:getPasswordExpirationTime" name="getPasswordExpirationTime" bindingOperationName="getPasswordExpirationTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="97c62320-4a58-424e-abec-0ffc4d012526" isOneWay="false" action="urn:getProfileNames" name="getProfileNames" bindingOperationName="getProfileNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c3a1b26-46e8-4918-ac33-6e4b356658c3" isOneWay="false" action="urn:getProperties" name="getProperties" bindingOperationName="getProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c2dc9624-2a16-48bc-932f-9017e7a6c5b3" isOneWay="false" action="urn:getRoleListOfUser" name="getRoleListOfUser" bindingOperationName="getRoleListOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6c7d17a7-4e2b-4070-a954-8d053a5b2028" isOneWay="false" action="urn:getRoleNames" name="getRoleNames" bindingOperationName="getRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4fa13b6c-2273-4d29-b9b4-6e95d93f1c92" isOneWay="false" action="urn:getTenantId" name="getTenantId" bindingOperationName="getTenantId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e60f513d-3d62-42c3-b0f5-457bbcb18a35" isOneWay="false" action="urn:getTenantIdofUser" name="getTenantIdofUser" bindingOperationName="getTenantIdofUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="51fc5c17-3ac7-4c03-a8c3-27b5551a2c00" isOneWay="false" action="urn:getUserClaimValue" name="getUserClaimValue" bindingOperationName="getUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7020d557-b43d-47a6-b60b-6203a47cf2f9" isOneWay="false" action="urn:getUserClaimValues" name="getUserClaimValues" bindingOperationName="getUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="875c7df1-148b-4021-bb5e-b5cd9732a393" isOneWay="false" action="urn:getUserClaimValuesForClaims" name="getUserClaimValuesForClaims" bindingOperationName="getUserClaimValuesForClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff53b716-7c0d-49a4-88f3-87d806380772" isOneWay="false" action="urn:getUserId" name="getUserId" bindingOperationName="getUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8541a3cf-5d89-4c22-8955-7f7b16de586c" isOneWay="false" action="urn:getUserList" name="getUserList" bindingOperationName="getUserList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f93b07c6-e6b0-4c84-b6a7-13829a569688" isOneWay="false" action="urn:getUserListOfRole" name="getUserListOfRole" bindingOperationName="getUserListOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="99423015-9cc8-429c-b442-cef76b7d0e5a" isOneWay="false" action="urn:isExistingRole" name="isExistingRole" bindingOperationName="isExistingRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e97bee1c-ab32-4912-87e6-287f9ed8627e" isOneWay="false" action="urn:isExistingUser" name="isExistingUser" bindingOperationName="isExistingUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="326f48d5-a469-4887-b70e-4e090a086649" isOneWay="false" action="urn:isReadOnly" name="isReadOnly" bindingOperationName="isReadOnly" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bdc23c92-2d72-477e-94a9-78cb8615208f" isOneWay="false" action="urn:listUsers" name="listUsers" bindingOperationName="listUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="619f8362-c4e2-42a7-bcbf-246329b21b83" isOneWay="false" action="urn:setUserClaimValue" name="setUserClaimValue" bindingOperationName="setUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="347a9c5a-d69a-4a80-81d0-9c7be0036857" isOneWay="false" action="urn:setUserClaimValues" name="setUserClaimValues" bindingOperationName="setUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6227fa36-8881-4153-866f-20155dcb8292" isOneWay="false" action="urn:updateCredential" name="updateCredential" bindingOperationName="updateCredential" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d5be6e85-77d5-4ae4-b442-284fadb7c689" isOneWay="false" action="urn:updateCredentialByAdmin" name="updateCredentialByAdmin" bindingOperationName="updateCredentialByAdmin" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="745770e3-66dd-4305-806a-c8a613af9d0c" isOneWay="false" action="urn:updateRoleListOfUser" name="updateRoleListOfUser" bindingOperationName="updateRoleListOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e00975ec-0f38-4ead-8439-c9d5bd0dbb2c" isOneWay="false" action="urn:updateRoleName" name="updateRoleName" bindingOperationName="updateRoleName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e058a169-bfb9-4155-8bf0-9c1b8bbf3dfc" isOneWay="false" action="urn:updateUserListOfRole" name="updateUserListOfRole" bindingOperationName="updateUserListOfRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ac65c5e9-8e0f-4c5a-8e86-ae8b851030cc" wsaVersion="NONE" name="RepositoryAdminServiceSoap12Binding" type="wsdl" bindingName="{http://prov.services.mgt.feature.carbon.wso2.org}RepositoryAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/RepositoryAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="cbf2e5d8-17dc-42b9-8213-b0a5c54d0ac9" isOneWay="false" action="urn:addDefaultRepository" name="addDefaultRepository" bindingOperationName="addDefaultRepository" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1ee8d479-5ed3-4022-a5ee-8936b31caf40" isOneWay="false" action="urn:addRepository" name="addRepository" bindingOperationName="addRepository" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f3ca9604-42c0-4a65-8d82-ba01788656c1" isOneWay="false" action="urn:enableRepository" name="enableRepository" bindingOperationName="enableRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b450f0c4-b603-46b6-94f1-f28daa152f78" isOneWay="false" action="urn:getAllRepositories" name="getAllRepositories" bindingOperationName="getAllRepositories" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="47a70cf9-a2be-4ca0-930d-62fc088c391d" isOneWay="false" action="urn:getEnabledRepositories" name="getEnabledRepositories" bindingOperationName="getEnabledRepositories" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="81125f2b-88d2-48e6-b2cf-a41c246e45c4" isOneWay="false" action="urn:getInstallableFeatureInfo" name="getInstallableFeatureInfo" bindingOperationName="getInstallableFeatureInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="15342507-6e23-4d76-85a8-da42102d6abc" isOneWay="false" action="urn:getInstallableFeatures" name="getInstallableFeatures" bindingOperationName="getInstallableFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a5139049-af46-4c49-bb73-c03e72b6b72d" isOneWay="false" action="urn:removeRepository" name="removeRepository" bindingOperationName="removeRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ea1ffce3-ae1f-455c-80b1-a8af7b44ef5a" isOneWay="false" action="urn:updateRepository" name="updateRepository" bindingOperationName="updateRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="39004f24-5d08-4ce3-92bd-dd6bd5ed92bd" wsaVersion="NONE" name="RepositoryAdminServiceSoap11Binding" type="wsdl" bindingName="{http://prov.services.mgt.feature.carbon.wso2.org}RepositoryAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/RepositoryAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RepositoryAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/RepositoryAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://prov.services.mgt.feature.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://prov.services.mgt.feature.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2120="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RepositoryAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2121="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd"/>
      <xs:element name="getEnabledRepositories">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEnabledRepositoriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2120:RepositoryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="enableRepository">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRepositories">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRepositoriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2120:RepositoryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstallableFeatures">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="groupByCategory" type="xs:boolean"/>
            <xs:element minOccurs="0" name="hideInstalledFeatures" type="xs:boolean"/>
            <xs:element minOccurs="0" name="showOnlyTheLatestFeatures" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstallableFeaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2120:Feature"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstallableFeatureInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstallableFeatureInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2120:FeatureInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addDefaultRepository">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="addDefaultRepositoryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRepository">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="prevLocation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="prevNickName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="updatedLocation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="updatedNickName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRepository">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="nickName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRepositoryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeRepository">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd">
      <xs:complexType name="RepositoryInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nickName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Feature">
        <xs:sequence>
          <xs:element minOccurs="0" name="featureDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="installed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredFeatures" nillable="true" type="ax2120:Feature"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="copyrightInfo" nillable="true" type="ax2120:CopyrightInfo"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="licenseInfo" nillable="true" type="ax2120:LicenseInfo"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CopyrightInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="URL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LicenseInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="URL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getEnabledRepositoriesRequest">
    <wsdl:part name="parameters" element="ns1:getEnabledRepositories"/>
  </wsdl:message>
  <wsdl:message name="getEnabledRepositoriesResponse">
    <wsdl:part name="parameters" element="ns1:getEnabledRepositoriesResponse"/>
  </wsdl:message>
  <wsdl:message name="updateRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:updateRepository"/>
  </wsdl:message>
  <wsdl:message name="addDefaultRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:addDefaultRepository"/>
  </wsdl:message>
  <wsdl:message name="addDefaultRepositoryResponse">
    <wsdl:part name="parameters" element="ns1:addDefaultRepositoryResponse"/>
  </wsdl:message>
  <wsdl:message name="getInstallableFeatureInfoRequest">
    <wsdl:part name="parameters" element="ns1:getInstallableFeatureInfo"/>
  </wsdl:message>
  <wsdl:message name="getInstallableFeatureInfoResponse">
    <wsdl:part name="parameters" element="ns1:getInstallableFeatureInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="addRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:addRepository"/>
  </wsdl:message>
  <wsdl:message name="addRepositoryResponse">
    <wsdl:part name="parameters" element="ns1:addRepositoryResponse"/>
  </wsdl:message>
  <wsdl:message name="enableRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:enableRepository"/>
  </wsdl:message>
  <wsdl:message name="getAllRepositoriesRequest">
    <wsdl:part name="parameters" element="ns1:getAllRepositories"/>
  </wsdl:message>
  <wsdl:message name="getAllRepositoriesResponse">
    <wsdl:part name="parameters" element="ns1:getAllRepositoriesResponse"/>
  </wsdl:message>
  <wsdl:message name="removeRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:removeRepository"/>
  </wsdl:message>
  <wsdl:message name="getInstallableFeaturesRequest">
    <wsdl:part name="parameters" element="ns1:getInstallableFeatures"/>
  </wsdl:message>
  <wsdl:message name="getInstallableFeaturesResponse">
    <wsdl:part name="parameters" element="ns1:getInstallableFeaturesResponse"/>
  </wsdl:message>
  <wsdl:portType name="RepositoryAdminServicePortType">
    <wsdl:operation name="getEnabledRepositories">
      <wsdl:input message="tns:getEnabledRepositoriesRequest" wsaw:Action="urn:getEnabledRepositories"/>
      <wsdl:output message="tns:getEnabledRepositoriesResponse" wsaw:Action="urn:getEnabledRepositoriesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="updateRepository">
      <wsdl:input message="tns:updateRepositoryRequest" wsaw:Action="urn:updateRepository"/>
    </wsdl:operation>
    <wsdl:operation name="addDefaultRepository">
      <wsdl:input message="tns:addDefaultRepositoryRequest" wsaw:Action="urn:addDefaultRepository"/>
      <wsdl:output message="tns:addDefaultRepositoryResponse" wsaw:Action="urn:addDefaultRepositoryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatureInfo">
      <wsdl:input message="tns:getInstallableFeatureInfoRequest" wsaw:Action="urn:getInstallableFeatureInfo"/>
      <wsdl:output message="tns:getInstallableFeatureInfoResponse" wsaw:Action="urn:getInstallableFeatureInfoResponse"/>
    </wsdl:operation>
    <wsdl:operation name="addRepository">
      <wsdl:input message="tns:addRepositoryRequest" wsaw:Action="urn:addRepository"/>
      <wsdl:output message="tns:addRepositoryResponse" wsaw:Action="urn:addRepositoryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="enableRepository">
      <wsdl:input message="tns:enableRepositoryRequest" wsaw:Action="urn:enableRepository"/>
    </wsdl:operation>
    <wsdl:operation name="getAllRepositories">
      <wsdl:input message="tns:getAllRepositoriesRequest" wsaw:Action="urn:getAllRepositories"/>
      <wsdl:output message="tns:getAllRepositoriesResponse" wsaw:Action="urn:getAllRepositoriesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeRepository">
      <wsdl:input message="tns:removeRepositoryRequest" wsaw:Action="urn:removeRepository"/>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatures">
      <wsdl:input message="tns:getInstallableFeaturesRequest" wsaw:Action="urn:getInstallableFeatures"/>
      <wsdl:output message="tns:getInstallableFeaturesResponse" wsaw:Action="urn:getInstallableFeaturesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RepositoryAdminServiceSoap11Binding" type="tns:RepositoryAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEnabledRepositories">
      <soap:operation soapAction="urn:getEnabledRepositories" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRepository">
      <soap:operation soapAction="urn:updateRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addDefaultRepository">
      <soap:operation soapAction="urn:addDefaultRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatureInfo">
      <soap:operation soapAction="urn:getInstallableFeatureInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRepository">
      <soap:operation soapAction="urn:addRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enableRepository">
      <soap:operation soapAction="urn:enableRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllRepositories">
      <soap:operation soapAction="urn:getAllRepositories" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRepository">
      <soap:operation soapAction="urn:removeRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatures">
      <soap:operation soapAction="urn:getInstallableFeatures" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RepositoryAdminServiceSoap12Binding" type="tns:RepositoryAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEnabledRepositories">
      <soap12:operation soapAction="urn:getEnabledRepositories" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRepository">
      <soap12:operation soapAction="urn:updateRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addDefaultRepository">
      <soap12:operation soapAction="urn:addDefaultRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatureInfo">
      <soap12:operation soapAction="urn:getInstallableFeatureInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRepository">
      <soap12:operation soapAction="urn:addRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enableRepository">
      <soap12:operation soapAction="urn:enableRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllRepositories">
      <soap12:operation soapAction="urn:getAllRepositories" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRepository">
      <soap12:operation soapAction="urn:removeRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatures">
      <soap12:operation soapAction="urn:getInstallableFeatures" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RepositoryAdminServiceHttpBinding" type="tns:RepositoryAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getEnabledRepositories">
      <http:operation location="getEnabledRepositories"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRepository">
      <http:operation location="updateRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addDefaultRepository">
      <http:operation location="addDefaultRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatureInfo">
      <http:operation location="getInstallableFeatureInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRepository">
      <http:operation location="addRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enableRepository">
      <http:operation location="enableRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllRepositories">
      <http:operation location="getAllRepositories"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRepository">
      <http:operation location="removeRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatures">
      <http:operation location="getInstallableFeatures"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RepositoryAdminService">
    <wsdl:port name="RepositoryAdminServiceHttpsSoap11Endpoint" binding="tns:RepositoryAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RepositoryAdminServiceHttpsSoap12Endpoint" binding="tns:RepositoryAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RepositoryAdminServiceHttpsEndpoint" binding="tns:RepositoryAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="1d930996-417b-481c-844f-8a9fad7292c5" isOneWay="false" action="urn:addDefaultRepository" name="addDefaultRepository" bindingOperationName="addDefaultRepository" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="06677975-45a9-410e-9944-8d7024aee352" isOneWay="false" action="urn:addRepository" name="addRepository" bindingOperationName="addRepository" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8bdc14c4-164a-42ef-899e-10ce037f3f97" isOneWay="false" action="urn:enableRepository" name="enableRepository" bindingOperationName="enableRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eff63efd-fc54-4d70-9fe6-cc204cb183f5" isOneWay="false" action="urn:getAllRepositories" name="getAllRepositories" bindingOperationName="getAllRepositories" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12c01ff3-122e-4f6b-a8d6-6963b8aba81d" isOneWay="false" action="urn:getEnabledRepositories" name="getEnabledRepositories" bindingOperationName="getEnabledRepositories" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8402ddef-abbe-44ee-9a22-2180a5c323d1" isOneWay="false" action="urn:getInstallableFeatureInfo" name="getInstallableFeatureInfo" bindingOperationName="getInstallableFeatureInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="18bb4d8c-8d2e-4cf4-a133-b743ba3da7aa" isOneWay="false" action="urn:getInstallableFeatures" name="getInstallableFeatures" bindingOperationName="getInstallableFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e1207bc9-f382-4f5e-b309-7b6df0fc6392" isOneWay="false" action="urn:removeRepository" name="removeRepository" bindingOperationName="removeRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86b751f1-db5b-42cf-8597-9490df3f1d6f" isOneWay="false" action="urn:updateRepository" name="updateRepository" bindingOperationName="updateRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="58b59138-b147-42d7-94a9-0da4027c1041" wsaVersion="NONE" name="ResourceAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.resource.registry.carbon.wso2.org}ResourceAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/ResourceAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="e07a898d-e1cd-4fd7-b35d-a6cbf0dc3ef8" isOneWay="false" action="urn:addCollection" name="addCollection" bindingOperationName="addCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="97385901-6195-468b-8eb6-0636ba612f3e" isOneWay="false" action="urn:addExtension" name="addExtension" bindingOperationName="addExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="efdd319e-dc51-4951-8d7e-c03c21bac002" isOneWay="false" action="urn:addRemoteLink" name="addRemoteLink" bindingOperationName="addRemoteLink" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cf81e52e-fdd0-4f66-9a4b-00a26e184332" isOneWay="false" action="urn:addResource" name="addResource" bindingOperationName="addResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b99ae81-83c3-4181-942a-cd2a6b15a07b" isOneWay="false" action="urn:addRolePermission" name="addRolePermission" bindingOperationName="addRolePermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="93416c2f-383f-4716-9d60-52ca83233a35" isOneWay="false" action="urn:addSymbolicLink" name="addSymbolicLink" bindingOperationName="addSymbolicLink" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="51fa174a-0e6c-49ad-9634-a53616c84494" isOneWay="false" action="urn:addTextContent" name="addTextContent" bindingOperationName="addTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d9ae539-433a-49fc-96fd-c608583731cc" isOneWay="false" action="urn:addTextResource" name="addTextResource" bindingOperationName="addTextResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6aed2703-4aa4-408f-91a3-c100a01719c6" isOneWay="false" action="urn:addUserPermission" name="addUserPermission" bindingOperationName="addUserPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b6988783-775c-4dda-bb78-e0fa1db982f1" isOneWay="false" action="urn:changeRolePermissions" name="changeRolePermissions" bindingOperationName="changeRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="30bcd9b1-1585-4edd-8ed4-ee7d6bf43aa1" isOneWay="false" action="urn:changeUserPermissions" name="changeUserPermissions" bindingOperationName="changeUserPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0433d57b-c018-4924-a8f5-d738ff4edad4" isOneWay="false" action="urn:copyResource" name="copyResource" bindingOperationName="copyResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="487d3bb2-ac70-4ab8-869e-6c3d4999f161" isOneWay="false" action="urn:createVersion" name="createVersion" bindingOperationName="createVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b8796c3c-a9c7-448e-81c8-bfd992edb394" isOneWay="false" action="urn:delete" name="delete" bindingOperationName="delete" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b665bf64-1ff3-4b9e-87fb-1b1d7daa507f" isOneWay="false" action="urn:deleteVersionHistory" name="deleteVersionHistory" bindingOperationName="deleteVersionHistory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a0cf5c77-695d-431a-be3a-d54030ba043a" isOneWay="false" action="urn:getCollectionContent" name="getCollectionContent" bindingOperationName="getCollectionContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08ec972e-5ab1-44f7-9562-c2589dd34de4" isOneWay="false" action="urn:getCollectionMediatypeDefinitions" name="getCollectionMediatypeDefinitions" bindingOperationName="getCollectionMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a72a2ec4-bc23-4c41-8972-0b37e93dffbf" isOneWay="false" action="urn:getContentBean" name="getContentBean" bindingOperationName="getContentBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="802fc403-3a71-4ed4-b508-4945d2882414" isOneWay="false" action="urn:getContentDownloadBean" name="getContentDownloadBean" bindingOperationName="getContentDownloadBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fe8e1224-0d18-4d02-9395-6c6278294b49" isOneWay="false" action="urn:getCustomUIMediatypeDefinitions" name="getCustomUIMediatypeDefinitions" bindingOperationName="getCustomUIMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8069f5dc-f010-4a81-9da1-6b248f251e4a" isOneWay="false" action="urn:getHumanReadableMediaTypes" name="getHumanReadableMediaTypes" bindingOperationName="getHumanReadableMediaTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="25d5701b-fbac-4acb-bf9f-f1f1824c2d60" isOneWay="false" action="urn:getMediatypeDefinitions" name="getMediatypeDefinitions" bindingOperationName="getMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d75d6ee-3dad-4fdc-ace3-4bb0f5c4680b" isOneWay="false" action="urn:getMetadata" name="getMetadata" bindingOperationName="getMetadata" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="199f99ee-b2b6-46e9-8f40-296daccce263" isOneWay="false" action="urn:getMimeTypeFromHuman" name="getMimeTypeFromHuman" bindingOperationName="getMimeTypeFromHuman" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a847e911-ee98-43e6-bcf5-2949147e4c07" isOneWay="false" action="urn:getPermissions" name="getPermissions" bindingOperationName="getPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dbbe33f1-bdcf-44cd-b924-eac5e41fbb8d" isOneWay="false" action="urn:getProperty" name="getProperty" bindingOperationName="getProperty" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d8734689-7ff8-4092-949d-e20692e50702" isOneWay="false" action="urn:getResourceData" name="getResourceData" bindingOperationName="getResourceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aa5ce2f3-e06f-4dc2-8f48-c6ccf9e98ed8" isOneWay="false" action="urn:getResourceTreeEntry" name="getResourceTreeEntry" bindingOperationName="getResourceTreeEntry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b3aa116a-fdd4-463a-aa9c-1c624502558e" isOneWay="false" action="urn:getSessionResourcePath" name="getSessionResourcePath" bindingOperationName="getSessionResourcePath" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79003cd1-011b-4dd4-b93b-839e0395d3de" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a0511c5-fcf0-4460-97af-46ee2df6b82d" isOneWay="false" action="urn:getVersionsBean" name="getVersionsBean" bindingOperationName="getVersionsBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1a6d7a96-0932-48e8-bdd4-3cf4edad3ab7" isOneWay="false" action="urn:getZipWithDependencies" name="getZipWithDependencies" bindingOperationName="getZipWithDependencies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="33b278ac-9d33-4df8-9b33-0aa11da06182" isOneWay="false" action="urn:hasAssociations" name="hasAssociations" bindingOperationName="hasAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a635738e-e6d4-4f76-ba7b-ce2c52145262" isOneWay="false" action="urn:importResource" name="importResource" bindingOperationName="importResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d8e4dd58-8a14-495b-b38a-c463e970193d" isOneWay="false" action="urn:listExtensions" name="listExtensions" bindingOperationName="listExtensions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="598cfab4-7de0-4c7d-953e-00311ce58506" isOneWay="false" action="urn:moveResource" name="moveResource" bindingOperationName="moveResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fcc13d04-606f-4f6c-9cc4-7d6f6cbc2181" isOneWay="false" action="urn:removeExtension" name="removeExtension" bindingOperationName="removeExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2cf1ba53-5a88-4417-8717-428591d8bed8" isOneWay="false" action="urn:renameResource" name="renameResource" bindingOperationName="renameResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6c98dae-f32d-464b-a2a3-21334a3ed2dc" isOneWay="false" action="urn:restoreVersion" name="restoreVersion" bindingOperationName="restoreVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4dbc4088-e140-43ff-974c-537040ed9f47" isOneWay="false" action="urn:setDescription" name="setDescription" bindingOperationName="setDescription" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5dcf77c5-0c37-4865-813d-c9587cfbd9d7" isOneWay="false" action="urn:setSessionResourcePath" name="setSessionResourcePath" bindingOperationName="setSessionResourcePath" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="587a28ac-f8c3-4018-8568-09560fee551c" isOneWay="false" action="urn:updateMediaType" name="updateMediaType" bindingOperationName="updateMediaType" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8de02bca-bc19-4b3a-a632-388c67baa494" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="236b7984-e10b-4952-a1dc-b116627ba1bf" wsaVersion="NONE" name="ResourceAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.resource.registry.carbon.wso2.org}ResourceAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/ResourceAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ResourceAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ResourceAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.resource.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2532="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2534="http://common.registry.carbon.wso2.org/xsd" xmlns:ax2536="http://utils.services.resource.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.resource.registry.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ResourceAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2538="http://common.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="ContentBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contentPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CollectionContentBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="childCount" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="childPaths" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="collectionTypes" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="remoteInstances" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceTreeEntryBean">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="children" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="symlink" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionsBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="deleteLocked" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="deletePermissionAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
          <xs:element minOccurs="0" name="permalink" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="versionPaths" nillable="true" type="ax2532:VersionPath"/>
          <xs:element minOccurs="0" name="writeLocked" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionPath">
        <xs:sequence>
          <xs:element minOccurs="0" name="activeResourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="completeVersionPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="updatedOn" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="updater" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionNumber" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContentDownloadBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="lastUpdatedTime" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="mediatype" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MetadataBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="activeResourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="author" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contentPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteLocked" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="formattedLastModified" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastUpdater" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="navigatablePaths" nillable="true" type="ax2534:WebResourcePath"/>
          <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="permalink" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="resourceVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverBaseURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
          <xs:element minOccurs="0" name="writeLocked" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PermissionBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="authorizeAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="deleteAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roleNames" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="rolePermissions" nillable="true" type="ax2532:PermissionEntry"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userNames" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userPermissions" nillable="true" type="ax2532:PermissionEntry"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PermissionEntry">
        <xs:sequence>
          <xs:element minOccurs="0" name="authorizeAllow" type="xs:boolean"/>
          <xs:element minOccurs="0" name="authorizeDeny" type="xs:boolean"/>
          <xs:element minOccurs="0" name="deleteAllow" type="xs:boolean"/>
          <xs:element minOccurs="0" name="deleteDeny" type="xs:boolean"/>
          <xs:element minOccurs="0" name="readAllow" type="xs:boolean"/>
          <xs:element minOccurs="0" name="readDeny" type="xs:boolean"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="writeAllow" type="xs:boolean"/>
          <xs:element minOccurs="0" name="writeDeny" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.registry.carbon.wso2.org/xsd">
      <xs:complexType name="ResourceData">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="averageRating" type="xs:float"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="averageStars" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdOn" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="deleteAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="externalLink" type="xs:boolean"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="getAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="link" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mounted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="relativePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tagCounts" nillable="true" type="ax2534:TagCount"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TagCount">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WebResourcePath">
        <xs:sequence>
          <xs:element minOccurs="0" name="navigateName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="navigatePath" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.services.resource.registry.carbon.wso2.org/xsd">
      <xs:complexType name="ResourceServiceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.resource.registry.carbon.wso2.org" xmlns:ax2533="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2535="http://common.registry.carbon.wso2.org/xsd" xmlns:ax2537="http://utils.services.resource.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://beans.resource.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://utils.services.resource.registry.carbon.wso2.org/xsd"/>
      <xs:element name="ResourceAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ResourceAdminServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getContentBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:ContentBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateMediaType">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceData">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="paths" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2534:ResourceData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:CollectionContentBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addSymbolicLink">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="targetPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRemoteLink">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="instance" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="targetPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ResourceAdminServiceResourceServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ResourceServiceException" nillable="true" type="ax2536:ResourceServiceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserPermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pathToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="actionToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserPermissionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRolePermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pathToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="roleToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="actionToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRolePermissionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeUserPermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionInput" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeUserPermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeRolePermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionsInput" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeRolePermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="contentText" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listExtensions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listExtensionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="renameResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldResourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newResourceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="renameResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="copyResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldResourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="destinationPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="copyResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moveResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldResourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="destinationPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moveResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSessionResourcePath">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSessionResourcePathResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setSessionResourcePath">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceTreeEntry">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceTreeEntryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:ResourceTreeEntryBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getVersionsBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getVersionsBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:VersionsBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMediatypeDefinitions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMediatypeDefinitionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionMediatypeDefinitions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionMediatypeDefinitionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCustomUIMediatypeDefinitions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCustomUIMediatypeDefinitionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentDownloadBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentDownloadBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:ContentDownloadBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHumanReadableMediaTypes">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHumanReadableMediaTypesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMimeTypeFromHuman">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMimeTypeFromHumanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteVersionHistory">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteVersionHistoryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getZipWithDependencies">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getZipWithDependenciesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:ContentDownloadBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasAssociations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasAssociationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createVersionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="restoreVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="versionPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="restoreVersionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fetchURL" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="symlinkLocation" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ns:ArrayOfString"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfString">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="array" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="importResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCollection">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="collectionName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCollectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:MetadataBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setDescription">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeExtension">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeExtensionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addExtension">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addExtensionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
            <xs:element minOccurs="0" name="symlinkLocation" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ns:ArrayOfString"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPropertyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="delete">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pathToDelete" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:PermissionBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="removeExtensionRequest">
    <wsdl:part name="parameters" element="ns:removeExtension"/>
  </wsdl:message>
  <wsdl:message name="removeExtensionResponse">
    <wsdl:part name="parameters" element="ns:removeExtensionResponse"/>
  </wsdl:message>
  <wsdl:message name="ResourceAdminServiceException">
    <wsdl:part name="parameters" element="ns:ResourceAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="getHumanReadableMediaTypesRequest">
    <wsdl:part name="parameters" element="ns:getHumanReadableMediaTypes"/>
  </wsdl:message>
  <wsdl:message name="getHumanReadableMediaTypesResponse">
    <wsdl:part name="parameters" element="ns:getHumanReadableMediaTypesResponse"/>
  </wsdl:message>
  <wsdl:message name="addTextContentRequest">
    <wsdl:part name="parameters" element="ns:addTextContent"/>
  </wsdl:message>
  <wsdl:message name="addTextContentResponse">
    <wsdl:part name="parameters" element="ns:addTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserPermissionRequest">
    <wsdl:part name="parameters" element="ns:addUserPermission"/>
  </wsdl:message>
  <wsdl:message name="addUserPermissionResponse">
    <wsdl:part name="parameters" element="ns:addUserPermissionResponse"/>
  </wsdl:message>
  <wsdl:message name="ResourceAdminServiceResourceServiceException">
    <wsdl:part name="parameters" element="ns:ResourceAdminServiceResourceServiceException"/>
  </wsdl:message>
  <wsdl:message name="getCustomUIMediatypeDefinitionsRequest">
    <wsdl:part name="parameters" element="ns:getCustomUIMediatypeDefinitions"/>
  </wsdl:message>
  <wsdl:message name="getCustomUIMediatypeDefinitionsResponse">
    <wsdl:part name="parameters" element="ns:getCustomUIMediatypeDefinitionsResponse"/>
  </wsdl:message>
  <wsdl:message name="changeRolePermissionsRequest">
    <wsdl:part name="parameters" element="ns:changeRolePermissions"/>
  </wsdl:message>
  <wsdl:message name="changeRolePermissionsResponse">
    <wsdl:part name="parameters" element="ns:changeRolePermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="setDescriptionRequest">
    <wsdl:part name="parameters" element="ns:setDescription"/>
  </wsdl:message>
  <wsdl:message name="getResourceDataRequest">
    <wsdl:part name="parameters" element="ns:getResourceData"/>
  </wsdl:message>
  <wsdl:message name="getResourceDataResponse">
    <wsdl:part name="parameters" element="ns:getResourceDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getCollectionContentRequest">
    <wsdl:part name="parameters" element="ns:getCollectionContent"/>
  </wsdl:message>
  <wsdl:message name="getCollectionContentResponse">
    <wsdl:part name="parameters" element="ns:getCollectionContentResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteRequest">
    <wsdl:part name="parameters" element="ns:delete"/>
  </wsdl:message>
  <wsdl:message name="deleteResponse">
    <wsdl:part name="parameters" element="ns:deleteResponse"/>
  </wsdl:message>
  <wsdl:message name="getContentBeanRequest">
    <wsdl:part name="parameters" element="ns:getContentBean"/>
  </wsdl:message>
  <wsdl:message name="getContentBeanResponse">
    <wsdl:part name="parameters" element="ns:getContentBeanResponse"/>
  </wsdl:message>
  <wsdl:message name="getCollectionMediatypeDefinitionsRequest">
    <wsdl:part name="parameters" element="ns:getCollectionMediatypeDefinitions"/>
  </wsdl:message>
  <wsdl:message name="getCollectionMediatypeDefinitionsResponse">
    <wsdl:part name="parameters" element="ns:getCollectionMediatypeDefinitionsResponse"/>
  </wsdl:message>
  <wsdl:message name="renameResourceRequest">
    <wsdl:part name="parameters" element="ns:renameResource"/>
  </wsdl:message>
  <wsdl:message name="renameResourceResponse">
    <wsdl:part name="parameters" element="ns:renameResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="moveResourceRequest">
    <wsdl:part name="parameters" element="ns:moveResource"/>
  </wsdl:message>
  <wsdl:message name="moveResourceResponse">
    <wsdl:part name="parameters" element="ns:moveResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="restoreVersionRequest">
    <wsdl:part name="parameters" element="ns:restoreVersion"/>
  </wsdl:message>
  <wsdl:message name="restoreVersionResponse">
    <wsdl:part name="parameters" element="ns:restoreVersionResponse"/>
  </wsdl:message>
  <wsdl:message name="addResourceRequest">
    <wsdl:part name="parameters" element="ns:addResource"/>
  </wsdl:message>
  <wsdl:message name="addResourceResponse">
    <wsdl:part name="parameters" element="ns:addResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="addExtensionRequest">
    <wsdl:part name="parameters" element="ns:addExtension"/>
  </wsdl:message>
  <wsdl:message name="addExtensionResponse">
    <wsdl:part name="parameters" element="ns:addExtensionResponse"/>
  </wsdl:message>
  <wsdl:message name="updateMediaTypeRequest">
    <wsdl:part name="parameters" element="ns:updateMediaType"/>
  </wsdl:message>
  <wsdl:message name="deleteVersionHistoryRequest">
    <wsdl:part name="parameters" element="ns:deleteVersionHistory"/>
  </wsdl:message>
  <wsdl:message name="deleteVersionHistoryResponse">
    <wsdl:part name="parameters" element="ns:deleteVersionHistoryResponse"/>
  </wsdl:message>
  <wsdl:message name="addRemoteLinkRequest">
    <wsdl:part name="parameters" element="ns:addRemoteLink"/>
  </wsdl:message>
  <wsdl:message name="getSessionResourcePathRequest">
    <wsdl:part name="parameters" element="ns:getSessionResourcePath"/>
  </wsdl:message>
  <wsdl:message name="getSessionResourcePathResponse">
    <wsdl:part name="parameters" element="ns:getSessionResourcePathResponse"/>
  </wsdl:message>
  <wsdl:message name="createVersionRequest">
    <wsdl:part name="parameters" element="ns:createVersion"/>
  </wsdl:message>
  <wsdl:message name="createVersionResponse">
    <wsdl:part name="parameters" element="ns:createVersionResponse"/>
  </wsdl:message>
  <wsdl:message name="getResourceTreeEntryRequest">
    <wsdl:part name="parameters" element="ns:getResourceTreeEntry"/>
  </wsdl:message>
  <wsdl:message name="getResourceTreeEntryResponse">
    <wsdl:part name="parameters" element="ns:getResourceTreeEntryResponse"/>
  </wsdl:message>
  <wsdl:message name="getMetadataRequest">
    <wsdl:part name="parameters" element="ns:getMetadata"/>
  </wsdl:message>
  <wsdl:message name="getMetadataResponse">
    <wsdl:part name="parameters" element="ns:getMetadataResponse"/>
  </wsdl:message>
  <wsdl:message name="getPropertyRequest">
    <wsdl:part name="parameters" element="ns:getProperty"/>
  </wsdl:message>
  <wsdl:message name="getPropertyResponse">
    <wsdl:part name="parameters" element="ns:getPropertyResponse"/>
  </wsdl:message>
  <wsdl:message name="listExtensionsRequest">
    <wsdl:part name="parameters" element="ns:listExtensions"/>
  </wsdl:message>
  <wsdl:message name="listExtensionsResponse">
    <wsdl:part name="parameters" element="ns:listExtensionsResponse"/>
  </wsdl:message>
  <wsdl:message name="changeUserPermissionsRequest">
    <wsdl:part name="parameters" element="ns:changeUserPermissions"/>
  </wsdl:message>
  <wsdl:message name="changeUserPermissionsResponse">
    <wsdl:part name="parameters" element="ns:changeUserPermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="getPermissionsRequest">
    <wsdl:part name="parameters" element="ns:getPermissions"/>
  </wsdl:message>
  <wsdl:message name="getPermissionsResponse">
    <wsdl:part name="parameters" element="ns:getPermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="addSymbolicLinkRequest">
    <wsdl:part name="parameters" element="ns:addSymbolicLink"/>
  </wsdl:message>
  <wsdl:message name="hasAssociationsRequest">
    <wsdl:part name="parameters" element="ns:hasAssociations"/>
  </wsdl:message>
  <wsdl:message name="hasAssociationsResponse">
    <wsdl:part name="parameters" element="ns:hasAssociationsResponse"/>
  </wsdl:message>
  <wsdl:message name="getTextContentRequest">
    <wsdl:part name="parameters" element="ns:getTextContent"/>
  </wsdl:message>
  <wsdl:message name="getTextContentResponse">
    <wsdl:part name="parameters" element="ns:getTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="addRolePermissionRequest">
    <wsdl:part name="parameters" element="ns:addRolePermission"/>
  </wsdl:message>
  <wsdl:message name="addRolePermissionResponse">
    <wsdl:part name="parameters" element="ns:addRolePermissionResponse"/>
  </wsdl:message>
  <wsdl:message name="addTextResourceRequest">
    <wsdl:part name="parameters" element="ns:addTextResource"/>
  </wsdl:message>
  <wsdl:message name="addTextResourceResponse">
    <wsdl:part name="parameters" element="ns:addTextResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="getMediatypeDefinitionsRequest">
    <wsdl:part name="parameters" element="ns:getMediatypeDefinitions"/>
  </wsdl:message>
  <wsdl:message name="getMediatypeDefinitionsResponse">
    <wsdl:part name="parameters" element="ns:getMediatypeDefinitionsResponse"/>
  </wsdl:message>
  <wsdl:message name="importResourceRequest">
    <wsdl:part name="parameters" element="ns:importResource"/>
  </wsdl:message>
  <wsdl:message name="importResourceResponse">
    <wsdl:part name="parameters" element="ns:importResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="getVersionsBeanRequest">
    <wsdl:part name="parameters" element="ns:getVersionsBean"/>
  </wsdl:message>
  <wsdl:message name="getVersionsBeanResponse">
    <wsdl:part name="parameters" element="ns:getVersionsBeanResponse"/>
  </wsdl:message>
  <wsdl:message name="addCollectionRequest">
    <wsdl:part name="parameters" element="ns:addCollection"/>
  </wsdl:message>
  <wsdl:message name="addCollectionResponse">
    <wsdl:part name="parameters" element="ns:addCollectionResponse"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentRequest">
    <wsdl:part name="parameters" element="ns:updateTextContent"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentResponse">
    <wsdl:part name="parameters" element="ns:updateTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="getMimeTypeFromHumanRequest">
    <wsdl:part name="parameters" element="ns:getMimeTypeFromHuman"/>
  </wsdl:message>
  <wsdl:message name="getMimeTypeFromHumanResponse">
    <wsdl:part name="parameters" element="ns:getMimeTypeFromHumanResponse"/>
  </wsdl:message>
  <wsdl:message name="getZipWithDependenciesRequest">
    <wsdl:part name="parameters" element="ns:getZipWithDependencies"/>
  </wsdl:message>
  <wsdl:message name="getZipWithDependenciesResponse">
    <wsdl:part name="parameters" element="ns:getZipWithDependenciesResponse"/>
  </wsdl:message>
  <wsdl:message name="getContentDownloadBeanRequest">
    <wsdl:part name="parameters" element="ns:getContentDownloadBean"/>
  </wsdl:message>
  <wsdl:message name="getContentDownloadBeanResponse">
    <wsdl:part name="parameters" element="ns:getContentDownloadBeanResponse"/>
  </wsdl:message>
  <wsdl:message name="copyResourceRequest">
    <wsdl:part name="parameters" element="ns:copyResource"/>
  </wsdl:message>
  <wsdl:message name="copyResourceResponse">
    <wsdl:part name="parameters" element="ns:copyResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="setSessionResourcePathRequest">
    <wsdl:part name="parameters" element="ns:setSessionResourcePath"/>
  </wsdl:message>
  <wsdl:portType name="ResourceAdminServicePortType">
    <wsdl:operation name="removeExtension">
      <wsdl:input message="ns:removeExtensionRequest" wsaw:Action="urn:removeExtension"/>
      <wsdl:output message="ns:removeExtensionResponse" wsaw:Action="urn:removeExtensionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:removeExtensionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getHumanReadableMediaTypes">
      <wsdl:input message="ns:getHumanReadableMediaTypesRequest" wsaw:Action="urn:getHumanReadableMediaTypes"/>
      <wsdl:output message="ns:getHumanReadableMediaTypesResponse" wsaw:Action="urn:getHumanReadableMediaTypesResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getHumanReadableMediaTypesResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <wsdl:input message="ns:addTextContentRequest" wsaw:Action="urn:addTextContent"/>
      <wsdl:output message="ns:addTextContentResponse" wsaw:Action="urn:addTextContentResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addTextContentResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserPermission">
      <wsdl:input message="ns:addUserPermissionRequest" wsaw:Action="urn:addUserPermission"/>
      <wsdl:output message="ns:addUserPermissionResponse" wsaw:Action="urn:addUserPermissionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceResourceServiceException" name="ResourceAdminServiceResourceServiceException" wsaw:Action="urn:addUserPermissionResourceAdminServiceResourceServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCustomUIMediatypeDefinitions">
      <wsdl:input message="ns:getCustomUIMediatypeDefinitionsRequest" wsaw:Action="urn:getCustomUIMediatypeDefinitions"/>
      <wsdl:output message="ns:getCustomUIMediatypeDefinitionsResponse" wsaw:Action="urn:getCustomUIMediatypeDefinitionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getCustomUIMediatypeDefinitionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="changeRolePermissions">
      <wsdl:input message="ns:changeRolePermissionsRequest" wsaw:Action="urn:changeRolePermissions"/>
      <wsdl:output message="ns:changeRolePermissionsResponse" wsaw:Action="urn:changeRolePermissionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:changeRolePermissionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <wsdl:input message="ns:setDescriptionRequest" wsaw:Action="urn:setDescription"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:setDescriptionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <wsdl:input message="ns:getResourceDataRequest" wsaw:Action="urn:getResourceData"/>
      <wsdl:output message="ns:getResourceDataResponse" wsaw:Action="urn:getResourceDataResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getResourceDataResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <wsdl:input message="ns:getCollectionContentRequest" wsaw:Action="urn:getCollectionContent"/>
      <wsdl:output message="ns:getCollectionContentResponse" wsaw:Action="urn:getCollectionContentResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getCollectionContentResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="ns:deleteRequest" wsaw:Action="urn:delete"/>
      <wsdl:output message="ns:deleteResponse" wsaw:Action="urn:deleteResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:deleteResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <wsdl:input message="ns:getContentBeanRequest" wsaw:Action="urn:getContentBean"/>
      <wsdl:output message="ns:getContentBeanResponse" wsaw:Action="urn:getContentBeanResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getContentBeanResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCollectionMediatypeDefinitions">
      <wsdl:input message="ns:getCollectionMediatypeDefinitionsRequest" wsaw:Action="urn:getCollectionMediatypeDefinitions"/>
      <wsdl:output message="ns:getCollectionMediatypeDefinitionsResponse" wsaw:Action="urn:getCollectionMediatypeDefinitionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getCollectionMediatypeDefinitionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <wsdl:input message="ns:renameResourceRequest" wsaw:Action="urn:renameResource"/>
      <wsdl:output message="ns:renameResourceResponse" wsaw:Action="urn:renameResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:renameResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="moveResource">
      <wsdl:input message="ns:moveResourceRequest" wsaw:Action="urn:moveResource"/>
      <wsdl:output message="ns:moveResourceResponse" wsaw:Action="urn:moveResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:moveResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="restoreVersion">
      <wsdl:input message="ns:restoreVersionRequest" wsaw:Action="urn:restoreVersion"/>
      <wsdl:output message="ns:restoreVersionResponse" wsaw:Action="urn:restoreVersionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:restoreVersionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <wsdl:input message="ns:addResourceRequest" wsaw:Action="urn:addResource"/>
      <wsdl:output message="ns:addResourceResponse" wsaw:Action="urn:addResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addExtension">
      <wsdl:input message="ns:addExtensionRequest" wsaw:Action="urn:addExtension"/>
      <wsdl:output message="ns:addExtensionResponse" wsaw:Action="urn:addExtensionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addExtensionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateMediaType">
      <wsdl:input message="ns:updateMediaTypeRequest" wsaw:Action="urn:updateMediaType"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:updateMediaTypeResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteVersionHistory">
      <wsdl:input message="ns:deleteVersionHistoryRequest" wsaw:Action="urn:deleteVersionHistory"/>
      <wsdl:output message="ns:deleteVersionHistoryResponse" wsaw:Action="urn:deleteVersionHistoryResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:deleteVersionHistoryResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addRemoteLink">
      <wsdl:input message="ns:addRemoteLinkRequest" wsaw:Action="urn:addRemoteLink"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addRemoteLinkResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getSessionResourcePath">
      <wsdl:input message="ns:getSessionResourcePathRequest" wsaw:Action="urn:getSessionResourcePath"/>
      <wsdl:output message="ns:getSessionResourcePathResponse" wsaw:Action="urn:getSessionResourcePathResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getSessionResourcePathResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="createVersion">
      <wsdl:input message="ns:createVersionRequest" wsaw:Action="urn:createVersion"/>
      <wsdl:output message="ns:createVersionResponse" wsaw:Action="urn:createVersionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:createVersionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <wsdl:input message="ns:getResourceTreeEntryRequest" wsaw:Action="urn:getResourceTreeEntry"/>
      <wsdl:output message="ns:getResourceTreeEntryResponse" wsaw:Action="urn:getResourceTreeEntryResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getResourceTreeEntryResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <wsdl:input message="ns:getMetadataRequest" wsaw:Action="urn:getMetadata"/>
      <wsdl:output message="ns:getMetadataResponse" wsaw:Action="urn:getMetadataResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getMetadataResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
      <wsdl:input message="ns:getPropertyRequest" wsaw:Action="urn:getProperty"/>
      <wsdl:output message="ns:getPropertyResponse" wsaw:Action="urn:getPropertyResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getPropertyResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="listExtensions">
      <wsdl:input message="ns:listExtensionsRequest" wsaw:Action="urn:listExtensions"/>
      <wsdl:output message="ns:listExtensionsResponse" wsaw:Action="urn:listExtensionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:listExtensionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="changeUserPermissions">
      <wsdl:input message="ns:changeUserPermissionsRequest" wsaw:Action="urn:changeUserPermissions"/>
      <wsdl:output message="ns:changeUserPermissionsResponse" wsaw:Action="urn:changeUserPermissionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:changeUserPermissionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getPermissions">
      <wsdl:input message="ns:getPermissionsRequest" wsaw:Action="urn:getPermissions"/>
      <wsdl:output message="ns:getPermissionsResponse" wsaw:Action="urn:getPermissionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getPermissionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addSymbolicLink">
      <wsdl:input message="ns:addSymbolicLinkRequest" wsaw:Action="urn:addSymbolicLink"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addSymbolicLinkResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="hasAssociations">
      <wsdl:input message="ns:hasAssociationsRequest" wsaw:Action="urn:hasAssociations"/>
      <wsdl:output message="ns:hasAssociationsResponse" wsaw:Action="urn:hasAssociationsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:hasAssociationsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <wsdl:input message="ns:getTextContentRequest" wsaw:Action="urn:getTextContent"/>
      <wsdl:output message="ns:getTextContentResponse" wsaw:Action="urn:getTextContentResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getTextContentResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addRolePermission">
      <wsdl:input message="ns:addRolePermissionRequest" wsaw:Action="urn:addRolePermission"/>
      <wsdl:output message="ns:addRolePermissionResponse" wsaw:Action="urn:addRolePermissionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceResourceServiceException" name="ResourceAdminServiceResourceServiceException" wsaw:Action="urn:addRolePermissionResourceAdminServiceResourceServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <wsdl:input message="ns:addTextResourceRequest" wsaw:Action="urn:addTextResource"/>
      <wsdl:output message="ns:addTextResourceResponse" wsaw:Action="urn:addTextResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addTextResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getMediatypeDefinitions">
      <wsdl:input message="ns:getMediatypeDefinitionsRequest" wsaw:Action="urn:getMediatypeDefinitions"/>
      <wsdl:output message="ns:getMediatypeDefinitionsResponse" wsaw:Action="urn:getMediatypeDefinitionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getMediatypeDefinitionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <wsdl:input message="ns:importResourceRequest" wsaw:Action="urn:importResource"/>
      <wsdl:output message="ns:importResourceResponse" wsaw:Action="urn:importResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:importResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getVersionsBean">
      <wsdl:input message="ns:getVersionsBeanRequest" wsaw:Action="urn:getVersionsBean"/>
      <wsdl:output message="ns:getVersionsBeanResponse" wsaw:Action="urn:getVersionsBeanResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getVersionsBeanResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <wsdl:input message="ns:addCollectionRequest" wsaw:Action="urn:addCollection"/>
      <wsdl:output message="ns:addCollectionResponse" wsaw:Action="urn:addCollectionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addCollectionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <wsdl:input message="ns:updateTextContentRequest" wsaw:Action="urn:updateTextContent"/>
      <wsdl:output message="ns:updateTextContentResponse" wsaw:Action="urn:updateTextContentResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:updateTextContentResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getMimeTypeFromHuman">
      <wsdl:input message="ns:getMimeTypeFromHumanRequest" wsaw:Action="urn:getMimeTypeFromHuman"/>
      <wsdl:output message="ns:getMimeTypeFromHumanResponse" wsaw:Action="urn:getMimeTypeFromHumanResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getMimeTypeFromHumanResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getZipWithDependencies">
      <wsdl:input message="ns:getZipWithDependenciesRequest" wsaw:Action="urn:getZipWithDependencies"/>
      <wsdl:output message="ns:getZipWithDependenciesResponse" wsaw:Action="urn:getZipWithDependenciesResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getZipWithDependenciesResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <wsdl:input message="ns:getContentDownloadBeanRequest" wsaw:Action="urn:getContentDownloadBean"/>
      <wsdl:output message="ns:getContentDownloadBeanResponse" wsaw:Action="urn:getContentDownloadBeanResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getContentDownloadBeanResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="copyResource">
      <wsdl:input message="ns:copyResourceRequest" wsaw:Action="urn:copyResource"/>
      <wsdl:output message="ns:copyResourceResponse" wsaw:Action="urn:copyResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:copyResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="setSessionResourcePath">
      <wsdl:input message="ns:setSessionResourcePathRequest" wsaw:Action="urn:setSessionResourcePath"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:setSessionResourcePathResourceAdminServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ResourceAdminServiceSoap11Binding" type="ns:ResourceAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getHumanReadableMediaTypes">
      <soap:operation soapAction="urn:getHumanReadableMediaTypes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeExtension">
      <soap:operation soapAction="urn:removeExtension" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <soap:operation soapAction="urn:addTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserPermission">
      <soap:operation soapAction="urn:addUserPermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceResourceServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceResourceServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCustomUIMediatypeDefinitions">
      <soap:operation soapAction="urn:getCustomUIMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeRolePermissions">
      <soap:operation soapAction="urn:changeRolePermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <soap:operation soapAction="urn:setDescription" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <soap:operation soapAction="urn:getResourceData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <soap:operation soapAction="urn:getCollectionContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="urn:delete" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <soap:operation soapAction="urn:getContentBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionMediatypeDefinitions">
      <soap:operation soapAction="urn:getCollectionMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <soap:operation soapAction="urn:renameResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="moveResource">
      <soap:operation soapAction="urn:moveResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restoreVersion">
      <soap:operation soapAction="urn:restoreVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <soap:operation soapAction="urn:addResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addExtension">
      <soap:operation soapAction="urn:addExtension" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMediaType">
      <soap:operation soapAction="urn:updateMediaType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteVersionHistory">
      <soap:operation soapAction="urn:deleteVersionHistory" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoteLink">
      <soap:operation soapAction="urn:addRemoteLink" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSessionResourcePath">
      <soap:operation soapAction="urn:getSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createVersion">
      <soap:operation soapAction="urn:createVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <soap:operation soapAction="urn:getResourceTreeEntry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <soap:operation soapAction="urn:getMetadata" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
      <soap:operation soapAction="urn:getProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listExtensions">
      <soap:operation soapAction="urn:listExtensions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserPermissions">
      <soap:operation soapAction="urn:changeUserPermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPermissions">
      <soap:operation soapAction="urn:getPermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSymbolicLink">
      <soap:operation soapAction="urn:addSymbolicLink" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasAssociations">
      <soap:operation soapAction="urn:hasAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRolePermission">
      <soap:operation soapAction="urn:addRolePermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceResourceServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceResourceServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <soap:operation soapAction="urn:addTextResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMediatypeDefinitions">
      <soap:operation soapAction="urn:getMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <soap:operation soapAction="urn:importResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersionsBean">
      <soap:operation soapAction="urn:getVersionsBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <soap:operation soapAction="urn:addCollection" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMimeTypeFromHuman">
      <soap:operation soapAction="urn:getMimeTypeFromHuman" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getZipWithDependencies">
      <soap:operation soapAction="urn:getZipWithDependencies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <soap:operation soapAction="urn:getContentDownloadBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copyResource">
      <soap:operation soapAction="urn:copyResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSessionResourcePath">
      <soap:operation soapAction="urn:setSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ResourceAdminServiceSoap12Binding" type="ns:ResourceAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getHumanReadableMediaTypes">
      <soap12:operation soapAction="urn:getHumanReadableMediaTypes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeExtension">
      <soap12:operation soapAction="urn:removeExtension" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <soap12:operation soapAction="urn:addTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserPermission">
      <soap12:operation soapAction="urn:addUserPermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceResourceServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceResourceServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCustomUIMediatypeDefinitions">
      <soap12:operation soapAction="urn:getCustomUIMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeRolePermissions">
      <soap12:operation soapAction="urn:changeRolePermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <soap12:operation soapAction="urn:setDescription" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <soap12:operation soapAction="urn:getResourceData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <soap12:operation soapAction="urn:getCollectionContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap12:operation soapAction="urn:delete" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <soap12:operation soapAction="urn:getContentBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionMediatypeDefinitions">
      <soap12:operation soapAction="urn:getCollectionMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <soap12:operation soapAction="urn:renameResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="moveResource">
      <soap12:operation soapAction="urn:moveResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restoreVersion">
      <soap12:operation soapAction="urn:restoreVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <soap12:operation soapAction="urn:addResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addExtension">
      <soap12:operation soapAction="urn:addExtension" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMediaType">
      <soap12:operation soapAction="urn:updateMediaType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteVersionHistory">
      <soap12:operation soapAction="urn:deleteVersionHistory" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoteLink">
      <soap12:operation soapAction="urn:addRemoteLink" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSessionResourcePath">
      <soap12:operation soapAction="urn:getSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createVersion">
      <soap12:operation soapAction="urn:createVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <soap12:operation soapAction="urn:getResourceTreeEntry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <soap12:operation soapAction="urn:getMetadata" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
      <soap12:operation soapAction="urn:getProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listExtensions">
      <soap12:operation soapAction="urn:listExtensions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserPermissions">
      <soap12:operation soapAction="urn:changeUserPermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPermissions">
      <soap12:operation soapAction="urn:getPermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSymbolicLink">
      <soap12:operation soapAction="urn:addSymbolicLink" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasAssociations">
      <soap12:operation soapAction="urn:hasAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap12:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRolePermission">
      <soap12:operation soapAction="urn:addRolePermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceResourceServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceResourceServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <soap12:operation soapAction="urn:addTextResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMediatypeDefinitions">
      <soap12:operation soapAction="urn:getMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <soap12:operation soapAction="urn:importResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersionsBean">
      <soap12:operation soapAction="urn:getVersionsBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <soap12:operation soapAction="urn:addCollection" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap12:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMimeTypeFromHuman">
      <soap12:operation soapAction="urn:getMimeTypeFromHuman" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getZipWithDependencies">
      <soap12:operation soapAction="urn:getZipWithDependencies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <soap12:operation soapAction="urn:getContentDownloadBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copyResource">
      <soap12:operation soapAction="urn:copyResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSessionResourcePath">
      <soap12:operation soapAction="urn:setSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ResourceAdminServiceHttpBinding" type="ns:ResourceAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getHumanReadableMediaTypes">
      <http:operation location="getHumanReadableMediaTypes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeExtension">
      <http:operation location="removeExtension"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <http:operation location="addTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserPermission">
      <http:operation location="addUserPermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCustomUIMediatypeDefinitions">
      <http:operation location="getCustomUIMediatypeDefinitions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeRolePermissions">
      <http:operation location="changeRolePermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <http:operation location="setDescription"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <http:operation location="getResourceData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <http:operation location="getCollectionContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <http:operation location="delete"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <http:operation location="getContentBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCollectionMediatypeDefinitions">
      <http:operation location="getCollectionMediatypeDefinitions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <http:operation location="renameResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="moveResource">
      <http:operation location="moveResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restoreVersion">
      <http:operation location="restoreVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <http:operation location="addResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addExtension">
      <http:operation location="addExtension"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateMediaType">
      <http:operation location="updateMediaType"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteVersionHistory">
      <http:operation location="deleteVersionHistory"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRemoteLink">
      <http:operation location="addRemoteLink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getSessionResourcePath">
      <http:operation location="getSessionResourcePath"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createVersion">
      <http:operation location="createVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <http:operation location="getResourceTreeEntry"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <http:operation location="getMetadata"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
      <http:operation location="getProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listExtensions">
      <http:operation location="listExtensions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeUserPermissions">
      <http:operation location="changeUserPermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPermissions">
      <http:operation location="getPermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addSymbolicLink">
      <http:operation location="addSymbolicLink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="hasAssociations">
      <http:operation location="hasAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <http:operation location="getTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRolePermission">
      <http:operation location="addRolePermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <http:operation location="addTextResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMediatypeDefinitions">
      <http:operation location="getMediatypeDefinitions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <http:operation location="importResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getVersionsBean">
      <http:operation location="getVersionsBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <http:operation location="addCollection"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <http:operation location="updateTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMimeTypeFromHuman">
      <http:operation location="getMimeTypeFromHuman"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getZipWithDependencies">
      <http:operation location="getZipWithDependencies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <http:operation location="getContentDownloadBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="copyResource">
      <http:operation location="copyResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setSessionResourcePath">
      <http:operation location="setSessionResourcePath"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ResourceAdminService">
    <wsdl:port name="ResourceAdminServiceHttpsSoap11Endpoint" binding="ns:ResourceAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ResourceAdminServiceHttpsSoap12Endpoint" binding="ns:ResourceAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ResourceAdminServiceHttpsEndpoint" binding="ns:ResourceAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="24ec5693-60b4-43c2-8618-710873d0c8cb" isOneWay="false" action="urn:addCollection" name="addCollection" bindingOperationName="addCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aed522f3-9a6e-4773-8bd2-aeeedb9f4af5" isOneWay="false" action="urn:addExtension" name="addExtension" bindingOperationName="addExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a1803c55-6d57-4295-91bb-9cfca8499f2f" isOneWay="false" action="urn:addRemoteLink" name="addRemoteLink" bindingOperationName="addRemoteLink" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bf69176a-3a0f-4040-8b47-7f461dfc2ce0" isOneWay="false" action="urn:addResource" name="addResource" bindingOperationName="addResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ca3a894b-2d10-4f9a-a530-868d7bc51696" isOneWay="false" action="urn:addRolePermission" name="addRolePermission" bindingOperationName="addRolePermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="650599f8-d7d8-40c3-aed7-4b27d6fc33a4" isOneWay="false" action="urn:addSymbolicLink" name="addSymbolicLink" bindingOperationName="addSymbolicLink" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f15cf58-cb20-4939-aa76-48aea21d72c8" isOneWay="false" action="urn:addTextContent" name="addTextContent" bindingOperationName="addTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b86b5fe-697f-4c6f-9dd2-36065afc86cd" isOneWay="false" action="urn:addTextResource" name="addTextResource" bindingOperationName="addTextResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="077d288f-5719-44aa-aa46-f74f4fbfc8c4" isOneWay="false" action="urn:addUserPermission" name="addUserPermission" bindingOperationName="addUserPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="173a5516-d34c-4a8f-90b6-35770871269d" isOneWay="false" action="urn:changeRolePermissions" name="changeRolePermissions" bindingOperationName="changeRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8963fcc6-c822-4214-92df-b890836ce0f5" isOneWay="false" action="urn:changeUserPermissions" name="changeUserPermissions" bindingOperationName="changeUserPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b5d4ae9a-ba53-4360-8867-96f5227141b2" isOneWay="false" action="urn:copyResource" name="copyResource" bindingOperationName="copyResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f112aa17-7cd7-42bc-bd3c-0154b6d82994" isOneWay="false" action="urn:createVersion" name="createVersion" bindingOperationName="createVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="befd88dd-522d-4303-8ac1-7c5d69fbed7a" isOneWay="false" action="urn:delete" name="delete" bindingOperationName="delete" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a1fdfd1c-f0f2-4b94-9787-3c3df3bb220a" isOneWay="false" action="urn:deleteVersionHistory" name="deleteVersionHistory" bindingOperationName="deleteVersionHistory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d202aea8-9822-4c8a-88bb-81f92ac166be" isOneWay="false" action="urn:getCollectionContent" name="getCollectionContent" bindingOperationName="getCollectionContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9ee70b7-9d3f-4e4c-91d0-3dbef3de3627" isOneWay="false" action="urn:getCollectionMediatypeDefinitions" name="getCollectionMediatypeDefinitions" bindingOperationName="getCollectionMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="008a85b1-3db0-4446-806c-fc6551eba7b0" isOneWay="false" action="urn:getContentBean" name="getContentBean" bindingOperationName="getContentBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab5bdb02-f1b5-413b-afa0-e3b95aab8129" isOneWay="false" action="urn:getContentDownloadBean" name="getContentDownloadBean" bindingOperationName="getContentDownloadBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dc170795-bade-48ac-8085-3cbf2f224f3f" isOneWay="false" action="urn:getCustomUIMediatypeDefinitions" name="getCustomUIMediatypeDefinitions" bindingOperationName="getCustomUIMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="06be7d9e-e5b1-46f6-a5ac-9b38422f433c" isOneWay="false" action="urn:getHumanReadableMediaTypes" name="getHumanReadableMediaTypes" bindingOperationName="getHumanReadableMediaTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d6e5f51e-a514-4827-8f4a-cb035119eede" isOneWay="false" action="urn:getMediatypeDefinitions" name="getMediatypeDefinitions" bindingOperationName="getMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7d5e542-3575-47f6-a48f-c60f1f04341f" isOneWay="false" action="urn:getMetadata" name="getMetadata" bindingOperationName="getMetadata" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e86a7ae7-cd48-482b-a9dc-26b0d8811e86" isOneWay="false" action="urn:getMimeTypeFromHuman" name="getMimeTypeFromHuman" bindingOperationName="getMimeTypeFromHuman" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0655a0c8-9128-4e1f-8b42-2a794c890933" isOneWay="false" action="urn:getPermissions" name="getPermissions" bindingOperationName="getPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="14d4d882-2e6c-4b64-8d75-27674aff5edd" isOneWay="false" action="urn:getProperty" name="getProperty" bindingOperationName="getProperty" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6f995075-b492-45db-ab7b-1a9d32e31ef6" isOneWay="false" action="urn:getResourceData" name="getResourceData" bindingOperationName="getResourceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e97b4f7-e8dc-4e9a-8785-1b81560e9e71" isOneWay="false" action="urn:getResourceTreeEntry" name="getResourceTreeEntry" bindingOperationName="getResourceTreeEntry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="114e0d10-82c8-4579-8c98-cd1097af6b40" isOneWay="false" action="urn:getSessionResourcePath" name="getSessionResourcePath" bindingOperationName="getSessionResourcePath" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6be668be-4435-4aa5-a43a-ab396062511d" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dc5d59db-4f2d-4944-929e-2029e82e156a" isOneWay="false" action="urn:getVersionsBean" name="getVersionsBean" bindingOperationName="getVersionsBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e1d08677-f081-4b21-9679-fd07086dfd47" isOneWay="false" action="urn:getZipWithDependencies" name="getZipWithDependencies" bindingOperationName="getZipWithDependencies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6f8d8e9b-c34f-4076-a5bb-44a38387e8a8" isOneWay="false" action="urn:hasAssociations" name="hasAssociations" bindingOperationName="hasAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a96d5d84-1ec5-4871-9f69-31ddd5ab6773" isOneWay="false" action="urn:importResource" name="importResource" bindingOperationName="importResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c41a50fc-1ec2-4da0-ab67-23be8c9cf479" isOneWay="false" action="urn:listExtensions" name="listExtensions" bindingOperationName="listExtensions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8d3be1f5-5320-4f3d-9a52-95bb6af93ff0" isOneWay="false" action="urn:moveResource" name="moveResource" bindingOperationName="moveResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16c06bcf-fa4a-485c-a6ab-57477129baec" isOneWay="false" action="urn:removeExtension" name="removeExtension" bindingOperationName="removeExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="04ecfe71-eef6-4a7d-ab1a-e828b5cee980" isOneWay="false" action="urn:renameResource" name="renameResource" bindingOperationName="renameResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="44f11a7c-bb4c-46dc-9227-44af277e0b68" isOneWay="false" action="urn:restoreVersion" name="restoreVersion" bindingOperationName="restoreVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="80b7ce2d-1d06-41d9-873e-02527e84dd73" isOneWay="false" action="urn:setDescription" name="setDescription" bindingOperationName="setDescription" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2de46b80-6fa2-47ac-9b92-c62dd7cf9e9f" isOneWay="false" action="urn:setSessionResourcePath" name="setSessionResourcePath" bindingOperationName="setSessionResourcePath" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8f734872-49ae-482a-978a-278944d39b1b" isOneWay="false" action="urn:updateMediaType" name="updateMediaType" bindingOperationName="updateMediaType" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e7249021-55d6-4a11-8144-f31b462091d5" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="10902b33-ca88-41ed-aa53-7dd8f3f42c4a" wsaVersion="NONE" name="SearchAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.search.registry.carbon.wso2.org}SearchAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/SearchAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="8a33c083-00c1-4a72-a5f4-e50a415659cf" isOneWay="false" action="urn:deleteFilter" name="deleteFilter" bindingOperationName="deleteFilter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="78521041-7411-4769-80fd-98484eee23fd" isOneWay="false" action="urn:getAdvancedSearchFilter" name="getAdvancedSearchFilter" bindingOperationName="getAdvancedSearchFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bb816396-55fd-4879-a4f2-eae5f1f2ad37" isOneWay="false" action="urn:getAdvancedSearchResults" name="getAdvancedSearchResults" bindingOperationName="getAdvancedSearchResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8db79e2c-5191-4052-9df2-bb37ba40e85d" isOneWay="false" action="urn:getMediaTypeSearch" name="getMediaTypeSearch" bindingOperationName="getMediaTypeSearch" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b16ea2e1-b853-4fa0-8e83-cc87f0fa9b33" isOneWay="false" action="urn:getSavedFilters" name="getSavedFilters" bindingOperationName="getSavedFilters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c977f959-6e80-442f-af84-5efc3818b7e9" isOneWay="false" action="urn:getSearchResults" name="getSearchResults" bindingOperationName="getSearchResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bc5e348e-6737-4142-bd42-9e8e22581d54" isOneWay="false" action="urn:saveAdvancedSearchFilter" name="saveAdvancedSearchFilter" bindingOperationName="saveAdvancedSearchFilter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2f3deab1-13ab-40fc-bc93-d4f827d4d64c" wsaVersion="NONE" name="SearchAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.search.registry.carbon.wso2.org}SearchAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/SearchAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/SearchAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/SearchAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.search.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2543="http://beans.search.registry.carbon.wso2.org/xsd" xmlns:ax2544="http://common.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.search.registry.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2540="http://api.registry.carbon.wso2.org/xsd" xmlns:ax2539="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>SearchAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.registry.carbon.wso2.org/xsd">
      <xs:complexType name="ResourceData">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="averageRating" type="xs:float"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="averageStars" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdOn" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="deleteAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="externalLink" type="xs:boolean"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="getAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="link" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mounted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="relativePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tagCounts" nillable="true" type="ax2544:TagCount"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TagCount">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2541="http://api.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="RegistryException">
        <xs:complexContent>
          <xs:extension base="ax2540:RegistryException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.search.registry.carbon.wso2.org" xmlns:ax2542="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2546="http://beans.search.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://exceptions.core.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.search.registry.carbon.wso2.org/xsd"/>
      <xs:element name="SearchAdminServiceRegistryException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RegistryException" nillable="true" type="ax2542:RegistryException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSearchResults">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="searchType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="criteria" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSearchResultsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2543:SearchResultsBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMediaTypeSearch">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMediaTypeSearchResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2543:MediaTypeValueList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="saveAdvancedSearchFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="queryBean" nillable="true" type="ax2543:CustomSearchParameterBean"/>
            <xs:element minOccurs="0" name="filterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAdvancedSearchFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAdvancedSearchFilterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2543:CustomSearchParameterBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSavedFilters">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSavedFiltersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAdvancedSearchResults">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parameters" nillable="true" type="ax2543:CustomSearchParameterBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAdvancedSearchResultsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2543:AdvancedSearchResultsBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.search.registry.carbon.wso2.org/xsd" xmlns:ax2545="http://common.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="SearchResultsBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceDataList" nillable="true" type="ax2544:ResourceData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MediaTypeValueList">
        <xs:sequence>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="searchFields" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CustomSearchParameterBean">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parameterValues" nillable="true" type="ax2543:ArrayOfString"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfString">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="array" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AdvancedSearchResultsBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceDataList" nillable="true" type="ax2544:ResourceData"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.registry.carbon.wso2.org/xsd">
      <xs:complexType name="RegistryException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAdvancedSearchFilterRequest">
    <wsdl:part name="parameters" element="ns:getAdvancedSearchFilter"/>
  </wsdl:message>
  <wsdl:message name="getAdvancedSearchFilterResponse">
    <wsdl:part name="parameters" element="ns:getAdvancedSearchFilterResponse"/>
  </wsdl:message>
  <wsdl:message name="SearchAdminServiceRegistryException">
    <wsdl:part name="parameters" element="ns:SearchAdminServiceRegistryException"/>
  </wsdl:message>
  <wsdl:message name="saveAdvancedSearchFilterRequest">
    <wsdl:part name="parameters" element="ns:saveAdvancedSearchFilter"/>
  </wsdl:message>
  <wsdl:message name="getAdvancedSearchResultsRequest">
    <wsdl:part name="parameters" element="ns:getAdvancedSearchResults"/>
  </wsdl:message>
  <wsdl:message name="getAdvancedSearchResultsResponse">
    <wsdl:part name="parameters" element="ns:getAdvancedSearchResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteFilterRequest">
    <wsdl:part name="parameters" element="ns:deleteFilter"/>
  </wsdl:message>
  <wsdl:message name="getSearchResultsRequest">
    <wsdl:part name="parameters" element="ns:getSearchResults"/>
  </wsdl:message>
  <wsdl:message name="getSearchResultsResponse">
    <wsdl:part name="parameters" element="ns:getSearchResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="getSavedFiltersRequest">
    <wsdl:part name="parameters" element="ns:getSavedFilters"/>
  </wsdl:message>
  <wsdl:message name="getSavedFiltersResponse">
    <wsdl:part name="parameters" element="ns:getSavedFiltersResponse"/>
  </wsdl:message>
  <wsdl:message name="getMediaTypeSearchRequest">
    <wsdl:part name="parameters" element="ns:getMediaTypeSearch"/>
  </wsdl:message>
  <wsdl:message name="getMediaTypeSearchResponse">
    <wsdl:part name="parameters" element="ns:getMediaTypeSearchResponse"/>
  </wsdl:message>
  <wsdl:portType name="SearchAdminServicePortType">
    <wsdl:operation name="getAdvancedSearchFilter">
      <wsdl:input message="ns:getAdvancedSearchFilterRequest" wsaw:Action="urn:getAdvancedSearchFilter"/>
      <wsdl:output message="ns:getAdvancedSearchFilterResponse" wsaw:Action="urn:getAdvancedSearchFilterResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getAdvancedSearchFilterSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="saveAdvancedSearchFilter">
      <wsdl:input message="ns:saveAdvancedSearchFilterRequest" wsaw:Action="urn:saveAdvancedSearchFilter"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:saveAdvancedSearchFilterSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getAdvancedSearchResults">
      <wsdl:input message="ns:getAdvancedSearchResultsRequest" wsaw:Action="urn:getAdvancedSearchResults"/>
      <wsdl:output message="ns:getAdvancedSearchResultsResponse" wsaw:Action="urn:getAdvancedSearchResultsResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getAdvancedSearchResultsSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteFilter">
      <wsdl:input message="ns:deleteFilterRequest" wsaw:Action="urn:deleteFilter"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:deleteFilterSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getSearchResults">
      <wsdl:input message="ns:getSearchResultsRequest" wsaw:Action="urn:getSearchResults"/>
      <wsdl:output message="ns:getSearchResultsResponse" wsaw:Action="urn:getSearchResultsResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getSearchResultsSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getSavedFilters">
      <wsdl:input message="ns:getSavedFiltersRequest" wsaw:Action="urn:getSavedFilters"/>
      <wsdl:output message="ns:getSavedFiltersResponse" wsaw:Action="urn:getSavedFiltersResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getSavedFiltersSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getMediaTypeSearch">
      <wsdl:input message="ns:getMediaTypeSearchRequest" wsaw:Action="urn:getMediaTypeSearch"/>
      <wsdl:output message="ns:getMediaTypeSearchResponse" wsaw:Action="urn:getMediaTypeSearchResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getMediaTypeSearchSearchAdminServiceRegistryException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SearchAdminServiceSoap11Binding" type="ns:SearchAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAdvancedSearchFilter">
      <soap:operation soapAction="urn:getAdvancedSearchFilter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveAdvancedSearchFilter">
      <soap:operation soapAction="urn:saveAdvancedSearchFilter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAdvancedSearchResults">
      <soap:operation soapAction="urn:getAdvancedSearchResults" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFilter">
      <soap:operation soapAction="urn:deleteFilter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResults">
      <soap:operation soapAction="urn:getSearchResults" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSavedFilters">
      <soap:operation soapAction="urn:getSavedFilters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMediaTypeSearch">
      <soap:operation soapAction="urn:getMediaTypeSearch" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SearchAdminServiceSoap12Binding" type="ns:SearchAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAdvancedSearchFilter">
      <soap12:operation soapAction="urn:getAdvancedSearchFilter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveAdvancedSearchFilter">
      <soap12:operation soapAction="urn:saveAdvancedSearchFilter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAdvancedSearchResults">
      <soap12:operation soapAction="urn:getAdvancedSearchResults" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFilter">
      <soap12:operation soapAction="urn:deleteFilter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResults">
      <soap12:operation soapAction="urn:getSearchResults" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSavedFilters">
      <soap12:operation soapAction="urn:getSavedFilters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMediaTypeSearch">
      <soap12:operation soapAction="urn:getMediaTypeSearch" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SearchAdminServiceHttpBinding" type="ns:SearchAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAdvancedSearchFilter">
      <http:operation location="getAdvancedSearchFilter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="saveAdvancedSearchFilter">
      <http:operation location="saveAdvancedSearchFilter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAdvancedSearchResults">
      <http:operation location="getAdvancedSearchResults"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteFilter">
      <http:operation location="deleteFilter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getSearchResults">
      <http:operation location="getSearchResults"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSavedFilters">
      <http:operation location="getSavedFilters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMediaTypeSearch">
      <http:operation location="getMediaTypeSearch"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SearchAdminService">
    <wsdl:port name="SearchAdminServiceHttpsSoap11Endpoint" binding="ns:SearchAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="SearchAdminServiceHttpsSoap12Endpoint" binding="ns:SearchAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="SearchAdminServiceHttpsEndpoint" binding="ns:SearchAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="e1e7e94c-b00a-47ec-b364-a56dfa1c153d" isOneWay="false" action="urn:deleteFilter" name="deleteFilter" bindingOperationName="deleteFilter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cc570012-32fb-4603-8886-787f327df68c" isOneWay="false" action="urn:getAdvancedSearchFilter" name="getAdvancedSearchFilter" bindingOperationName="getAdvancedSearchFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="164c7557-4054-4f3b-bec0-2b5bbafb1b4b" isOneWay="false" action="urn:getAdvancedSearchResults" name="getAdvancedSearchResults" bindingOperationName="getAdvancedSearchResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="44c44660-dc8c-45ce-b0aa-62f0bd552068" isOneWay="false" action="urn:getMediaTypeSearch" name="getMediaTypeSearch" bindingOperationName="getMediaTypeSearch" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6212a16d-d264-4967-be3a-5b0831e97c95" isOneWay="false" action="urn:getSavedFilters" name="getSavedFilters" bindingOperationName="getSavedFilters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c3324885-7b83-41ed-87cb-b84d9640612d" isOneWay="false" action="urn:getSearchResults" name="getSearchResults" bindingOperationName="getSearchResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6082d848-e0b3-42f2-89a0-d3eeef309f28" isOneWay="false" action="urn:saveAdvancedSearchFilter" name="saveAdvancedSearchFilter" bindingOperationName="saveAdvancedSearchFilter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8836688e-17c7-40f7-94c2-b581d51b4574" wsaVersion="NONE" name="SecurityAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.config.security.carbon.wso2.org}SecurityAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/SecurityAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c7ba8197-7c44-4d8c-aa0a-474af1d75afb" isOneWay="false" action="urn:activateUsernameTokenAuthentication" name="activateUsernameTokenAuthentication" bindingOperationName="activateUsernameTokenAuthentication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e5d19c58-10d0-45ec-aed6-404ab82357e8" isOneWay="false" action="urn:applyKerberosSecurityPolicy" name="applyKerberosSecurityPolicy" bindingOperationName="applyKerberosSecurityPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8f066ce7-4048-4a81-a65e-c5331abf5181" isOneWay="false" action="urn:applySecurity" name="applySecurity" bindingOperationName="applySecurity" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="94aa6fdb-35fb-41bd-a505-712f7372af24" isOneWay="false" action="urn:disableSecurityOnService" name="disableSecurityOnService" bindingOperationName="disableSecurityOnService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="560b5c80-60e1-40a0-98ad-52749697ab10" isOneWay="false" action="urn:getScenarios" name="getScenarios" bindingOperationName="getScenarios" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a8054ae-3ee6-4fc5-adcd-4f5868ed1059" isOneWay="false" action="urn:getSecurityConfigData" name="getSecurityConfigData" bindingOperationName="getSecurityConfigData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f78cbe7-4a69-4e74-a6dd-4990137512a3" isOneWay="false" action="urn:getSecurityScenario" name="getSecurityScenario" bindingOperationName="getSecurityScenario" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d20c2918-e8ff-42fd-807e-215963650d24" wsaVersion="NONE" name="SecurityAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.config.security.carbon.wso2.org}SecurityAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/SecurityAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/SecurityAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/SecurityAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.config.security.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2555="http://security.carbon.wso2.org/xsd" xmlns:ax2556="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://service.config.security.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2559="http://service.config.security.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>SecurityAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://security.carbon.wso2.org/xsd" xmlns:ax2557="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="SecurityConfigException">
        <xs:complexContent>
          <xs:extension base="ax2556:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.config.security.carbon.wso2.org/xsd">
      <xs:complexType name="SecurityScenarioDataWrapper">
        <xs:sequence>
          <xs:element minOccurs="0" name="currentScenario" nillable="true" type="ax2559:SecurityScenarioData"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="scenarios" nillable="true" type="ax2559:SecurityScenarioData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SecurityScenarioData">
        <xs:sequence>
          <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="currentScenario" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyRegistryPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scenarioId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SecurityConfigData">
        <xs:sequence>
          <xs:element minOccurs="0" name="kerberosConfigurations" nillable="true" type="ax2559:KerberosConfigData"/>
          <xs:element minOccurs="0" name="privateStore" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="trustedKeyStores" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userGroups" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="KerberosConfigData">
        <xs:sequence>
          <xs:element minOccurs="0" name="kdcAddress" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="realmName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="servicePrincipleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="servicePrinciplePassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="useSubjectCredentialsOnly" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.config.security.carbon.wso2.org" xmlns:ax2560="http://service.config.security.carbon.wso2.org/xsd" xmlns:ax2558="http://security.carbon.wso2.org/xsd">
      <xs:import namespace="http://security.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://service.config.security.carbon.wso2.org/xsd"/>
      <xs:element name="SecurityAdminServiceSecurityConfigException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SecurityConfigException" nillable="true" type="ax2555:SecurityConfigException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disableSecurityOnService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="applyKerberosSecurityPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="servicePrincipalName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="servicePrincipalPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getScenarios">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getScenariosResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2559:SecurityScenarioDataWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="activateUsernameTokenAuthentication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userGroups" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="applySecurity">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyPath" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="trustedStores" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="privateStore" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userGroupNames" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecurityScenario">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="sceneId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecurityScenarioResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2559:SecurityScenarioData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecurityConfigData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="scenarioId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecurityConfigDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2559:SecurityConfigData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="disableSecurityOnServiceRequest">
    <wsdl:part name="parameters" element="ns:disableSecurityOnService"/>
  </wsdl:message>
  <wsdl:message name="SecurityAdminServiceSecurityConfigException">
    <wsdl:part name="parameters" element="ns:SecurityAdminServiceSecurityConfigException"/>
  </wsdl:message>
  <wsdl:message name="applySecurityRequest">
    <wsdl:part name="parameters" element="ns:applySecurity"/>
  </wsdl:message>
  <wsdl:message name="getSecurityScenarioRequest">
    <wsdl:part name="parameters" element="ns:getSecurityScenario"/>
  </wsdl:message>
  <wsdl:message name="getSecurityScenarioResponse">
    <wsdl:part name="parameters" element="ns:getSecurityScenarioResponse"/>
  </wsdl:message>
  <wsdl:message name="applyKerberosSecurityPolicyRequest">
    <wsdl:part name="parameters" element="ns:applyKerberosSecurityPolicy"/>
  </wsdl:message>
  <wsdl:message name="getScenariosRequest">
    <wsdl:part name="parameters" element="ns:getScenarios"/>
  </wsdl:message>
  <wsdl:message name="getScenariosResponse">
    <wsdl:part name="parameters" element="ns:getScenariosResponse"/>
  </wsdl:message>
  <wsdl:message name="activateUsernameTokenAuthenticationRequest">
    <wsdl:part name="parameters" element="ns:activateUsernameTokenAuthentication"/>
  </wsdl:message>
  <wsdl:message name="getSecurityConfigDataRequest">
    <wsdl:part name="parameters" element="ns:getSecurityConfigData"/>
  </wsdl:message>
  <wsdl:message name="getSecurityConfigDataResponse">
    <wsdl:part name="parameters" element="ns:getSecurityConfigDataResponse"/>
  </wsdl:message>
  <wsdl:portType name="SecurityAdminServicePortType">
    <wsdl:operation name="disableSecurityOnService">
      <wsdl:input message="ns:disableSecurityOnServiceRequest" wsaw:Action="urn:disableSecurityOnService"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:disableSecurityOnServiceSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="applySecurity">
      <wsdl:input message="ns:applySecurityRequest" wsaw:Action="urn:applySecurity"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:applySecuritySecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getSecurityScenario">
      <wsdl:input message="ns:getSecurityScenarioRequest" wsaw:Action="urn:getSecurityScenario"/>
      <wsdl:output message="ns:getSecurityScenarioResponse" wsaw:Action="urn:getSecurityScenarioResponse"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:getSecurityScenarioSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="applyKerberosSecurityPolicy">
      <wsdl:input message="ns:applyKerberosSecurityPolicyRequest" wsaw:Action="urn:applyKerberosSecurityPolicy"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:applyKerberosSecurityPolicySecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getScenarios">
      <wsdl:input message="ns:getScenariosRequest" wsaw:Action="urn:getScenarios"/>
      <wsdl:output message="ns:getScenariosResponse" wsaw:Action="urn:getScenariosResponse"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:getScenariosSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="activateUsernameTokenAuthentication">
      <wsdl:input message="ns:activateUsernameTokenAuthenticationRequest" wsaw:Action="urn:activateUsernameTokenAuthentication"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:activateUsernameTokenAuthenticationSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getSecurityConfigData">
      <wsdl:input message="ns:getSecurityConfigDataRequest" wsaw:Action="urn:getSecurityConfigData"/>
      <wsdl:output message="ns:getSecurityConfigDataResponse" wsaw:Action="urn:getSecurityConfigDataResponse"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:getSecurityConfigDataSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SecurityAdminServiceSoap11Binding" type="ns:SecurityAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="disableSecurityOnService">
      <soap:operation soapAction="urn:disableSecurityOnService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applySecurity">
      <soap:operation soapAction="urn:applySecurity" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecurityScenario">
      <soap:operation soapAction="urn:getSecurityScenario" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyKerberosSecurityPolicy">
      <soap:operation soapAction="urn:applyKerberosSecurityPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getScenarios">
      <soap:operation soapAction="urn:getScenarios" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateUsernameTokenAuthentication">
      <soap:operation soapAction="urn:activateUsernameTokenAuthentication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecurityConfigData">
      <soap:operation soapAction="urn:getSecurityConfigData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SecurityAdminServiceSoap12Binding" type="ns:SecurityAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="disableSecurityOnService">
      <soap12:operation soapAction="urn:disableSecurityOnService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applySecurity">
      <soap12:operation soapAction="urn:applySecurity" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecurityScenario">
      <soap12:operation soapAction="urn:getSecurityScenario" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyKerberosSecurityPolicy">
      <soap12:operation soapAction="urn:applyKerberosSecurityPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getScenarios">
      <soap12:operation soapAction="urn:getScenarios" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateUsernameTokenAuthentication">
      <soap12:operation soapAction="urn:activateUsernameTokenAuthentication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecurityConfigData">
      <soap12:operation soapAction="urn:getSecurityConfigData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SecurityAdminServiceHttpBinding" type="ns:SecurityAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="disableSecurityOnService">
      <http:operation location="disableSecurityOnService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="applySecurity">
      <http:operation location="applySecurity"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getSecurityScenario">
      <http:operation location="getSecurityScenario"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="applyKerberosSecurityPolicy">
      <http:operation location="applyKerberosSecurityPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getScenarios">
      <http:operation location="getScenarios"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activateUsernameTokenAuthentication">
      <http:operation location="activateUsernameTokenAuthentication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getSecurityConfigData">
      <http:operation location="getSecurityConfigData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SecurityAdminService">
    <wsdl:port name="SecurityAdminServiceHttpsSoap11Endpoint" binding="ns:SecurityAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="SecurityAdminServiceHttpsSoap12Endpoint" binding="ns:SecurityAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="SecurityAdminServiceHttpsEndpoint" binding="ns:SecurityAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="2ea8c90b-92ac-4e7a-86df-e8d47191e5a0" isOneWay="false" action="urn:activateUsernameTokenAuthentication" name="activateUsernameTokenAuthentication" bindingOperationName="activateUsernameTokenAuthentication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="97f9348c-5d63-4ae5-848a-0edffddf0f9a" isOneWay="false" action="urn:applyKerberosSecurityPolicy" name="applyKerberosSecurityPolicy" bindingOperationName="applyKerberosSecurityPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6c4b7f48-6bcc-45cc-abca-543f16295232" isOneWay="false" action="urn:applySecurity" name="applySecurity" bindingOperationName="applySecurity" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2d7920b2-5765-4eca-887e-b6c1654e3a6a" isOneWay="false" action="urn:disableSecurityOnService" name="disableSecurityOnService" bindingOperationName="disableSecurityOnService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="37f2dbfd-078e-4818-b067-df7b0b1ba10b" isOneWay="false" action="urn:getScenarios" name="getScenarios" bindingOperationName="getScenarios" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52e70776-bf15-4836-8c6b-09deb1d7b219" isOneWay="false" action="urn:getSecurityConfigData" name="getSecurityConfigData" bindingOperationName="getSecurityConfigData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3dc648c-1d8f-4ccb-ae09-e45460d8072c" isOneWay="false" action="urn:getSecurityScenario" name="getSecurityScenario" bindingOperationName="getSecurityScenario" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="27b31786-3d67-4673-b51a-f391134d2c03" wsaVersion="NONE" name="ServerAdminSoap11Binding" type="wsdl" bindingName="{http://service.admin.server.carbon.wso2.org}ServerAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/ServerAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ServerAdmin.ServerAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="d51cd7e2-3acc-44be-9ab5-8d680d675c66" isOneWay="false" action="urn:endMaintenance" name="endMaintenance" bindingOperationName="endMaintenance" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="af8e26fa-a281-4d95-b868-ab5f471621c5" isOneWay="false" action="urn:getServerData" name="getServerData" bindingOperationName="getServerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="49f60f39-ba27-4156-92e4-d57ce6f9ab9f" isOneWay="false" action="urn:getServerDataAsString" name="getServerDataAsString" bindingOperationName="getServerDataAsString" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="654ee473-9781-4872-b361-38979ca102de" isOneWay="false" action="urn:getServerStatus" name="getServerStatus" bindingOperationName="getServerStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="74c36f71-7e05-4436-a175-47ea422c7907" isOneWay="false" action="urn:getServerVersion" name="getServerVersion" bindingOperationName="getServerVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="444eeeea-13ba-4196-bced-094b0c02e145" isOneWay="false" action="urn:isAlive" name="isAlive" bindingOperationName="isAlive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5e99c229-09b2-422d-8351-65712b2ff634" isOneWay="false" action="urn:restart" name="restart" bindingOperationName="restart" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="97ca768d-3746-4777-aca4-1871ff581b45" isOneWay="false" action="urn:restartGracefully" name="restartGracefully" bindingOperationName="restartGracefully" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08d3565e-2ffb-4f69-80ca-1ef5c29380fb" isOneWay="false" action="urn:shutdown" name="shutdown" bindingOperationName="shutdown" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bb585799-e628-4fe7-b1a2-e6fc2474534d" isOneWay="false" action="urn:shutdownGracefully" name="shutdownGracefully" bindingOperationName="shutdownGracefully" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5a3b35b1-ab7b-4837-983d-d32e380acc4a" isOneWay="false" action="urn:startMaintenance" name="startMaintenance" bindingOperationName="startMaintenance" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="67dc4821-350a-49a1-b223-a3334ced3895" wsaVersion="NONE" name="ServerAdminSoap12Binding" type="wsdl" bindingName="{http://service.admin.server.carbon.wso2.org}ServerAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/ServerAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ServerAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ServerAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.admin.server.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2567="http://common.admin.server.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://service.admin.server.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ServerAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2568="http://common.admin.server.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://common.admin.server.carbon.wso2.org/xsd"/>
      <xs:element name="ServerAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ServerAdminException" nillable="true" type="ns1:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="restartGracefully">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="restartGracefullyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="shutdownGracefully">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="shutdownGracefullyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2567:ServerData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerVersion">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerVersionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startMaintenance">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="endMaintenance">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerStatus">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerStatusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerDataAsString">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerDataAsStringResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="restart">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="restartResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="shutdown">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="shutdownResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAlive">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAliveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.admin.server.carbon.wso2.org/xsd">
      <xs:complexType name="ServerData">
        <xs:sequence>
          <xs:element minOccurs="0" name="axis2Location" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="carbonVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbDriverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbDriverVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaHome" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaRuntimeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaVMVendor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaVMVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="osName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="osVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="registryType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="remoteRegistryChroot" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="remoteRegistryURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="repoLocation" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverIp" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverStartTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverStartUpDuration" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverUpTime" nillable="true" type="ax2567:ServerUpTime"/>
          <xs:element minOccurs="0" name="userCountry" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userHome" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userTimezone" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServerUpTime">
        <xs:sequence>
          <xs:element minOccurs="0" name="days" type="xs:long"/>
          <xs:element minOccurs="0" name="hours" type="xs:int"/>
          <xs:element minOccurs="0" name="minutes" type="xs:int"/>
          <xs:element minOccurs="0" name="seconds" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getServerDataRequest">
    <wsdl:part name="parameters" element="ns1:getServerData"/>
  </wsdl:message>
  <wsdl:message name="getServerDataResponse">
    <wsdl:part name="parameters" element="ns1:getServerDataResponse"/>
  </wsdl:message>
  <wsdl:message name="ServerAdminException">
    <wsdl:part name="parameters" element="ns1:ServerAdminException"/>
  </wsdl:message>
  <wsdl:message name="isAliveRequest">
    <wsdl:part name="parameters" element="ns1:isAlive"/>
  </wsdl:message>
  <wsdl:message name="isAliveResponse">
    <wsdl:part name="parameters" element="ns1:isAliveResponse"/>
  </wsdl:message>
  <wsdl:message name="restartGracefullyRequest">
    <wsdl:part name="parameters" element="ns1:restartGracefully"/>
  </wsdl:message>
  <wsdl:message name="restartGracefullyResponse">
    <wsdl:part name="parameters" element="ns1:restartGracefullyResponse"/>
  </wsdl:message>
  <wsdl:message name="endMaintenanceRequest">
    <wsdl:part name="parameters" element="ns1:endMaintenance"/>
  </wsdl:message>
  <wsdl:message name="getServerStatusRequest">
    <wsdl:part name="parameters" element="ns1:getServerStatus"/>
  </wsdl:message>
  <wsdl:message name="getServerStatusResponse">
    <wsdl:part name="parameters" element="ns1:getServerStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="shutdownGracefullyRequest">
    <wsdl:part name="parameters" element="ns1:shutdownGracefully"/>
  </wsdl:message>
  <wsdl:message name="shutdownGracefullyResponse">
    <wsdl:part name="parameters" element="ns1:shutdownGracefullyResponse"/>
  </wsdl:message>
  <wsdl:message name="restartRequest">
    <wsdl:part name="parameters" element="ns1:restart"/>
  </wsdl:message>
  <wsdl:message name="restartResponse">
    <wsdl:part name="parameters" element="ns1:restartResponse"/>
  </wsdl:message>
  <wsdl:message name="getServerVersionRequest">
    <wsdl:part name="parameters" element="ns1:getServerVersion"/>
  </wsdl:message>
  <wsdl:message name="getServerVersionResponse">
    <wsdl:part name="parameters" element="ns1:getServerVersionResponse"/>
  </wsdl:message>
  <wsdl:message name="startMaintenanceRequest">
    <wsdl:part name="parameters" element="ns1:startMaintenance"/>
  </wsdl:message>
  <wsdl:message name="getServerDataAsStringRequest">
    <wsdl:part name="parameters" element="ns1:getServerDataAsString"/>
  </wsdl:message>
  <wsdl:message name="getServerDataAsStringResponse">
    <wsdl:part name="parameters" element="ns1:getServerDataAsStringResponse"/>
  </wsdl:message>
  <wsdl:message name="shutdownRequest">
    <wsdl:part name="parameters" element="ns1:shutdown"/>
  </wsdl:message>
  <wsdl:message name="shutdownResponse">
    <wsdl:part name="parameters" element="ns1:shutdownResponse"/>
  </wsdl:message>
  <wsdl:portType name="ServerAdminPortType">
    <wsdl:operation name="getServerData">
      <wsdl:input message="tns:getServerDataRequest" wsaw:Action="urn:getServerData"/>
      <wsdl:output message="tns:getServerDataResponse" wsaw:Action="urn:getServerDataResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:getServerDataServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="isAlive">
      <wsdl:input message="tns:isAliveRequest" wsaw:Action="urn:isAlive"/>
      <wsdl:output message="tns:isAliveResponse" wsaw:Action="urn:isAliveResponse"/>
    </wsdl:operation>
    <wsdl:operation name="restartGracefully">
      <wsdl:input message="tns:restartGracefullyRequest" wsaw:Action="urn:restartGracefully"/>
      <wsdl:output message="tns:restartGracefullyResponse" wsaw:Action="urn:restartGracefullyResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:restartGracefullyServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="endMaintenance">
      <wsdl:input message="tns:endMaintenanceRequest" wsaw:Action="urn:endMaintenance"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:endMaintenanceServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getServerStatus">
      <wsdl:input message="tns:getServerStatusRequest" wsaw:Action="urn:getServerStatus"/>
      <wsdl:output message="tns:getServerStatusResponse" wsaw:Action="urn:getServerStatusResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:getServerStatusServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="shutdownGracefully">
      <wsdl:input message="tns:shutdownGracefullyRequest" wsaw:Action="urn:shutdownGracefully"/>
      <wsdl:output message="tns:shutdownGracefullyResponse" wsaw:Action="urn:shutdownGracefullyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="restart">
      <wsdl:input message="tns:restartRequest" wsaw:Action="urn:restart"/>
      <wsdl:output message="tns:restartResponse" wsaw:Action="urn:restartResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:restartServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getServerVersion">
      <wsdl:input message="tns:getServerVersionRequest" wsaw:Action="urn:getServerVersion"/>
      <wsdl:output message="tns:getServerVersionResponse" wsaw:Action="urn:getServerVersionResponse"/>
    </wsdl:operation>
    <wsdl:operation name="startMaintenance">
      <wsdl:input message="tns:startMaintenanceRequest" wsaw:Action="urn:startMaintenance"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:startMaintenanceServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getServerDataAsString">
      <wsdl:input message="tns:getServerDataAsStringRequest" wsaw:Action="urn:getServerDataAsString"/>
      <wsdl:output message="tns:getServerDataAsStringResponse" wsaw:Action="urn:getServerDataAsStringResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:getServerDataAsStringServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="shutdown">
      <wsdl:input message="tns:shutdownRequest" wsaw:Action="urn:shutdown"/>
      <wsdl:output message="tns:shutdownResponse" wsaw:Action="urn:shutdownResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServerAdminSoap11Binding" type="tns:ServerAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServerData">
      <soap:operation soapAction="urn:getServerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAlive">
      <soap:operation soapAction="urn:isAlive" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restartGracefully">
      <soap:operation soapAction="urn:restartGracefully" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="endMaintenance">
      <soap:operation soapAction="urn:endMaintenance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerStatus">
      <soap:operation soapAction="urn:getServerStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shutdownGracefully">
      <soap:operation soapAction="urn:shutdownGracefully" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restart">
      <soap:operation soapAction="urn:restart" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerVersion">
      <soap:operation soapAction="urn:getServerVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startMaintenance">
      <soap:operation soapAction="urn:startMaintenance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerDataAsString">
      <soap:operation soapAction="urn:getServerDataAsString" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shutdown">
      <soap:operation soapAction="urn:shutdown" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServerAdminSoap12Binding" type="tns:ServerAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServerData">
      <soap12:operation soapAction="urn:getServerData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAlive">
      <soap12:operation soapAction="urn:isAlive" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restartGracefully">
      <soap12:operation soapAction="urn:restartGracefully" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="endMaintenance">
      <soap12:operation soapAction="urn:endMaintenance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerStatus">
      <soap12:operation soapAction="urn:getServerStatus" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shutdownGracefully">
      <soap12:operation soapAction="urn:shutdownGracefully" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restart">
      <soap12:operation soapAction="urn:restart" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerVersion">
      <soap12:operation soapAction="urn:getServerVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startMaintenance">
      <soap12:operation soapAction="urn:startMaintenance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerDataAsString">
      <soap12:operation soapAction="urn:getServerDataAsString" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shutdown">
      <soap12:operation soapAction="urn:shutdown" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServerAdminHttpBinding" type="tns:ServerAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getServerData">
      <http:operation location="getServerData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAlive">
      <http:operation location="isAlive"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restartGracefully">
      <http:operation location="restartGracefully"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="endMaintenance">
      <http:operation location="endMaintenance"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getServerStatus">
      <http:operation location="getServerStatus"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="shutdownGracefully">
      <http:operation location="shutdownGracefully"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restart">
      <http:operation location="restart"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServerVersion">
      <http:operation location="getServerVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startMaintenance">
      <http:operation location="startMaintenance"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getServerDataAsString">
      <http:operation location="getServerDataAsString"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="shutdown">
      <http:operation location="shutdown"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServerAdmin">
    <wsdl:port name="ServerAdminHttpsSoap11Endpoint" binding="tns:ServerAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/ServerAdmin.ServerAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServerAdminHttpsSoap12Endpoint" binding="tns:ServerAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ServerAdmin.ServerAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServerAdminHttpsEndpoint" binding="tns:ServerAdminHttpBinding">
      <http:address location="https://localhost:9443/services/ServerAdmin.ServerAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ServerAdmin.ServerAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="802081b0-7e0c-4297-831f-ff72fb935d47" isOneWay="false" action="urn:endMaintenance" name="endMaintenance" bindingOperationName="endMaintenance" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f95a044-9785-4af6-a0b4-0a4345344d9a" isOneWay="false" action="urn:getServerData" name="getServerData" bindingOperationName="getServerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="70ce6c5b-dbd8-4210-9bd8-f75c8f9ae8b2" isOneWay="false" action="urn:getServerDataAsString" name="getServerDataAsString" bindingOperationName="getServerDataAsString" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3dedff83-0a49-42c0-b4e4-a96eb1310d6c" isOneWay="false" action="urn:getServerStatus" name="getServerStatus" bindingOperationName="getServerStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8d3c1971-af96-4a02-b914-df2fc2bdca5f" isOneWay="false" action="urn:getServerVersion" name="getServerVersion" bindingOperationName="getServerVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d08dd27-8ee7-45be-ae9c-2dceb443cfc8" isOneWay="false" action="urn:isAlive" name="isAlive" bindingOperationName="isAlive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="01ab45fc-47dd-4b2c-a05f-6f6b058b72c8" isOneWay="false" action="urn:restart" name="restart" bindingOperationName="restart" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f04dfe9-e1f0-46e3-9772-03f502fbdfa3" isOneWay="false" action="urn:restartGracefully" name="restartGracefully" bindingOperationName="restartGracefully" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="312c52fc-3162-4af5-97a5-d0622762cc4f" isOneWay="false" action="urn:shutdown" name="shutdown" bindingOperationName="shutdown" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b056bb53-d67e-4b59-bba7-9a7aa9c5d7aa" isOneWay="false" action="urn:shutdownGracefully" name="shutdownGracefully" bindingOperationName="shutdownGracefully" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f6fe3e97-4ff6-4cb1-92b2-3101f681cd59" isOneWay="false" action="urn:startMaintenance" name="startMaintenance" bindingOperationName="startMaintenance" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b09b52b1-1bb1-4da7-82b6-a707daabd6d4" wsaVersion="NONE" name="ServiceGroupAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.service.carbon.wso2.org}ServiceGroupAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/ServiceGroupAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="b363e265-3da1-4b0e-b47f-624d85de7df4" isOneWay="false" action="urn:configureServiceGroupMTOM" name="configureServiceGroupMTOM" bindingOperationName="configureServiceGroupMTOM" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="57a07f01-eac7-4448-8ac1-14350233863e" isOneWay="false" action="urn:dumpAAR" name="dumpAAR" bindingOperationName="dumpAAR" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0fdb5b03-6484-4bec-a637-a922cf0afa80" isOneWay="false" action="urn:getServiceGroupParameter" name="getServiceGroupParameter" bindingOperationName="getServiceGroupParameter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3734b894-18a6-4eac-8621-1b012bd56940" isOneWay="false" action="urn:getServiceGroupParameters" name="getServiceGroupParameters" bindingOperationName="getServiceGroupParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="674cae76-3e2d-4d26-a403-258e63a9f970" isOneWay="false" action="urn:listServiceGroup" name="listServiceGroup" bindingOperationName="listServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d79524eb-f07f-4de9-a3b1-ddad12f6895a" isOneWay="false" action="urn:listServiceGroups" name="listServiceGroups" bindingOperationName="listServiceGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a2b7fee-000d-408e-9e60-dc0870b91de6" isOneWay="false" action="urn:removeServiceGroupParameter" name="removeServiceGroupParameter" bindingOperationName="removeServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e190b33c-e3af-471b-8f3f-1babfeaf6ad3" isOneWay="false" action="urn:setServiceGroupParameter" name="setServiceGroupParameter" bindingOperationName="setServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cac9b6e4-f4bf-4986-91a7-e0e30976f976" isOneWay="false" action="urn:setServiceGroupParameters" name="setServiceGroupParameters" bindingOperationName="setServiceGroupParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b1fc901-6327-4549-803b-269c9b8f4150" isOneWay="false" action="urn:updateServiceGroupParameter" name="updateServiceGroupParameter" bindingOperationName="updateServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8a7ff49d-3888-4dd0-8d4f-12138819de0a" isOneWay="false" action="urn:updateServiceGroupParamters" name="updateServiceGroupParamters" bindingOperationName="updateServiceGroupParamters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e1aea325-fa11-4c47-8952-36f1b7fd73c5" wsaVersion="NONE" name="ServiceGroupAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.service.carbon.wso2.org}ServiceGroupAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/ServiceGroupAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ServiceGroupAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ServiceGroupAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.service.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2577="http://mgt.service.carbon.wso2.org/xsd" xmlns:ax2579="http://utils.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.service.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ServiceGroupAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2580="http://utils.carbon.wso2.org/xsd" xmlns:ax2578="http://mgt.service.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://mgt.service.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://utils.carbon.wso2.org/xsd"/>
      <xs:element name="listServiceGroups">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceTypeFilter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceGroupSearchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServiceGroupsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2577:ServiceGroupMetaDataWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServiceGroupAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ServiceGroupAdminException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="configureServiceGroupMTOM">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="flag" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="configureServiceGroupMTOMResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2577:ServiceGroupMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServiceGroupAdminServerException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ServerException" nillable="true" type="ax2579:ServerException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateServiceGroupParamters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="ax2577:ParameterMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateServiceGroupParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="paramMetaData" nillable="true" type="ax2577:ParameterMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceGroupParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceGroupParametersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceGroupParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="paramName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceGroupParameterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2577:ParameterMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setServiceGroupParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupId" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="parameterElement" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setServiceGroupParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterElement" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServiceGroupParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="dumpAAR">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="dumpAARResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2577:ServiceGroupMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.carbon.wso2.org/xsd">
      <xs:complexType name="ServerException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.service.carbon.wso2.org/xsd">
      <xs:complexType name="ServiceGroupMetaDataWrapper">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfActiveServices" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfCorrectServiceGroups" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfFaultyServiceGroups" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceGroups" nillable="true" type="ax2577:ServiceGroupMetaData"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceTypes" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceGroupMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="disableDeletion" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="engagedModules" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mtomStatus" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceContextPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="services" nillable="true" type="ax2577:ServiceMetaData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="CAppArtifact" type="xs:boolean"/>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="disableDeletion" type="xs:boolean"/>
          <xs:element minOccurs="0" name="disableTryit" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="eprs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="foundWebResources" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mtomStatus" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="operations" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="securityScenarioId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceDeployedTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceUpTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tryitURL" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsdlPortTypes" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsdlPorts" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsdlURLs" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ParameterMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="editable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="locked" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getServiceGroupParameterRequest">
    <wsdl:part name="parameters" element="ns1:getServiceGroupParameter"/>
  </wsdl:message>
  <wsdl:message name="getServiceGroupParameterResponse">
    <wsdl:part name="parameters" element="ns1:getServiceGroupParameterResponse"/>
  </wsdl:message>
  <wsdl:message name="ServiceGroupAdminServerException">
    <wsdl:part name="parameters" element="ns1:ServiceGroupAdminServerException"/>
  </wsdl:message>
  <wsdl:message name="setServiceGroupParameterRequest">
    <wsdl:part name="parameters" element="ns1:setServiceGroupParameter"/>
  </wsdl:message>
  <wsdl:message name="updateServiceGroupParamtersRequest">
    <wsdl:part name="parameters" element="ns1:updateServiceGroupParamters"/>
  </wsdl:message>
  <wsdl:message name="getServiceGroupParametersRequest">
    <wsdl:part name="parameters" element="ns1:getServiceGroupParameters"/>
  </wsdl:message>
  <wsdl:message name="getServiceGroupParametersResponse">
    <wsdl:part name="parameters" element="ns1:getServiceGroupParametersResponse"/>
  </wsdl:message>
  <wsdl:message name="dumpAARRequest">
    <wsdl:part name="parameters" element="ns1:dumpAAR"/>
  </wsdl:message>
  <wsdl:message name="dumpAARResponse">
    <wsdl:part name="parameters" element="ns1:dumpAARResponse"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupsRequest">
    <wsdl:part name="parameters" element="ns1:listServiceGroups"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupsResponse">
    <wsdl:part name="parameters" element="ns1:listServiceGroupsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateServiceGroupParameterRequest">
    <wsdl:part name="parameters" element="ns1:updateServiceGroupParameter"/>
  </wsdl:message>
  <wsdl:message name="setServiceGroupParametersRequest">
    <wsdl:part name="parameters" element="ns1:setServiceGroupParameters"/>
  </wsdl:message>
  <wsdl:message name="configureServiceGroupMTOMRequest">
    <wsdl:part name="parameters" element="ns1:configureServiceGroupMTOM"/>
  </wsdl:message>
  <wsdl:message name="configureServiceGroupMTOMResponse">
    <wsdl:part name="parameters" element="ns1:configureServiceGroupMTOMResponse"/>
  </wsdl:message>
  <wsdl:message name="ServiceGroupAdminException">
    <wsdl:part name="parameters" element="ns1:ServiceGroupAdminException"/>
  </wsdl:message>
  <wsdl:message name="removeServiceGroupParameterRequest">
    <wsdl:part name="parameters" element="ns1:removeServiceGroupParameter"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupRequest">
    <wsdl:part name="parameters" element="ns1:listServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupResponse">
    <wsdl:part name="parameters" element="ns1:listServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:portType name="ServiceGroupAdminPortType">
    <wsdl:operation name="getServiceGroupParameter">
      <wsdl:input message="tns:getServiceGroupParameterRequest" wsaw:Action="urn:getServiceGroupParameter"/>
      <wsdl:output message="tns:getServiceGroupParameterResponse" wsaw:Action="urn:getServiceGroupParameterResponse"/>
      <wsdl:fault message="tns:ServiceGroupAdminServerException" name="ServiceGroupAdminServerException" wsaw:Action="urn:getServiceGroupParameterServiceGroupAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameter">
      <wsdl:input message="tns:setServiceGroupParameterRequest" wsaw:Action="urn:setServiceGroupParameter"/>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParamters">
      <wsdl:input message="tns:updateServiceGroupParamtersRequest" wsaw:Action="urn:updateServiceGroupParamters"/>
      <wsdl:fault message="tns:ServiceGroupAdminServerException" name="ServiceGroupAdminServerException" wsaw:Action="urn:updateServiceGroupParamtersServiceGroupAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceGroupParameters">
      <wsdl:input message="tns:getServiceGroupParametersRequest" wsaw:Action="urn:getServiceGroupParameters"/>
      <wsdl:output message="tns:getServiceGroupParametersResponse" wsaw:Action="urn:getServiceGroupParametersResponse"/>
      <wsdl:fault message="tns:ServiceGroupAdminServerException" name="ServiceGroupAdminServerException" wsaw:Action="urn:getServiceGroupParametersServiceGroupAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="dumpAAR">
      <wsdl:input message="tns:dumpAARRequest" wsaw:Action="urn:dumpAAR"/>
      <wsdl:output message="tns:dumpAARResponse" wsaw:Action="urn:dumpAARResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroups">
      <wsdl:input message="tns:listServiceGroupsRequest" wsaw:Action="urn:listServiceGroups"/>
      <wsdl:output message="tns:listServiceGroupsResponse" wsaw:Action="urn:listServiceGroupsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParameter">
      <wsdl:input message="tns:updateServiceGroupParameterRequest" wsaw:Action="urn:updateServiceGroupParameter"/>
      <wsdl:fault message="tns:ServiceGroupAdminServerException" name="ServiceGroupAdminServerException" wsaw:Action="urn:updateServiceGroupParameterServiceGroupAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameters">
      <wsdl:input message="tns:setServiceGroupParametersRequest" wsaw:Action="urn:setServiceGroupParameters"/>
    </wsdl:operation>
    <wsdl:operation name="configureServiceGroupMTOM">
      <wsdl:input message="tns:configureServiceGroupMTOMRequest" wsaw:Action="urn:configureServiceGroupMTOM"/>
      <wsdl:output message="tns:configureServiceGroupMTOMResponse" wsaw:Action="urn:configureServiceGroupMTOMResponse"/>
      <wsdl:fault message="tns:ServiceGroupAdminException" name="ServiceGroupAdminException" wsaw:Action="urn:configureServiceGroupMTOMServiceGroupAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="removeServiceGroupParameter">
      <wsdl:input message="tns:removeServiceGroupParameterRequest" wsaw:Action="urn:removeServiceGroupParameter"/>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <wsdl:input message="tns:listServiceGroupRequest" wsaw:Action="urn:listServiceGroup"/>
      <wsdl:output message="tns:listServiceGroupResponse" wsaw:Action="urn:listServiceGroupResponse"/>
      <wsdl:fault message="tns:ServiceGroupAdminException" name="ServiceGroupAdminException" wsaw:Action="urn:listServiceGroupServiceGroupAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceGroupAdminSoap11Binding" type="tns:ServiceGroupAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServiceGroupParameter">
      <soap:operation soapAction="urn:getServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameter">
      <soap:operation soapAction="urn:setServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParamters">
      <soap:operation soapAction="urn:updateServiceGroupParamters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceGroupParameters">
      <soap:operation soapAction="urn:getServiceGroupParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dumpAAR">
      <soap:operation soapAction="urn:dumpAAR" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroups">
      <soap:operation soapAction="urn:listServiceGroups" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParameter">
      <soap:operation soapAction="urn:updateServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameters">
      <soap:operation soapAction="urn:setServiceGroupParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="configureServiceGroupMTOM">
      <soap:operation soapAction="urn:configureServiceGroupMTOM" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminException">
        <soap:fault use="literal" name="ServiceGroupAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServiceGroupParameter">
      <soap:operation soapAction="urn:removeServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <soap:operation soapAction="urn:listServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminException">
        <soap:fault use="literal" name="ServiceGroupAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServiceGroupAdminSoap12Binding" type="tns:ServiceGroupAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServiceGroupParameter">
      <soap12:operation soapAction="urn:getServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap12:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameter">
      <soap12:operation soapAction="urn:setServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParamters">
      <soap12:operation soapAction="urn:updateServiceGroupParamters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap12:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceGroupParameters">
      <soap12:operation soapAction="urn:getServiceGroupParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap12:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dumpAAR">
      <soap12:operation soapAction="urn:dumpAAR" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroups">
      <soap12:operation soapAction="urn:listServiceGroups" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParameter">
      <soap12:operation soapAction="urn:updateServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap12:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameters">
      <soap12:operation soapAction="urn:setServiceGroupParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="configureServiceGroupMTOM">
      <soap12:operation soapAction="urn:configureServiceGroupMTOM" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminException">
        <soap12:fault use="literal" name="ServiceGroupAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServiceGroupParameter">
      <soap12:operation soapAction="urn:removeServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <soap12:operation soapAction="urn:listServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminException">
        <soap12:fault use="literal" name="ServiceGroupAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServiceGroupAdminHttpBinding" type="tns:ServiceGroupAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getServiceGroupParameter">
      <http:operation location="getServiceGroupParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameter">
      <http:operation location="setServiceGroupParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParamters">
      <http:operation location="updateServiceGroupParamters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getServiceGroupParameters">
      <http:operation location="getServiceGroupParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="dumpAAR">
      <http:operation location="dumpAAR"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroups">
      <http:operation location="listServiceGroups"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParameter">
      <http:operation location="updateServiceGroupParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameters">
      <http:operation location="setServiceGroupParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="configureServiceGroupMTOM">
      <http:operation location="configureServiceGroupMTOM"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceGroupParameter">
      <http:operation location="removeServiceGroupParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <http:operation location="listServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceGroupAdmin">
    <wsdl:port name="ServiceGroupAdminHttpsSoap11Endpoint" binding="tns:ServiceGroupAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServiceGroupAdminHttpsSoap12Endpoint" binding="tns:ServiceGroupAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServiceGroupAdminHttpsEndpoint" binding="tns:ServiceGroupAdminHttpBinding">
      <http:address location="https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="9984522a-f738-4d3d-ab28-32af0be34aa8" isOneWay="false" action="urn:configureServiceGroupMTOM" name="configureServiceGroupMTOM" bindingOperationName="configureServiceGroupMTOM" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5d151f09-876e-43e4-94e2-fa4f0a6e606d" isOneWay="false" action="urn:dumpAAR" name="dumpAAR" bindingOperationName="dumpAAR" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="434ca7ef-1e14-4bb4-ab03-da8d65b355d4" isOneWay="false" action="urn:getServiceGroupParameter" name="getServiceGroupParameter" bindingOperationName="getServiceGroupParameter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="75a873e1-8446-4f38-8c1b-1e98ae3ca26e" isOneWay="false" action="urn:getServiceGroupParameters" name="getServiceGroupParameters" bindingOperationName="getServiceGroupParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="177ebd57-bb4a-4a1b-b290-c17d2cab0d09" isOneWay="false" action="urn:listServiceGroup" name="listServiceGroup" bindingOperationName="listServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ec266e96-5877-4a21-9366-a62eb48d848a" isOneWay="false" action="urn:listServiceGroups" name="listServiceGroups" bindingOperationName="listServiceGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="95881e88-5881-4f37-8d38-ad7e1fd5ca5f" isOneWay="false" action="urn:removeServiceGroupParameter" name="removeServiceGroupParameter" bindingOperationName="removeServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f0ef4276-7be7-4ff7-9fb5-87126039fb30" isOneWay="false" action="urn:setServiceGroupParameter" name="setServiceGroupParameter" bindingOperationName="setServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b92e2df6-bf70-4a42-84e0-df6cf5490a5b" isOneWay="false" action="urn:setServiceGroupParameters" name="setServiceGroupParameters" bindingOperationName="setServiceGroupParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6f9111a1-6665-4c30-b32e-8737e0461210" isOneWay="false" action="urn:updateServiceGroupParameter" name="updateServiceGroupParameter" bindingOperationName="updateServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3d3cae6-c369-475d-b931-d7a3a4052fad" isOneWay="false" action="urn:updateServiceGroupParamters" name="updateServiceGroupParamters" bindingOperationName="updateServiceGroupParamters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2bdb5a7d-9ae2-437f-b6ae-67d39204975a" wsaVersion="NONE" name="StatisticsAdminSoap11Binding" type="wsdl" bindingName="{http://services.statistics.carbon.wso2.org}StatisticsAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/StatisticsAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="5c288538-5f1b-48c0-aff6-e27e985be3b6" isOneWay="false" action="urn:getAvgOperationResponseTime" name="getAvgOperationResponseTime" bindingOperationName="getAvgOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fcd6c31a-c92d-450f-ac2c-f0d7855c3d75" isOneWay="false" action="urn:getAvgServiceResponseTime" name="getAvgServiceResponseTime" bindingOperationName="getAvgServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="27f27596-e3fa-4eab-8889-27639897f7dd" isOneWay="false" action="urn:getAvgSystemResponseTime" name="getAvgSystemResponseTime" bindingOperationName="getAvgSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c04e7916-0f55-41a4-ac51-00907016cc78" isOneWay="false" action="urn:getMaxOperationResponseTime" name="getMaxOperationResponseTime" bindingOperationName="getMaxOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="94fede16-5061-41c7-aac2-269b7905c88e" isOneWay="false" action="urn:getMaxServiceResponseTime" name="getMaxServiceResponseTime" bindingOperationName="getMaxServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="edcf9f63-5ba9-4aff-98ef-4e0ef807520d" isOneWay="false" action="urn:getMaxSystemResponseTime" name="getMaxSystemResponseTime" bindingOperationName="getMaxSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e374157d-a710-435d-a496-fb88a4cee309" isOneWay="false" action="urn:getMinOperationResponseTime" name="getMinOperationResponseTime" bindingOperationName="getMinOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0e48faec-b12b-46d0-9a5a-64152f1cd3c7" isOneWay="false" action="urn:getMinServiceResponseTime" name="getMinServiceResponseTime" bindingOperationName="getMinServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fe415966-f348-4957-926b-486af12b9364" isOneWay="false" action="urn:getMinSystemResponseTime" name="getMinSystemResponseTime" bindingOperationName="getMinSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d3aa2e20-bceb-4147-83ed-aad3e3fdbad6" isOneWay="false" action="urn:getOperationFaultCount" name="getOperationFaultCount" bindingOperationName="getOperationFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="72637a8b-4832-482b-a4f0-6bc3627f9e5e" isOneWay="false" action="urn:getOperationRequestCount" name="getOperationRequestCount" bindingOperationName="getOperationRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d52a43d1-1edd-4c12-85f0-ce98e0a3d3b4" isOneWay="false" action="urn:getOperationResponseCount" name="getOperationResponseCount" bindingOperationName="getOperationResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="151d8cfe-d928-4a52-b320-6f1cc996fa2c" isOneWay="false" action="urn:getOperationStatistics" name="getOperationStatistics" bindingOperationName="getOperationStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d191fcb-e8c1-4e4f-a043-9261f13b4a59" isOneWay="false" action="urn:getServiceFaultCount" name="getServiceFaultCount" bindingOperationName="getServiceFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b13bcfa2-fb33-480e-9405-75722eef645e" isOneWay="false" action="urn:getServiceRequestCount" name="getServiceRequestCount" bindingOperationName="getServiceRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b13412c2-a1c7-44fe-84a4-8e4088f97fc0" isOneWay="false" action="urn:getServiceResponseCount" name="getServiceResponseCount" bindingOperationName="getServiceResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6ddd5ad0-517e-4f8f-96ce-96263c827a36" isOneWay="false" action="urn:getServiceStatistics" name="getServiceStatistics" bindingOperationName="getServiceStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d97e6b6d-22fa-408a-bf21-9a1c9ad78aef" isOneWay="false" action="urn:getSystemFaultCount" name="getSystemFaultCount" bindingOperationName="getSystemFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="667e56c4-e819-4183-97d9-7829b77a1fae" isOneWay="false" action="urn:getSystemRequestCount" name="getSystemRequestCount" bindingOperationName="getSystemRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e7f4adaa-0230-4e8a-a330-88e3ceb3f6ea" isOneWay="false" action="urn:getSystemResponseCount" name="getSystemResponseCount" bindingOperationName="getSystemResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="46b4bc7a-7625-4eec-aa45-3dded463dd06" isOneWay="false" action="urn:getSystemStatistics" name="getSystemStatistics" bindingOperationName="getSystemStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="42844953-5252-423b-9f35-ddb4cee5f87e" isOneWay="false" action="urn:getWebappRelatedData" name="getWebappRelatedData" bindingOperationName="getWebappRelatedData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f8bf3760-c032-4737-ac56-0f91f4ec452c" isOneWay="false" action="urn:setConfigurationContext" name="setConfigurationContext" bindingOperationName="setConfigurationContext" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="5b9dbf7c-8979-46e6-8061-0b72dc72a5d7" wsaVersion="NONE" name="StatisticsAdminSoap12Binding" type="wsdl" bindingName="{http://services.statistics.carbon.wso2.org}StatisticsAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/StatisticsAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/StatisticsAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/StatisticsAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.statistics.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2587="http://context.axis2.apache.org/xsd" xmlns:ax2588="http://engine.axis2.apache.org/xsd" xmlns:ax2589="http://clustering.axis2.apache.org/xsd" xmlns:ax2623="http://threadpool.util.axis2.apache.org/xsd" xmlns:ax2602="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2603="http://description.axis2.apache.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2581="http://util.services.statistics.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2583="http://services.statistics.carbon.wso2.org/xsd" xmlns:ax2585="http://data.webapp.statistics.carbon.wso2.org/xsd" xmlns:ax2617="http://util.axis2.apache.org/xsd" xmlns:ax2619="http://transaction.axis2.apache.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2615="http://securevault.wso2.org/xsd" xmlns:ax2591="http://util.java/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2593="http://management.clustering.axis2.apache.org/xsd" xmlns:ax2596="http://state.clustering.axis2.apache.org/xsd" xmlns:tns="http://services.statistics.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax2607="http://net.java/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2609="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>StatisticsAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.webapp.statistics.carbon.wso2.org/xsd">
      <xs:complexType name="StatisticData">
        <xs:sequence>
          <xs:element minOccurs="0" name="averageResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="faultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="maximumResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="minimumresponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="requstCount" type="xs:int"/>
          <xs:element minOccurs="0" name="responseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="responseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="tenantName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="webappName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://transaction.axis2.apache.org/xsd">
      <xs:complexType name="TransactionConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="transactionManager" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="transactionTimeout" type="xs:int"/>
          <xs:element minOccurs="0" name="userTransaction" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://threadpool.util.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="ThreadFactory">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="TargetResolver">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.java/xsd">
      <xs:complexType abstract="true" name="Set">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Map">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Iterator">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://management.clustering.axis2.apache.org/xsd" xmlns:ax2594="http://context.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="NodeManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2587:ConfigurationContext"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://description.axis2.apache.org/xsd" xmlns:ax2605="http://util.java/xsd" xmlns:ax2606="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2611="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:ax2608="http://net.java/xsd" xmlns:ax2604="http://engine.axis2.apache.org/xsd">
      <xs:import namespace="http://engine.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://util.deployment.axis2.apache.org/xsd"/>
      <xs:import namespace="http://net.java/xsd"/>
      <xs:import namespace="http://java2wsdl.description.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="AxisOperation">
        <xs:sequence>
          <xs:element minOccurs="0" name="WSAMappingList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="axisService" nillable="true" type="ax2603:AxisService"/>
          <xs:element minOccurs="0" name="axisSpecificMEPConstant" type="xs:int"/>
          <xs:element minOccurs="0" name="controlOperation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="faultAction" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultActionNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultMessages" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inputAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="messageExchangePattern" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="messageReceiver" nillable="true" type="ax2588:MessageReceiver"/>
          <xs:element minOccurs="0" name="messages" nillable="true" type="ax2591:Iterator"/>
          <xs:element minOccurs="0" name="moduleRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outputAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="phasesInFaultFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesOutFaultFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesOutFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="remainingPhasesInFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="soapAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="style" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsamappingList" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AxisService">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="EPRs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="WSAddressingFlag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="axisServiceGroup" nillable="true" type="ax2603:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="classLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="clientSide" type="xs:boolean"/>
          <xs:element minOccurs="0" name="controlOperations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="customSchemaNamePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="customSchemaNameSuffix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="customWsdl" type="xs:boolean"/>
          <xs:element minOccurs="0" name="elementFormDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableAllTransports" type="xs:boolean"/>
          <xs:element minOccurs="0" name="endpointName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="endpointURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="endpoints" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="excludeInfo" nillable="true" type="ax2602:ExcludeInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="exposedTransports" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="ax2607:URL"/>
          <xs:element minOccurs="0" name="importedNamespaces" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="lastUpdate" type="xs:long"/>
          <xs:element minOccurs="0" name="lastupdate" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageElementQNameToOperationMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="modifyUserWSDLPortAddress" type="xs:boolean"/>
          <xs:element minOccurs="0" name="modules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nameSpacesMap" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="namespaceMap" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="objectSupplier" nillable="true" type="ax2588:ObjectSupplier"/>
          <xs:element minOccurs="0" name="operations" nillable="true" type="ax2591:Iterator"/>
          <xs:element minOccurs="0" name="operationsNameList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="p2nMap" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="parent" nillable="true" type="ax2603:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="portTypeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="publishedOperations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="schema" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="schemaLocationsAdjusted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="schemaMappingTable" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="schemaTargetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schemaTargetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schematargetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schematargetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceLifeCycle" nillable="true" type="ax2588:ServiceLifeCycle"/>
          <xs:element minOccurs="0" name="setEndpointsToAllUsedBindings" type="xs:boolean"/>
          <xs:element minOccurs="0" name="soapNsUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="typeTable" nillable="true" type="ax2611:TypeTable"/>
          <xs:element minOccurs="0" name="useDefaultChains" type="xs:boolean"/>
          <xs:element minOccurs="0" name="useUserWSDL" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wsdlFound" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AxisServiceGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisDescription" nillable="true" type="ax2588:AxisConfiguration"/>
          <xs:element minOccurs="0" name="foundWebResources" type="xs:boolean"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="moduleRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroupClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="services" nillable="true" type="ax2591:Iterator"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://context.axis2.apache.org/xsd" xmlns:ax2621="http://engine.axis2.apache.org/xsd" xmlns:ax2624="http://threadpool.util.axis2.apache.org/xsd">
      <xs:import namespace="http://engine.axis2.apache.org/xsd"/>
      <xs:import namespace="http://threadpool.util.axis2.apache.org/xsd"/>
      <xs:complexType name="ConfigurationContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="anyOperationContextRegistered" type="xs:boolean"/>
          <xs:element minOccurs="0" name="axisConfiguration" nillable="true" type="ax2588:AxisConfiguration"/>
          <xs:element minOccurs="0" name="contextRoot" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="listenerManager" nillable="true" type="ax2588:ListenerManager"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2587:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceContextPath" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceGroupContextIDs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupContextTimeoutInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="serviceGroupContextTimoutInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="serviceGroupContexts" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="servicePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="threadPool" nillable="true" type="ax2623:ThreadFactory"/>
          <xs:element minOccurs="0" name="transportManager" nillable="true" type="ax2588:ListenerManager"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2612="http://description.axis2.apache.org/xsd">
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:complexType name="PhasesInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="INPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="IN_FaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="OUTPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="OUT_FaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalInFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalInflow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalOutPhaseList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationInFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationInPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationOutFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationOutPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationPhases" nillable="true" type="ax2612:AxisOperation"/>
          <xs:element minOccurs="0" name="outFaultPhaseList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExcludeInfo">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://net.java/xsd">
      <xs:complexType name="URL">
        <xs:sequence>
          <xs:element minOccurs="0" name="authority" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="content" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="defaultPort" type="xs:int"/>
          <xs:element minOccurs="0" name="file" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="host" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="port" type="xs:int"/>
          <xs:element minOccurs="0" name="protocol" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="query" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ref" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userInfo" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.statistics.carbon.wso2.org/xsd">
      <xs:complexType name="SystemStatisticsUtil">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://securevault.wso2.org/xsd">
      <xs:complexType name="SecretResolver">
        <xs:sequence>
          <xs:element minOccurs="0" name="initialized" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://engine.axis2.apache.org/xsd" xmlns:ax2620="http://transaction.axis2.apache.org/xsd" xmlns:ax2600="http://clustering.axis2.apache.org/xsd" xmlns:ax2622="http://context.axis2.apache.org/xsd" xmlns:ax2601="http://util.java/xsd" xmlns:ax2613="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2614="http://net.java/xsd" xmlns:ax2616="http://securevault.wso2.org/xsd" xmlns:ax2618="http://util.axis2.apache.org/xsd">
      <xs:import namespace="http://clustering.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://util.deployment.axis2.apache.org/xsd"/>
      <xs:import namespace="http://net.java/xsd"/>
      <xs:import namespace="http://securevault.wso2.org/xsd"/>
      <xs:import namespace="http://util.axis2.apache.org/xsd"/>
      <xs:import namespace="http://transaction.axis2.apache.org/xsd"/>
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:complexType name="AxisConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="childFirstClassLoading" type="xs:boolean"/>
          <xs:element minOccurs="0" name="clusteringAgent" nillable="true" type="ax2589:ClusteringAgent"/>
          <xs:element minOccurs="0" name="configurator" nillable="true" type="ax2588:AxisConfigurator"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultyModules" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultyServices" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultyServicesDuetoModules" nillable="true" type="ax2601:Map"/>
          <xs:element minOccurs="0" name="globalModules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalOutPhase" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFaultFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inPhasesUptoAndIncludingPostDispatch" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="localPolicyAssertions" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="moduleClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="modules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="observersList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFaultFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesInfo" nillable="true" type="ax2602:PhasesInfo"/>
          <xs:element minOccurs="0" name="repository" nillable="true" type="ax2614:URL"/>
          <xs:element minOccurs="0" name="secretResolver" nillable="true" type="ax2616:SecretResolver"/>
          <xs:element minOccurs="0" name="serviceClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroups" nillable="true" type="ax2601:Iterator"/>
          <xs:element minOccurs="0" name="services" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="start" type="xs:boolean"/>
          <xs:element minOccurs="0" name="systemClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="targetResolverChain" nillable="true" type="ax2617:TargetResolver"/>
          <xs:element minOccurs="0" name="transactionConfig" nillable="true" type="ax2620:TransactionConfiguration"/>
          <xs:element minOccurs="0" name="transactionConfiguration" nillable="true" type="ax2620:TransactionConfiguration"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="transportsIn" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="transportsOut" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="AxisConfigurator">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisConfiguration" nillable="true" type="ax2588:AxisConfiguration"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="ObjectSupplier">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="ServiceLifeCycle">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="MessageReceiver">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="ListenerManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configctx" nillable="true" type="ax2587:ConfigurationContext"/>
          <xs:element minOccurs="0" name="shutdownHookRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="stopped" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2597="http://context.axis2.apache.org/xsd" xmlns:ax2598="http://util.java/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType abstract="true" name="StateManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2597:ConfigurationContext"/>
          <xs:element minOccurs="0" name="replicationExcludePatterns" nillable="true" type="ax2598:Map"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.services.statistics.carbon.wso2.org/xsd" xmlns:ax2584="http://services.statistics.carbon.wso2.org/xsd">
      <xs:import namespace="http://services.statistics.carbon.wso2.org/xsd"/>
      <xs:complexType name="OperationStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="avgResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="currentInvocationFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="maxResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="minResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="totalFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResponseCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SystemStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="avgResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="currentInvocationFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="javaVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="maxResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="minResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverStartTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="services" type="xs:int"/>
          <xs:element minOccurs="0" name="statService" nillable="true" type="ax2583:SystemStatisticsUtil"/>
          <xs:element minOccurs="0" name="systemUpTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="totalFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalMemory" nillable="true" type="ax2581:Metric"/>
          <xs:element minOccurs="0" name="totalRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResponseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="usedMemory" nillable="true" type="ax2581:Metric"/>
          <xs:element minOccurs="0" name="wso2wsasVersion" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Metric">
        <xs:sequence>
          <xs:element minOccurs="0" name="unit" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="avgResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="currentInvocationFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="maxResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="minResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="totalFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResponseCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://clustering.axis2.apache.org/xsd" xmlns:ax2590="http://context.axis2.apache.org/xsd" xmlns:ax2599="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2592="http://util.java/xsd" xmlns:ax2595="http://management.clustering.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://management.clustering.axis2.apache.org/xsd"/>
      <xs:import namespace="http://state.clustering.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="ClusteringAgent">
        <xs:sequence>
          <xs:element minOccurs="0" name="aliveMemberCount" type="xs:int"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2587:ConfigurationContext"/>
          <xs:element minOccurs="0" name="coordinator" type="xs:boolean"/>
          <xs:element minOccurs="0" name="domains" nillable="true" type="ax2591:Set"/>
          <xs:element minOccurs="0" name="members" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="nodeManager" nillable="true" type="ax2593:NodeManager"/>
          <xs:element minOccurs="0" name="stateManager" nillable="true" type="ax2599:StateManager"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2586="http://data.webapp.statistics.carbon.wso2.org/xsd" xmlns:ax2582="http://util.services.statistics.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2625="http://context.axis2.apache.org/xsd">
      <xs:import namespace="http://util.services.statistics.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://data.webapp.statistics.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:element name="getOperationStatistics">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationStatisticsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2581:OperationStatistics"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemStatistics">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemStatisticsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2581:SystemStatistics"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceStatistics">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceStatisticsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2581:ServiceStatistics"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemRequestCount">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemRequestCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemFaultCount">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemFaultCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemResponseCount">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemResponseCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgSystemResponseTime">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgSystemResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:double"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxSystemResponseTime">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxSystemResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinSystemResponseTime">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinSystemResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceRequestCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceRequestCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceFaultCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceFaultCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceResponseCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceResponseCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxServiceResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxServiceResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinServiceResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinServiceResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgServiceResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgServiceResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:double"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationRequestCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationRequestCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationFaultCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationFaultCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationResponseCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationResponseCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxOperationResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxOperationResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinOperationResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinOperationResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgOperationResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgOperationResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:double"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWebappRelatedData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webAppName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWebappRelatedDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2586:StatisticData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setConfigurationContext">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2587:ConfigurationContext"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:ax2610="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType name="TypeTable">
        <xs:sequence>
          <xs:element minOccurs="0" name="complexSchemaMap" nillable="true" type="ax2610:Map"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getOperationStatisticsRequest">
    <wsdl:part name="parameters" element="ns1:getOperationStatistics"/>
  </wsdl:message>
  <wsdl:message name="getOperationStatisticsResponse">
    <wsdl:part name="parameters" element="ns1:getOperationStatisticsResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceResponseCountRequest">
    <wsdl:part name="parameters" element="ns1:getServiceResponseCount"/>
  </wsdl:message>
  <wsdl:message name="getServiceResponseCountResponse">
    <wsdl:part name="parameters" element="ns1:getServiceResponseCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationRequestCountRequest">
    <wsdl:part name="parameters" element="ns1:getOperationRequestCount"/>
  </wsdl:message>
  <wsdl:message name="getOperationRequestCountResponse">
    <wsdl:part name="parameters" element="ns1:getOperationRequestCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceFaultCountRequest">
    <wsdl:part name="parameters" element="ns1:getServiceFaultCount"/>
  </wsdl:message>
  <wsdl:message name="getServiceFaultCountResponse">
    <wsdl:part name="parameters" element="ns1:getServiceFaultCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getMaxOperationResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMaxOperationResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMaxOperationResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMaxOperationResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getAvgOperationResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getAvgOperationResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getAvgOperationResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getAvgOperationResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getMaxSystemResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMaxSystemResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMaxSystemResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMaxSystemResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationResponseCountRequest">
    <wsdl:part name="parameters" element="ns1:getOperationResponseCount"/>
  </wsdl:message>
  <wsdl:message name="getOperationResponseCountResponse">
    <wsdl:part name="parameters" element="ns1:getOperationResponseCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getAvgServiceResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getAvgServiceResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getAvgServiceResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getAvgServiceResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="setConfigurationContextRequest">
    <wsdl:part name="parameters" element="ns1:setConfigurationContext"/>
  </wsdl:message>
  <wsdl:message name="getMinOperationResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMinOperationResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMinOperationResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMinOperationResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemStatisticsRequest">
    <wsdl:part name="parameters" element="ns1:getSystemStatistics"/>
  </wsdl:message>
  <wsdl:message name="getSystemStatisticsResponse">
    <wsdl:part name="parameters" element="ns1:getSystemStatisticsResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemResponseCountRequest">
    <wsdl:part name="parameters" element="ns1:getSystemResponseCount"/>
  </wsdl:message>
  <wsdl:message name="getSystemResponseCountResponse">
    <wsdl:part name="parameters" element="ns1:getSystemResponseCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationFaultCountRequest">
    <wsdl:part name="parameters" element="ns1:getOperationFaultCount"/>
  </wsdl:message>
  <wsdl:message name="getOperationFaultCountResponse">
    <wsdl:part name="parameters" element="ns1:getOperationFaultCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getMinSystemResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMinSystemResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMinSystemResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMinSystemResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getMaxServiceResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMaxServiceResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMaxServiceResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMaxServiceResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceRequestCountRequest">
    <wsdl:part name="parameters" element="ns1:getServiceRequestCount"/>
  </wsdl:message>
  <wsdl:message name="getServiceRequestCountResponse">
    <wsdl:part name="parameters" element="ns1:getServiceRequestCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getWebappRelatedDataRequest">
    <wsdl:part name="parameters" element="ns1:getWebappRelatedData"/>
  </wsdl:message>
  <wsdl:message name="getWebappRelatedDataResponse">
    <wsdl:part name="parameters" element="ns1:getWebappRelatedDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getAvgSystemResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getAvgSystemResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getAvgSystemResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getAvgSystemResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceStatisticsRequest">
    <wsdl:part name="parameters" element="ns1:getServiceStatistics"/>
  </wsdl:message>
  <wsdl:message name="getServiceStatisticsResponse">
    <wsdl:part name="parameters" element="ns1:getServiceStatisticsResponse"/>
  </wsdl:message>
  <wsdl:message name="getMinServiceResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMinServiceResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMinServiceResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMinServiceResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemRequestCountRequest">
    <wsdl:part name="parameters" element="ns1:getSystemRequestCount"/>
  </wsdl:message>
  <wsdl:message name="getSystemRequestCountResponse">
    <wsdl:part name="parameters" element="ns1:getSystemRequestCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemFaultCountRequest">
    <wsdl:part name="parameters" element="ns1:getSystemFaultCount"/>
  </wsdl:message>
  <wsdl:message name="getSystemFaultCountResponse">
    <wsdl:part name="parameters" element="ns1:getSystemFaultCountResponse"/>
  </wsdl:message>
  <wsdl:portType name="StatisticsAdminPortType">
    <wsdl:operation name="getOperationStatistics">
      <wsdl:input message="tns:getOperationStatisticsRequest" wsaw:Action="urn:getOperationStatistics"/>
      <wsdl:output message="tns:getOperationStatisticsResponse" wsaw:Action="urn:getOperationStatisticsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceResponseCount">
      <wsdl:input message="tns:getServiceResponseCountRequest" wsaw:Action="urn:getServiceResponseCount"/>
      <wsdl:output message="tns:getServiceResponseCountResponse" wsaw:Action="urn:getServiceResponseCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationRequestCount">
      <wsdl:input message="tns:getOperationRequestCountRequest" wsaw:Action="urn:getOperationRequestCount"/>
      <wsdl:output message="tns:getOperationRequestCountResponse" wsaw:Action="urn:getOperationRequestCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceFaultCount">
      <wsdl:input message="tns:getServiceFaultCountRequest" wsaw:Action="urn:getServiceFaultCount"/>
      <wsdl:output message="tns:getServiceFaultCountResponse" wsaw:Action="urn:getServiceFaultCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMaxOperationResponseTime">
      <wsdl:input message="tns:getMaxOperationResponseTimeRequest" wsaw:Action="urn:getMaxOperationResponseTime"/>
      <wsdl:output message="tns:getMaxOperationResponseTimeResponse" wsaw:Action="urn:getMaxOperationResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAvgOperationResponseTime">
      <wsdl:input message="tns:getAvgOperationResponseTimeRequest" wsaw:Action="urn:getAvgOperationResponseTime"/>
      <wsdl:output message="tns:getAvgOperationResponseTimeResponse" wsaw:Action="urn:getAvgOperationResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMaxSystemResponseTime">
      <wsdl:input message="tns:getMaxSystemResponseTimeRequest" wsaw:Action="urn:getMaxSystemResponseTime"/>
      <wsdl:output message="tns:getMaxSystemResponseTimeResponse" wsaw:Action="urn:getMaxSystemResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationResponseCount">
      <wsdl:input message="tns:getOperationResponseCountRequest" wsaw:Action="urn:getOperationResponseCount"/>
      <wsdl:output message="tns:getOperationResponseCountResponse" wsaw:Action="urn:getOperationResponseCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAvgServiceResponseTime">
      <wsdl:input message="tns:getAvgServiceResponseTimeRequest" wsaw:Action="urn:getAvgServiceResponseTime"/>
      <wsdl:output message="tns:getAvgServiceResponseTimeResponse" wsaw:Action="urn:getAvgServiceResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setConfigurationContext">
      <wsdl:input message="tns:setConfigurationContextRequest" wsaw:Action="urn:setConfigurationContext"/>
    </wsdl:operation>
    <wsdl:operation name="getMinOperationResponseTime">
      <wsdl:input message="tns:getMinOperationResponseTimeRequest" wsaw:Action="urn:getMinOperationResponseTime"/>
      <wsdl:output message="tns:getMinOperationResponseTimeResponse" wsaw:Action="urn:getMinOperationResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemStatistics">
      <wsdl:input message="tns:getSystemStatisticsRequest" wsaw:Action="urn:getSystemStatistics"/>
      <wsdl:output message="tns:getSystemStatisticsResponse" wsaw:Action="urn:getSystemStatisticsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemResponseCount">
      <wsdl:input message="tns:getSystemResponseCountRequest" wsaw:Action="urn:getSystemResponseCount"/>
      <wsdl:output message="tns:getSystemResponseCountResponse" wsaw:Action="urn:getSystemResponseCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationFaultCount">
      <wsdl:input message="tns:getOperationFaultCountRequest" wsaw:Action="urn:getOperationFaultCount"/>
      <wsdl:output message="tns:getOperationFaultCountResponse" wsaw:Action="urn:getOperationFaultCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMinSystemResponseTime">
      <wsdl:input message="tns:getMinSystemResponseTimeRequest" wsaw:Action="urn:getMinSystemResponseTime"/>
      <wsdl:output message="tns:getMinSystemResponseTimeResponse" wsaw:Action="urn:getMinSystemResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMaxServiceResponseTime">
      <wsdl:input message="tns:getMaxServiceResponseTimeRequest" wsaw:Action="urn:getMaxServiceResponseTime"/>
      <wsdl:output message="tns:getMaxServiceResponseTimeResponse" wsaw:Action="urn:getMaxServiceResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceRequestCount">
      <wsdl:input message="tns:getServiceRequestCountRequest" wsaw:Action="urn:getServiceRequestCount"/>
      <wsdl:output message="tns:getServiceRequestCountResponse" wsaw:Action="urn:getServiceRequestCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getWebappRelatedData">
      <wsdl:input message="tns:getWebappRelatedDataRequest" wsaw:Action="urn:getWebappRelatedData"/>
      <wsdl:output message="tns:getWebappRelatedDataResponse" wsaw:Action="urn:getWebappRelatedDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAvgSystemResponseTime">
      <wsdl:input message="tns:getAvgSystemResponseTimeRequest" wsaw:Action="urn:getAvgSystemResponseTime"/>
      <wsdl:output message="tns:getAvgSystemResponseTimeResponse" wsaw:Action="urn:getAvgSystemResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceStatistics">
      <wsdl:input message="tns:getServiceStatisticsRequest" wsaw:Action="urn:getServiceStatistics"/>
      <wsdl:output message="tns:getServiceStatisticsResponse" wsaw:Action="urn:getServiceStatisticsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMinServiceResponseTime">
      <wsdl:input message="tns:getMinServiceResponseTimeRequest" wsaw:Action="urn:getMinServiceResponseTime"/>
      <wsdl:output message="tns:getMinServiceResponseTimeResponse" wsaw:Action="urn:getMinServiceResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemRequestCount">
      <wsdl:input message="tns:getSystemRequestCountRequest" wsaw:Action="urn:getSystemRequestCount"/>
      <wsdl:output message="tns:getSystemRequestCountResponse" wsaw:Action="urn:getSystemRequestCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemFaultCount">
      <wsdl:input message="tns:getSystemFaultCountRequest" wsaw:Action="urn:getSystemFaultCount"/>
      <wsdl:output message="tns:getSystemFaultCountResponse" wsaw:Action="urn:getSystemFaultCountResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="StatisticsAdminSoap11Binding" type="tns:StatisticsAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getOperationStatistics">
      <soap:operation soapAction="urn:getOperationStatistics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceResponseCount">
      <soap:operation soapAction="urn:getServiceResponseCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationRequestCount">
      <soap:operation soapAction="urn:getOperationRequestCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceFaultCount">
      <soap:operation soapAction="urn:getServiceFaultCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxOperationResponseTime">
      <soap:operation soapAction="urn:getMaxOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgOperationResponseTime">
      <soap:operation soapAction="urn:getAvgOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxSystemResponseTime">
      <soap:operation soapAction="urn:getMaxSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationResponseCount">
      <soap:operation soapAction="urn:getOperationResponseCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgServiceResponseTime">
      <soap:operation soapAction="urn:getAvgServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setConfigurationContext">
      <soap:operation soapAction="urn:setConfigurationContext" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getMinOperationResponseTime">
      <soap:operation soapAction="urn:getMinOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemStatistics">
      <soap:operation soapAction="urn:getSystemStatistics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemResponseCount">
      <soap:operation soapAction="urn:getSystemResponseCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationFaultCount">
      <soap:operation soapAction="urn:getOperationFaultCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinSystemResponseTime">
      <soap:operation soapAction="urn:getMinSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxServiceResponseTime">
      <soap:operation soapAction="urn:getMaxServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceRequestCount">
      <soap:operation soapAction="urn:getServiceRequestCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWebappRelatedData">
      <soap:operation soapAction="urn:getWebappRelatedData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgSystemResponseTime">
      <soap:operation soapAction="urn:getAvgSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceStatistics">
      <soap:operation soapAction="urn:getServiceStatistics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinServiceResponseTime">
      <soap:operation soapAction="urn:getMinServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemRequestCount">
      <soap:operation soapAction="urn:getSystemRequestCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemFaultCount">
      <soap:operation soapAction="urn:getSystemFaultCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="StatisticsAdminSoap12Binding" type="tns:StatisticsAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getOperationStatistics">
      <soap12:operation soapAction="urn:getOperationStatistics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceResponseCount">
      <soap12:operation soapAction="urn:getServiceResponseCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationRequestCount">
      <soap12:operation soapAction="urn:getOperationRequestCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceFaultCount">
      <soap12:operation soapAction="urn:getServiceFaultCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxOperationResponseTime">
      <soap12:operation soapAction="urn:getMaxOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgOperationResponseTime">
      <soap12:operation soapAction="urn:getAvgOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxSystemResponseTime">
      <soap12:operation soapAction="urn:getMaxSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationResponseCount">
      <soap12:operation soapAction="urn:getOperationResponseCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgServiceResponseTime">
      <soap12:operation soapAction="urn:getAvgServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setConfigurationContext">
      <soap12:operation soapAction="urn:setConfigurationContext" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getMinOperationResponseTime">
      <soap12:operation soapAction="urn:getMinOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemStatistics">
      <soap12:operation soapAction="urn:getSystemStatistics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemResponseCount">
      <soap12:operation soapAction="urn:getSystemResponseCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationFaultCount">
      <soap12:operation soapAction="urn:getOperationFaultCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinSystemResponseTime">
      <soap12:operation soapAction="urn:getMinSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxServiceResponseTime">
      <soap12:operation soapAction="urn:getMaxServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceRequestCount">
      <soap12:operation soapAction="urn:getServiceRequestCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWebappRelatedData">
      <soap12:operation soapAction="urn:getWebappRelatedData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgSystemResponseTime">
      <soap12:operation soapAction="urn:getAvgSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceStatistics">
      <soap12:operation soapAction="urn:getServiceStatistics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinServiceResponseTime">
      <soap12:operation soapAction="urn:getMinServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemRequestCount">
      <soap12:operation soapAction="urn:getSystemRequestCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemFaultCount">
      <soap12:operation soapAction="urn:getSystemFaultCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="StatisticsAdminHttpBinding" type="tns:StatisticsAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getOperationStatistics">
      <http:operation location="getOperationStatistics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceResponseCount">
      <http:operation location="getServiceResponseCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationRequestCount">
      <http:operation location="getOperationRequestCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceFaultCount">
      <http:operation location="getServiceFaultCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxOperationResponseTime">
      <http:operation location="getMaxOperationResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgOperationResponseTime">
      <http:operation location="getAvgOperationResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxSystemResponseTime">
      <http:operation location="getMaxSystemResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationResponseCount">
      <http:operation location="getOperationResponseCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgServiceResponseTime">
      <http:operation location="getAvgServiceResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setConfigurationContext">
      <http:operation location="setConfigurationContext"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getMinOperationResponseTime">
      <http:operation location="getMinOperationResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemStatistics">
      <http:operation location="getSystemStatistics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemResponseCount">
      <http:operation location="getSystemResponseCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationFaultCount">
      <http:operation location="getOperationFaultCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinSystemResponseTime">
      <http:operation location="getMinSystemResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxServiceResponseTime">
      <http:operation location="getMaxServiceResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceRequestCount">
      <http:operation location="getServiceRequestCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWebappRelatedData">
      <http:operation location="getWebappRelatedData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgSystemResponseTime">
      <http:operation location="getAvgSystemResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceStatistics">
      <http:operation location="getServiceStatistics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinServiceResponseTime">
      <http:operation location="getMinServiceResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemRequestCount">
      <http:operation location="getSystemRequestCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemFaultCount">
      <http:operation location="getSystemFaultCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="StatisticsAdmin">
    <wsdl:port name="StatisticsAdminHttpsSoap11Endpoint" binding="tns:StatisticsAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="StatisticsAdminHttpsSoap12Endpoint" binding="tns:StatisticsAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="StatisticsAdminHttpsEndpoint" binding="tns:StatisticsAdminHttpBinding">
      <http:address location="https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="3775501b-3775-49fb-98f3-932c98953c6c" isOneWay="false" action="urn:getAvgOperationResponseTime" name="getAvgOperationResponseTime" bindingOperationName="getAvgOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8f9e0ebe-f8ba-471e-b043-9f4906291551" isOneWay="false" action="urn:getAvgServiceResponseTime" name="getAvgServiceResponseTime" bindingOperationName="getAvgServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e5a16986-72ad-4f45-a416-735a7d067265" isOneWay="false" action="urn:getAvgSystemResponseTime" name="getAvgSystemResponseTime" bindingOperationName="getAvgSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="829ac566-e346-47ab-a533-0ccb355447a0" isOneWay="false" action="urn:getMaxOperationResponseTime" name="getMaxOperationResponseTime" bindingOperationName="getMaxOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="855b1c22-871f-462d-aa32-f72327375371" isOneWay="false" action="urn:getMaxServiceResponseTime" name="getMaxServiceResponseTime" bindingOperationName="getMaxServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="84ef9e2e-a901-419c-a8bf-4a5103a15772" isOneWay="false" action="urn:getMaxSystemResponseTime" name="getMaxSystemResponseTime" bindingOperationName="getMaxSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0ad6f785-dec3-4776-a34f-fdeaff457dd9" isOneWay="false" action="urn:getMinOperationResponseTime" name="getMinOperationResponseTime" bindingOperationName="getMinOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b34e75c5-aacc-4ca7-a2d7-b57fc984fee4" isOneWay="false" action="urn:getMinServiceResponseTime" name="getMinServiceResponseTime" bindingOperationName="getMinServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9db4ad5-17b5-4e13-80d2-108b96cc9fa7" isOneWay="false" action="urn:getMinSystemResponseTime" name="getMinSystemResponseTime" bindingOperationName="getMinSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="890540a9-8b97-4066-a281-a0f7e7a0d89d" isOneWay="false" action="urn:getOperationFaultCount" name="getOperationFaultCount" bindingOperationName="getOperationFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5f345c4c-fa31-4888-b162-fa403317b2dd" isOneWay="false" action="urn:getOperationRequestCount" name="getOperationRequestCount" bindingOperationName="getOperationRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8fab18ab-db10-4e36-8317-694de800465a" isOneWay="false" action="urn:getOperationResponseCount" name="getOperationResponseCount" bindingOperationName="getOperationResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b6f40a2d-4971-468d-b484-3ca30358bd84" isOneWay="false" action="urn:getOperationStatistics" name="getOperationStatistics" bindingOperationName="getOperationStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8ed271cd-7fb2-4418-80f8-72aa164d48b5" isOneWay="false" action="urn:getServiceFaultCount" name="getServiceFaultCount" bindingOperationName="getServiceFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f01378d-1666-4fd1-a26a-fc8cb7203ed0" isOneWay="false" action="urn:getServiceRequestCount" name="getServiceRequestCount" bindingOperationName="getServiceRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff5c477a-87ab-4ee7-a7ab-04693ec279d3" isOneWay="false" action="urn:getServiceResponseCount" name="getServiceResponseCount" bindingOperationName="getServiceResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="49956911-f219-414b-9187-5ea7ef131483" isOneWay="false" action="urn:getServiceStatistics" name="getServiceStatistics" bindingOperationName="getServiceStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="269ba440-bb45-47d3-bbbb-a6491ca9898f" isOneWay="false" action="urn:getSystemFaultCount" name="getSystemFaultCount" bindingOperationName="getSystemFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1680ca4d-11b7-495a-b1dd-ae9e9b3f3ab2" isOneWay="false" action="urn:getSystemRequestCount" name="getSystemRequestCount" bindingOperationName="getSystemRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cdcacadb-2c5d-4380-9232-3184467b1821" isOneWay="false" action="urn:getSystemResponseCount" name="getSystemResponseCount" bindingOperationName="getSystemResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="46793806-622d-408b-b563-90e37527edbb" isOneWay="false" action="urn:getSystemStatistics" name="getSystemStatistics" bindingOperationName="getSystemStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="94bc7b27-6fb0-412d-b65c-df1314fc385d" isOneWay="false" action="urn:getWebappRelatedData" name="getWebappRelatedData" bindingOperationName="getWebappRelatedData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ddf03b15-3038-409c-8ca7-b954a7186768" isOneWay="false" action="urn:setConfigurationContext" name="setConfigurationContext" bindingOperationName="setConfigurationContext" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="bccda865-f51b-4ba9-96e5-69cd6a38847e" wsaVersion="NONE" name="STSAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.sts.security.carbon.wso2.org}STSAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/STSAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="e86880f4-8817-4792-8532-e13fd3556f83" isOneWay="false" action="urn:addTrustedService" name="addTrustedService" bindingOperationName="addTrustedService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5c2fcaeb-46e9-470b-b3e1-a8f666a27a14" isOneWay="false" action="urn:getCertAliasOfPrimaryKeyStore" name="getCertAliasOfPrimaryKeyStore" bindingOperationName="getCertAliasOfPrimaryKeyStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="808f2827-25eb-4c40-b42c-c63090f7a4a1" isOneWay="false" action="urn:getProofKeyType" name="getProofKeyType" bindingOperationName="getProofKeyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9bf16afd-a812-4210-9019-75107bd07eff" isOneWay="false" action="urn:getTrustedServices" name="getTrustedServices" bindingOperationName="getTrustedServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e49ddb85-78fc-4f51-8016-4d310cf4fdf7" isOneWay="false" action="urn:removeTrustedService" name="removeTrustedService" bindingOperationName="removeTrustedService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8c3cd2dc-24cc-4c12-be98-e5ca14577b28" isOneWay="false" action="urn:setProofKeyType" name="setProofKeyType" bindingOperationName="setProofKeyType" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="15eadc28-8304-41ee-bf74-c82b26aedc10" wsaVersion="NONE" name="STSAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.sts.security.carbon.wso2.org}STSAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/STSAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/STSAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/STSAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.sts.security.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2565="http://util.service.sts.security.carbon.wso2.org/xsd" xmlns:ns="http://service.sts.security.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2561="http://security.carbon.wso2.org/xsd" xmlns:ax2562="http://base.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>STSAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.service.sts.security.carbon.wso2.org/xsd">
      <xs:complexType name="TrustedServiceData">
        <xs:sequence>
          <xs:element minOccurs="0" name="certAlias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceAddress" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://security.carbon.wso2.org/xsd" xmlns:ax2563="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="SecurityConfigException">
        <xs:complexContent>
          <xs:extension base="ax2562:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.sts.security.carbon.wso2.org" xmlns:ax2564="http://security.carbon.wso2.org/xsd" xmlns:ax2566="http://util.service.sts.security.carbon.wso2.org/xsd">
      <xs:import namespace="http://security.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://util.service.sts.security.carbon.wso2.org/xsd"/>
      <xs:element name="STSAdminServiceSecurityConfigException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SecurityConfigException" nillable="true" type="ax2564:SecurityConfigException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCertAliasOfPrimaryKeyStore">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCertAliasOfPrimaryKeyStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTrustedService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceAddress" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="certAlias" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeTrustedService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceAddress" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTrustedServices">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTrustedServicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2565:TrustedServiceData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProofKeyType">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProofKeyTypeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setProofKeyType">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="removeTrustedServiceRequest">
    <wsdl:part name="parameters" element="ns:removeTrustedService"/>
  </wsdl:message>
  <wsdl:message name="STSAdminServiceSecurityConfigException">
    <wsdl:part name="parameters" element="ns:STSAdminServiceSecurityConfigException"/>
  </wsdl:message>
  <wsdl:message name="setProofKeyTypeRequest">
    <wsdl:part name="parameters" element="ns:setProofKeyType"/>
  </wsdl:message>
  <wsdl:message name="getProofKeyTypeRequest">
    <wsdl:part name="parameters" element="ns:getProofKeyType"/>
  </wsdl:message>
  <wsdl:message name="getProofKeyTypeResponse">
    <wsdl:part name="parameters" element="ns:getProofKeyTypeResponse"/>
  </wsdl:message>
  <wsdl:message name="getTrustedServicesRequest">
    <wsdl:part name="parameters" element="ns:getTrustedServices"/>
  </wsdl:message>
  <wsdl:message name="getTrustedServicesResponse">
    <wsdl:part name="parameters" element="ns:getTrustedServicesResponse"/>
  </wsdl:message>
  <wsdl:message name="getCertAliasOfPrimaryKeyStoreRequest">
    <wsdl:part name="parameters" element="ns:getCertAliasOfPrimaryKeyStore"/>
  </wsdl:message>
  <wsdl:message name="getCertAliasOfPrimaryKeyStoreResponse">
    <wsdl:part name="parameters" element="ns:getCertAliasOfPrimaryKeyStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="addTrustedServiceRequest">
    <wsdl:part name="parameters" element="ns:addTrustedService"/>
  </wsdl:message>
  <wsdl:portType name="STSAdminServicePortType">
    <wsdl:operation name="removeTrustedService">
      <wsdl:input message="ns:removeTrustedServiceRequest" wsaw:Action="urn:removeTrustedService"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:removeTrustedServiceSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="setProofKeyType">
      <wsdl:input message="ns:setProofKeyTypeRequest" wsaw:Action="urn:setProofKeyType"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:setProofKeyTypeSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getProofKeyType">
      <wsdl:input message="ns:getProofKeyTypeRequest" wsaw:Action="urn:getProofKeyType"/>
      <wsdl:output message="ns:getProofKeyTypeResponse" wsaw:Action="urn:getProofKeyTypeResponse"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:getProofKeyTypeSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getTrustedServices">
      <wsdl:input message="ns:getTrustedServicesRequest" wsaw:Action="urn:getTrustedServices"/>
      <wsdl:output message="ns:getTrustedServicesResponse" wsaw:Action="urn:getTrustedServicesResponse"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:getTrustedServicesSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <wsdl:input message="ns:getCertAliasOfPrimaryKeyStoreRequest" wsaw:Action="urn:getCertAliasOfPrimaryKeyStore"/>
      <wsdl:output message="ns:getCertAliasOfPrimaryKeyStoreResponse" wsaw:Action="urn:getCertAliasOfPrimaryKeyStoreResponse"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:getCertAliasOfPrimaryKeyStoreSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="addTrustedService">
      <wsdl:input message="ns:addTrustedServiceRequest" wsaw:Action="urn:addTrustedService"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:addTrustedServiceSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="STSAdminServiceSoap11Binding" type="ns:STSAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeTrustedService">
      <soap:operation soapAction="urn:removeTrustedService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setProofKeyType">
      <soap:operation soapAction="urn:setProofKeyType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProofKeyType">
      <soap:operation soapAction="urn:getProofKeyType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTrustedServices">
      <soap:operation soapAction="urn:getTrustedServices" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <soap:operation soapAction="urn:getCertAliasOfPrimaryKeyStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTrustedService">
      <soap:operation soapAction="urn:addTrustedService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="STSAdminServiceSoap12Binding" type="ns:STSAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeTrustedService">
      <soap12:operation soapAction="urn:removeTrustedService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setProofKeyType">
      <soap12:operation soapAction="urn:setProofKeyType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProofKeyType">
      <soap12:operation soapAction="urn:getProofKeyType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTrustedServices">
      <soap12:operation soapAction="urn:getTrustedServices" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <soap12:operation soapAction="urn:getCertAliasOfPrimaryKeyStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTrustedService">
      <soap12:operation soapAction="urn:addTrustedService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="STSAdminServiceHttpBinding" type="ns:STSAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="removeTrustedService">
      <http:operation location="removeTrustedService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setProofKeyType">
      <http:operation location="setProofKeyType"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getProofKeyType">
      <http:operation location="getProofKeyType"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTrustedServices">
      <http:operation location="getTrustedServices"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <http:operation location="getCertAliasOfPrimaryKeyStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTrustedService">
      <http:operation location="addTrustedService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="STSAdminService">
    <wsdl:port name="STSAdminServiceHttpsSoap11Endpoint" binding="ns:STSAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="STSAdminServiceHttpsSoap12Endpoint" binding="ns:STSAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="STSAdminServiceHttpsEndpoint" binding="ns:STSAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="bc9c888d-0777-450c-ab9a-25f80dc19534" isOneWay="false" action="urn:addTrustedService" name="addTrustedService" bindingOperationName="addTrustedService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="827577b5-01c4-4da7-81a0-aa75e07f5719" isOneWay="false" action="urn:getCertAliasOfPrimaryKeyStore" name="getCertAliasOfPrimaryKeyStore" bindingOperationName="getCertAliasOfPrimaryKeyStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fac8eca2-d2f8-46d1-82f8-ba140433cff2" isOneWay="false" action="urn:getProofKeyType" name="getProofKeyType" bindingOperationName="getProofKeyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="824d127b-08d7-4eab-ac2d-5bbd2fd11c7a" isOneWay="false" action="urn:getTrustedServices" name="getTrustedServices" bindingOperationName="getTrustedServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="627e7f39-b254-4c2f-af8f-93d56ea9066a" isOneWay="false" action="urn:removeTrustedService" name="removeTrustedService" bindingOperationName="removeTrustedService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="378401dc-7695-4b4f-8813-dce7a70890ce" isOneWay="false" action="urn:setProofKeyType" name="setProofKeyType" bindingOperationName="setProofKeyType" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="fa045481-c0cf-40f7-a559-18183d9fc52e" wsaVersion="NONE" name="TenantMgtAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.tenant.carbon.wso2.org}TenantMgtAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/TenantMgtAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="b53592ae-2096-4e46-a705-4596bc506306" isOneWay="false" action="urn:activateTenant" name="activateTenant" bindingOperationName="activateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="03302ab2-65de-49e3-ad75-9170b1cdd3ef" isOneWay="false" action="urn:addSkeletonTenant" name="addSkeletonTenant" bindingOperationName="addSkeletonTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8dbc53b8-6593-4b6f-aaf4-5db23dc1fb39" isOneWay="false" action="urn:addTenant" name="addTenant" bindingOperationName="addTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7edb3d37-0fa0-4de1-ad84-c72f984421f4" isOneWay="false" action="urn:deactivateTenant" name="deactivateTenant" bindingOperationName="deactivateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1477af4f-f503-4b36-b246-0046bc86e493" isOneWay="false" action="urn:deleteTenant" name="deleteTenant" bindingOperationName="deleteTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5595ba1e-abd6-44fd-a740-1faccb8298e3" isOneWay="false" action="urn:getTenant" name="getTenant" bindingOperationName="getTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="062c994e-eab0-48fc-897c-d5b4e173c106" isOneWay="false" action="urn:retrievePaginatedPartialSearchTenants" name="retrievePaginatedPartialSearchTenants" bindingOperationName="retrievePaginatedPartialSearchTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="11ccead0-8ff0-462d-88b2-8862f1208071" isOneWay="false" action="urn:retrievePaginatedTenants" name="retrievePaginatedTenants" bindingOperationName="retrievePaginatedTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9b895b2d-cd23-4739-8f97-3559f316a63e" isOneWay="false" action="urn:retrievePartialSearchTenants" name="retrievePartialSearchTenants" bindingOperationName="retrievePartialSearchTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b0ccef36-85e3-488f-a431-cc7e17989534" isOneWay="false" action="urn:retrieveTenants" name="retrieveTenants" bindingOperationName="retrieveTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="92d90508-9553-4f75-bd01-3162876c5af5" isOneWay="false" action="urn:updateTenant" name="updateTenant" bindingOperationName="updateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ba29961f-5b48-41eb-b5cc-ac0b0d6f8f12" wsaVersion="NONE" name="TenantMgtAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.tenant.carbon.wso2.org}TenantMgtAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/TenantMgtAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/TenantMgtAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/TenantMgtAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.tenant.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2632="http://beans.common.stratos.carbon.wso2.org/xsd" xmlns:ax2634="http://beans.mgt.tenant.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.tenant.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2637="http://exception.common.stratos.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2639="http://api.user.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>TenantMgtAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.tenant.carbon.wso2.org" xmlns:ax2638="http://exception.common.stratos.carbon.wso2.org/xsd" xmlns:ax2633="http://beans.common.stratos.carbon.wso2.org/xsd" xmlns:ax2636="http://beans.mgt.tenant.carbon.wso2.org/xsd" xmlns:ax2640="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://beans.common.stratos.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.mgt.tenant.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://exception.common.stratos.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:element name="TenantMgtAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="TenantMgtAdminServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="addSkeletonTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantInfoBean" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addSkeletonTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePartialSearchTenants">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePartialSearchTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePaginatedPartialSearchTenants">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePaginatedPartialSearchTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2634:PaginatedTenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrieveTenants">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrieveTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePaginatedTenants">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePaginatedTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2634:PaginatedTenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantInfoBean" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantInfoBean" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="TenantMgtAdminServiceStratosException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="StratosException" nillable="true" type="ax2637:StratosException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="TenantMgtAdminServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2639:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deactivateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="activateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.common.stratos.carbon.wso2.org/xsd">
      <xs:complexType name="TenantInfoBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="admin" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdDate" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="email" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="firstname" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastname" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="originatedService" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="successKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="usagePlan" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.mgt.tenant.carbon.wso2.org/xsd" xmlns:ax2635="http://beans.common.stratos.carbon.wso2.org/xsd">
      <xs:import namespace="http://beans.common.stratos.carbon.wso2.org/xsd"/>
      <xs:complexType name="PaginatedTenantInfoBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tenantInfoBeans" nillable="true" type="ax2632:TenantInfoBean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.common.stratos.carbon.wso2.org/xsd">
      <xs:complexType name="StratosException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="deactivateTenantRequest">
    <wsdl:part name="parameters" element="ns:deactivateTenant"/>
  </wsdl:message>
  <wsdl:message name="deactivateTenantResponse"/>
  <wsdl:message name="TenantMgtAdminServiceException">
    <wsdl:part name="parameters" element="ns:TenantMgtAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="retrievePaginatedPartialSearchTenantsRequest">
    <wsdl:part name="parameters" element="ns:retrievePaginatedPartialSearchTenants"/>
  </wsdl:message>
  <wsdl:message name="retrievePaginatedPartialSearchTenantsResponse">
    <wsdl:part name="parameters" element="ns:retrievePaginatedPartialSearchTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="addTenantRequest">
    <wsdl:part name="parameters" element="ns:addTenant"/>
  </wsdl:message>
  <wsdl:message name="addTenantResponse">
    <wsdl:part name="parameters" element="ns:addTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="retrieveTenantsRequest">
    <wsdl:part name="parameters" element="ns:retrieveTenants"/>
  </wsdl:message>
  <wsdl:message name="retrieveTenantsResponse">
    <wsdl:part name="parameters" element="ns:retrieveTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateTenantRequest">
    <wsdl:part name="parameters" element="ns:updateTenant"/>
  </wsdl:message>
  <wsdl:message name="updateTenantResponse"/>
  <wsdl:message name="deleteTenantRequest">
    <wsdl:part name="parameters" element="ns:deleteTenant"/>
  </wsdl:message>
  <wsdl:message name="deleteTenantResponse"/>
  <wsdl:message name="TenantMgtAdminServiceStratosException">
    <wsdl:part name="parameters" element="ns:TenantMgtAdminServiceStratosException"/>
  </wsdl:message>
  <wsdl:message name="TenantMgtAdminServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:TenantMgtAdminServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="addSkeletonTenantRequest">
    <wsdl:part name="parameters" element="ns:addSkeletonTenant"/>
  </wsdl:message>
  <wsdl:message name="addSkeletonTenantResponse">
    <wsdl:part name="parameters" element="ns:addSkeletonTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="retrievePaginatedTenantsRequest">
    <wsdl:part name="parameters" element="ns:retrievePaginatedTenants"/>
  </wsdl:message>
  <wsdl:message name="retrievePaginatedTenantsResponse">
    <wsdl:part name="parameters" element="ns:retrievePaginatedTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="retrievePartialSearchTenantsRequest">
    <wsdl:part name="parameters" element="ns:retrievePartialSearchTenants"/>
  </wsdl:message>
  <wsdl:message name="retrievePartialSearchTenantsResponse">
    <wsdl:part name="parameters" element="ns:retrievePartialSearchTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantRequest">
    <wsdl:part name="parameters" element="ns:getTenant"/>
  </wsdl:message>
  <wsdl:message name="getTenantResponse">
    <wsdl:part name="parameters" element="ns:getTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="activateTenantRequest">
    <wsdl:part name="parameters" element="ns:activateTenant"/>
  </wsdl:message>
  <wsdl:message name="activateTenantResponse"/>
  <wsdl:portType name="TenantMgtAdminServicePortType">
    <wsdl:operation name="deactivateTenant">
      <wsdl:input message="ns:deactivateTenantRequest" wsaw:Action="urn:deactivateTenant"/>
      <wsdl:output message="ns:deactivateTenantResponse" wsaw:Action="urn:deactivateTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:deactivateTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedPartialSearchTenants">
      <wsdl:input message="ns:retrievePaginatedPartialSearchTenantsRequest" wsaw:Action="urn:retrievePaginatedPartialSearchTenants"/>
      <wsdl:output message="ns:retrievePaginatedPartialSearchTenantsResponse" wsaw:Action="urn:retrievePaginatedPartialSearchTenantsResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:retrievePaginatedPartialSearchTenantsTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <wsdl:input message="ns:addTenantRequest" wsaw:Action="urn:addTenant"/>
      <wsdl:output message="ns:addTenantResponse" wsaw:Action="urn:addTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:addTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="retrieveTenants">
      <wsdl:input message="ns:retrieveTenantsRequest" wsaw:Action="urn:retrieveTenants"/>
      <wsdl:output message="ns:retrieveTenantsResponse" wsaw:Action="urn:retrieveTenantsResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:retrieveTenantsTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <wsdl:input message="ns:updateTenantRequest" wsaw:Action="urn:updateTenant"/>
      <wsdl:output message="ns:updateTenantResponse" wsaw:Action="urn:updateTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:updateTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <wsdl:input message="ns:deleteTenantRequest" wsaw:Action="urn:deleteTenant"/>
      <wsdl:output message="ns:deleteTenantResponse" wsaw:Action="urn:deleteTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceStratosException" name="TenantMgtAdminServiceStratosException" wsaw:Action="urn:deleteTenantTenantMgtAdminServiceStratosException"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceUserStoreException" name="TenantMgtAdminServiceUserStoreException" wsaw:Action="urn:deleteTenantTenantMgtAdminServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addSkeletonTenant">
      <wsdl:input message="ns:addSkeletonTenantRequest" wsaw:Action="urn:addSkeletonTenant"/>
      <wsdl:output message="ns:addSkeletonTenantResponse" wsaw:Action="urn:addSkeletonTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:addSkeletonTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedTenants">
      <wsdl:input message="ns:retrievePaginatedTenantsRequest" wsaw:Action="urn:retrievePaginatedTenants"/>
      <wsdl:output message="ns:retrievePaginatedTenantsResponse" wsaw:Action="urn:retrievePaginatedTenantsResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:retrievePaginatedTenantsTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="retrievePartialSearchTenants">
      <wsdl:input message="ns:retrievePartialSearchTenantsRequest" wsaw:Action="urn:retrievePartialSearchTenants"/>
      <wsdl:output message="ns:retrievePartialSearchTenantsResponse" wsaw:Action="urn:retrievePartialSearchTenantsResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:retrievePartialSearchTenantsTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <wsdl:input message="ns:getTenantRequest" wsaw:Action="urn:getTenant"/>
      <wsdl:output message="ns:getTenantResponse" wsaw:Action="urn:getTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:getTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <wsdl:input message="ns:activateTenantRequest" wsaw:Action="urn:activateTenant"/>
      <wsdl:output message="ns:activateTenantResponse" wsaw:Action="urn:activateTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:activateTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TenantMgtAdminServiceSoap11Binding" type="ns:TenantMgtAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="deactivateTenant">
      <soap:operation soapAction="urn:deactivateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedPartialSearchTenants">
      <soap:operation soapAction="urn:retrievePaginatedPartialSearchTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <soap:operation soapAction="urn:addTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveTenants">
      <soap:operation soapAction="urn:retrieveTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <soap:operation soapAction="urn:updateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <soap:operation soapAction="urn:deleteTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceUserStoreException">
        <soap:fault use="literal" name="TenantMgtAdminServiceUserStoreException"/>
      </wsdl:fault>
      <wsdl:fault name="TenantMgtAdminServiceStratosException">
        <soap:fault use="literal" name="TenantMgtAdminServiceStratosException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSkeletonTenant">
      <soap:operation soapAction="urn:addSkeletonTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedTenants">
      <soap:operation soapAction="urn:retrievePaginatedTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePartialSearchTenants">
      <soap:operation soapAction="urn:retrievePartialSearchTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <soap:operation soapAction="urn:getTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <soap:operation soapAction="urn:activateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TenantMgtAdminServiceSoap12Binding" type="ns:TenantMgtAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="deactivateTenant">
      <soap12:operation soapAction="urn:deactivateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedPartialSearchTenants">
      <soap12:operation soapAction="urn:retrievePaginatedPartialSearchTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <soap12:operation soapAction="urn:addTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveTenants">
      <soap12:operation soapAction="urn:retrieveTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <soap12:operation soapAction="urn:updateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <soap12:operation soapAction="urn:deleteTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceUserStoreException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceUserStoreException"/>
      </wsdl:fault>
      <wsdl:fault name="TenantMgtAdminServiceStratosException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceStratosException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSkeletonTenant">
      <soap12:operation soapAction="urn:addSkeletonTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedTenants">
      <soap12:operation soapAction="urn:retrievePaginatedTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePartialSearchTenants">
      <soap12:operation soapAction="urn:retrievePartialSearchTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <soap12:operation soapAction="urn:getTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <soap12:operation soapAction="urn:activateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TenantMgtAdminServiceHttpBinding" type="ns:TenantMgtAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="deactivateTenant">
      <http:operation location="deactivateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedPartialSearchTenants">
      <http:operation location="retrievePaginatedPartialSearchTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <http:operation location="addTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="retrieveTenants">
      <http:operation location="retrieveTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <http:operation location="updateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <http:operation location="deleteTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addSkeletonTenant">
      <http:operation location="addSkeletonTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedTenants">
      <http:operation location="retrievePaginatedTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="retrievePartialSearchTenants">
      <http:operation location="retrievePartialSearchTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <http:operation location="getTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <http:operation location="activateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TenantMgtAdminService">
    <wsdl:port name="TenantMgtAdminServiceHttpsSoap11Endpoint" binding="ns:TenantMgtAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TenantMgtAdminServiceHttpsSoap12Endpoint" binding="ns:TenantMgtAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TenantMgtAdminServiceHttpsEndpoint" binding="ns:TenantMgtAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="c5c63469-0f71-4ad1-8b58-1df6df44214e" isOneWay="false" action="urn:activateTenant" name="activateTenant" bindingOperationName="activateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="49ed8917-f681-4057-a981-2ac627046a8b" isOneWay="false" action="urn:addSkeletonTenant" name="addSkeletonTenant" bindingOperationName="addSkeletonTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="63b5d705-42ae-42cc-9c74-e686ac2511a7" isOneWay="false" action="urn:addTenant" name="addTenant" bindingOperationName="addTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="375eea87-207d-4c7b-8afd-84d5792df18d" isOneWay="false" action="urn:deactivateTenant" name="deactivateTenant" bindingOperationName="deactivateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d77d3ee7-c4e3-4907-843a-a206092f029a" isOneWay="false" action="urn:deleteTenant" name="deleteTenant" bindingOperationName="deleteTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="24947169-c51f-45d8-9f93-e954548122b8" isOneWay="false" action="urn:getTenant" name="getTenant" bindingOperationName="getTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4b887802-7737-4095-a2d3-57e1a27d66c4" isOneWay="false" action="urn:retrievePaginatedPartialSearchTenants" name="retrievePaginatedPartialSearchTenants" bindingOperationName="retrievePaginatedPartialSearchTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="db4612aa-0f7d-4061-b9d5-a504eee172bf" isOneWay="false" action="urn:retrievePaginatedTenants" name="retrievePaginatedTenants" bindingOperationName="retrievePaginatedTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9896ff2-2dd6-4f5b-857d-0e9a45013b2b" isOneWay="false" action="urn:retrievePartialSearchTenants" name="retrievePartialSearchTenants" bindingOperationName="retrievePartialSearchTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="04538bb4-5a9e-4972-baee-4a4342d5e989" isOneWay="false" action="urn:retrieveTenants" name="retrieveTenants" bindingOperationName="retrieveTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="132d7784-60d2-4f95-ba3d-a1964dcc7db1" isOneWay="false" action="urn:updateTenant" name="updateTenant" bindingOperationName="updateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c8441760-3b19-4b51-94c9-8e534dd7deb2" wsaVersion="NONE" name="ThemeMgtServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.theme.carbon.wso2.org}ThemeMgtServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/ThemeMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="2ed2c66f-7f3e-414b-87e2-82732becdb54" isOneWay="false" action="urn:addCollection" name="addCollection" bindingOperationName="addCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a5e9690e-ffa8-4f66-a2f6-4fef6f6b14fb" isOneWay="false" action="urn:addResource" name="addResource" bindingOperationName="addResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cf9764f1-967f-42d7-a92a-639b524b0a9f" isOneWay="false" action="urn:addTextResource" name="addTextResource" bindingOperationName="addTextResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f979b91-0504-44a4-8d94-8182051aa56f" isOneWay="false" action="urn:applyTheme" name="applyTheme" bindingOperationName="applyTheme" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="344d1a7e-4a32-463c-ae67-7dc0bdcdd729" isOneWay="false" action="urn:delete" name="delete" bindingOperationName="delete" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b676aee4-c33a-4459-8d55-011480ab0a16" isOneWay="false" action="urn:getAllPaths" name="getAllPaths" bindingOperationName="getAllPaths" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="922e3c8d-52ae-487c-9f37-0ff15b685d1f" isOneWay="false" action="urn:getAllThemes" name="getAllThemes" bindingOperationName="getAllThemes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d9b30da-dd31-4423-b383-b02f9412ed49" isOneWay="false" action="urn:getCollectionContent" name="getCollectionContent" bindingOperationName="getCollectionContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3937460e-f541-4e72-b115-8ae4ce02f4a3" isOneWay="false" action="urn:getContentBean" name="getContentBean" bindingOperationName="getContentBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f185fb9-4b19-48f2-9ece-96064b9e138a" isOneWay="false" action="urn:getContentDownloadBean" name="getContentDownloadBean" bindingOperationName="getContentDownloadBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d3783a35-aa2f-4158-a047-920f9b81f6ea" isOneWay="false" action="urn:getMetadata" name="getMetadata" bindingOperationName="getMetadata" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="07c17c2f-5fa2-44d9-a31b-6b6551c88c53" isOneWay="false" action="urn:getResourceData" name="getResourceData" bindingOperationName="getResourceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="be85f36a-6516-46ea-93c3-58e3d0beaad6" isOneWay="false" action="urn:getResourceTreeEntry" name="getResourceTreeEntry" bindingOperationName="getResourceTreeEntry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="388c765c-f84b-4fe9-8117-91474ef6d716" isOneWay="false" action="urn:getSessionResourcePath" name="getSessionResourcePath" bindingOperationName="getSessionResourcePath" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e8c779ce-90e6-4e69-b721-1a0f964001dd" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f119b3e7-fb15-4d43-9db2-8b0d8eef34ea" isOneWay="false" action="urn:importResource" name="importResource" bindingOperationName="importResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0c051fa0-e249-4a33-8a3c-73113c0c1c5b" isOneWay="false" action="urn:renameResource" name="renameResource" bindingOperationName="renameResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="15422c73-fcc2-40bc-b51c-07c3bf42aa98" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="cb7020e8-8f31-423d-af8f-4180d8879cab" wsaVersion="NONE" name="ThemeMgtServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.theme.carbon.wso2.org}ThemeMgtServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/ThemeMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ThemeMgtService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ThemeMgtService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.theme.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2645="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.theme.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2647="http://common.registry.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ThemeMgtService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2649="http://common.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="ContentBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contentPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CollectionContentBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="childCount" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="childPaths" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="collectionTypes" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="remoteInstances" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceTreeEntryBean">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="children" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="symlink" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContentDownloadBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="lastUpdatedTime" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="mediatype" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MetadataBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="activeResourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="author" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contentPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteLocked" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="formattedLastModified" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastUpdater" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="navigatablePaths" nillable="true" type="ax2649:WebResourcePath"/>
          <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="permalink" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="resourceVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverBaseURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
          <xs:element minOccurs="0" name="writeLocked" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.registry.carbon.wso2.org/xsd">
      <xs:complexType name="ResourceData">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="averageRating" type="xs:float"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="averageStars" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdOn" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="deleteAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="externalLink" type="xs:boolean"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="getAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="link" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mounted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="relativePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tagCounts" nillable="true" type="ax2647:TagCount"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TagCount">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WebResourcePath">
        <xs:sequence>
          <xs:element minOccurs="0" name="navigateName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="navigatePath" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.theme.carbon.wso2.org" xmlns:ax2646="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2648="http://common.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://beans.resource.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:element name="ThemeMgtServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ThemeMgtServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getContentBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:ContentBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceData">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="paths" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2647:ResourceData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:CollectionContentBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="contentText" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="renameResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldResourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newResourceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSessionResourcePath">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSessionResourcePathResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceTreeEntry">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceTreeEntryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:ResourceTreeEntryBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentDownloadBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentDownloadBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:ContentDownloadBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPaths">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPathsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllThemes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllThemesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="applyTheme">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="themeName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fetchURL" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="symlinkLocation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCollection">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="collectionName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCollectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:MetadataBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
            <xs:element minOccurs="0" name="symlinkLocation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="delete">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pathToDelete" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getSessionResourcePathRequest">
    <wsdl:part name="parameters" element="ns:getSessionResourcePath"/>
  </wsdl:message>
  <wsdl:message name="getSessionResourcePathResponse">
    <wsdl:part name="parameters" element="ns:getSessionResourcePathResponse"/>
  </wsdl:message>
  <wsdl:message name="ThemeMgtServiceException">
    <wsdl:part name="parameters" element="ns:ThemeMgtServiceException"/>
  </wsdl:message>
  <wsdl:message name="getResourceTreeEntryRequest">
    <wsdl:part name="parameters" element="ns:getResourceTreeEntry"/>
  </wsdl:message>
  <wsdl:message name="getResourceTreeEntryResponse">
    <wsdl:part name="parameters" element="ns:getResourceTreeEntryResponse"/>
  </wsdl:message>
  <wsdl:message name="getMetadataRequest">
    <wsdl:part name="parameters" element="ns:getMetadata"/>
  </wsdl:message>
  <wsdl:message name="getMetadataResponse">
    <wsdl:part name="parameters" element="ns:getMetadataResponse"/>
  </wsdl:message>
  <wsdl:message name="applyThemeRequest">
    <wsdl:part name="parameters" element="ns:applyTheme"/>
  </wsdl:message>
  <wsdl:message name="applyThemeResponse"/>
  <wsdl:message name="getTextContentRequest">
    <wsdl:part name="parameters" element="ns:getTextContent"/>
  </wsdl:message>
  <wsdl:message name="getTextContentResponse">
    <wsdl:part name="parameters" element="ns:getTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="getResourceDataRequest">
    <wsdl:part name="parameters" element="ns:getResourceData"/>
  </wsdl:message>
  <wsdl:message name="getResourceDataResponse">
    <wsdl:part name="parameters" element="ns:getResourceDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getCollectionContentRequest">
    <wsdl:part name="parameters" element="ns:getCollectionContent"/>
  </wsdl:message>
  <wsdl:message name="getCollectionContentResponse">
    <wsdl:part name="parameters" element="ns:getCollectionContentResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteRequest">
    <wsdl:part name="parameters" element="ns:delete"/>
  </wsdl:message>
  <wsdl:message name="deleteResponse"/>
  <wsdl:message name="getAllPathsRequest">
    <wsdl:part name="parameters" element="ns:getAllPaths"/>
  </wsdl:message>
  <wsdl:message name="getAllPathsResponse">
    <wsdl:part name="parameters" element="ns:getAllPathsResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllThemesRequest">
    <wsdl:part name="parameters" element="ns:getAllThemes"/>
  </wsdl:message>
  <wsdl:message name="getAllThemesResponse">
    <wsdl:part name="parameters" element="ns:getAllThemesResponse"/>
  </wsdl:message>
  <wsdl:message name="getContentBeanRequest">
    <wsdl:part name="parameters" element="ns:getContentBean"/>
  </wsdl:message>
  <wsdl:message name="getContentBeanResponse">
    <wsdl:part name="parameters" element="ns:getContentBeanResponse"/>
  </wsdl:message>
  <wsdl:message name="renameResourceRequest">
    <wsdl:part name="parameters" element="ns:renameResource"/>
  </wsdl:message>
  <wsdl:message name="renameResourceResponse"/>
  <wsdl:message name="addTextResourceRequest">
    <wsdl:part name="parameters" element="ns:addTextResource"/>
  </wsdl:message>
  <wsdl:message name="addTextResourceResponse"/>
  <wsdl:message name="importResourceRequest">
    <wsdl:part name="parameters" element="ns:importResource"/>
  </wsdl:message>
  <wsdl:message name="importResourceResponse"/>
  <wsdl:message name="addResourceRequest">
    <wsdl:part name="parameters" element="ns:addResource"/>
  </wsdl:message>
  <wsdl:message name="addResourceResponse"/>
  <wsdl:message name="addCollectionRequest">
    <wsdl:part name="parameters" element="ns:addCollection"/>
  </wsdl:message>
  <wsdl:message name="addCollectionResponse">
    <wsdl:part name="parameters" element="ns:addCollectionResponse"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentRequest">
    <wsdl:part name="parameters" element="ns:updateTextContent"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentResponse"/>
  <wsdl:message name="getContentDownloadBeanRequest">
    <wsdl:part name="parameters" element="ns:getContentDownloadBean"/>
  </wsdl:message>
  <wsdl:message name="getContentDownloadBeanResponse">
    <wsdl:part name="parameters" element="ns:getContentDownloadBeanResponse"/>
  </wsdl:message>
  <wsdl:portType name="ThemeMgtServicePortType">
    <wsdl:operation name="getSessionResourcePath">
      <wsdl:input message="ns:getSessionResourcePathRequest" wsaw:Action="urn:getSessionResourcePath"/>
      <wsdl:output message="ns:getSessionResourcePathResponse" wsaw:Action="urn:getSessionResourcePathResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getSessionResourcePathThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <wsdl:input message="ns:getResourceTreeEntryRequest" wsaw:Action="urn:getResourceTreeEntry"/>
      <wsdl:output message="ns:getResourceTreeEntryResponse" wsaw:Action="urn:getResourceTreeEntryResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getResourceTreeEntryThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <wsdl:input message="ns:getMetadataRequest" wsaw:Action="urn:getMetadata"/>
      <wsdl:output message="ns:getMetadataResponse" wsaw:Action="urn:getMetadataResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getMetadataThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="applyTheme">
      <wsdl:input message="ns:applyThemeRequest" wsaw:Action="urn:applyTheme"/>
      <wsdl:output message="ns:applyThemeResponse" wsaw:Action="urn:applyThemeResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:applyThemeThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <wsdl:input message="ns:getTextContentRequest" wsaw:Action="urn:getTextContent"/>
      <wsdl:output message="ns:getTextContentResponse" wsaw:Action="urn:getTextContentResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getTextContentThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <wsdl:input message="ns:getResourceDataRequest" wsaw:Action="urn:getResourceData"/>
      <wsdl:output message="ns:getResourceDataResponse" wsaw:Action="urn:getResourceDataResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getResourceDataThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <wsdl:input message="ns:getCollectionContentRequest" wsaw:Action="urn:getCollectionContent"/>
      <wsdl:output message="ns:getCollectionContentResponse" wsaw:Action="urn:getCollectionContentResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getCollectionContentThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="ns:deleteRequest" wsaw:Action="urn:delete"/>
      <wsdl:output message="ns:deleteResponse" wsaw:Action="urn:deleteResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:deleteThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPaths">
      <wsdl:input message="ns:getAllPathsRequest" wsaw:Action="urn:getAllPaths"/>
      <wsdl:output message="ns:getAllPathsResponse" wsaw:Action="urn:getAllPathsResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getAllPathsThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllThemes">
      <wsdl:input message="ns:getAllThemesRequest" wsaw:Action="urn:getAllThemes"/>
      <wsdl:output message="ns:getAllThemesResponse" wsaw:Action="urn:getAllThemesResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getAllThemesThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <wsdl:input message="ns:getContentBeanRequest" wsaw:Action="urn:getContentBean"/>
      <wsdl:output message="ns:getContentBeanResponse" wsaw:Action="urn:getContentBeanResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getContentBeanThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <wsdl:input message="ns:renameResourceRequest" wsaw:Action="urn:renameResource"/>
      <wsdl:output message="ns:renameResourceResponse" wsaw:Action="urn:renameResourceResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:renameResourceThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <wsdl:input message="ns:addTextResourceRequest" wsaw:Action="urn:addTextResource"/>
      <wsdl:output message="ns:addTextResourceResponse" wsaw:Action="urn:addTextResourceResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:addTextResourceThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <wsdl:input message="ns:importResourceRequest" wsaw:Action="urn:importResource"/>
      <wsdl:output message="ns:importResourceResponse" wsaw:Action="urn:importResourceResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:importResourceThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <wsdl:input message="ns:addResourceRequest" wsaw:Action="urn:addResource"/>
      <wsdl:output message="ns:addResourceResponse" wsaw:Action="urn:addResourceResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:addResourceThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <wsdl:input message="ns:addCollectionRequest" wsaw:Action="urn:addCollection"/>
      <wsdl:output message="ns:addCollectionResponse" wsaw:Action="urn:addCollectionResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:addCollectionThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <wsdl:input message="ns:updateTextContentRequest" wsaw:Action="urn:updateTextContent"/>
      <wsdl:output message="ns:updateTextContentResponse" wsaw:Action="urn:updateTextContentResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:updateTextContentThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <wsdl:input message="ns:getContentDownloadBeanRequest" wsaw:Action="urn:getContentDownloadBean"/>
      <wsdl:output message="ns:getContentDownloadBeanResponse" wsaw:Action="urn:getContentDownloadBeanResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getContentDownloadBeanThemeMgtServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ThemeMgtServiceSoap11Binding" type="ns:ThemeMgtServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSessionResourcePath">
      <soap:operation soapAction="urn:getSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <soap:operation soapAction="urn:getResourceTreeEntry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <soap:operation soapAction="urn:getMetadata" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyTheme">
      <soap:operation soapAction="urn:applyTheme" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <soap:operation soapAction="urn:getResourceData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <soap:operation soapAction="urn:getCollectionContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="urn:delete" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPaths">
      <soap:operation soapAction="urn:getAllPaths" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllThemes">
      <soap:operation soapAction="urn:getAllThemes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <soap:operation soapAction="urn:getContentBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <soap:operation soapAction="urn:renameResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <soap:operation soapAction="urn:addTextResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <soap:operation soapAction="urn:importResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <soap:operation soapAction="urn:addResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <soap:operation soapAction="urn:addCollection" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <soap:operation soapAction="urn:getContentDownloadBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ThemeMgtServiceSoap12Binding" type="ns:ThemeMgtServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSessionResourcePath">
      <soap12:operation soapAction="urn:getSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <soap12:operation soapAction="urn:getResourceTreeEntry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <soap12:operation soapAction="urn:getMetadata" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyTheme">
      <soap12:operation soapAction="urn:applyTheme" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap12:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <soap12:operation soapAction="urn:getResourceData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <soap12:operation soapAction="urn:getCollectionContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap12:operation soapAction="urn:delete" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPaths">
      <soap12:operation soapAction="urn:getAllPaths" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllThemes">
      <soap12:operation soapAction="urn:getAllThemes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <soap12:operation soapAction="urn:getContentBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <soap12:operation soapAction="urn:renameResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <soap12:operation soapAction="urn:addTextResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <soap12:operation soapAction="urn:importResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <soap12:operation soapAction="urn:addResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <soap12:operation soapAction="urn:addCollection" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap12:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <soap12:operation soapAction="urn:getContentDownloadBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ThemeMgtServiceHttpBinding" type="ns:ThemeMgtServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getSessionResourcePath">
      <http:operation location="getSessionResourcePath"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <http:operation location="getResourceTreeEntry"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <http:operation location="getMetadata"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="applyTheme">
      <http:operation location="applyTheme"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <http:operation location="getTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <http:operation location="getResourceData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <http:operation location="getCollectionContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <http:operation location="delete"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPaths">
      <http:operation location="getAllPaths"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllThemes">
      <http:operation location="getAllThemes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <http:operation location="getContentBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <http:operation location="renameResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <http:operation location="addTextResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <http:operation location="importResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <http:operation location="addResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <http:operation location="addCollection"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <http:operation location="updateTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <http:operation location="getContentDownloadBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ThemeMgtService">
    <wsdl:port name="ThemeMgtServiceHttpsSoap11Endpoint" binding="ns:ThemeMgtServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ThemeMgtServiceHttpsSoap12Endpoint" binding="ns:ThemeMgtServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ThemeMgtServiceHttpsEndpoint" binding="ns:ThemeMgtServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c6a6cc76-0a67-4da8-b35e-bf8a70e203ae" isOneWay="false" action="urn:addCollection" name="addCollection" bindingOperationName="addCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="61adbb95-22ff-4466-9617-51aa0ec2df53" isOneWay="false" action="urn:addResource" name="addResource" bindingOperationName="addResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7402a5cf-5e6e-4406-93f7-dc37709eb31d" isOneWay="false" action="urn:addTextResource" name="addTextResource" bindingOperationName="addTextResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="05f48e1c-f80c-4072-b99c-c96ccc8be138" isOneWay="false" action="urn:applyTheme" name="applyTheme" bindingOperationName="applyTheme" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="be046238-d591-464e-8da0-10bd0909bf1b" isOneWay="false" action="urn:delete" name="delete" bindingOperationName="delete" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0afffd40-4adc-48b3-b45c-531726fe02f4" isOneWay="false" action="urn:getAllPaths" name="getAllPaths" bindingOperationName="getAllPaths" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16f6fee3-3a2e-4788-b0c8-968c0fdb24df" isOneWay="false" action="urn:getAllThemes" name="getAllThemes" bindingOperationName="getAllThemes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7ce12c0b-7a00-4835-9658-9461717c4644" isOneWay="false" action="urn:getCollectionContent" name="getCollectionContent" bindingOperationName="getCollectionContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="796d0b30-9b3b-4334-9f2f-39a866a62810" isOneWay="false" action="urn:getContentBean" name="getContentBean" bindingOperationName="getContentBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4e231795-b4f9-4bca-ac44-413911169241" isOneWay="false" action="urn:getContentDownloadBean" name="getContentDownloadBean" bindingOperationName="getContentDownloadBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="23b219eb-a2ad-43e1-b434-d105519dba72" isOneWay="false" action="urn:getMetadata" name="getMetadata" bindingOperationName="getMetadata" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b7c3efd9-72e8-4091-a80a-8edffeef0527" isOneWay="false" action="urn:getResourceData" name="getResourceData" bindingOperationName="getResourceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5043f2be-5923-4def-8392-a94f0cb31615" isOneWay="false" action="urn:getResourceTreeEntry" name="getResourceTreeEntry" bindingOperationName="getResourceTreeEntry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="68391cf9-4a63-4558-add1-a5ea8642c20f" isOneWay="false" action="urn:getSessionResourcePath" name="getSessionResourcePath" bindingOperationName="getSessionResourcePath" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5ed8aad6-0368-4a08-b25d-91cf843ff0ce" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cb9d17d7-7e9a-4945-a0a8-526d16bf302c" isOneWay="false" action="urn:importResource" name="importResource" bindingOperationName="importResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f849618c-0fa9-4f99-9000-2015ce4f6cbb" isOneWay="false" action="urn:renameResource" name="renameResource" bindingOperationName="renameResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2ffeec57-9563-495a-a402-5a11a8da2bdf" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="715fe696-0ca4-428c-9628-f7367585a74c" wsaVersion="NONE" name="TopicManagerAdminServiceSoap12Binding" type="wsdl" bindingName="{http://internal.admin.event.carbon.wso2.org}TopicManagerAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/TopicManagerAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="46b40f57-cb59-49bc-9864-1da9d470b06e" isOneWay="false" action="urn:addTopic" name="addTopic" bindingOperationName="addTopic" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9fcaf551-86dd-4ffc-9749-2f52f4bed148" isOneWay="false" action="urn:getAllTopics" name="getAllTopics" bindingOperationName="getAllTopics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="75c166c0-f668-4760-9dba-d1ea2ef96965" isOneWay="false" action="urn:getAllWSSubscriptionCountForTopic" name="getAllWSSubscriptionCountForTopic" bindingOperationName="getAllWSSubscriptionCountForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ba39ca25-c5e4-4ab2-86ac-a9c4b0f93ddd" isOneWay="false" action="urn:getAllWSSubscriptionsForTopic" name="getAllWSSubscriptionsForTopic" bindingOperationName="getAllWSSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="592eaca8-d519-4800-b058-6137cd30f4b6" isOneWay="false" action="urn:getJMSSubscriptionsForTopic" name="getJMSSubscriptionsForTopic" bindingOperationName="getJMSSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="50bb2214-fda1-4be7-8a6b-52dbc3f6f5d5" isOneWay="false" action="urn:getTopicRolePermissions" name="getTopicRolePermissions" bindingOperationName="getTopicRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="19dc4264-7a18-4ffc-9a73-8a938e974f54" isOneWay="false" action="urn:getUserRoles" name="getUserRoles" bindingOperationName="getUserRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="34662b02-815a-4d70-8b4c-8c87cb2d392e" isOneWay="false" action="urn:getWsSubscriptionsForTopic" name="getWsSubscriptionsForTopic" bindingOperationName="getWsSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d2cb5da0-f655-4331-a4ae-5af5b7a42033" isOneWay="false" action="urn:removeTopic" name="removeTopic" bindingOperationName="removeTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f95a46d0-e2e3-448a-85ac-2b90bf98e5d5" isOneWay="false" action="urn:updatePermission" name="updatePermission" bindingOperationName="updatePermission" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3fd63984-dbe6-48d7-9a6c-d08c73276c6a" wsaVersion="NONE" name="TopicManagerAdminServiceSoap11Binding" type="wsdl" bindingName="{http://internal.admin.event.carbon.wso2.org}TopicManagerAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/TopicManagerAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/TopicManagerAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/TopicManagerAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://internal.admin.event.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2114="http://internal.admin.event.carbon.wso2.org/xsd" xmlns:ax2115="http://subscription.core.event.carbon.wso2.org/xsd" xmlns:ns="http://internal.admin.event.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2110="http://exception.internal.admin.event.carbon.wso2.org/xsd" xmlns:ax2112="http://topic.core.event.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>TopicManagerAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.internal.admin.event.carbon.wso2.org/xsd">
      <xs:complexType name="EventAdminException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://subscription.core.event.carbon.wso2.org/xsd">
      <xs:complexType abstract="true" name="EventDispatcher">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="EventFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="dialect" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://topic.core.event.carbon.wso2.org/xsd">
      <xs:complexType name="TopicRolePermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowedToPublish" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowedToSubscribe" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TopicNode">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="children" nillable="true" type="ax2112:TopicNode"/>
          <xs:element minOccurs="0" name="nodeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="topicName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://internal.admin.event.carbon.wso2.org" xmlns:ax2113="http://topic.core.event.carbon.wso2.org/xsd" xmlns:ax2117="http://internal.admin.event.carbon.wso2.org/xsd" xmlns:ax2111="http://exception.internal.admin.event.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.internal.admin.event.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://topic.core.event.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://internal.admin.event.carbon.wso2.org/xsd"/>
      <xs:element name="TopicManagerAdminServiceEventAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EventAdminException" nillable="true" type="ax2110:EventAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTopicRolePermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTopicRolePermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2113:TopicRolePermission"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="topicRolePermissions" nillable="true" type="ax2113:TopicRolePermission"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllWSSubscriptionsForTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="startingIndex" type="xs:int"/>
            <xs:element minOccurs="0" name="maxSubscriptionCount" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllWSSubscriptionsForTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2114:Subscription"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWsSubscriptionsForTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWsSubscriptionsForTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2114:Subscription"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllWSSubscriptionCountForTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllWSSubscriptionCountForTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getJMSSubscriptionsForTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getJMSSubscriptionsForTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2114:Subscription"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserRoles">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserRolesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllTopics">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllTopicsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2113:TopicNode"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://internal.admin.event.carbon.wso2.org/xsd" xmlns:ax2116="http://subscription.core.event.carbon.wso2.org/xsd">
      <xs:import namespace="http://subscription.core.event.carbon.wso2.org/xsd"/>
      <xs:complexType name="Subscription">
        <xs:sequence>
          <xs:element minOccurs="0" name="createdTime" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="eventDispatcher" nillable="true" type="ax2115:EventDispatcher"/>
          <xs:element minOccurs="0" name="eventDispatcherName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventFilter" nillable="true" type="ax2115:EventFilter"/>
          <xs:element minOccurs="0" name="eventSinkURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="expires" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="owner" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="topicName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getTopicRolePermissionsRequest">
    <wsdl:part name="parameters" element="ns:getTopicRolePermissions"/>
  </wsdl:message>
  <wsdl:message name="getTopicRolePermissionsResponse">
    <wsdl:part name="parameters" element="ns:getTopicRolePermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="TopicManagerAdminServiceEventAdminException">
    <wsdl:part name="parameters" element="ns:TopicManagerAdminServiceEventAdminException"/>
  </wsdl:message>
  <wsdl:message name="getAllWSSubscriptionCountForTopicRequest">
    <wsdl:part name="parameters" element="ns:getAllWSSubscriptionCountForTopic"/>
  </wsdl:message>
  <wsdl:message name="getAllWSSubscriptionCountForTopicResponse">
    <wsdl:part name="parameters" element="ns:getAllWSSubscriptionCountForTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllWSSubscriptionsForTopicRequest">
    <wsdl:part name="parameters" element="ns:getAllWSSubscriptionsForTopic"/>
  </wsdl:message>
  <wsdl:message name="getAllWSSubscriptionsForTopicResponse">
    <wsdl:part name="parameters" element="ns:getAllWSSubscriptionsForTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="addTopicRequest">
    <wsdl:part name="parameters" element="ns:addTopic"/>
  </wsdl:message>
  <wsdl:message name="getWsSubscriptionsForTopicRequest">
    <wsdl:part name="parameters" element="ns:getWsSubscriptionsForTopic"/>
  </wsdl:message>
  <wsdl:message name="getWsSubscriptionsForTopicResponse">
    <wsdl:part name="parameters" element="ns:getWsSubscriptionsForTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="removeTopicRequest">
    <wsdl:part name="parameters" element="ns:removeTopic"/>
  </wsdl:message>
  <wsdl:message name="removeTopicResponse">
    <wsdl:part name="parameters" element="ns:removeTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="updatePermissionRequest">
    <wsdl:part name="parameters" element="ns:updatePermission"/>
  </wsdl:message>
  <wsdl:message name="getJMSSubscriptionsForTopicRequest">
    <wsdl:part name="parameters" element="ns:getJMSSubscriptionsForTopic"/>
  </wsdl:message>
  <wsdl:message name="getJMSSubscriptionsForTopicResponse">
    <wsdl:part name="parameters" element="ns:getJMSSubscriptionsForTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserRolesRequest">
    <wsdl:part name="parameters" element="ns:getUserRoles"/>
  </wsdl:message>
  <wsdl:message name="getUserRolesResponse">
    <wsdl:part name="parameters" element="ns:getUserRolesResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllTopicsRequest">
    <wsdl:part name="parameters" element="ns:getAllTopics"/>
  </wsdl:message>
  <wsdl:message name="getAllTopicsResponse">
    <wsdl:part name="parameters" element="ns:getAllTopicsResponse"/>
  </wsdl:message>
  <wsdl:portType name="TopicManagerAdminServicePortType">
    <wsdl:operation name="getTopicRolePermissions">
      <wsdl:input message="ns:getTopicRolePermissionsRequest" wsaw:Action="urn:getTopicRolePermissions"/>
      <wsdl:output message="ns:getTopicRolePermissionsResponse" wsaw:Action="urn:getTopicRolePermissionsResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getTopicRolePermissionsTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionCountForTopic">
      <wsdl:input message="ns:getAllWSSubscriptionCountForTopicRequest" wsaw:Action="urn:getAllWSSubscriptionCountForTopic"/>
      <wsdl:output message="ns:getAllWSSubscriptionCountForTopicResponse" wsaw:Action="urn:getAllWSSubscriptionCountForTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getAllWSSubscriptionCountForTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionsForTopic">
      <wsdl:input message="ns:getAllWSSubscriptionsForTopicRequest" wsaw:Action="urn:getAllWSSubscriptionsForTopic"/>
      <wsdl:output message="ns:getAllWSSubscriptionsForTopicResponse" wsaw:Action="urn:getAllWSSubscriptionsForTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getAllWSSubscriptionsForTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addTopic">
      <wsdl:input message="ns:addTopicRequest" wsaw:Action="urn:addTopic"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:addTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getWsSubscriptionsForTopic">
      <wsdl:input message="ns:getWsSubscriptionsForTopicRequest" wsaw:Action="urn:getWsSubscriptionsForTopic"/>
      <wsdl:output message="ns:getWsSubscriptionsForTopicResponse" wsaw:Action="urn:getWsSubscriptionsForTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getWsSubscriptionsForTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="removeTopic">
      <wsdl:input message="ns:removeTopicRequest" wsaw:Action="urn:removeTopic"/>
      <wsdl:output message="ns:removeTopicResponse" wsaw:Action="urn:removeTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:removeTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updatePermission">
      <wsdl:input message="ns:updatePermissionRequest" wsaw:Action="urn:updatePermission"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:updatePermissionTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getJMSSubscriptionsForTopic">
      <wsdl:input message="ns:getJMSSubscriptionsForTopicRequest" wsaw:Action="urn:getJMSSubscriptionsForTopic"/>
      <wsdl:output message="ns:getJMSSubscriptionsForTopicResponse" wsaw:Action="urn:getJMSSubscriptionsForTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getJMSSubscriptionsForTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <wsdl:input message="ns:getUserRolesRequest" wsaw:Action="urn:getUserRoles"/>
      <wsdl:output message="ns:getUserRolesResponse" wsaw:Action="urn:getUserRolesResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getUserRolesTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllTopics">
      <wsdl:input message="ns:getAllTopicsRequest" wsaw:Action="urn:getAllTopics"/>
      <wsdl:output message="ns:getAllTopicsResponse" wsaw:Action="urn:getAllTopicsResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getAllTopicsTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TopicManagerAdminServiceSoap11Binding" type="ns:TopicManagerAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getTopicRolePermissions">
      <soap:operation soapAction="urn:getTopicRolePermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionCountForTopic">
      <soap:operation soapAction="urn:getAllWSSubscriptionCountForTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionsForTopic">
      <soap:operation soapAction="urn:getAllWSSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTopic">
      <soap:operation soapAction="urn:addTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWsSubscriptionsForTopic">
      <soap:operation soapAction="urn:getWsSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTopic">
      <soap:operation soapAction="urn:removeTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePermission">
      <soap:operation soapAction="urn:updatePermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getJMSSubscriptionsForTopic">
      <soap:operation soapAction="urn:getJMSSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <soap:operation soapAction="urn:getUserRoles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTopics">
      <soap:operation soapAction="urn:getAllTopics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TopicManagerAdminServiceSoap12Binding" type="ns:TopicManagerAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getTopicRolePermissions">
      <soap12:operation soapAction="urn:getTopicRolePermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionCountForTopic">
      <soap12:operation soapAction="urn:getAllWSSubscriptionCountForTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionsForTopic">
      <soap12:operation soapAction="urn:getAllWSSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTopic">
      <soap12:operation soapAction="urn:addTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWsSubscriptionsForTopic">
      <soap12:operation soapAction="urn:getWsSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTopic">
      <soap12:operation soapAction="urn:removeTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePermission">
      <soap12:operation soapAction="urn:updatePermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getJMSSubscriptionsForTopic">
      <soap12:operation soapAction="urn:getJMSSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <soap12:operation soapAction="urn:getUserRoles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTopics">
      <soap12:operation soapAction="urn:getAllTopics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TopicManagerAdminServiceHttpBinding" type="ns:TopicManagerAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getTopicRolePermissions">
      <http:operation location="getTopicRolePermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionCountForTopic">
      <http:operation location="getAllWSSubscriptionCountForTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionsForTopic">
      <http:operation location="getAllWSSubscriptionsForTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTopic">
      <http:operation location="addTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getWsSubscriptionsForTopic">
      <http:operation location="getWsSubscriptionsForTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeTopic">
      <http:operation location="removeTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updatePermission">
      <http:operation location="updatePermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getJMSSubscriptionsForTopic">
      <http:operation location="getJMSSubscriptionsForTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <http:operation location="getUserRoles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllTopics">
      <http:operation location="getAllTopics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TopicManagerAdminService">
    <wsdl:port name="TopicManagerAdminServiceHttpsSoap11Endpoint" binding="ns:TopicManagerAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TopicManagerAdminServiceHttpsSoap12Endpoint" binding="ns:TopicManagerAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TopicManagerAdminServiceHttpsEndpoint" binding="ns:TopicManagerAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="11770045-d534-4ab7-aa47-628176b4bf6e" isOneWay="false" action="urn:addTopic" name="addTopic" bindingOperationName="addTopic" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16aec9dc-9cf4-4d9a-b016-612ccbc14b24" isOneWay="false" action="urn:getAllTopics" name="getAllTopics" bindingOperationName="getAllTopics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="57a90d49-15f3-49be-9532-8909df50b98b" isOneWay="false" action="urn:getAllWSSubscriptionCountForTopic" name="getAllWSSubscriptionCountForTopic" bindingOperationName="getAllWSSubscriptionCountForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c1a98e7-df53-45bb-a410-5674e1cf3a35" isOneWay="false" action="urn:getAllWSSubscriptionsForTopic" name="getAllWSSubscriptionsForTopic" bindingOperationName="getAllWSSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="078eceec-5375-47cb-9359-851b3a70ad3b" isOneWay="false" action="urn:getJMSSubscriptionsForTopic" name="getJMSSubscriptionsForTopic" bindingOperationName="getJMSSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5c2b6dab-be12-45b7-badd-7583bacd6e49" isOneWay="false" action="urn:getTopicRolePermissions" name="getTopicRolePermissions" bindingOperationName="getTopicRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0cf2903d-e9bc-4707-b11e-7c5d83e89866" isOneWay="false" action="urn:getUserRoles" name="getUserRoles" bindingOperationName="getUserRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0a7ab849-b719-4582-b2c2-d9e0c471a4f0" isOneWay="false" action="urn:getWsSubscriptionsForTopic" name="getWsSubscriptionsForTopic" bindingOperationName="getWsSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ca2e692a-24f7-4220-a2da-15c1243c1291" isOneWay="false" action="urn:removeTopic" name="removeTopic" bindingOperationName="removeTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e0cc0bbf-33a8-4d2f-85d8-751174135428" isOneWay="false" action="urn:updatePermission" name="updatePermission" bindingOperationName="updatePermission" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="47a1bccf-d254-42b3-bfba-2788afef1c35" wsaVersion="NONE" name="TracerAdminSoap12Binding" type="wsdl" bindingName="{http://service.tracer.carbon.wso2.org}TracerAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/TracerAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/TracerAdmin.TracerAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="347bb249-4fa0-45b5-b30d-7e7aff4053ec" isOneWay="false" action="urn:clearAllSoapMessages" name="clearAllSoapMessages" bindingOperationName="clearAllSoapMessages" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c19a881-7e67-4a0d-bd11-7072c24648ae" isOneWay="false" action="urn:getMessage" name="getMessage" bindingOperationName="getMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6e367149-5c26-40ad-bfbb-561b8fd768ff" isOneWay="false" action="urn:getMessages" name="getMessages" bindingOperationName="getMessages" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f6848501-b78e-4e29-8a0d-5ab26cedf62b" isOneWay="false" action="urn:setMonitoring" name="setMonitoring" bindingOperationName="setMonitoring" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="bdd8c053-a9b0-403d-887c-4efaab649c54" wsaVersion="NONE" name="TracerAdminSoap11Binding" type="wsdl" bindingName="{http://service.tracer.carbon.wso2.org}TracerAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/TracerAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/TracerAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/TracerAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.tracer.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://service.tracer.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2650="http://service.tracer.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>TracerAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.tracer.carbon.wso2.org/xsd">
      <xs:complexType name="TracerServiceInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
          <xs:element minOccurs="0" name="filter" type="xs:boolean"/>
          <xs:element minOccurs="0" name="filterString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="flag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastMessage" nillable="true" type="ax2650:MessagePayload"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageInfo" nillable="true" type="ax2650:MessageInfo"/>
          <xs:element minOccurs="0" name="tracePersister" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessagePayload">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="response" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessageInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageSequence" type="xs:long"/>
          <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="timestamp" nillable="true" type="xs:dateTime"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2651="http://service.tracer.carbon.wso2.org/xsd">
      <xs:import namespace="http://service.tracer.carbon.wso2.org/xsd"/>
      <xs:element name="setMonitoring">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="flag" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setMonitoringResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2650:TracerServiceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllSoapMessages">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMessages">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="numberOfMessages" type="xs:int"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMessagesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2650:TracerServiceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="messageSequence" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMessageResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2650:MessagePayload"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="clearAllSoapMessagesRequest">
    <wsdl:part name="parameters" element="ns1:clearAllSoapMessages"/>
  </wsdl:message>
  <wsdl:message name="setMonitoringRequest">
    <wsdl:part name="parameters" element="ns1:setMonitoring"/>
  </wsdl:message>
  <wsdl:message name="setMonitoringResponse">
    <wsdl:part name="parameters" element="ns1:setMonitoringResponse"/>
  </wsdl:message>
  <wsdl:message name="getMessageRequest">
    <wsdl:part name="parameters" element="ns1:getMessage"/>
  </wsdl:message>
  <wsdl:message name="getMessageResponse">
    <wsdl:part name="parameters" element="ns1:getMessageResponse"/>
  </wsdl:message>
  <wsdl:message name="getMessagesRequest">
    <wsdl:part name="parameters" element="ns1:getMessages"/>
  </wsdl:message>
  <wsdl:message name="getMessagesResponse">
    <wsdl:part name="parameters" element="ns1:getMessagesResponse"/>
  </wsdl:message>
  <wsdl:portType name="TracerAdminPortType">
    <wsdl:operation name="clearAllSoapMessages">
      <wsdl:input message="tns:clearAllSoapMessagesRequest" wsaw:Action="urn:clearAllSoapMessages"/>
    </wsdl:operation>
    <wsdl:operation name="setMonitoring">
      <wsdl:input message="tns:setMonitoringRequest" wsaw:Action="urn:setMonitoring"/>
      <wsdl:output message="tns:setMonitoringResponse" wsaw:Action="urn:setMonitoringResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <wsdl:input message="tns:getMessageRequest" wsaw:Action="urn:getMessage"/>
      <wsdl:output message="tns:getMessageResponse" wsaw:Action="urn:getMessageResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMessages">
      <wsdl:input message="tns:getMessagesRequest" wsaw:Action="urn:getMessages"/>
      <wsdl:output message="tns:getMessagesResponse" wsaw:Action="urn:getMessagesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TracerAdminSoap11Binding" type="tns:TracerAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="clearAllSoapMessages">
      <soap:operation soapAction="urn:clearAllSoapMessages" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setMonitoring">
      <soap:operation soapAction="urn:setMonitoring" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <soap:operation soapAction="urn:getMessage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessages">
      <soap:operation soapAction="urn:getMessages" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TracerAdminSoap12Binding" type="tns:TracerAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="clearAllSoapMessages">
      <soap12:operation soapAction="urn:clearAllSoapMessages" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setMonitoring">
      <soap12:operation soapAction="urn:setMonitoring" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <soap12:operation soapAction="urn:getMessage" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessages">
      <soap12:operation soapAction="urn:getMessages" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TracerAdminHttpBinding" type="tns:TracerAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="clearAllSoapMessages">
      <http:operation location="clearAllSoapMessages"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setMonitoring">
      <http:operation location="setMonitoring"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <http:operation location="getMessage"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessages">
      <http:operation location="getMessages"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TracerAdmin">
    <wsdl:port name="TracerAdminHttpsSoap11Endpoint" binding="tns:TracerAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/TracerAdmin.TracerAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TracerAdminHttpsSoap12Endpoint" binding="tns:TracerAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/TracerAdmin.TracerAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TracerAdminHttpsEndpoint" binding="tns:TracerAdminHttpBinding">
      <http:address location="https://localhost:9443/services/TracerAdmin.TracerAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/TracerAdmin.TracerAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="e3d8ebef-a29b-4048-b4cc-dbce46c05a1a" isOneWay="false" action="urn:clearAllSoapMessages" name="clearAllSoapMessages" bindingOperationName="clearAllSoapMessages" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="30f6eaa2-851b-4343-b9bf-7c0b814a48d3" isOneWay="false" action="urn:getMessage" name="getMessage" bindingOperationName="getMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="98d05c1e-5671-4e0c-b1ec-522c91603965" isOneWay="false" action="urn:getMessages" name="getMessages" bindingOperationName="getMessages" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6b2ed5aa-2f0d-42b4-8879-af4896a6e422" isOneWay="false" action="urn:setMonitoring" name="setMonitoring" bindingOperationName="setMonitoring" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d8fd61a3-a0ba-4db1-96b4-28f4fa1d97c4" wsaVersion="NONE" name="UserAccountAssociationServiceSoap12Binding" type="wsdl" bindingName="{http://association.account.user.identity.carbon.wso2.org}UserAccountAssociationServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/UserAccountAssociationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="8a546781-02d2-40e6-b679-08afd9954639" isOneWay="false" action="urn:associateMyAccounts" name="associateMyAccounts" bindingOperationName="associateMyAccounts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d6d62230-a9a8-4039-9ec1-1f0f83a4bbc5" isOneWay="false" action="urn:associateTwoAccounts" name="associateTwoAccounts" bindingOperationName="associateTwoAccounts" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a4d4697-6197-4d42-a7cd-92d5caab2ad7" isOneWay="false" action="urn:createUserAccountAssociation" name="createUserAccountAssociation" bindingOperationName="createUserAccountAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e7b347c-f361-4df5-903f-42ce964b1f3f" isOneWay="false" action="urn:deleteAssociationsOfUser" name="deleteAssociationsOfUser" bindingOperationName="deleteAssociationsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b834d211-2094-41fe-ab13-3d2a07674605" isOneWay="false" action="urn:deleteMyAssociations" name="deleteMyAssociations" bindingOperationName="deleteMyAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1704aa79-08bc-452f-922b-b77a874ddfcc" isOneWay="false" action="urn:deleteMyAssociationsWithoutLogin" name="deleteMyAssociationsWithoutLogin" bindingOperationName="deleteMyAssociationsWithoutLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0fa9a04d-05c4-4cb7-97de-af9589125469" isOneWay="false" action="urn:deleteUserAccountAssociation" name="deleteUserAccountAssociation" bindingOperationName="deleteUserAccountAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b662130-c3a3-4ec0-84d8-19bdce1070d1" isOneWay="false" action="urn:getAccountAssociations" name="getAccountAssociations" bindingOperationName="getAccountAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d4cc5629-b49a-4999-bf22-3df1d4c991b5" isOneWay="false" action="urn:getAccountAssociationsOfUser" name="getAccountAssociationsOfUser" bindingOperationName="getAccountAssociationsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cc538cd6-623b-430d-a855-3137e0696356" isOneWay="false" action="urn:getMyAccountAssociationsWithoutLogin" name="getMyAccountAssociationsWithoutLogin" bindingOperationName="getMyAccountAssociationsWithoutLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c1b6bbf-5aa5-489f-bf7b-c92424638c53" isOneWay="false" action="urn:switchLoggedInUser" name="switchLoggedInUser" bindingOperationName="switchLoggedInUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4b946429-e3e0-4f47-86bd-467654ac851c" wsaVersion="NONE" name="UserAccountAssociationServiceSoap11Binding" type="wsdl" bindingName="{http://association.account.user.identity.carbon.wso2.org}UserAccountAssociationServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/UserAccountAssociationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserAccountAssociationService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserAccountAssociationService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://association.account.user.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://association.account.user.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2390="http://exception.association.account.user.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2391="http://base.identity.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2394="http://dto.association.account.user.identity.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserAccountAssociationService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.association.account.user.identity.carbon.wso2.org/xsd">
      <xs:complexType name="UserAccountAssociationDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.association.account.user.identity.carbon.wso2.org/xsd" xmlns:ax2392="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserAccountAssociationException">
        <xs:complexContent>
          <xs:extension base="ax2391:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UserAccountAssociationClientException">
        <xs:complexContent>
          <xs:extension base="ax2390:UserAccountAssociationException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://association.account.user.identity.carbon.wso2.org" xmlns:ax2393="http://exception.association.account.user.identity.carbon.wso2.org/xsd" xmlns:ax2395="http://dto.association.account.user.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.association.account.user.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.association.account.user.identity.carbon.wso2.org/xsd"/>
      <xs:element name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserAccountAssociationClientException" nillable="true" type="ax2390:UserAccountAssociationClientException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createUserAccountAssociation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="associateTwoAccounts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName1" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userName2" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="associateMyAccounts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName1" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password1" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userName2" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password2" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserAccountAssociation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteMyAssociations">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAssociationsOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteMyAssociationsWithoutLogin">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="initiateUser" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountAssociationsOfUser">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountAssociationsOfUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2394:UserAccountAssociationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountAssociations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountAssociationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2394:UserAccountAssociationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMyAccountAssociationsWithoutLogin">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMyAccountAssociationsWithoutLoginResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2394:UserAccountAssociationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="switchLoggedInUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="switchLoggedInUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getMyAccountAssociationsWithoutLoginRequest">
    <wsdl:part name="parameters" element="ns:getMyAccountAssociationsWithoutLogin"/>
  </wsdl:message>
  <wsdl:message name="getMyAccountAssociationsWithoutLoginResponse">
    <wsdl:part name="parameters" element="ns:getMyAccountAssociationsWithoutLoginResponse"/>
  </wsdl:message>
  <wsdl:message name="UserAccountAssociationServiceUserAccountAssociationClientException">
    <wsdl:part name="parameters" element="ns:UserAccountAssociationServiceUserAccountAssociationClientException"/>
  </wsdl:message>
  <wsdl:message name="associateTwoAccountsRequest">
    <wsdl:part name="parameters" element="ns:associateTwoAccounts"/>
  </wsdl:message>
  <wsdl:message name="createUserAccountAssociationRequest">
    <wsdl:part name="parameters" element="ns:createUserAccountAssociation"/>
  </wsdl:message>
  <wsdl:message name="createUserAccountAssociationResponse"/>
  <wsdl:message name="deleteMyAssociationsRequest">
    <wsdl:part name="parameters" element="ns:deleteMyAssociations"/>
  </wsdl:message>
  <wsdl:message name="deleteMyAssociationsResponse"/>
  <wsdl:message name="getAccountAssociationsRequest">
    <wsdl:part name="parameters" element="ns:getAccountAssociations"/>
  </wsdl:message>
  <wsdl:message name="getAccountAssociationsResponse">
    <wsdl:part name="parameters" element="ns:getAccountAssociationsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserAccountAssociationRequest">
    <wsdl:part name="parameters" element="ns:deleteUserAccountAssociation"/>
  </wsdl:message>
  <wsdl:message name="deleteUserAccountAssociationResponse"/>
  <wsdl:message name="deleteMyAssociationsWithoutLoginRequest">
    <wsdl:part name="parameters" element="ns:deleteMyAssociationsWithoutLogin"/>
  </wsdl:message>
  <wsdl:message name="deleteMyAssociationsWithoutLoginResponse"/>
  <wsdl:message name="getAccountAssociationsOfUserRequest">
    <wsdl:part name="parameters" element="ns:getAccountAssociationsOfUser"/>
  </wsdl:message>
  <wsdl:message name="getAccountAssociationsOfUserResponse">
    <wsdl:part name="parameters" element="ns:getAccountAssociationsOfUserResponse"/>
  </wsdl:message>
  <wsdl:message name="associateMyAccountsRequest">
    <wsdl:part name="parameters" element="ns:associateMyAccounts"/>
  </wsdl:message>
  <wsdl:message name="associateMyAccountsResponse"/>
  <wsdl:message name="deleteAssociationsOfUserRequest">
    <wsdl:part name="parameters" element="ns:deleteAssociationsOfUser"/>
  </wsdl:message>
  <wsdl:message name="deleteAssociationsOfUserResponse"/>
  <wsdl:message name="switchLoggedInUserRequest">
    <wsdl:part name="parameters" element="ns:switchLoggedInUser"/>
  </wsdl:message>
  <wsdl:message name="switchLoggedInUserResponse">
    <wsdl:part name="parameters" element="ns:switchLoggedInUserResponse"/>
  </wsdl:message>
  <wsdl:portType name="UserAccountAssociationServicePortType">
    <wsdl:operation name="getMyAccountAssociationsWithoutLogin">
      <wsdl:input message="ns:getMyAccountAssociationsWithoutLoginRequest" wsaw:Action="urn:getMyAccountAssociationsWithoutLogin"/>
      <wsdl:output message="ns:getMyAccountAssociationsWithoutLoginResponse" wsaw:Action="urn:getMyAccountAssociationsWithoutLoginResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:getMyAccountAssociationsWithoutLoginUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="associateTwoAccounts">
      <wsdl:input message="ns:associateTwoAccountsRequest" wsaw:Action="urn:associateTwoAccounts"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:associateTwoAccountsUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="createUserAccountAssociation">
      <wsdl:input message="ns:createUserAccountAssociationRequest" wsaw:Action="urn:createUserAccountAssociation"/>
      <wsdl:output message="ns:createUserAccountAssociationResponse" wsaw:Action="urn:createUserAccountAssociationResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:createUserAccountAssociationUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociations">
      <wsdl:input message="ns:deleteMyAssociationsRequest" wsaw:Action="urn:deleteMyAssociations"/>
      <wsdl:output message="ns:deleteMyAssociationsResponse" wsaw:Action="urn:deleteMyAssociationsResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:deleteMyAssociationsUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociations">
      <wsdl:input message="ns:getAccountAssociationsRequest" wsaw:Action="urn:getAccountAssociations"/>
      <wsdl:output message="ns:getAccountAssociationsResponse" wsaw:Action="urn:getAccountAssociationsResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:getAccountAssociationsUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserAccountAssociation">
      <wsdl:input message="ns:deleteUserAccountAssociationRequest" wsaw:Action="urn:deleteUserAccountAssociation"/>
      <wsdl:output message="ns:deleteUserAccountAssociationResponse" wsaw:Action="urn:deleteUserAccountAssociationResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:deleteUserAccountAssociationUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociationsWithoutLogin">
      <wsdl:input message="ns:deleteMyAssociationsWithoutLoginRequest" wsaw:Action="urn:deleteMyAssociationsWithoutLogin"/>
      <wsdl:output message="ns:deleteMyAssociationsWithoutLoginResponse" wsaw:Action="urn:deleteMyAssociationsWithoutLoginResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:deleteMyAssociationsWithoutLoginUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociationsOfUser">
      <wsdl:input message="ns:getAccountAssociationsOfUserRequest" wsaw:Action="urn:getAccountAssociationsOfUser"/>
      <wsdl:output message="ns:getAccountAssociationsOfUserResponse" wsaw:Action="urn:getAccountAssociationsOfUserResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:getAccountAssociationsOfUserUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="associateMyAccounts">
      <wsdl:input message="ns:associateMyAccountsRequest" wsaw:Action="urn:associateMyAccounts"/>
      <wsdl:output message="ns:associateMyAccountsResponse" wsaw:Action="urn:associateMyAccountsResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:associateMyAccountsUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAssociationsOfUser">
      <wsdl:input message="ns:deleteAssociationsOfUserRequest" wsaw:Action="urn:deleteAssociationsOfUser"/>
      <wsdl:output message="ns:deleteAssociationsOfUserResponse" wsaw:Action="urn:deleteAssociationsOfUserResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:deleteAssociationsOfUserUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="switchLoggedInUser">
      <wsdl:input message="ns:switchLoggedInUserRequest" wsaw:Action="urn:switchLoggedInUser"/>
      <wsdl:output message="ns:switchLoggedInUserResponse" wsaw:Action="urn:switchLoggedInUserResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:switchLoggedInUserUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserAccountAssociationServiceSoap11Binding" type="ns:UserAccountAssociationServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getMyAccountAssociationsWithoutLogin">
      <soap:operation soapAction="urn:getMyAccountAssociationsWithoutLogin" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateTwoAccounts">
      <soap:operation soapAction="urn:associateTwoAccounts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUserAccountAssociation">
      <soap:operation soapAction="urn:createUserAccountAssociation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociations">
      <soap:operation soapAction="urn:deleteMyAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociations">
      <soap:operation soapAction="urn:getAccountAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserAccountAssociation">
      <soap:operation soapAction="urn:deleteUserAccountAssociation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociationsWithoutLogin">
      <soap:operation soapAction="urn:deleteMyAssociationsWithoutLogin" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociationsOfUser">
      <soap:operation soapAction="urn:getAccountAssociationsOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateMyAccounts">
      <soap:operation soapAction="urn:associateMyAccounts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAssociationsOfUser">
      <soap:operation soapAction="urn:deleteAssociationsOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="switchLoggedInUser">
      <soap:operation soapAction="urn:switchLoggedInUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserAccountAssociationServiceSoap12Binding" type="ns:UserAccountAssociationServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getMyAccountAssociationsWithoutLogin">
      <soap12:operation soapAction="urn:getMyAccountAssociationsWithoutLogin" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateTwoAccounts">
      <soap12:operation soapAction="urn:associateTwoAccounts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUserAccountAssociation">
      <soap12:operation soapAction="urn:createUserAccountAssociation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociations">
      <soap12:operation soapAction="urn:deleteMyAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociations">
      <soap12:operation soapAction="urn:getAccountAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserAccountAssociation">
      <soap12:operation soapAction="urn:deleteUserAccountAssociation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociationsWithoutLogin">
      <soap12:operation soapAction="urn:deleteMyAssociationsWithoutLogin" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociationsOfUser">
      <soap12:operation soapAction="urn:getAccountAssociationsOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateMyAccounts">
      <soap12:operation soapAction="urn:associateMyAccounts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAssociationsOfUser">
      <soap12:operation soapAction="urn:deleteAssociationsOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="switchLoggedInUser">
      <soap12:operation soapAction="urn:switchLoggedInUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserAccountAssociationServiceHttpBinding" type="ns:UserAccountAssociationServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getMyAccountAssociationsWithoutLogin">
      <http:operation location="getMyAccountAssociationsWithoutLogin"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="associateTwoAccounts">
      <http:operation location="associateTwoAccounts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="createUserAccountAssociation">
      <http:operation location="createUserAccountAssociation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociations">
      <http:operation location="deleteMyAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociations">
      <http:operation location="getAccountAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUserAccountAssociation">
      <http:operation location="deleteUserAccountAssociation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociationsWithoutLogin">
      <http:operation location="deleteMyAssociationsWithoutLogin"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociationsOfUser">
      <http:operation location="getAccountAssociationsOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="associateMyAccounts">
      <http:operation location="associateMyAccounts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAssociationsOfUser">
      <http:operation location="deleteAssociationsOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="switchLoggedInUser">
      <http:operation location="switchLoggedInUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserAccountAssociationService">
    <wsdl:port name="UserAccountAssociationServiceHttpsSoap11Endpoint" binding="ns:UserAccountAssociationServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserAccountAssociationServiceHttpsSoap12Endpoint" binding="ns:UserAccountAssociationServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserAccountAssociationServiceHttpsEndpoint" binding="ns:UserAccountAssociationServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="67ec0fd3-1824-4f42-a2ec-db77eab7d739" isOneWay="false" action="urn:associateMyAccounts" name="associateMyAccounts" bindingOperationName="associateMyAccounts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e7eac5e3-67d4-4560-b970-e76052a35a58" isOneWay="false" action="urn:associateTwoAccounts" name="associateTwoAccounts" bindingOperationName="associateTwoAccounts" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="308f2264-217b-49fd-bc17-4e9810c1bdac" isOneWay="false" action="urn:createUserAccountAssociation" name="createUserAccountAssociation" bindingOperationName="createUserAccountAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="63b96d8b-7f37-496e-9337-adc2506e41b3" isOneWay="false" action="urn:deleteAssociationsOfUser" name="deleteAssociationsOfUser" bindingOperationName="deleteAssociationsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2daf10ad-3b0d-45c1-b27a-6ba23ca34ce5" isOneWay="false" action="urn:deleteMyAssociations" name="deleteMyAssociations" bindingOperationName="deleteMyAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c179d9fa-d126-439e-80d6-64b4c8315e7c" isOneWay="false" action="urn:deleteMyAssociationsWithoutLogin" name="deleteMyAssociationsWithoutLogin" bindingOperationName="deleteMyAssociationsWithoutLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="41d1988c-c8d4-4a86-bd50-5394189d8ebd" isOneWay="false" action="urn:deleteUserAccountAssociation" name="deleteUserAccountAssociation" bindingOperationName="deleteUserAccountAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f3414b97-6e5e-4211-9bab-8219e41fb7fa" isOneWay="false" action="urn:getAccountAssociations" name="getAccountAssociations" bindingOperationName="getAccountAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a56e2636-661f-4b11-ad0a-f3adcadb2ce7" isOneWay="false" action="urn:getAccountAssociationsOfUser" name="getAccountAssociationsOfUser" bindingOperationName="getAccountAssociationsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="27d0002f-6a49-4683-b8c6-06cdea31c0bd" isOneWay="false" action="urn:getMyAccountAssociationsWithoutLogin" name="getMyAccountAssociationsWithoutLogin" bindingOperationName="getMyAccountAssociationsWithoutLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="81068941-30be-401e-97a6-eee9d0616713" isOneWay="false" action="urn:switchLoggedInUser" name="switchLoggedInUser" bindingOperationName="switchLoggedInUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="49d7d1e6-779f-4124-b638-b7d881e87436" wsaVersion="NONE" name="UserAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.user.carbon.wso2.org}UserAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/UserAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserAdmin.UserAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="89cfe945-a189-4b48-a10c-826efb01b139" isOneWay="false" action="urn:addInternalRole" name="addInternalRole" bindingOperationName="addInternalRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="83444b01-5acc-4b01-a2d8-57bcf1021caf" isOneWay="false" action="urn:addRemoveRolesOfUser" name="addRemoveRolesOfUser" bindingOperationName="addRemoveRolesOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2527168f-a339-4521-a10c-568911326530" isOneWay="false" action="urn:addRemoveUsersOfRole" name="addRemoveUsersOfRole" bindingOperationName="addRemoveUsersOfRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="622b3834-1e98-45e9-9fce-af029c7852c6" isOneWay="false" action="urn:addRole" name="addRole" bindingOperationName="addRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a70b6312-b655-43eb-9f6e-f95d1e7ed20c" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="edf7178e-bd3f-4803-b5d2-48ba0b460c49" isOneWay="false" action="urn:bulkImportUsers" name="bulkImportUsers" bindingOperationName="bulkImportUsers" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="223e79a7-ecc3-44db-804e-0c582a58dab4" isOneWay="false" action="urn:changePassword" name="changePassword" bindingOperationName="changePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e2660108-1633-4f54-94e2-7e4d3071817e" isOneWay="false" action="urn:changePasswordByUser" name="changePasswordByUser" bindingOperationName="changePasswordByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cb6d2d76-0b89-4614-ae09-02119e394d01" isOneWay="false" action="urn:deleteRole" name="deleteRole" bindingOperationName="deleteRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="47271755-85e0-4d3d-aca7-ad9e3b1130da" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9803d491-8678-481d-8941-e9738affd3dd" isOneWay="false" action="urn:getAllPermittedRoleNames" name="getAllPermittedRoleNames" bindingOperationName="getAllPermittedRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b4b54de2-7654-49f0-b307-b44b6a15c5a4" isOneWay="false" action="urn:getAllRolesNames" name="getAllRolesNames" bindingOperationName="getAllRolesNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="73679ba1-0aac-4d46-a4e0-d6a4289ab02c" isOneWay="false" action="urn:getAllSharedRoleNames" name="getAllSharedRoleNames" bindingOperationName="getAllSharedRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="219703db-6c03-4dc7-985c-577f5cc5b6de" isOneWay="false" action="urn:getAllUIPermissions" name="getAllUIPermissions" bindingOperationName="getAllUIPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="57c1bd3d-001f-4122-b589-60a3072348e3" isOneWay="false" action="urn:getRolePermissions" name="getRolePermissions" bindingOperationName="getRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5745c515-7397-480a-80d5-97275e33e046" isOneWay="false" action="urn:getRolesOfCurrentUser" name="getRolesOfCurrentUser" bindingOperationName="getRolesOfCurrentUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ca13e792-4eaf-4116-8880-29b3c7efbec4" isOneWay="false" action="urn:getRolesOfUser" name="getRolesOfUser" bindingOperationName="getRolesOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c33b5f99-a33b-4d5c-951a-ca260adbe4bc" isOneWay="false" action="urn:getUserRealmInfo" name="getUserRealmInfo" bindingOperationName="getUserRealmInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="18d79fd2-3d60-404e-ba52-99c58bb7eea4" isOneWay="false" action="urn:getUsersOfRole" name="getUsersOfRole" bindingOperationName="getUsersOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b6be7603-b66a-4988-a372-38ee0f3ee498" isOneWay="false" action="urn:hasMultipleUserStores" name="hasMultipleUserStores" bindingOperationName="hasMultipleUserStores" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="53d4f566-c132-4833-b575-1b21430e2642" isOneWay="false" action="urn:isSharedRolesEnabled" name="isSharedRolesEnabled" bindingOperationName="isSharedRolesEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="153333f0-6772-4576-89c1-35859ecb25f6" isOneWay="false" action="urn:listAllUsers" name="listAllUsers" bindingOperationName="listAllUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="709a0990-9912-461e-b8a4-8e1d1a040a49" isOneWay="false" action="urn:listAllUsersWithPermission" name="listAllUsersWithPermission" bindingOperationName="listAllUsersWithPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3a39c7b0-4fa6-4830-9e49-cf66b9413f10" isOneWay="false" action="urn:listUserByClaim" name="listUserByClaim" bindingOperationName="listUserByClaim" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9d4725b4-8082-4a35-8218-a9c1f64f8765" isOneWay="false" action="urn:listUserByClaimWithPermission" name="listUserByClaimWithPermission" bindingOperationName="listUserByClaimWithPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5777864d-a0ef-462a-bc07-a89886dfd5d8" isOneWay="false" action="urn:listUsers" name="listUsers" bindingOperationName="listUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69600ee3-f9bd-404f-885d-7bcc8642d09d" isOneWay="false" action="urn:setRoleUIPermission" name="setRoleUIPermission" bindingOperationName="setRoleUIPermission" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5accfcb2-771b-4ef7-854d-b6b36f904ff2" isOneWay="false" action="urn:updateRoleName" name="updateRoleName" bindingOperationName="updateRoleName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2ea0c73b-8e6d-463a-9dd3-b43b5554d084" isOneWay="false" action="urn:updateRolesOfUser" name="updateRolesOfUser" bindingOperationName="updateRolesOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="06040d8b-9d7e-4eeb-b3a1-11d54bb7ce5f" isOneWay="false" action="urn:updateUsersOfRole" name="updateUsersOfRole" bindingOperationName="updateUsersOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="bc73fa81-64c3-4357-ac26-28192a6290e8" wsaVersion="NONE" name="UserAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.user.carbon.wso2.org}UserAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/UserAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.user.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2696="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.user.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2697="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://common.mgt.user.carbon.wso2.org/xsd"/>
      <xs:element name="UserAdminUserAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserAdminException" nillable="true" type="ax2696:UserAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changePassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolePermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolePermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2696:UIPermissionNode"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllUsersWithPermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permission" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllUsersWithPermissionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRolesNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRolesNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPermittedRoleNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permission" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPermittedRoleNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSharedRoleNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSharedRoleNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserRealmInfo">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserRealmInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2696:UserRealmInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasMultipleUserStores">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasMultipleUserStoresResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUsersOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUsersOfRoleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateUsersOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userList" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolesOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolesOfUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolesOfCurrentUser">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolesOfCurrentUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRolesOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newRoleList" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUIPermissions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUIPermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2696:UIPermissionNode"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setRoleUIPermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="rawResources" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="bulkImportUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userStoreDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="handler" nillable="true" type="xs:base64Binary"/>
            <xs:element minOccurs="0" name="defaultPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changePasswordByUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldPassword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRemoveUsersOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newUsers" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="deletedUsers" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRemoveRolesOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newRoles" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="deletedRoles" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUserByClaim">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="ax2696:ClaimValue"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxLimit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUserByClaimResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUserByClaimWithPermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="ax2696:ClaimValue"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permission" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxLimit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUserByClaimWithPermissionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isSharedRolesEnabled">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isSharedRolesEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="isSharedRole" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRoleName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newRoleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roles" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2696:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addInternalRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.mgt.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserAdminException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UIPermissionNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nodeList" nillable="true" type="ax2696:UIPermissionNode"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="selected" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FlaggedName">
        <xs:sequence>
          <xs:element minOccurs="0" name="dn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="editable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="itemDisplayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="itemName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="selected" type="xs:boolean"/>
          <xs:element minOccurs="0" name="shared" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserRealmInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="adminRole" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="bulkImportSupported" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="defaultUserClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="domainNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enableUIPageCache" type="xs:boolean"/>
          <xs:element minOccurs="0" name="everyOneRole" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="maxItemsPerUIPage" type="xs:int"/>
          <xs:element minOccurs="0" name="maxUIPagesInCache" type="xs:int"/>
          <xs:element minOccurs="0" name="multipleUserStore" type="xs:boolean"/>
          <xs:element minOccurs="0" name="primaryUserStoreInfo" nillable="true" type="ax2696:UserStoreInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredUserClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userStoresInfo" nillable="true" type="ax2696:UserStoreInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserStoreInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="bulkImportSupported" type="xs:boolean"/>
          <xs:element minOccurs="0" name="caseSensitiveUsername" type="xs:boolean"/>
          <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="externalIdP" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="maxRoleLimit" type="xs:int"/>
          <xs:element minOccurs="0" name="maxUserLimit" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordRegEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordRegExViolationErrorMsg" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordsExternallyManaged" type="xs:boolean"/>
          <xs:element minOccurs="0" name="readGroupsEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleNameRegEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userNameRegEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="usernameRegExViolationErrorMsg" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="writeGroupsEnabled" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getUsersOfRoleRequest">
    <wsdl:part name="parameters" element="ns1:getUsersOfRole"/>
  </wsdl:message>
  <wsdl:message name="getUsersOfRoleResponse">
    <wsdl:part name="parameters" element="ns1:getUsersOfRoleResponse"/>
  </wsdl:message>
  <wsdl:message name="UserAdminUserAdminException">
    <wsdl:part name="parameters" element="ns1:UserAdminUserAdminException"/>
  </wsdl:message>
  <wsdl:message name="getAllPermittedRoleNamesRequest">
    <wsdl:part name="parameters" element="ns1:getAllPermittedRoleNames"/>
  </wsdl:message>
  <wsdl:message name="getAllPermittedRoleNamesResponse">
    <wsdl:part name="parameters" element="ns1:getAllPermittedRoleNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserRequest">
    <wsdl:part name="parameters" element="ns1:addUser"/>
  </wsdl:message>
  <wsdl:message name="addUserResponse"/>
  <wsdl:message name="addRemoveUsersOfRoleRequest">
    <wsdl:part name="parameters" element="ns1:addRemoveUsersOfRole"/>
  </wsdl:message>
  <wsdl:message name="changePasswordByUserRequest">
    <wsdl:part name="parameters" element="ns1:changePasswordByUser"/>
  </wsdl:message>
  <wsdl:message name="changePasswordByUserResponse"/>
  <wsdl:message name="isSharedRolesEnabledRequest">
    <wsdl:part name="parameters" element="ns1:isSharedRolesEnabled"/>
  </wsdl:message>
  <wsdl:message name="isSharedRolesEnabledResponse">
    <wsdl:part name="parameters" element="ns1:isSharedRolesEnabledResponse"/>
  </wsdl:message>
  <wsdl:message name="listUserByClaimRequest">
    <wsdl:part name="parameters" element="ns1:listUserByClaim"/>
  </wsdl:message>
  <wsdl:message name="listUserByClaimResponse">
    <wsdl:part name="parameters" element="ns1:listUserByClaimResponse"/>
  </wsdl:message>
  <wsdl:message name="getRolesOfUserRequest">
    <wsdl:part name="parameters" element="ns1:getRolesOfUser"/>
  </wsdl:message>
  <wsdl:message name="getRolesOfUserResponse">
    <wsdl:part name="parameters" element="ns1:getRolesOfUserResponse"/>
  </wsdl:message>
  <wsdl:message name="updateUsersOfRoleRequest">
    <wsdl:part name="parameters" element="ns1:updateUsersOfRole"/>
  </wsdl:message>
  <wsdl:message name="updateUsersOfRoleResponse"/>
  <wsdl:message name="listAllUsersRequest">
    <wsdl:part name="parameters" element="ns1:listAllUsers"/>
  </wsdl:message>
  <wsdl:message name="listAllUsersResponse">
    <wsdl:part name="parameters" element="ns1:listAllUsersResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllUIPermissionsRequest">
    <wsdl:part name="parameters" element="ns1:getAllUIPermissions"/>
  </wsdl:message>
  <wsdl:message name="getAllUIPermissionsResponse">
    <wsdl:part name="parameters" element="ns1:getAllUIPermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="hasMultipleUserStoresRequest">
    <wsdl:part name="parameters" element="ns1:hasMultipleUserStores"/>
  </wsdl:message>
  <wsdl:message name="hasMultipleUserStoresResponse">
    <wsdl:part name="parameters" element="ns1:hasMultipleUserStoresResponse"/>
  </wsdl:message>
  <wsdl:message name="updateRolesOfUserRequest">
    <wsdl:part name="parameters" element="ns1:updateRolesOfUser"/>
  </wsdl:message>
  <wsdl:message name="getAllSharedRoleNamesRequest">
    <wsdl:part name="parameters" element="ns1:getAllSharedRoleNames"/>
  </wsdl:message>
  <wsdl:message name="getAllSharedRoleNamesResponse">
    <wsdl:part name="parameters" element="ns1:getAllSharedRoleNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="setRoleUIPermissionRequest">
    <wsdl:part name="parameters" element="ns1:setRoleUIPermission"/>
  </wsdl:message>
  <wsdl:message name="getRolePermissionsRequest">
    <wsdl:part name="parameters" element="ns1:getRolePermissions"/>
  </wsdl:message>
  <wsdl:message name="getRolePermissionsResponse">
    <wsdl:part name="parameters" element="ns1:getRolePermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="getRolesOfCurrentUserRequest">
    <wsdl:part name="parameters" element="ns1:getRolesOfCurrentUser"/>
  </wsdl:message>
  <wsdl:message name="getRolesOfCurrentUserResponse">
    <wsdl:part name="parameters" element="ns1:getRolesOfCurrentUserResponse"/>
  </wsdl:message>
  <wsdl:message name="listUserByClaimWithPermissionRequest">
    <wsdl:part name="parameters" element="ns1:listUserByClaimWithPermission"/>
  </wsdl:message>
  <wsdl:message name="listUserByClaimWithPermissionResponse">
    <wsdl:part name="parameters" element="ns1:listUserByClaimWithPermissionResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteRoleRequest">
    <wsdl:part name="parameters" element="ns1:deleteRole"/>
  </wsdl:message>
  <wsdl:message name="addRemoveRolesOfUserRequest">
    <wsdl:part name="parameters" element="ns1:addRemoveRolesOfUser"/>
  </wsdl:message>
  <wsdl:message name="addInternalRoleRequest">
    <wsdl:part name="parameters" element="ns1:addInternalRole"/>
  </wsdl:message>
  <wsdl:message name="changePasswordRequest">
    <wsdl:part name="parameters" element="ns1:changePassword"/>
  </wsdl:message>
  <wsdl:message name="changePasswordResponse"/>
  <wsdl:message name="listAllUsersWithPermissionRequest">
    <wsdl:part name="parameters" element="ns1:listAllUsersWithPermission"/>
  </wsdl:message>
  <wsdl:message name="listAllUsersWithPermissionResponse">
    <wsdl:part name="parameters" element="ns1:listAllUsersWithPermissionResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserRealmInfoRequest">
    <wsdl:part name="parameters" element="ns1:getUserRealmInfo"/>
  </wsdl:message>
  <wsdl:message name="getUserRealmInfoResponse">
    <wsdl:part name="parameters" element="ns1:getUserRealmInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="listUsersRequest">
    <wsdl:part name="parameters" element="ns1:listUsers"/>
  </wsdl:message>
  <wsdl:message name="listUsersResponse">
    <wsdl:part name="parameters" element="ns1:listUsersResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserRequest">
    <wsdl:part name="parameters" element="ns1:deleteUser"/>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse"/>
  <wsdl:message name="getAllRolesNamesRequest">
    <wsdl:part name="parameters" element="ns1:getAllRolesNames"/>
  </wsdl:message>
  <wsdl:message name="getAllRolesNamesResponse">
    <wsdl:part name="parameters" element="ns1:getAllRolesNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="updateRoleNameRequest">
    <wsdl:part name="parameters" element="ns1:updateRoleName"/>
  </wsdl:message>
  <wsdl:message name="addRoleRequest">
    <wsdl:part name="parameters" element="ns1:addRole"/>
  </wsdl:message>
  <wsdl:message name="bulkImportUsersRequest">
    <wsdl:part name="parameters" element="ns1:bulkImportUsers"/>
  </wsdl:message>
  <wsdl:portType name="UserAdminPortType">
    <wsdl:operation name="getUsersOfRole">
      <wsdl:input message="tns:getUsersOfRoleRequest" wsaw:Action="urn:getUsersOfRole"/>
      <wsdl:output message="tns:getUsersOfRoleResponse" wsaw:Action="urn:getUsersOfRoleResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getUsersOfRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPermittedRoleNames">
      <wsdl:input message="tns:getAllPermittedRoleNamesRequest" wsaw:Action="urn:getAllPermittedRoleNames"/>
      <wsdl:output message="tns:getAllPermittedRoleNamesResponse" wsaw:Action="urn:getAllPermittedRoleNamesResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getAllPermittedRoleNamesUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdl:input message="tns:addUserRequest" wsaw:Action="urn:addUser"/>
      <wsdl:output message="tns:addUserResponse" wsaw:Action="urn:addUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addRemoveUsersOfRole">
      <wsdl:input message="tns:addRemoveUsersOfRoleRequest" wsaw:Action="urn:addRemoveUsersOfRole"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addRemoveUsersOfRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="changePasswordByUser">
      <wsdl:input message="tns:changePasswordByUserRequest" wsaw:Action="urn:changePasswordByUser"/>
      <wsdl:output message="tns:changePasswordByUserResponse" wsaw:Action="urn:changePasswordByUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:changePasswordByUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="isSharedRolesEnabled">
      <wsdl:input message="tns:isSharedRolesEnabledRequest" wsaw:Action="urn:isSharedRolesEnabled"/>
      <wsdl:output message="tns:isSharedRolesEnabledResponse" wsaw:Action="urn:isSharedRolesEnabledResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:isSharedRolesEnabledUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaim">
      <wsdl:input message="tns:listUserByClaimRequest" wsaw:Action="urn:listUserByClaim"/>
      <wsdl:output message="tns:listUserByClaimResponse" wsaw:Action="urn:listUserByClaimResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listUserByClaimUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfUser">
      <wsdl:input message="tns:getRolesOfUserRequest" wsaw:Action="urn:getRolesOfUser"/>
      <wsdl:output message="tns:getRolesOfUserResponse" wsaw:Action="urn:getRolesOfUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getRolesOfUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updateUsersOfRole">
      <wsdl:input message="tns:updateUsersOfRoleRequest" wsaw:Action="urn:updateUsersOfRole"/>
      <wsdl:output message="tns:updateUsersOfRoleResponse" wsaw:Action="urn:updateUsersOfRoleResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:updateUsersOfRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listAllUsers">
      <wsdl:input message="tns:listAllUsersRequest" wsaw:Action="urn:listAllUsers"/>
      <wsdl:output message="tns:listAllUsersResponse" wsaw:Action="urn:listAllUsersResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listAllUsersUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllUIPermissions">
      <wsdl:input message="tns:getAllUIPermissionsRequest" wsaw:Action="urn:getAllUIPermissions"/>
      <wsdl:output message="tns:getAllUIPermissionsResponse" wsaw:Action="urn:getAllUIPermissionsResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getAllUIPermissionsUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="hasMultipleUserStores">
      <wsdl:input message="tns:hasMultipleUserStoresRequest" wsaw:Action="urn:hasMultipleUserStores"/>
      <wsdl:output message="tns:hasMultipleUserStoresResponse" wsaw:Action="urn:hasMultipleUserStoresResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:hasMultipleUserStoresUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updateRolesOfUser">
      <wsdl:input message="tns:updateRolesOfUserRequest" wsaw:Action="urn:updateRolesOfUser"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:updateRolesOfUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSharedRoleNames">
      <wsdl:input message="tns:getAllSharedRoleNamesRequest" wsaw:Action="urn:getAllSharedRoleNames"/>
      <wsdl:output message="tns:getAllSharedRoleNamesResponse" wsaw:Action="urn:getAllSharedRoleNamesResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getAllSharedRoleNamesUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setRoleUIPermission">
      <wsdl:input message="tns:setRoleUIPermissionRequest" wsaw:Action="urn:setRoleUIPermission"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:setRoleUIPermissionUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getRolePermissions">
      <wsdl:input message="tns:getRolePermissionsRequest" wsaw:Action="urn:getRolePermissions"/>
      <wsdl:output message="tns:getRolePermissionsResponse" wsaw:Action="urn:getRolePermissionsResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getRolePermissionsUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfCurrentUser">
      <wsdl:input message="tns:getRolesOfCurrentUserRequest" wsaw:Action="urn:getRolesOfCurrentUser"/>
      <wsdl:output message="tns:getRolesOfCurrentUserResponse" wsaw:Action="urn:getRolesOfCurrentUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getRolesOfCurrentUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaimWithPermission">
      <wsdl:input message="tns:listUserByClaimWithPermissionRequest" wsaw:Action="urn:listUserByClaimWithPermission"/>
      <wsdl:output message="tns:listUserByClaimWithPermissionResponse" wsaw:Action="urn:listUserByClaimWithPermissionResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listUserByClaimWithPermissionUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <wsdl:input message="tns:deleteRoleRequest" wsaw:Action="urn:deleteRole"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:deleteRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addRemoveRolesOfUser">
      <wsdl:input message="tns:addRemoveRolesOfUserRequest" wsaw:Action="urn:addRemoveRolesOfUser"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addRemoveRolesOfUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addInternalRole">
      <wsdl:input message="tns:addInternalRoleRequest" wsaw:Action="urn:addInternalRole"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addInternalRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <wsdl:input message="tns:changePasswordRequest" wsaw:Action="urn:changePassword"/>
      <wsdl:output message="tns:changePasswordResponse" wsaw:Action="urn:changePasswordResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:changePasswordUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listAllUsersWithPermission">
      <wsdl:input message="tns:listAllUsersWithPermissionRequest" wsaw:Action="urn:listAllUsersWithPermission"/>
      <wsdl:output message="tns:listAllUsersWithPermissionResponse" wsaw:Action="urn:listAllUsersWithPermissionResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listAllUsersWithPermissionUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserRealmInfo">
      <wsdl:input message="tns:getUserRealmInfoRequest" wsaw:Action="urn:getUserRealmInfo"/>
      <wsdl:output message="tns:getUserRealmInfoResponse" wsaw:Action="urn:getUserRealmInfoResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getUserRealmInfoUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <wsdl:input message="tns:listUsersRequest" wsaw:Action="urn:listUsers"/>
      <wsdl:output message="tns:listUsersResponse" wsaw:Action="urn:listUsersResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listUsersUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="tns:deleteUserRequest" wsaw:Action="urn:deleteUser"/>
      <wsdl:output message="tns:deleteUserResponse" wsaw:Action="urn:deleteUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:deleteUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllRolesNames">
      <wsdl:input message="tns:getAllRolesNamesRequest" wsaw:Action="urn:getAllRolesNames"/>
      <wsdl:output message="tns:getAllRolesNamesResponse" wsaw:Action="urn:getAllRolesNamesResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getAllRolesNamesUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <wsdl:input message="tns:updateRoleNameRequest" wsaw:Action="urn:updateRoleName"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:updateRoleNameUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <wsdl:input message="tns:addRoleRequest" wsaw:Action="urn:addRole"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="bulkImportUsers">
      <wsdl:input message="tns:bulkImportUsersRequest" wsaw:Action="urn:bulkImportUsers"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:bulkImportUsersUserAdminUserAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserAdminSoap11Binding" type="tns:UserAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getUsersOfRole">
      <soap:operation soapAction="urn:getUsersOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPermittedRoleNames">
      <soap:operation soapAction="urn:getAllPermittedRoleNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoveUsersOfRole">
      <soap:operation soapAction="urn:addRemoveUsersOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePasswordByUser">
      <soap:operation soapAction="urn:changePasswordByUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSharedRolesEnabled">
      <soap:operation soapAction="urn:isSharedRolesEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaim">
      <soap:operation soapAction="urn:listUserByClaim" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfUser">
      <soap:operation soapAction="urn:getRolesOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUsersOfRole">
      <soap:operation soapAction="urn:updateUsersOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllUsers">
      <soap:operation soapAction="urn:listAllUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUIPermissions">
      <soap:operation soapAction="urn:getAllUIPermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasMultipleUserStores">
      <soap:operation soapAction="urn:hasMultipleUserStores" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRolesOfUser">
      <soap:operation soapAction="urn:updateRolesOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSharedRoleNames">
      <soap:operation soapAction="urn:getAllSharedRoleNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRoleUIPermission">
      <soap:operation soapAction="urn:setRoleUIPermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolePermissions">
      <soap:operation soapAction="urn:getRolePermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfCurrentUser">
      <soap:operation soapAction="urn:getRolesOfCurrentUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaimWithPermission">
      <soap:operation soapAction="urn:listUserByClaimWithPermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <soap:operation soapAction="urn:deleteRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoveRolesOfUser">
      <soap:operation soapAction="urn:addRemoveRolesOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addInternalRole">
      <soap:operation soapAction="urn:addInternalRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap:operation soapAction="urn:changePassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllUsersWithPermission">
      <soap:operation soapAction="urn:listAllUsersWithPermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRealmInfo">
      <soap:operation soapAction="urn:getUserRealmInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap:operation soapAction="urn:listUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRolesNames">
      <soap:operation soapAction="urn:getAllRolesNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <soap:operation soapAction="urn:updateRoleName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap:operation soapAction="urn:addRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bulkImportUsers">
      <soap:operation soapAction="urn:bulkImportUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserAdminSoap12Binding" type="tns:UserAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getUsersOfRole">
      <soap12:operation soapAction="urn:getUsersOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPermittedRoleNames">
      <soap12:operation soapAction="urn:getAllPermittedRoleNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap12:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoveUsersOfRole">
      <soap12:operation soapAction="urn:addRemoveUsersOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePasswordByUser">
      <soap12:operation soapAction="urn:changePasswordByUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSharedRolesEnabled">
      <soap12:operation soapAction="urn:isSharedRolesEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaim">
      <soap12:operation soapAction="urn:listUserByClaim" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfUser">
      <soap12:operation soapAction="urn:getRolesOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUsersOfRole">
      <soap12:operation soapAction="urn:updateUsersOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllUsers">
      <soap12:operation soapAction="urn:listAllUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUIPermissions">
      <soap12:operation soapAction="urn:getAllUIPermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasMultipleUserStores">
      <soap12:operation soapAction="urn:hasMultipleUserStores" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRolesOfUser">
      <soap12:operation soapAction="urn:updateRolesOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSharedRoleNames">
      <soap12:operation soapAction="urn:getAllSharedRoleNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRoleUIPermission">
      <soap12:operation soapAction="urn:setRoleUIPermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolePermissions">
      <soap12:operation soapAction="urn:getRolePermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfCurrentUser">
      <soap12:operation soapAction="urn:getRolesOfCurrentUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaimWithPermission">
      <soap12:operation soapAction="urn:listUserByClaimWithPermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <soap12:operation soapAction="urn:deleteRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoveRolesOfUser">
      <soap12:operation soapAction="urn:addRemoveRolesOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addInternalRole">
      <soap12:operation soapAction="urn:addInternalRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap12:operation soapAction="urn:changePassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllUsersWithPermission">
      <soap12:operation soapAction="urn:listAllUsersWithPermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRealmInfo">
      <soap12:operation soapAction="urn:getUserRealmInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap12:operation soapAction="urn:listUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap12:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRolesNames">
      <soap12:operation soapAction="urn:getAllRolesNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <soap12:operation soapAction="urn:updateRoleName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap12:operation soapAction="urn:addRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bulkImportUsers">
      <soap12:operation soapAction="urn:bulkImportUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserAdminHttpBinding" type="tns:UserAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getUsersOfRole">
      <http:operation location="getUsersOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPermittedRoleNames">
      <http:operation location="getAllPermittedRoleNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <http:operation location="addUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRemoveUsersOfRole">
      <http:operation location="addRemoveUsersOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changePasswordByUser">
      <http:operation location="changePasswordByUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isSharedRolesEnabled">
      <http:operation location="isSharedRolesEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaim">
      <http:operation location="listUserByClaim"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfUser">
      <http:operation location="getRolesOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateUsersOfRole">
      <http:operation location="updateUsersOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAllUsers">
      <http:operation location="listAllUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllUIPermissions">
      <http:operation location="getAllUIPermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="hasMultipleUserStores">
      <http:operation location="hasMultipleUserStores"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRolesOfUser">
      <http:operation location="updateRolesOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllSharedRoleNames">
      <http:operation location="getAllSharedRoleNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setRoleUIPermission">
      <http:operation location="setRoleUIPermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getRolePermissions">
      <http:operation location="getRolePermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfCurrentUser">
      <http:operation location="getRolesOfCurrentUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaimWithPermission">
      <http:operation location="listUserByClaimWithPermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <http:operation location="deleteRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addRemoveRolesOfUser">
      <http:operation location="addRemoveRolesOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addInternalRole">
      <http:operation location="addInternalRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <http:operation location="changePassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAllUsersWithPermission">
      <http:operation location="listAllUsersWithPermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRealmInfo">
      <http:operation location="getUserRealmInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <http:operation location="listUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <http:operation location="deleteUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRolesNames">
      <http:operation location="getAllRolesNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <http:operation location="updateRoleName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <http:operation location="addRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="bulkImportUsers">
      <http:operation location="bulkImportUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserAdmin">
    <wsdl:port name="UserAdminHttpsSoap11Endpoint" binding="tns:UserAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserAdmin.UserAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserAdminHttpsSoap12Endpoint" binding="tns:UserAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserAdmin.UserAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserAdminHttpsEndpoint" binding="tns:UserAdminHttpBinding">
      <http:address location="https://localhost:9443/services/UserAdmin.UserAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserAdmin.UserAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="ba7a7425-ff4f-42cc-9f18-5502b1c7ec86" isOneWay="false" action="urn:addInternalRole" name="addInternalRole" bindingOperationName="addInternalRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f07d0cb7-daaa-4f3d-9c0b-f76f14c77d19" isOneWay="false" action="urn:addRemoveRolesOfUser" name="addRemoveRolesOfUser" bindingOperationName="addRemoveRolesOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f0769dc-6de1-40ca-a51e-9f8aa252a717" isOneWay="false" action="urn:addRemoveUsersOfRole" name="addRemoveUsersOfRole" bindingOperationName="addRemoveUsersOfRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="266f4270-9681-4691-9fed-6ad036dc43ef" isOneWay="false" action="urn:addRole" name="addRole" bindingOperationName="addRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fb79d2a3-6ae2-4c0e-a276-f2395fa47ef7" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e77fde4b-9324-4536-a446-faa04f7897c2" isOneWay="false" action="urn:bulkImportUsers" name="bulkImportUsers" bindingOperationName="bulkImportUsers" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fe3c050e-55e6-43b1-94f2-d465d868d90b" isOneWay="false" action="urn:changePassword" name="changePassword" bindingOperationName="changePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9dee7e1d-f182-49d6-a640-b18f4c6e6c08" isOneWay="false" action="urn:changePasswordByUser" name="changePasswordByUser" bindingOperationName="changePasswordByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b983dc60-f955-49d5-ba3b-64597be45d25" isOneWay="false" action="urn:deleteRole" name="deleteRole" bindingOperationName="deleteRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="70f17fc8-93aa-46f8-a5a9-cef686b96cf3" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d1f1513-b36e-4460-942d-1df48f781bb3" isOneWay="false" action="urn:getAllPermittedRoleNames" name="getAllPermittedRoleNames" bindingOperationName="getAllPermittedRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e701038-798b-4231-9cb0-eca04cc7440b" isOneWay="false" action="urn:getAllRolesNames" name="getAllRolesNames" bindingOperationName="getAllRolesNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="02ae9b76-d378-4b06-9215-1999bf84ed47" isOneWay="false" action="urn:getAllSharedRoleNames" name="getAllSharedRoleNames" bindingOperationName="getAllSharedRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4d0e6b64-c637-4a19-853f-c15cd9152002" isOneWay="false" action="urn:getAllUIPermissions" name="getAllUIPermissions" bindingOperationName="getAllUIPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b73d5fb-7cb6-4765-9c6f-f12eef92678f" isOneWay="false" action="urn:getRolePermissions" name="getRolePermissions" bindingOperationName="getRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="718df3e9-943b-44f1-892d-18dad3b86949" isOneWay="false" action="urn:getRolesOfCurrentUser" name="getRolesOfCurrentUser" bindingOperationName="getRolesOfCurrentUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5ef4d3d9-1207-4f94-8906-155c79641b15" isOneWay="false" action="urn:getRolesOfUser" name="getRolesOfUser" bindingOperationName="getRolesOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a3a86ab8-e283-48df-8d19-cbbc4a35c6eb" isOneWay="false" action="urn:getUserRealmInfo" name="getUserRealmInfo" bindingOperationName="getUserRealmInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="75b8fc03-a471-49b1-a653-38135207beff" isOneWay="false" action="urn:getUsersOfRole" name="getUsersOfRole" bindingOperationName="getUsersOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4d3c6ec5-2529-4350-8cd7-8c94d863ef38" isOneWay="false" action="urn:hasMultipleUserStores" name="hasMultipleUserStores" bindingOperationName="hasMultipleUserStores" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dc505e01-2b3f-47aa-9463-7d2bd3a4f8b9" isOneWay="false" action="urn:isSharedRolesEnabled" name="isSharedRolesEnabled" bindingOperationName="isSharedRolesEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c2cb44fb-4585-4d53-a01f-6159b861ff00" isOneWay="false" action="urn:listAllUsers" name="listAllUsers" bindingOperationName="listAllUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="95257f38-03a1-4154-bebb-5efc0ccc7e20" isOneWay="false" action="urn:listAllUsersWithPermission" name="listAllUsersWithPermission" bindingOperationName="listAllUsersWithPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="23567edd-a983-47bb-9ec8-31268ed57718" isOneWay="false" action="urn:listUserByClaim" name="listUserByClaim" bindingOperationName="listUserByClaim" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3417df90-5145-4c12-a6de-153edee6db6c" isOneWay="false" action="urn:listUserByClaimWithPermission" name="listUserByClaimWithPermission" bindingOperationName="listUserByClaimWithPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="af47bb2d-cc8c-4972-ad16-6c786d2b6607" isOneWay="false" action="urn:listUsers" name="listUsers" bindingOperationName="listUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b87d9a89-7477-4f8f-9343-a04f7a64138f" isOneWay="false" action="urn:setRoleUIPermission" name="setRoleUIPermission" bindingOperationName="setRoleUIPermission" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff4fedfd-a034-4e7d-bcc2-278b56a59fb9" isOneWay="false" action="urn:updateRoleName" name="updateRoleName" bindingOperationName="updateRoleName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e419f035-a7b7-4394-9f57-dd1d13bd1e32" isOneWay="false" action="urn:updateRolesOfUser" name="updateRolesOfUser" bindingOperationName="updateRolesOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed7f2a98-7948-4e7d-b043-897200b77430" isOneWay="false" action="urn:updateUsersOfRole" name="updateUsersOfRole" bindingOperationName="updateUsersOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="471482e8-3c5a-41df-b1e1-7ecf4744e95d" wsaVersion="NONE" name="UserIdentityManagementAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}UserIdentityManagementAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/UserIdentityManagementAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="6b30693f-e983-412c-9df3-a77e4b7cd055" isOneWay="false" action="urn:changeUserPassword" name="changeUserPassword" bindingOperationName="changeUserPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b909e5d8-3967-4f6b-8d71-8e117c748148" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5ee526e9-ad21-40f4-b0d4-bc8e408aa938" isOneWay="false" action="urn:getAllChallengeQuestions" name="getAllChallengeQuestions" bindingOperationName="getAllChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5f107a14-bf18-43bf-b97e-3f44dff62bec" isOneWay="false" action="urn:getAllPromotedUserChallenge" name="getAllPromotedUserChallenge" bindingOperationName="getAllPromotedUserChallenge" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c1fe4166-8549-438a-ba73-0bb554eb58a6" isOneWay="false" action="urn:getAllUserIdentityClaims" name="getAllUserIdentityClaims" bindingOperationName="getAllUserIdentityClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d21a803f-356e-4ad1-9e52-f5286cdf2eae" isOneWay="false" action="urn:getChallengeQuestionsOfUser" name="getChallengeQuestionsOfUser" bindingOperationName="getChallengeQuestionsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1dc0a5ed-0393-44a5-90b5-12b5930fe263" isOneWay="false" action="urn:isReadOnlyUserStore" name="isReadOnlyUserStore" bindingOperationName="isReadOnlyUserStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b5e65a2e-b0db-4cc7-9613-679841219379" isOneWay="false" action="urn:lockUserAccount" name="lockUserAccount" bindingOperationName="lockUserAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b540770e-0532-4882-a75e-133e76db6443" isOneWay="false" action="urn:resetUserPassword" name="resetUserPassword" bindingOperationName="resetUserPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="989248bf-31a7-4488-b47f-7c15ceaa1271" isOneWay="false" action="urn:setChallengeQuestions" name="setChallengeQuestions" bindingOperationName="setChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1ab38a26-e74b-4d2e-bd43-7ccc1e7c4cc3" isOneWay="false" action="urn:setChallengeQuestionsOfUser" name="setChallengeQuestionsOfUser" bindingOperationName="setChallengeQuestionsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="78140276-341d-45ad-a6a9-a81252f11bd4" isOneWay="false" action="urn:unlockUserAccount" name="unlockUserAccount" bindingOperationName="unlockUserAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="372b3ab9-dd0f-4ec9-ad10-8a818c35d429" isOneWay="false" action="urn:updateUserIdentityClaims" name="updateUserIdentityClaims" bindingOperationName="updateUserIdentityClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c2ea3248-dc37-4da9-9ee9-c0c0170b4ef5" wsaVersion="NONE" name="UserIdentityManagementAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}UserIdentityManagementAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/UserIdentityManagementAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserIdentityManagementAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserIdentityManagementAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2333="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2329="http://mgt.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2330="http://base.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserIdentityManagementAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:ax2334="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2332="http://mgt.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:element name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityMgtServiceException" nillable="true" type="ax2329:IdentityMgtServiceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="lockUserAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resetUserPassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPromotedUserChallenge">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPromotedUserChallengeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2333:UserChallengesSetDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setChallengeQuestionsOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="challengesDTOs" nillable="true" type="ax2333:UserChallengesDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateUserIdentityClaims">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userIdentityClaims" nillable="true" type="ax2333:UserIdentityClaimDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unlockUserAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="notificationType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUserIdentityClaims">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUserIdentityClaimsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2333:UserIdentityClaimDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeUserPassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyUserStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyUserStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllChallengeQuestions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllChallengeQuestionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2333:ChallengeQuestionDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setChallengeQuestions">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="challengeQuestionDTOs" nillable="true" type="ax2333:ChallengeQuestionDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getChallengeQuestionsOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getChallengeQuestionsOfUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2333:UserChallengesDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.identity.carbon.wso2.org/xsd">
      <xs:complexType name="UserChallengesSetDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="challengesDTOs" nillable="true" type="ax2333:UserChallengesDTO"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserChallengesDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="answer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="order" type="xs:int"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element minOccurs="0" name="question" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="verfied" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserIdentityClaimDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ChallengeQuestionDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="order" type="xs:int"/>
          <xs:element minOccurs="0" name="promoteQuestion" type="xs:boolean"/>
          <xs:element minOccurs="0" name="question" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="questionSetId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2331="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityMgtServiceException">
        <xs:complexContent>
          <xs:extension base="ax2330:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="changeUserPasswordRequest">
    <wsdl:part name="parameters" element="ns:changeUserPassword"/>
  </wsdl:message>
  <wsdl:message name="changeUserPasswordResponse"/>
  <wsdl:message name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
    <wsdl:part name="parameters" element="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
  </wsdl:message>
  <wsdl:message name="resetUserPasswordRequest">
    <wsdl:part name="parameters" element="ns:resetUserPassword"/>
  </wsdl:message>
  <wsdl:message name="resetUserPasswordResponse"/>
  <wsdl:message name="isReadOnlyUserStoreRequest">
    <wsdl:part name="parameters" element="ns:isReadOnlyUserStore"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyUserStoreResponse">
    <wsdl:part name="parameters" element="ns:isReadOnlyUserStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="getChallengeQuestionsOfUserRequest">
    <wsdl:part name="parameters" element="ns:getChallengeQuestionsOfUser"/>
  </wsdl:message>
  <wsdl:message name="getChallengeQuestionsOfUserResponse">
    <wsdl:part name="parameters" element="ns:getChallengeQuestionsOfUserResponse"/>
  </wsdl:message>
  <wsdl:message name="unlockUserAccountRequest">
    <wsdl:part name="parameters" element="ns:unlockUserAccount"/>
  </wsdl:message>
  <wsdl:message name="unlockUserAccountResponse"/>
  <wsdl:message name="getAllChallengeQuestionsRequest">
    <wsdl:part name="parameters" element="ns:getAllChallengeQuestions"/>
  </wsdl:message>
  <wsdl:message name="getAllChallengeQuestionsResponse">
    <wsdl:part name="parameters" element="ns:getAllChallengeQuestionsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateUserIdentityClaimsRequest">
    <wsdl:part name="parameters" element="ns:updateUserIdentityClaims"/>
  </wsdl:message>
  <wsdl:message name="updateUserIdentityClaimsResponse"/>
  <wsdl:message name="lockUserAccountRequest">
    <wsdl:part name="parameters" element="ns:lockUserAccount"/>
  </wsdl:message>
  <wsdl:message name="lockUserAccountResponse"/>
  <wsdl:message name="getAllUserIdentityClaimsRequest">
    <wsdl:part name="parameters" element="ns:getAllUserIdentityClaims"/>
  </wsdl:message>
  <wsdl:message name="getAllUserIdentityClaimsResponse">
    <wsdl:part name="parameters" element="ns:getAllUserIdentityClaimsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserRequest">
    <wsdl:part name="parameters" element="ns:deleteUser"/>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse"/>
  <wsdl:message name="setChallengeQuestionsOfUserRequest">
    <wsdl:part name="parameters" element="ns:setChallengeQuestionsOfUser"/>
  </wsdl:message>
  <wsdl:message name="setChallengeQuestionsOfUserResponse"/>
  <wsdl:message name="setChallengeQuestionsRequest">
    <wsdl:part name="parameters" element="ns:setChallengeQuestions"/>
  </wsdl:message>
  <wsdl:message name="setChallengeQuestionsResponse"/>
  <wsdl:message name="getAllPromotedUserChallengeRequest">
    <wsdl:part name="parameters" element="ns:getAllPromotedUserChallenge"/>
  </wsdl:message>
  <wsdl:message name="getAllPromotedUserChallengeResponse">
    <wsdl:part name="parameters" element="ns:getAllPromotedUserChallengeResponse"/>
  </wsdl:message>
  <wsdl:portType name="UserIdentityManagementAdminServicePortType">
    <wsdl:operation name="changeUserPassword">
      <wsdl:input message="ns:changeUserPasswordRequest" wsaw:Action="urn:changeUserPassword"/>
      <wsdl:output message="ns:changeUserPasswordResponse" wsaw:Action="urn:changeUserPasswordResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:changeUserPasswordUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="resetUserPassword">
      <wsdl:input message="ns:resetUserPasswordRequest" wsaw:Action="urn:resetUserPassword"/>
      <wsdl:output message="ns:resetUserPasswordResponse" wsaw:Action="urn:resetUserPasswordResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:resetUserPasswordUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <wsdl:input message="ns:isReadOnlyUserStoreRequest" wsaw:Action="urn:isReadOnlyUserStore"/>
      <wsdl:output message="ns:isReadOnlyUserStoreResponse" wsaw:Action="urn:isReadOnlyUserStoreResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:isReadOnlyUserStoreUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getChallengeQuestionsOfUser">
      <wsdl:input message="ns:getChallengeQuestionsOfUserRequest" wsaw:Action="urn:getChallengeQuestionsOfUser"/>
      <wsdl:output message="ns:getChallengeQuestionsOfUserResponse" wsaw:Action="urn:getChallengeQuestionsOfUserResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:getChallengeQuestionsOfUserUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="unlockUserAccount">
      <wsdl:input message="ns:unlockUserAccountRequest" wsaw:Action="urn:unlockUserAccount"/>
      <wsdl:output message="ns:unlockUserAccountResponse" wsaw:Action="urn:unlockUserAccountResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:unlockUserAccountUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <wsdl:input message="ns:getAllChallengeQuestionsRequest" wsaw:Action="urn:getAllChallengeQuestions"/>
      <wsdl:output message="ns:getAllChallengeQuestionsResponse" wsaw:Action="urn:getAllChallengeQuestionsResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:getAllChallengeQuestionsUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateUserIdentityClaims">
      <wsdl:input message="ns:updateUserIdentityClaimsRequest" wsaw:Action="urn:updateUserIdentityClaims"/>
      <wsdl:output message="ns:updateUserIdentityClaimsResponse" wsaw:Action="urn:updateUserIdentityClaimsResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:updateUserIdentityClaimsUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="lockUserAccount">
      <wsdl:input message="ns:lockUserAccountRequest" wsaw:Action="urn:lockUserAccount"/>
      <wsdl:output message="ns:lockUserAccountResponse" wsaw:Action="urn:lockUserAccountResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:lockUserAccountUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllUserIdentityClaims">
      <wsdl:input message="ns:getAllUserIdentityClaimsRequest" wsaw:Action="urn:getAllUserIdentityClaims"/>
      <wsdl:output message="ns:getAllUserIdentityClaimsResponse" wsaw:Action="urn:getAllUserIdentityClaimsResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:getAllUserIdentityClaimsUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="ns:deleteUserRequest" wsaw:Action="urn:deleteUser"/>
      <wsdl:output message="ns:deleteUserResponse" wsaw:Action="urn:deleteUserResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:deleteUserUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestionsOfUser">
      <wsdl:input message="ns:setChallengeQuestionsOfUserRequest" wsaw:Action="urn:setChallengeQuestionsOfUser"/>
      <wsdl:output message="ns:setChallengeQuestionsOfUserResponse" wsaw:Action="urn:setChallengeQuestionsOfUserResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:setChallengeQuestionsOfUserUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestions">
      <wsdl:input message="ns:setChallengeQuestionsRequest" wsaw:Action="urn:setChallengeQuestions"/>
      <wsdl:output message="ns:setChallengeQuestionsResponse" wsaw:Action="urn:setChallengeQuestionsResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:setChallengeQuestionsUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPromotedUserChallenge">
      <wsdl:input message="ns:getAllPromotedUserChallengeRequest" wsaw:Action="urn:getAllPromotedUserChallenge"/>
      <wsdl:output message="ns:getAllPromotedUserChallengeResponse" wsaw:Action="urn:getAllPromotedUserChallengeResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:getAllPromotedUserChallengeUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserIdentityManagementAdminServiceSoap11Binding" type="ns:UserIdentityManagementAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="changeUserPassword">
      <soap:operation soapAction="urn:changeUserPassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetUserPassword">
      <soap:operation soapAction="urn:resetUserPassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <soap:operation soapAction="urn:isReadOnlyUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChallengeQuestionsOfUser">
      <soap:operation soapAction="urn:getChallengeQuestionsOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlockUserAccount">
      <soap:operation soapAction="urn:unlockUserAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <soap:operation soapAction="urn:getAllChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserIdentityClaims">
      <soap:operation soapAction="urn:updateUserIdentityClaims" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lockUserAccount">
      <soap:operation soapAction="urn:lockUserAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserIdentityClaims">
      <soap:operation soapAction="urn:getAllUserIdentityClaims" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestionsOfUser">
      <soap:operation soapAction="urn:setChallengeQuestionsOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestions">
      <soap:operation soapAction="urn:setChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPromotedUserChallenge">
      <soap:operation soapAction="urn:getAllPromotedUserChallenge" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserIdentityManagementAdminServiceSoap12Binding" type="ns:UserIdentityManagementAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="changeUserPassword">
      <soap12:operation soapAction="urn:changeUserPassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetUserPassword">
      <soap12:operation soapAction="urn:resetUserPassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <soap12:operation soapAction="urn:isReadOnlyUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChallengeQuestionsOfUser">
      <soap12:operation soapAction="urn:getChallengeQuestionsOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlockUserAccount">
      <soap12:operation soapAction="urn:unlockUserAccount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <soap12:operation soapAction="urn:getAllChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserIdentityClaims">
      <soap12:operation soapAction="urn:updateUserIdentityClaims" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lockUserAccount">
      <soap12:operation soapAction="urn:lockUserAccount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserIdentityClaims">
      <soap12:operation soapAction="urn:getAllUserIdentityClaims" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap12:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestionsOfUser">
      <soap12:operation soapAction="urn:setChallengeQuestionsOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestions">
      <soap12:operation soapAction="urn:setChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPromotedUserChallenge">
      <soap12:operation soapAction="urn:getAllPromotedUserChallenge" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserIdentityManagementAdminServiceHttpBinding" type="ns:UserIdentityManagementAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="changeUserPassword">
      <http:operation location="changeUserPassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resetUserPassword">
      <http:operation location="resetUserPassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <http:operation location="isReadOnlyUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getChallengeQuestionsOfUser">
      <http:operation location="getChallengeQuestionsOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unlockUserAccount">
      <http:operation location="unlockUserAccount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <http:operation location="getAllChallengeQuestions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateUserIdentityClaims">
      <http:operation location="updateUserIdentityClaims"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="lockUserAccount">
      <http:operation location="lockUserAccount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllUserIdentityClaims">
      <http:operation location="getAllUserIdentityClaims"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <http:operation location="deleteUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestionsOfUser">
      <http:operation location="setChallengeQuestionsOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestions">
      <http:operation location="setChallengeQuestions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPromotedUserChallenge">
      <http:operation location="getAllPromotedUserChallenge"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserIdentityManagementAdminService">
    <wsdl:port name="UserIdentityManagementAdminServiceHttpsSoap11Endpoint" binding="ns:UserIdentityManagementAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserIdentityManagementAdminServiceHttpsSoap12Endpoint" binding="ns:UserIdentityManagementAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserIdentityManagementAdminServiceHttpsEndpoint" binding="ns:UserIdentityManagementAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="8bf0399f-11e0-46db-8e62-76b8f70cc2a2" isOneWay="false" action="urn:changeUserPassword" name="changeUserPassword" bindingOperationName="changeUserPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="534a9556-fed9-4471-9813-14b87b14ac7b" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b38fce73-3373-4d3a-b959-284d8f2bbeeb" isOneWay="false" action="urn:getAllChallengeQuestions" name="getAllChallengeQuestions" bindingOperationName="getAllChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9df65cec-6fe6-4b1d-a63a-9b3aa3774033" isOneWay="false" action="urn:getAllPromotedUserChallenge" name="getAllPromotedUserChallenge" bindingOperationName="getAllPromotedUserChallenge" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e4f200aa-609c-45a7-8a92-a827b3e28588" isOneWay="false" action="urn:getAllUserIdentityClaims" name="getAllUserIdentityClaims" bindingOperationName="getAllUserIdentityClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a0e10d8-d55b-4a38-a7e1-244bf898d2a4" isOneWay="false" action="urn:getChallengeQuestionsOfUser" name="getChallengeQuestionsOfUser" bindingOperationName="getChallengeQuestionsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="006ce742-7ba0-4ca2-82f3-8a355da34cb8" isOneWay="false" action="urn:isReadOnlyUserStore" name="isReadOnlyUserStore" bindingOperationName="isReadOnlyUserStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d59ef7b-7059-45e7-b66d-dbf716891517" isOneWay="false" action="urn:lockUserAccount" name="lockUserAccount" bindingOperationName="lockUserAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b2ae27f8-96f2-46fb-a006-b62efbf81968" isOneWay="false" action="urn:resetUserPassword" name="resetUserPassword" bindingOperationName="resetUserPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="428bd143-f390-45ce-9df4-b24c77e02302" isOneWay="false" action="urn:setChallengeQuestions" name="setChallengeQuestions" bindingOperationName="setChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="da8f7daf-0a1f-47ae-990a-e0441a0a17cc" isOneWay="false" action="urn:setChallengeQuestionsOfUser" name="setChallengeQuestionsOfUser" bindingOperationName="setChallengeQuestionsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="74c0b690-0e6b-4c2d-85ca-2bcd77b5de0f" isOneWay="false" action="urn:unlockUserAccount" name="unlockUserAccount" bindingOperationName="unlockUserAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d8a49245-3b03-4947-a0c0-1d90218ae42e" isOneWay="false" action="urn:updateUserIdentityClaims" name="updateUserIdentityClaims" bindingOperationName="updateUserIdentityClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1b90bfe4-013c-4e4d-a409-e384062b66b0" wsaVersion="NONE" name="UserInformationRecoveryServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}UserInformationRecoveryServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/UserInformationRecoveryService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="08bb32b4-3203-49fd-ac6a-fed3442698de" isOneWay="false" action="urn:confirmUserSelfRegistration" name="confirmUserSelfRegistration" bindingOperationName="confirmUserSelfRegistration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dbfec084-f822-4698-bc0c-e89835002ccc" isOneWay="false" action="urn:getAllChallengeQuestions" name="getAllChallengeQuestions" bindingOperationName="getAllChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a8510fde-1080-4b33-b362-409874190474" isOneWay="false" action="urn:getCaptcha" name="getCaptcha" bindingOperationName="getCaptcha" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e1cda418-fed9-4de4-87f9-b95ccea93df9" isOneWay="false" action="urn:getUserChallengeQuestion" name="getUserChallengeQuestion" bindingOperationName="getUserChallengeQuestion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fd47527b-dc3d-49e0-9a6f-1f565264b7b0" isOneWay="false" action="urn:getUserChallengeQuestionIds" name="getUserChallengeQuestionIds" bindingOperationName="getUserChallengeQuestionIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8a74aa47-1c23-43b9-bd5c-898f3916a2b8" isOneWay="false" action="urn:getUserIdentitySupportedClaims" name="getUserIdentitySupportedClaims" bindingOperationName="getUserIdentitySupportedClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3e8fe10f-43a1-4a1f-8afa-e1ffd09085ae" isOneWay="false" action="urn:registerUser" name="registerUser" bindingOperationName="registerUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3dd45358-ee70-4160-a525-b5cff4b1c226" isOneWay="false" action="urn:resendSignUpConfiramtionCode" name="resendSignUpConfiramtionCode" bindingOperationName="resendSignUpConfiramtionCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="335efaf0-9ec1-4d99-9481-2815b671605a" isOneWay="false" action="urn:sendRecoveryNotification" name="sendRecoveryNotification" bindingOperationName="sendRecoveryNotification" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7963482e-980e-459d-b017-d282d41e349a" isOneWay="false" action="urn:updatePassword" name="updatePassword" bindingOperationName="updatePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c13c7b0-7c9a-4a87-bc44-9485ae526a59" isOneWay="false" action="urn:verifyAccount" name="verifyAccount" bindingOperationName="verifyAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9cabc9f-dc5f-4e98-a5fa-60b49ae5b11d" isOneWay="false" action="urn:verifyConfirmationCode" name="verifyConfirmationCode" bindingOperationName="verifyConfirmationCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="17167a4d-b228-4103-bf81-f3cccd0b7ada" isOneWay="false" action="urn:verifyUser" name="verifyUser" bindingOperationName="verifyUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e2797a58-fceb-4ac1-937e-63d11f78b461" isOneWay="false" action="urn:verifyUserChallengeAnswer" name="verifyUserChallengeAnswer" bindingOperationName="verifyUserChallengeAnswer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d58d990e-1789-4e7d-823f-ca86a0a3b298" wsaVersion="NONE" name="UserInformationRecoveryServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}UserInformationRecoveryServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/UserInformationRecoveryService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserInformationRecoveryService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserInformationRecoveryService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2313="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2315="http://beans.mgt.captcha.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2317="http://beans.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2318="http://util.java/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2310="http://base.identity.carbon.wso2.org/xsd" xmlns:ax2309="http://mgt.identity.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserInformationRecoveryService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.mgt.captcha.carbon.wso2.org/xsd">
      <xs:complexType name="CaptchaInfoBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="imagePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="secretKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userAnswer" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:ax2322="http://base.identity.carbon.wso2.org/xsd" xmlns:ax2312="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2314="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2316="http://beans.mgt.captcha.carbon.wso2.org/xsd" xmlns:ax2321="http://beans.mgt.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.mgt.captcha.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:element name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityMgtServiceException" nillable="true" type="ax2312:IdentityMgtServiceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2313:UserIdentityClaimDTO"/>
            <xs:element minOccurs="0" name="captcha" nillable="true" type="ax2315:CaptchaInfoBean"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyAccountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2317:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2313:UserIdentityClaimDTO"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2317:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resendSignUpConfiramtionCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resendSignUpConfiramtionCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2317:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="confirmUserSelfRegistration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="captcha" nillable="true" type="ax2315:CaptchaInfoBean"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="confirmUserSelfRegistrationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2317:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UserInformationRecoveryServiceIdentityException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityException" nillable="true" type="ax2322:IdentityException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIdentitySupportedClaims">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialect" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIdentitySupportedClaimsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2313:UserIdentityClaimDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="captcha" nillable="true" type="ax2315:CaptchaInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2317:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCaptcha">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCaptchaResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2315:CaptchaInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendRecoveryNotification">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="notificationType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendRecoveryNotificationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2317:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllChallengeQuestions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllChallengeQuestionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2313:ChallengeQuestionDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyConfirmationCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="captcha" nillable="true" type="ax2315:CaptchaInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyConfirmationCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2317:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="confirmationCode" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePasswordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2317:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserChallengeQuestion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="confirmation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="questionId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserChallengeQuestionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2313:UserChallengesDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserChallengeQuestionIds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="confirmation" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserChallengeQuestionIdsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2313:ChallengeQuestionIdsDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyUserChallengeAnswer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="confirmation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="questionId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="answer" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyUserChallengeAnswerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2317:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.java/xsd">
      <xs:complexType abstract="true" name="Map">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2320="http://dto.mgt.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://dto.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="VerificationBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationData" nillable="true" type="ax2313:NotificationDataDTO"/>
          <xs:element minOccurs="0" name="redirectPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="verified" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2319="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType name="UserIdentityClaimDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NotificationDataDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notification" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationAddress" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationSent" type="xs:boolean"/>
          <xs:element minOccurs="0" name="notificationSubject" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="transportHeaders" nillable="true" type="ax2318:Map"/>
          <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ChallengeQuestionDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="order" type="xs:int"/>
          <xs:element minOccurs="0" name="promoteQuestion" type="xs:boolean"/>
          <xs:element minOccurs="0" name="question" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="questionSetId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserChallengesDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="answer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="order" type="xs:int"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element minOccurs="0" name="question" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="verfied" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ChallengeQuestionIdsDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ids" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2311="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityMgtServiceException">
        <xs:complexContent>
          <xs:extension base="ax2311:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updatePasswordRequest">
    <wsdl:part name="parameters" element="ns:updatePassword"/>
  </wsdl:message>
  <wsdl:message name="updatePasswordResponse">
    <wsdl:part name="parameters" element="ns:updatePasswordResponse"/>
  </wsdl:message>
  <wsdl:message name="UserInformationRecoveryServiceIdentityMgtServiceException">
    <wsdl:part name="parameters" element="ns:UserInformationRecoveryServiceIdentityMgtServiceException"/>
  </wsdl:message>
  <wsdl:message name="verifyAccountRequest">
    <wsdl:part name="parameters" element="ns:verifyAccount"/>
  </wsdl:message>
  <wsdl:message name="verifyAccountResponse">
    <wsdl:part name="parameters" element="ns:verifyAccountResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserChallengeQuestionRequest">
    <wsdl:part name="parameters" element="ns:getUserChallengeQuestion"/>
  </wsdl:message>
  <wsdl:message name="getUserChallengeQuestionResponse">
    <wsdl:part name="parameters" element="ns:getUserChallengeQuestionResponse"/>
  </wsdl:message>
  <wsdl:message name="sendRecoveryNotificationRequest">
    <wsdl:part name="parameters" element="ns:sendRecoveryNotification"/>
  </wsdl:message>
  <wsdl:message name="sendRecoveryNotificationResponse">
    <wsdl:part name="parameters" element="ns:sendRecoveryNotificationResponse"/>
  </wsdl:message>
  <wsdl:message name="verifyUserRequest">
    <wsdl:part name="parameters" element="ns:verifyUser"/>
  </wsdl:message>
  <wsdl:message name="verifyUserResponse">
    <wsdl:part name="parameters" element="ns:verifyUserResponse"/>
  </wsdl:message>
  <wsdl:message name="resendSignUpConfiramtionCodeRequest">
    <wsdl:part name="parameters" element="ns:resendSignUpConfiramtionCode"/>
  </wsdl:message>
  <wsdl:message name="resendSignUpConfiramtionCodeResponse">
    <wsdl:part name="parameters" element="ns:resendSignUpConfiramtionCodeResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllChallengeQuestionsRequest">
    <wsdl:part name="parameters" element="ns:getAllChallengeQuestions"/>
  </wsdl:message>
  <wsdl:message name="getAllChallengeQuestionsResponse">
    <wsdl:part name="parameters" element="ns:getAllChallengeQuestionsResponse"/>
  </wsdl:message>
  <wsdl:message name="verifyUserChallengeAnswerRequest">
    <wsdl:part name="parameters" element="ns:verifyUserChallengeAnswer"/>
  </wsdl:message>
  <wsdl:message name="verifyUserChallengeAnswerResponse">
    <wsdl:part name="parameters" element="ns:verifyUserChallengeAnswerResponse"/>
  </wsdl:message>
  <wsdl:message name="confirmUserSelfRegistrationRequest">
    <wsdl:part name="parameters" element="ns:confirmUserSelfRegistration"/>
  </wsdl:message>
  <wsdl:message name="confirmUserSelfRegistrationResponse">
    <wsdl:part name="parameters" element="ns:confirmUserSelfRegistrationResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserChallengeQuestionIdsRequest">
    <wsdl:part name="parameters" element="ns:getUserChallengeQuestionIds"/>
  </wsdl:message>
  <wsdl:message name="getUserChallengeQuestionIdsResponse">
    <wsdl:part name="parameters" element="ns:getUserChallengeQuestionIdsResponse"/>
  </wsdl:message>
  <wsdl:message name="getCaptchaRequest">
    <wsdl:part name="parameters" element="ns:getCaptcha"/>
  </wsdl:message>
  <wsdl:message name="getCaptchaResponse">
    <wsdl:part name="parameters" element="ns:getCaptchaResponse"/>
  </wsdl:message>
  <wsdl:message name="registerUserRequest">
    <wsdl:part name="parameters" element="ns:registerUser"/>
  </wsdl:message>
  <wsdl:message name="registerUserResponse">
    <wsdl:part name="parameters" element="ns:registerUserResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserIdentitySupportedClaimsRequest">
    <wsdl:part name="parameters" element="ns:getUserIdentitySupportedClaims"/>
  </wsdl:message>
  <wsdl:message name="getUserIdentitySupportedClaimsResponse">
    <wsdl:part name="parameters" element="ns:getUserIdentitySupportedClaimsResponse"/>
  </wsdl:message>
  <wsdl:message name="UserInformationRecoveryServiceIdentityException">
    <wsdl:part name="parameters" element="ns:UserInformationRecoveryServiceIdentityException"/>
  </wsdl:message>
  <wsdl:message name="verifyConfirmationCodeRequest">
    <wsdl:part name="parameters" element="ns:verifyConfirmationCode"/>
  </wsdl:message>
  <wsdl:message name="verifyConfirmationCodeResponse">
    <wsdl:part name="parameters" element="ns:verifyConfirmationCodeResponse"/>
  </wsdl:message>
  <wsdl:portType name="UserInformationRecoveryServicePortType">
    <wsdl:operation name="updatePassword">
      <wsdl:input message="ns:updatePasswordRequest" wsaw:Action="urn:updatePassword"/>
      <wsdl:output message="ns:updatePasswordResponse" wsaw:Action="urn:updatePasswordResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:updatePasswordUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyAccount">
      <wsdl:input message="ns:verifyAccountRequest" wsaw:Action="urn:verifyAccount"/>
      <wsdl:output message="ns:verifyAccountResponse" wsaw:Action="urn:verifyAccountResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:verifyAccountUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestion">
      <wsdl:input message="ns:getUserChallengeQuestionRequest" wsaw:Action="urn:getUserChallengeQuestion"/>
      <wsdl:output message="ns:getUserChallengeQuestionResponse" wsaw:Action="urn:getUserChallengeQuestionResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:getUserChallengeQuestionUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="sendRecoveryNotification">
      <wsdl:input message="ns:sendRecoveryNotificationRequest" wsaw:Action="urn:sendRecoveryNotification"/>
      <wsdl:output message="ns:sendRecoveryNotificationResponse" wsaw:Action="urn:sendRecoveryNotificationResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:sendRecoveryNotificationUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyUser">
      <wsdl:input message="ns:verifyUserRequest" wsaw:Action="urn:verifyUser"/>
      <wsdl:output message="ns:verifyUserResponse" wsaw:Action="urn:verifyUserResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:verifyUserUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="resendSignUpConfiramtionCode">
      <wsdl:input message="ns:resendSignUpConfiramtionCodeRequest" wsaw:Action="urn:resendSignUpConfiramtionCode"/>
      <wsdl:output message="ns:resendSignUpConfiramtionCodeResponse" wsaw:Action="urn:resendSignUpConfiramtionCodeResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:resendSignUpConfiramtionCodeUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <wsdl:input message="ns:getAllChallengeQuestionsRequest" wsaw:Action="urn:getAllChallengeQuestions"/>
      <wsdl:output message="ns:getAllChallengeQuestionsResponse" wsaw:Action="urn:getAllChallengeQuestionsResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:getAllChallengeQuestionsUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyUserChallengeAnswer">
      <wsdl:input message="ns:verifyUserChallengeAnswerRequest" wsaw:Action="urn:verifyUserChallengeAnswer"/>
      <wsdl:output message="ns:verifyUserChallengeAnswerResponse" wsaw:Action="urn:verifyUserChallengeAnswerResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:verifyUserChallengeAnswerUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="confirmUserSelfRegistration">
      <wsdl:input message="ns:confirmUserSelfRegistrationRequest" wsaw:Action="urn:confirmUserSelfRegistration"/>
      <wsdl:output message="ns:confirmUserSelfRegistrationResponse" wsaw:Action="urn:confirmUserSelfRegistrationResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:confirmUserSelfRegistrationUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestionIds">
      <wsdl:input message="ns:getUserChallengeQuestionIdsRequest" wsaw:Action="urn:getUserChallengeQuestionIds"/>
      <wsdl:output message="ns:getUserChallengeQuestionIdsResponse" wsaw:Action="urn:getUserChallengeQuestionIdsResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:getUserChallengeQuestionIdsUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCaptcha">
      <wsdl:input message="ns:getCaptchaRequest" wsaw:Action="urn:getCaptcha"/>
      <wsdl:output message="ns:getCaptchaResponse" wsaw:Action="urn:getCaptchaResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:getCaptchaUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="registerUser">
      <wsdl:input message="ns:registerUserRequest" wsaw:Action="urn:registerUser"/>
      <wsdl:output message="ns:registerUserResponse" wsaw:Action="urn:registerUserResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:registerUserUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentitySupportedClaims">
      <wsdl:input message="ns:getUserIdentitySupportedClaimsRequest" wsaw:Action="urn:getUserIdentitySupportedClaims"/>
      <wsdl:output message="ns:getUserIdentitySupportedClaimsResponse" wsaw:Action="urn:getUserIdentitySupportedClaimsResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityException" name="UserInformationRecoveryServiceIdentityException" wsaw:Action="urn:getUserIdentitySupportedClaimsUserInformationRecoveryServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyConfirmationCode">
      <wsdl:input message="ns:verifyConfirmationCodeRequest" wsaw:Action="urn:verifyConfirmationCode"/>
      <wsdl:output message="ns:verifyConfirmationCodeResponse" wsaw:Action="urn:verifyConfirmationCodeResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:verifyConfirmationCodeUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserInformationRecoveryServiceSoap11Binding" type="ns:UserInformationRecoveryServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updatePassword">
      <soap:operation soapAction="urn:updatePassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyAccount">
      <soap:operation soapAction="urn:verifyAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestion">
      <soap:operation soapAction="urn:getUserChallengeQuestion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendRecoveryNotification">
      <soap:operation soapAction="urn:sendRecoveryNotification" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyUser">
      <soap:operation soapAction="urn:verifyUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resendSignUpConfiramtionCode">
      <soap:operation soapAction="urn:resendSignUpConfiramtionCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <soap:operation soapAction="urn:getAllChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyUserChallengeAnswer">
      <soap:operation soapAction="urn:verifyUserChallengeAnswer" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="confirmUserSelfRegistration">
      <soap:operation soapAction="urn:confirmUserSelfRegistration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestionIds">
      <soap:operation soapAction="urn:getUserChallengeQuestionIds" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCaptcha">
      <soap:operation soapAction="urn:getCaptcha" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerUser">
      <soap:operation soapAction="urn:registerUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentitySupportedClaims">
      <soap:operation soapAction="urn:getUserIdentitySupportedClaims" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyConfirmationCode">
      <soap:operation soapAction="urn:verifyConfirmationCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserInformationRecoveryServiceSoap12Binding" type="ns:UserInformationRecoveryServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updatePassword">
      <soap12:operation soapAction="urn:updatePassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyAccount">
      <soap12:operation soapAction="urn:verifyAccount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestion">
      <soap12:operation soapAction="urn:getUserChallengeQuestion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendRecoveryNotification">
      <soap12:operation soapAction="urn:sendRecoveryNotification" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyUser">
      <soap12:operation soapAction="urn:verifyUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resendSignUpConfiramtionCode">
      <soap12:operation soapAction="urn:resendSignUpConfiramtionCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <soap12:operation soapAction="urn:getAllChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyUserChallengeAnswer">
      <soap12:operation soapAction="urn:verifyUserChallengeAnswer" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="confirmUserSelfRegistration">
      <soap12:operation soapAction="urn:confirmUserSelfRegistration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestionIds">
      <soap12:operation soapAction="urn:getUserChallengeQuestionIds" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCaptcha">
      <soap12:operation soapAction="urn:getCaptcha" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerUser">
      <soap12:operation soapAction="urn:registerUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentitySupportedClaims">
      <soap12:operation soapAction="urn:getUserIdentitySupportedClaims" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyConfirmationCode">
      <soap12:operation soapAction="urn:verifyConfirmationCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserInformationRecoveryServiceHttpBinding" type="ns:UserInformationRecoveryServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updatePassword">
      <http:operation location="updatePassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyAccount">
      <http:operation location="verifyAccount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestion">
      <http:operation location="getUserChallengeQuestion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendRecoveryNotification">
      <http:operation location="sendRecoveryNotification"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyUser">
      <http:operation location="verifyUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resendSignUpConfiramtionCode">
      <http:operation location="resendSignUpConfiramtionCode"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <http:operation location="getAllChallengeQuestions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyUserChallengeAnswer">
      <http:operation location="verifyUserChallengeAnswer"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="confirmUserSelfRegistration">
      <http:operation location="confirmUserSelfRegistration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestionIds">
      <http:operation location="getUserChallengeQuestionIds"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCaptcha">
      <http:operation location="getCaptcha"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerUser">
      <http:operation location="registerUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentitySupportedClaims">
      <http:operation location="getUserIdentitySupportedClaims"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyConfirmationCode">
      <http:operation location="verifyConfirmationCode"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserInformationRecoveryService">
    <wsdl:port name="UserInformationRecoveryServiceHttpsSoap11Endpoint" binding="ns:UserInformationRecoveryServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserInformationRecoveryServiceHttpsSoap12Endpoint" binding="ns:UserInformationRecoveryServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserInformationRecoveryServiceHttpsEndpoint" binding="ns:UserInformationRecoveryServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="727b8afe-2e59-4c09-a6b0-13d3e500bf7c" isOneWay="false" action="urn:confirmUserSelfRegistration" name="confirmUserSelfRegistration" bindingOperationName="confirmUserSelfRegistration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="004963f0-6f27-4c89-b072-efb1f3e51541" isOneWay="false" action="urn:getAllChallengeQuestions" name="getAllChallengeQuestions" bindingOperationName="getAllChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4d7313fa-4ba9-4ea8-960d-129667fd7d5f" isOneWay="false" action="urn:getCaptcha" name="getCaptcha" bindingOperationName="getCaptcha" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="27f06444-8402-44a1-82e3-442ad2358420" isOneWay="false" action="urn:getUserChallengeQuestion" name="getUserChallengeQuestion" bindingOperationName="getUserChallengeQuestion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2ef289d7-544a-45d4-959f-af2a7ee26494" isOneWay="false" action="urn:getUserChallengeQuestionIds" name="getUserChallengeQuestionIds" bindingOperationName="getUserChallengeQuestionIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="addbe17c-5305-457d-9edc-8b28369dfae6" isOneWay="false" action="urn:getUserIdentitySupportedClaims" name="getUserIdentitySupportedClaims" bindingOperationName="getUserIdentitySupportedClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="463a244f-6d18-4401-9039-ffa83869bd1f" isOneWay="false" action="urn:registerUser" name="registerUser" bindingOperationName="registerUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="660c21c3-8fcc-4188-acb0-5b0183f03ad6" isOneWay="false" action="urn:resendSignUpConfiramtionCode" name="resendSignUpConfiramtionCode" bindingOperationName="resendSignUpConfiramtionCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2716f60f-c117-4bea-88c4-a4ea185c96eb" isOneWay="false" action="urn:sendRecoveryNotification" name="sendRecoveryNotification" bindingOperationName="sendRecoveryNotification" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e06e44d7-530f-4d79-8161-72acd3f8bd3a" isOneWay="false" action="urn:updatePassword" name="updatePassword" bindingOperationName="updatePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6cdf1bee-5a1a-4a0a-8463-f730bf8acdc1" isOneWay="false" action="urn:verifyAccount" name="verifyAccount" bindingOperationName="verifyAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f5800b8-7629-476f-a4bf-975bd495124f" isOneWay="false" action="urn:verifyConfirmationCode" name="verifyConfirmationCode" bindingOperationName="verifyConfirmationCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dfd786fb-37dc-41d0-a48c-d32f79c5fc40" isOneWay="false" action="urn:verifyUser" name="verifyUser" bindingOperationName="verifyUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c068b47-ad97-4a09-b67b-b62d17955c1a" isOneWay="false" action="urn:verifyUserChallengeAnswer" name="verifyUserChallengeAnswer" bindingOperationName="verifyUserChallengeAnswer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4bc85cf3-c8d2-4e7f-a596-b41fa379f5cd" wsaVersion="NONE" name="UserManagementWorkflowServiceSoap11Binding" type="wsdl" bindingName="{http://workflow.mgt.user.carbon.wso2.org}UserManagementWorkflowServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/UserManagementWorkflowService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="4a6ec1f7-ceda-4ff3-8ea9-0429400dc9d6" isOneWay="false" action="urn:listAllEntityNames" name="listAllEntityNames" bindingOperationName="listAllEntityNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2c39d97c-196d-41e1-8801-972ae5c59862" wsaVersion="NONE" name="UserManagementWorkflowServiceSoap12Binding" type="wsdl" bindingName="{http://workflow.mgt.user.carbon.wso2.org}UserManagementWorkflowServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/UserManagementWorkflowService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserManagementWorkflowService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserManagementWorkflowService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://workflow.mgt.user.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2698="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2699="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://workflow.mgt.user.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserManagementWorkflowService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2700="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="WorkflowException">
        <xs:complexContent>
          <xs:extension base="ax2699:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://workflow.mgt.user.carbon.wso2.org" xmlns:ax2701="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:element name="UserManagementWorkflowServiceWorkflowException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="WorkflowException" nillable="true" type="ax2698:WorkflowException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllEntityNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="wfOperationType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="wfStatus" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="entityType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="entityIdFilter" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllEntityNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="listAllEntityNamesRequest">
    <wsdl:part name="parameters" element="ns:listAllEntityNames"/>
  </wsdl:message>
  <wsdl:message name="listAllEntityNamesResponse">
    <wsdl:part name="parameters" element="ns:listAllEntityNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="UserManagementWorkflowServiceWorkflowException">
    <wsdl:part name="parameters" element="ns:UserManagementWorkflowServiceWorkflowException"/>
  </wsdl:message>
  <wsdl:portType name="UserManagementWorkflowServicePortType">
    <wsdl:operation name="listAllEntityNames">
      <wsdl:input message="ns:listAllEntityNamesRequest" wsaw:Action="urn:listAllEntityNames"/>
      <wsdl:output message="ns:listAllEntityNamesResponse" wsaw:Action="urn:listAllEntityNamesResponse"/>
      <wsdl:fault message="ns:UserManagementWorkflowServiceWorkflowException" name="UserManagementWorkflowServiceWorkflowException" wsaw:Action="urn:listAllEntityNamesUserManagementWorkflowServiceWorkflowException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserManagementWorkflowServiceSoap11Binding" type="ns:UserManagementWorkflowServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="listAllEntityNames">
      <soap:operation soapAction="urn:listAllEntityNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementWorkflowServiceWorkflowException">
        <soap:fault use="literal" name="UserManagementWorkflowServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserManagementWorkflowServiceSoap12Binding" type="ns:UserManagementWorkflowServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="listAllEntityNames">
      <soap12:operation soapAction="urn:listAllEntityNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementWorkflowServiceWorkflowException">
        <soap12:fault use="literal" name="UserManagementWorkflowServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserManagementWorkflowServiceHttpBinding" type="ns:UserManagementWorkflowServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="listAllEntityNames">
      <http:operation location="listAllEntityNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserManagementWorkflowService">
    <wsdl:port name="UserManagementWorkflowServiceHttpsSoap11Endpoint" binding="ns:UserManagementWorkflowServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserManagementWorkflowServiceHttpsSoap12Endpoint" binding="ns:UserManagementWorkflowServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserManagementWorkflowServiceHttpsEndpoint" binding="ns:UserManagementWorkflowServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="0062fe1e-7787-4a08-9fa0-0138dd9d6528" isOneWay="false" action="urn:listAllEntityNames" name="listAllEntityNames" bindingOperationName="listAllEntityNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2d82e0c8-51b6-4210-bde1-5a43629fe7d3" wsaVersion="NONE" name="UserProfileMgtServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.profile.user.identity.carbon.wso2.org}UserProfileMgtServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/UserProfileMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="862bb0da-2507-434d-a608-5fa4c86b97f4" isOneWay="false" action="urn:associateID" name="associateID" bindingOperationName="associateID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d4d7a36-1759-4c89-b4f1-2e27d1ec4207" isOneWay="false" action="urn:deleteUserProfile" name="deleteUserProfile" bindingOperationName="deleteUserProfile" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="29550547-b0cd-4ae9-af87-eedbcfdba717" isOneWay="false" action="urn:getAssociatedIDs" name="getAssociatedIDs" bindingOperationName="getAssociatedIDs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cd5bfd23-bed6-4fca-a257-386291a394c1" isOneWay="false" action="urn:getInstance" name="getInstance" bindingOperationName="getInstance" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d22dc343-4ef2-4513-a67d-dde7f2b49200" isOneWay="false" action="urn:getNameAssociatedWith" name="getNameAssociatedWith" bindingOperationName="getNameAssociatedWith" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="116c7269-a62f-499f-a265-74a3a868c022" isOneWay="false" action="urn:getProfileFieldsForInternalStore" name="getProfileFieldsForInternalStore" bindingOperationName="getProfileFieldsForInternalStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="100a9ed5-3fef-4145-b5a9-6aaf6d134a77" isOneWay="false" action="urn:getUserProfile" name="getUserProfile" bindingOperationName="getUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6062174d-45dc-4809-9baa-8524795fe7c1" isOneWay="false" action="urn:getUserProfiles" name="getUserProfiles" bindingOperationName="getUserProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cd2097c8-0592-46d5-9ccb-bae7b15bd4e5" isOneWay="false" action="urn:isAddProfileEnabled" name="isAddProfileEnabled" bindingOperationName="isAddProfileEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1bfc79db-9f1b-4f9f-a423-1d35542c225f" isOneWay="false" action="urn:isAddProfileEnabledForDomain" name="isAddProfileEnabledForDomain" bindingOperationName="isAddProfileEnabledForDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="552358db-df09-4a16-b6e3-b689cec7a31f" isOneWay="false" action="urn:isReadOnlyUserStore" name="isReadOnlyUserStore" bindingOperationName="isReadOnlyUserStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0672cb00-c3f6-4656-884a-0b5608fc438a" isOneWay="false" action="urn:removeAssociateID" name="removeAssociateID" bindingOperationName="removeAssociateID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0ed028f5-51bb-4bd3-9152-ff0c89057dfc" isOneWay="false" action="urn:setUserProfile" name="setUserProfile" bindingOperationName="setUserProfile" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="fde1adac-dc01-46bd-a027-66e94419ff39" wsaVersion="NONE" name="UserProfileMgtServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.profile.user.identity.carbon.wso2.org}UserProfileMgtServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/UserProfileMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserProfileMgtService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserProfileMgtService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.profile.user.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2400="http://core.carbon.wso2.org/xsd" xmlns:ns="http://mgt.profile.user.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2396="http://mgt.profile.user.identity.carbon.wso2.org/xsd" xmlns:ax2397="http://base.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserProfileMgtService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.profile.user.identity.carbon.wso2.org" xmlns:ax2399="http://mgt.profile.user.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.profile.user.identity.carbon.wso2.org/xsd"/>
      <xs:element name="UserProfileMgtServiceUserProfileException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserProfileException" nillable="true" type="ax2399:UserProfileException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyUserStore">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyUserStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfiles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2399:UserProfileDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profile" nillable="true" type="ax2399:UserProfileDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileFieldsForInternalStore">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileFieldsForInternalStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2399:UserProfileDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2399:UserProfileDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAddProfileEnabled">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAddProfileEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAddProfileEnabledForDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAddProfileEnabledForDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="associateID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idpID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="associatedID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNameAssociatedWith">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idpID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="associatedID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNameAssociatedWithResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedIDs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedIDsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2399:AssociatedAccountDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAssociateID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idpID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="associatedID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstance">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstanceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2399:UserProfileAdmin"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.carbon.wso2.org/xsd">
      <xs:complexType abstract="true" name="AbstractAdmin">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.profile.user.identity.carbon.wso2.org/xsd" xmlns:ax2401="http://core.carbon.wso2.org/xsd" xmlns:ax2398="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://core.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserProfileException">
        <xs:complexContent>
          <xs:extension base="ax2397:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UserProfileDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValues" nillable="true" type="ax2396:UserFieldDTO"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="profileConfigurations" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="profileConifuration" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserFieldDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="checkedAttribute" type="xs:boolean"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="fieldValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="regEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AssociatedAccountDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="identityProviderName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserProfileAdmin">
        <xs:complexContent>
          <xs:extension base="ax2400:AbstractAdmin">
            <xs:sequence>
              <xs:element minOccurs="0" name="addProfileEnabled" type="xs:boolean"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="associatedIDs" nillable="true" type="ax2396:AssociatedAccountDTO"/>
              <xs:element minOccurs="0" name="profileFieldsForInternalStore" nillable="true" type="ax2396:UserProfileDTO"/>
              <xs:element minOccurs="0" name="readOnlyUserStore" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="removeAssociateIDRequest">
    <wsdl:part name="parameters" element="ns:removeAssociateID"/>
  </wsdl:message>
  <wsdl:message name="UserProfileMgtServiceUserProfileException">
    <wsdl:part name="parameters" element="ns:UserProfileMgtServiceUserProfileException"/>
  </wsdl:message>
  <wsdl:message name="getProfileFieldsForInternalStoreRequest">
    <wsdl:part name="parameters" element="ns:getProfileFieldsForInternalStore"/>
  </wsdl:message>
  <wsdl:message name="getProfileFieldsForInternalStoreResponse">
    <wsdl:part name="parameters" element="ns:getProfileFieldsForInternalStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserProfilesRequest">
    <wsdl:part name="parameters" element="ns:getUserProfiles"/>
  </wsdl:message>
  <wsdl:message name="getUserProfilesResponse">
    <wsdl:part name="parameters" element="ns:getUserProfilesResponse"/>
  </wsdl:message>
  <wsdl:message name="isAddProfileEnabledForDomainRequest">
    <wsdl:part name="parameters" element="ns:isAddProfileEnabledForDomain"/>
  </wsdl:message>
  <wsdl:message name="isAddProfileEnabledForDomainResponse">
    <wsdl:part name="parameters" element="ns:isAddProfileEnabledForDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyUserStoreRequest">
    <wsdl:part name="parameters" element="ns:isReadOnlyUserStore"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyUserStoreResponse">
    <wsdl:part name="parameters" element="ns:isReadOnlyUserStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="isAddProfileEnabledRequest">
    <wsdl:part name="parameters" element="ns:isAddProfileEnabled"/>
  </wsdl:message>
  <wsdl:message name="isAddProfileEnabledResponse">
    <wsdl:part name="parameters" element="ns:isAddProfileEnabledResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserProfileRequest">
    <wsdl:part name="parameters" element="ns:getUserProfile"/>
  </wsdl:message>
  <wsdl:message name="getUserProfileResponse">
    <wsdl:part name="parameters" element="ns:getUserProfileResponse"/>
  </wsdl:message>
  <wsdl:message name="setUserProfileRequest">
    <wsdl:part name="parameters" element="ns:setUserProfile"/>
  </wsdl:message>
  <wsdl:message name="associateIDRequest">
    <wsdl:part name="parameters" element="ns:associateID"/>
  </wsdl:message>
  <wsdl:message name="deleteUserProfileRequest">
    <wsdl:part name="parameters" element="ns:deleteUserProfile"/>
  </wsdl:message>
  <wsdl:message name="getNameAssociatedWithRequest">
    <wsdl:part name="parameters" element="ns:getNameAssociatedWith"/>
  </wsdl:message>
  <wsdl:message name="getNameAssociatedWithResponse">
    <wsdl:part name="parameters" element="ns:getNameAssociatedWithResponse"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedIDsRequest">
    <wsdl:part name="parameters" element="ns:getAssociatedIDs"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedIDsResponse">
    <wsdl:part name="parameters" element="ns:getAssociatedIDsResponse"/>
  </wsdl:message>
  <wsdl:message name="getInstanceRequest">
    <wsdl:part name="parameters" element="ns:getInstance"/>
  </wsdl:message>
  <wsdl:message name="getInstanceResponse">
    <wsdl:part name="parameters" element="ns:getInstanceResponse"/>
  </wsdl:message>
  <wsdl:portType name="UserProfileMgtServicePortType">
    <wsdl:operation name="removeAssociateID">
      <wsdl:input message="ns:removeAssociateIDRequest" wsaw:Action="urn:removeAssociateID"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:removeAssociateIDUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getProfileFieldsForInternalStore">
      <wsdl:input message="ns:getProfileFieldsForInternalStoreRequest" wsaw:Action="urn:getProfileFieldsForInternalStore"/>
      <wsdl:output message="ns:getProfileFieldsForInternalStoreResponse" wsaw:Action="urn:getProfileFieldsForInternalStoreResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getProfileFieldsForInternalStoreUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserProfiles">
      <wsdl:input message="ns:getUserProfilesRequest" wsaw:Action="urn:getUserProfiles"/>
      <wsdl:output message="ns:getUserProfilesResponse" wsaw:Action="urn:getUserProfilesResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getUserProfilesUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabledForDomain">
      <wsdl:input message="ns:isAddProfileEnabledForDomainRequest" wsaw:Action="urn:isAddProfileEnabledForDomain"/>
      <wsdl:output message="ns:isAddProfileEnabledForDomainResponse" wsaw:Action="urn:isAddProfileEnabledForDomainResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:isAddProfileEnabledForDomainUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <wsdl:input message="ns:isReadOnlyUserStoreRequest" wsaw:Action="urn:isReadOnlyUserStore"/>
      <wsdl:output message="ns:isReadOnlyUserStoreResponse" wsaw:Action="urn:isReadOnlyUserStoreResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:isReadOnlyUserStoreUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabled">
      <wsdl:input message="ns:isAddProfileEnabledRequest" wsaw:Action="urn:isAddProfileEnabled"/>
      <wsdl:output message="ns:isAddProfileEnabledResponse" wsaw:Action="urn:isAddProfileEnabledResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:isAddProfileEnabledUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <wsdl:input message="ns:getUserProfileRequest" wsaw:Action="urn:getUserProfile"/>
      <wsdl:output message="ns:getUserProfileResponse" wsaw:Action="urn:getUserProfileResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getUserProfileUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserProfile">
      <wsdl:input message="ns:setUserProfileRequest" wsaw:Action="urn:setUserProfile"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:setUserProfileUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="associateID">
      <wsdl:input message="ns:associateIDRequest" wsaw:Action="urn:associateID"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:associateIDUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserProfile">
      <wsdl:input message="ns:deleteUserProfileRequest" wsaw:Action="urn:deleteUserProfile"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:deleteUserProfileUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getNameAssociatedWith">
      <wsdl:input message="ns:getNameAssociatedWithRequest" wsaw:Action="urn:getNameAssociatedWith"/>
      <wsdl:output message="ns:getNameAssociatedWithResponse" wsaw:Action="urn:getNameAssociatedWithResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getNameAssociatedWithUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedIDs">
      <wsdl:input message="ns:getAssociatedIDsRequest" wsaw:Action="urn:getAssociatedIDs"/>
      <wsdl:output message="ns:getAssociatedIDsResponse" wsaw:Action="urn:getAssociatedIDsResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getAssociatedIDsUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getInstance">
      <wsdl:input message="ns:getInstanceRequest" wsaw:Action="urn:getInstance"/>
      <wsdl:output message="ns:getInstanceResponse" wsaw:Action="urn:getInstanceResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserProfileMgtServiceSoap11Binding" type="ns:UserProfileMgtServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeAssociateID">
      <soap:operation soapAction="urn:removeAssociateID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProfileFieldsForInternalStore">
      <soap:operation soapAction="urn:getProfileFieldsForInternalStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabledForDomain">
      <soap:operation soapAction="urn:isAddProfileEnabledForDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfiles">
      <soap:operation soapAction="urn:getUserProfiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <soap:operation soapAction="urn:isReadOnlyUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabled">
      <soap:operation soapAction="urn:isAddProfileEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <soap:operation soapAction="urn:getUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserProfile">
      <soap:operation soapAction="urn:setUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateID">
      <soap:operation soapAction="urn:associateID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserProfile">
      <soap:operation soapAction="urn:deleteUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNameAssociatedWith">
      <soap:operation soapAction="urn:getNameAssociatedWith" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedIDs">
      <soap:operation soapAction="urn:getAssociatedIDs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstance">
      <soap:operation soapAction="urn:getInstance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserProfileMgtServiceSoap12Binding" type="ns:UserProfileMgtServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeAssociateID">
      <soap12:operation soapAction="urn:removeAssociateID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProfileFieldsForInternalStore">
      <soap12:operation soapAction="urn:getProfileFieldsForInternalStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabledForDomain">
      <soap12:operation soapAction="urn:isAddProfileEnabledForDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfiles">
      <soap12:operation soapAction="urn:getUserProfiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <soap12:operation soapAction="urn:isReadOnlyUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabled">
      <soap12:operation soapAction="urn:isAddProfileEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <soap12:operation soapAction="urn:getUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserProfile">
      <soap12:operation soapAction="urn:setUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateID">
      <soap12:operation soapAction="urn:associateID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserProfile">
      <soap12:operation soapAction="urn:deleteUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNameAssociatedWith">
      <soap12:operation soapAction="urn:getNameAssociatedWith" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedIDs">
      <soap12:operation soapAction="urn:getAssociatedIDs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstance">
      <soap12:operation soapAction="urn:getInstance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserProfileMgtServiceHttpBinding" type="ns:UserProfileMgtServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="removeAssociateID">
      <http:operation location="removeAssociateID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getProfileFieldsForInternalStore">
      <http:operation location="getProfileFieldsForInternalStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabledForDomain">
      <http:operation location="isAddProfileEnabledForDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserProfiles">
      <http:operation location="getUserProfiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <http:operation location="isReadOnlyUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabled">
      <http:operation location="isAddProfileEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <http:operation location="getUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserProfile">
      <http:operation location="setUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="associateID">
      <http:operation location="associateID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteUserProfile">
      <http:operation location="deleteUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getNameAssociatedWith">
      <http:operation location="getNameAssociatedWith"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedIDs">
      <http:operation location="getAssociatedIDs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstance">
      <http:operation location="getInstance"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserProfileMgtService">
    <wsdl:port name="UserProfileMgtServiceHttpsSoap11Endpoint" binding="ns:UserProfileMgtServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserProfileMgtServiceHttpsSoap12Endpoint" binding="ns:UserProfileMgtServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserProfileMgtServiceHttpsEndpoint" binding="ns:UserProfileMgtServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="f7e0b076-4056-47f4-bc64-44a400db709b" isOneWay="false" action="urn:associateID" name="associateID" bindingOperationName="associateID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f9e611e-dba6-4ff6-8153-b1c8784bddfd" isOneWay="false" action="urn:deleteUserProfile" name="deleteUserProfile" bindingOperationName="deleteUserProfile" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f63476f4-b3dd-4ded-b710-ee5572546708" isOneWay="false" action="urn:getAssociatedIDs" name="getAssociatedIDs" bindingOperationName="getAssociatedIDs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f2e88a5d-7eb1-417d-82f2-3ef1aa739bad" isOneWay="false" action="urn:getInstance" name="getInstance" bindingOperationName="getInstance" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aa6dc8a1-066d-4bb9-9b40-19f16f876043" isOneWay="false" action="urn:getNameAssociatedWith" name="getNameAssociatedWith" bindingOperationName="getNameAssociatedWith" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ee57c917-2d18-4f6b-a867-368ee6516490" isOneWay="false" action="urn:getProfileFieldsForInternalStore" name="getProfileFieldsForInternalStore" bindingOperationName="getProfileFieldsForInternalStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b724b994-f752-4553-8571-0ce7ffc52d70" isOneWay="false" action="urn:getUserProfile" name="getUserProfile" bindingOperationName="getUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0ecac36a-661e-4e61-9afa-20d50bc4b64d" isOneWay="false" action="urn:getUserProfiles" name="getUserProfiles" bindingOperationName="getUserProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f6b99257-d288-4df8-a425-553d69d314c5" isOneWay="false" action="urn:isAddProfileEnabled" name="isAddProfileEnabled" bindingOperationName="isAddProfileEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="776b0af8-3907-4af1-80ed-861e4df6ff2c" isOneWay="false" action="urn:isAddProfileEnabledForDomain" name="isAddProfileEnabledForDomain" bindingOperationName="isAddProfileEnabledForDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c5261cd-6497-4cc3-b54a-f1491e53393d" isOneWay="false" action="urn:isReadOnlyUserStore" name="isReadOnlyUserStore" bindingOperationName="isReadOnlyUserStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="51e4d0d2-783c-4db0-bf22-5c54f8f85155" isOneWay="false" action="urn:removeAssociateID" name="removeAssociateID" bindingOperationName="removeAssociateID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c7d69a54-d20a-4fa1-9b19-2711e27d54ad" isOneWay="false" action="urn:setUserProfile" name="setUserProfile" bindingOperationName="setUserProfile" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e731e6db-2e8a-4257-89c5-6bcb0d6da60e" wsaVersion="NONE" name="UserStoreConfigAdminServiceSoap12Binding" type="wsdl" bindingName="{http://configuration.store.user.identity.carbon.wso2.org}UserStoreConfigAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/UserStoreConfigAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="6f0555d0-bc80-404e-b7d1-3b3b3e133f21" isOneWay="false" action="urn:addUserStore" name="addUserStore" bindingOperationName="addUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f30eb7ec-2c52-43ae-b002-51a7ac68de69" isOneWay="false" action="urn:changeUserStoreState" name="changeUserStoreState" bindingOperationName="changeUserStoreState" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="70dde4e2-86b2-41ee-b3e1-d1bf681d6196" isOneWay="false" action="urn:deleteUserStore" name="deleteUserStore" bindingOperationName="deleteUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5de7dee8-6aaf-436a-b0d9-0b33cdbe9174" isOneWay="false" action="urn:deleteUserStoresSet" name="deleteUserStoresSet" bindingOperationName="deleteUserStoresSet" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3454527d-8fb1-49c4-82c7-48084816a6a9" isOneWay="false" action="urn:editUserStore" name="editUserStore" bindingOperationName="editUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b4b2cd7f-f6c8-4c8a-93b4-8b1ac7496fe4" isOneWay="false" action="urn:editUserStoreWithDomainName" name="editUserStoreWithDomainName" bindingOperationName="editUserStoreWithDomainName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="34690ae1-9204-4705-9a34-fb5fd4cddf74" isOneWay="false" action="urn:getAvailableUserStoreClasses" name="getAvailableUserStoreClasses" bindingOperationName="getAvailableUserStoreClasses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="affde0ef-6d2f-4d0f-a40b-62543f205754" isOneWay="false" action="urn:getSecondaryRealmConfigurations" name="getSecondaryRealmConfigurations" bindingOperationName="getSecondaryRealmConfigurations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="57f99ce4-51d9-4a7c-a312-9df6d21f227e" isOneWay="false" action="urn:getUserStoreManagerProperties" name="getUserStoreManagerProperties" bindingOperationName="getUserStoreManagerProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3666d5e2-fddd-4b93-9688-1b2361a50d39" isOneWay="false" action="urn:testRDBMSConnection" name="testRDBMSConnection" bindingOperationName="testRDBMSConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="783f175c-144b-414a-a8cc-5f7f366cc9e3" wsaVersion="NONE" name="UserStoreConfigAdminServiceSoap11Binding" type="wsdl" bindingName="{http://configuration.store.user.identity.carbon.wso2.org}UserStoreConfigAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/UserStoreConfigAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserStoreConfigAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/UserStoreConfigAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://configuration.store.user.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2411="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:ax2413="http://api.user.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://configuration.store.user.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax2409="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserStoreConfigAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="Properties">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="advancedProperties" nillable="true" type="ax2413:Property"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="mandatoryProperties" nillable="true" type="ax2413:Property"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="optionalProperties" nillable="true" type="ax2413:Property"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Property">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="childProperties" nillable="true" type="ax2413:Property"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityUserStoreMgtException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2410="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:ax2412="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:ax2414="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:element name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityUserStoreMgtException" nillable="true" type="ax2410:IdentityUserStoreMgtException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecondaryRealmConfigurations">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecondaryRealmConfigurationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2411:UserStoreDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvailableUserStoreClasses">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvailableUserStoreClassesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserStoreManagerProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserStoreManagerPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2413:Properties"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userStoreDTO" nillable="true" type="ax2411:UserStoreDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="editUserStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userStoreDTO" nillable="true" type="ax2411:UserStoreDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="editUserStoreWithDomainName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="previousDomainName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userStoreDTO" nillable="true" type="ax2411:UserStoreDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserStoresSet">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="domains" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UserStoreConfigAdminServiceTransformerConfigurationException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="TransformerConfigurationException" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeUserStoreState">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="isDisable" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="testRDBMSConnection">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="driverName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="connectionURL" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="connectionPassword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="messageID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="testRDBMSConnectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="disabled" nillable="true" type="xs:boolean"/>
          <xs:element minOccurs="0" name="domainId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2411:PropertyDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PropertyDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAvailableUserStoreClassesRequest">
    <wsdl:part name="parameters" element="ns1:getAvailableUserStoreClasses"/>
  </wsdl:message>
  <wsdl:message name="getAvailableUserStoreClassesResponse">
    <wsdl:part name="parameters" element="ns1:getAvailableUserStoreClassesResponse"/>
  </wsdl:message>
  <wsdl:message name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
    <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
  </wsdl:message>
  <wsdl:message name="changeUserStoreStateRequest">
    <wsdl:part name="parameters" element="ns1:changeUserStoreState"/>
  </wsdl:message>
  <wsdl:message name="UserStoreConfigAdminServiceTransformerConfigurationException">
    <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceTransformerConfigurationException"/>
  </wsdl:message>
  <wsdl:message name="deleteUserStoreRequest">
    <wsdl:part name="parameters" element="ns1:deleteUserStore"/>
  </wsdl:message>
  <wsdl:message name="getSecondaryRealmConfigurationsRequest">
    <wsdl:part name="parameters" element="ns1:getSecondaryRealmConfigurations"/>
  </wsdl:message>
  <wsdl:message name="getSecondaryRealmConfigurationsResponse">
    <wsdl:part name="parameters" element="ns1:getSecondaryRealmConfigurationsResponse"/>
  </wsdl:message>
  <wsdl:message name="editUserStoreRequest">
    <wsdl:part name="parameters" element="ns1:editUserStore"/>
  </wsdl:message>
  <wsdl:message name="editUserStoreWithDomainNameRequest">
    <wsdl:part name="parameters" element="ns1:editUserStoreWithDomainName"/>
  </wsdl:message>
  <wsdl:message name="testRDBMSConnectionRequest">
    <wsdl:part name="parameters" element="ns1:testRDBMSConnection"/>
  </wsdl:message>
  <wsdl:message name="testRDBMSConnectionResponse">
    <wsdl:part name="parameters" element="ns1:testRDBMSConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserStoreManagerPropertiesRequest">
    <wsdl:part name="parameters" element="ns1:getUserStoreManagerProperties"/>
  </wsdl:message>
  <wsdl:message name="getUserStoreManagerPropertiesResponse">
    <wsdl:part name="parameters" element="ns1:getUserStoreManagerPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserStoreRequest">
    <wsdl:part name="parameters" element="ns1:addUserStore"/>
  </wsdl:message>
  <wsdl:message name="deleteUserStoresSetRequest">
    <wsdl:part name="parameters" element="ns1:deleteUserStoresSet"/>
  </wsdl:message>
  <wsdl:portType name="UserStoreConfigAdminServicePortType">
    <wsdl:operation name="getAvailableUserStoreClasses">
      <wsdl:input message="tns:getAvailableUserStoreClassesRequest" wsaw:Action="urn:getAvailableUserStoreClasses"/>
      <wsdl:output message="tns:getAvailableUserStoreClassesResponse" wsaw:Action="urn:getAvailableUserStoreClassesResponse"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:getAvailableUserStoreClassesUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="changeUserStoreState">
      <wsdl:input message="tns:changeUserStoreStateRequest" wsaw:Action="urn:changeUserStoreState"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:changeUserStoreStateUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceTransformerConfigurationException" name="UserStoreConfigAdminServiceTransformerConfigurationException" wsaw:Action="urn:changeUserStoreStateUserStoreConfigAdminServiceTransformerConfigurationException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStore">
      <wsdl:input message="tns:deleteUserStoreRequest" wsaw:Action="urn:deleteUserStore"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:deleteUserStoreUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="getSecondaryRealmConfigurations">
      <wsdl:input message="tns:getSecondaryRealmConfigurationsRequest" wsaw:Action="urn:getSecondaryRealmConfigurations"/>
      <wsdl:output message="tns:getSecondaryRealmConfigurationsResponse" wsaw:Action="urn:getSecondaryRealmConfigurationsResponse"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:getSecondaryRealmConfigurationsUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="editUserStore">
      <wsdl:input message="tns:editUserStoreRequest" wsaw:Action="urn:editUserStore"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:editUserStoreUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="editUserStoreWithDomainName">
      <wsdl:input message="tns:editUserStoreWithDomainNameRequest" wsaw:Action="urn:editUserStoreWithDomainName"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:editUserStoreWithDomainNameUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="testRDBMSConnection">
      <wsdl:input message="tns:testRDBMSConnectionRequest" wsaw:Action="urn:testRDBMSConnection"/>
      <wsdl:output message="tns:testRDBMSConnectionResponse" wsaw:Action="urn:testRDBMSConnectionResponse"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:testRDBMSConnectionUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserStoreManagerProperties">
      <wsdl:input message="tns:getUserStoreManagerPropertiesRequest" wsaw:Action="urn:getUserStoreManagerProperties"/>
      <wsdl:output message="tns:getUserStoreManagerPropertiesResponse" wsaw:Action="urn:getUserStoreManagerPropertiesResponse"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:getUserStoreManagerPropertiesUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserStore">
      <wsdl:input message="tns:addUserStoreRequest" wsaw:Action="urn:addUserStore"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:addUserStoreUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStoresSet">
      <wsdl:input message="tns:deleteUserStoresSetRequest" wsaw:Action="urn:deleteUserStoresSet"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:deleteUserStoresSetUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserStoreConfigAdminServiceSoap11Binding" type="tns:UserStoreConfigAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAvailableUserStoreClasses">
      <soap:operation soapAction="urn:getAvailableUserStoreClasses" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserStoreState">
      <soap:operation soapAction="urn:changeUserStoreState" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceTransformerConfigurationException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceTransformerConfigurationException"/>
      </wsdl:fault>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStore">
      <soap:operation soapAction="urn:deleteUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecondaryRealmConfigurations">
      <soap:operation soapAction="urn:getSecondaryRealmConfigurations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserStore">
      <soap:operation soapAction="urn:editUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserStoreWithDomainName">
      <soap:operation soapAction="urn:editUserStoreWithDomainName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testRDBMSConnection">
      <soap:operation soapAction="urn:testRDBMSConnection" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserStoreManagerProperties">
      <soap:operation soapAction="urn:getUserStoreManagerProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserStore">
      <soap:operation soapAction="urn:addUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStoresSet">
      <soap:operation soapAction="urn:deleteUserStoresSet" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserStoreConfigAdminServiceSoap12Binding" type="tns:UserStoreConfigAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAvailableUserStoreClasses">
      <soap12:operation soapAction="urn:getAvailableUserStoreClasses" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserStoreState">
      <soap12:operation soapAction="urn:changeUserStoreState" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceTransformerConfigurationException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceTransformerConfigurationException"/>
      </wsdl:fault>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStore">
      <soap12:operation soapAction="urn:deleteUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecondaryRealmConfigurations">
      <soap12:operation soapAction="urn:getSecondaryRealmConfigurations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserStore">
      <soap12:operation soapAction="urn:editUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserStoreWithDomainName">
      <soap12:operation soapAction="urn:editUserStoreWithDomainName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testRDBMSConnection">
      <soap12:operation soapAction="urn:testRDBMSConnection" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserStoreManagerProperties">
      <soap12:operation soapAction="urn:getUserStoreManagerProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserStore">
      <soap12:operation soapAction="urn:addUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStoresSet">
      <soap12:operation soapAction="urn:deleteUserStoresSet" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserStoreConfigAdminServiceHttpBinding" type="tns:UserStoreConfigAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAvailableUserStoreClasses">
      <http:operation location="getAvailableUserStoreClasses"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeUserStoreState">
      <http:operation location="changeUserStoreState"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStore">
      <http:operation location="deleteUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getSecondaryRealmConfigurations">
      <http:operation location="getSecondaryRealmConfigurations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editUserStore">
      <http:operation location="editUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="editUserStoreWithDomainName">
      <http:operation location="editUserStoreWithDomainName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="testRDBMSConnection">
      <http:operation location="testRDBMSConnection"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserStoreManagerProperties">
      <http:operation location="getUserStoreManagerProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserStore">
      <http:operation location="addUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStoresSet">
      <http:operation location="deleteUserStoresSet"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserStoreConfigAdminService">
    <wsdl:port name="UserStoreConfigAdminServiceHttpsSoap11Endpoint" binding="tns:UserStoreConfigAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserStoreConfigAdminServiceHttpsSoap12Endpoint" binding="tns:UserStoreConfigAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserStoreConfigAdminServiceHttpsEndpoint" binding="tns:UserStoreConfigAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="902ec7bc-e073-4520-a05e-352adf85ae56" isOneWay="false" action="urn:addUserStore" name="addUserStore" bindingOperationName="addUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d075df0-8bcf-4c1b-9ee5-a97dcfe7b656" isOneWay="false" action="urn:changeUserStoreState" name="changeUserStoreState" bindingOperationName="changeUserStoreState" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a5e53079-c0b5-4282-b43f-6a30d3a7dcec" isOneWay="false" action="urn:deleteUserStore" name="deleteUserStore" bindingOperationName="deleteUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="be773fbe-25cf-4b59-a93e-df3ac7d6054f" isOneWay="false" action="urn:deleteUserStoresSet" name="deleteUserStoresSet" bindingOperationName="deleteUserStoresSet" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8eb1e7a3-326a-4b6c-881c-a2736fae937d" isOneWay="false" action="urn:editUserStore" name="editUserStore" bindingOperationName="editUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bd64f540-0a2b-49dd-adca-6fe471706b25" isOneWay="false" action="urn:editUserStoreWithDomainName" name="editUserStoreWithDomainName" bindingOperationName="editUserStoreWithDomainName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5eceb12b-9e6a-4630-ab3a-bac2cdb2df77" isOneWay="false" action="urn:getAvailableUserStoreClasses" name="getAvailableUserStoreClasses" bindingOperationName="getAvailableUserStoreClasses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08b8c255-1521-44ff-b22e-dab9b130bdb4" isOneWay="false" action="urn:getSecondaryRealmConfigurations" name="getSecondaryRealmConfigurations" bindingOperationName="getSecondaryRealmConfigurations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86435e91-e143-40a1-85af-600fcc516606" isOneWay="false" action="urn:getUserStoreManagerProperties" name="getUserStoreManagerProperties" bindingOperationName="getUserStoreManagerProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="751022ef-131b-4684-9255-68f8a753fd07" isOneWay="false" action="urn:testRDBMSConnection" name="testRDBMSConnection" bindingOperationName="testRDBMSConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="5ffc6b8a-b8ac-4aff-8865-9fd88981a2e6" wsaVersion="NONE" name="WebappAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.webapp.carbon.wso2.org}WebappAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/WebappAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/WebappAdmin.WebappAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="75fccbfd-5ed2-4fe2-8ab4-e1a4cb8dfb47" isOneWay="false" action="urn:changeDefaultAppVersion" name="changeDefaultAppVersion" bindingOperationName="changeDefaultAppVersion" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d02f43ac-6051-4a13-9981-d4a4ec263d1c" isOneWay="false" action="urn:deleteAllFaultyWebapps" name="deleteAllFaultyWebapps" bindingOperationName="deleteAllFaultyWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48664590-d6df-4dc6-96b4-ef01bf227d73" isOneWay="false" action="urn:deleteAllStartedWebapps" name="deleteAllStartedWebapps" bindingOperationName="deleteAllStartedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="30a663c0-c238-4eb0-a453-aba779db7c8c" isOneWay="false" action="urn:deleteAllStoppedWebapps" name="deleteAllStoppedWebapps" bindingOperationName="deleteAllStoppedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="99ec23f5-7bc8-40b6-a8e1-0fa6367daa50" isOneWay="false" action="urn:deleteAllWebApps" name="deleteAllWebApps" bindingOperationName="deleteAllWebApps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="17885058-a11c-4752-aefc-d7f89ad28b15" isOneWay="false" action="urn:deleteFaultyWebapps" name="deleteFaultyWebapps" bindingOperationName="deleteFaultyWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eb066e57-b76e-4347-8dc4-162ea1a0620a" isOneWay="false" action="urn:deleteStartedWebapps" name="deleteStartedWebapps" bindingOperationName="deleteStartedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="28afdaf5-0b67-4eac-84ea-ade6b66a1e45" isOneWay="false" action="urn:deleteStoppedWebapps" name="deleteStoppedWebapps" bindingOperationName="deleteStoppedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ce3d9c83-f276-472c-bb25-03ac4b340e58" isOneWay="false" action="urn:downloadWarFileHandler" name="downloadWarFileHandler" bindingOperationName="downloadWarFileHandler" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1ba41a7a-8afd-428b-baed-6329a7cc46ef" isOneWay="false" action="urn:expireAllSessions" name="expireAllSessions" bindingOperationName="expireAllSessions" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="548107c6-5272-45cc-9800-ae5a920bc6c8" isOneWay="false" action="urn:expireSessions" name="expireSessions" bindingOperationName="expireSessions" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c91ec2e0-85e8-4c92-9f8b-2c46edf65b4a" isOneWay="false" action="urn:expireSessionsInAllWebapps" name="expireSessionsInAllWebapps" bindingOperationName="expireSessionsInAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3b72a991-92df-4857-aaec-420aefab9e71" isOneWay="false" action="urn:expireSessionsInWebapp" name="expireSessionsInWebapp" bindingOperationName="expireSessionsInWebapp" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8dcbb792-0127-47b4-a0d0-715169d5e060" isOneWay="false" action="urn:expireSessionsInWebapps" name="expireSessionsInWebapps" bindingOperationName="expireSessionsInWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2f959c6e-7f99-4648-a54c-9c22b24bd1a0" isOneWay="false" action="urn:getActiveSessions" name="getActiveSessions" bindingOperationName="getActiveSessions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cc16fdbc-4b26-4ebb-8f8c-1c78753654f9" isOneWay="false" action="urn:getBamConfiguration" name="getBamConfiguration" bindingOperationName="getBamConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="32e63ab3-4d17-4a2e-8eb7-7b91d9fce414" isOneWay="false" action="urn:getPagedFaultyWebappsSummary" name="getPagedFaultyWebappsSummary" bindingOperationName="getPagedFaultyWebappsSummary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3329f20b-5b83-42f1-8531-507ef7f1f667" isOneWay="false" action="urn:getPagedWebappsSummary" name="getPagedWebappsSummary" bindingOperationName="getPagedWebappsSummary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6fb6b216-0c00-48ec-ace1-cd476fcc4149" isOneWay="false" action="urn:getStartedWebapp" name="getStartedWebapp" bindingOperationName="getStartedWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="01e783e0-1178-4575-a80a-a8d0394aea71" isOneWay="false" action="urn:getStoppedWebapp" name="getStoppedWebapp" bindingOperationName="getStoppedWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bd3add9a-d65b-4e48-bf9c-9f5a1c5a743d" isOneWay="false" action="urn:getVhostHolder" name="getVhostHolder" bindingOperationName="getVhostHolder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3881c6d4-5075-43e7-977b-54a8349c2b86" isOneWay="false" action="urn:isDefaultVersionManagementEnabled" name="isDefaultVersionManagementEnabled" bindingOperationName="isDefaultVersionManagementEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e21edf7d-17de-43fc-9e95-37d82346e481" isOneWay="false" action="urn:isUnpackWARs" name="isUnpackWARs" bindingOperationName="isUnpackWARs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa643530-6321-4790-a66e-aac84a032d6b" isOneWay="false" action="urn:reloadAllWebapps" name="reloadAllWebapps" bindingOperationName="reloadAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="00081962-78c7-477c-ba6c-8a913745ed93" isOneWay="false" action="urn:reloadWebapps" name="reloadWebapps" bindingOperationName="reloadWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9fd0f588-5d9f-45fe-b825-162cbb6ae024" isOneWay="false" action="urn:setBamConfiguration" name="setBamConfiguration" bindingOperationName="setBamConfiguration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="033b388f-f431-4429-825d-3210560afbba" isOneWay="false" action="urn:startAllWebapps" name="startAllWebapps" bindingOperationName="startAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="21165945-3b5a-45a8-99e1-b0501b0e2d50" isOneWay="false" action="urn:startWebapps" name="startWebapps" bindingOperationName="startWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a9f40a26-0021-422b-bb09-e4b834a836d9" isOneWay="false" action="urn:stopAllWebapps" name="stopAllWebapps" bindingOperationName="stopAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ef3ceb33-6636-4883-8c20-b88efec41e46" isOneWay="false" action="urn:stopWebapps" name="stopWebapps" bindingOperationName="stopWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0026f9c5-ad7d-455d-aec7-94e28984572d" isOneWay="false" action="urn:uploadWebapp" name="uploadWebapp" bindingOperationName="uploadWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="519b63b7-e2d7-4556-b135-7a0ebb0a9ae2" wsaVersion="NONE" name="WebappAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.webapp.carbon.wso2.org}WebappAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/WebappAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/WebappAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/WebappAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.webapp.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2702="http://mgt.webapp.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2704="http://metadata.persistence.core.carbon.wso2.org/xsd" xmlns:tns="http://mgt.webapp.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>WebappAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2705="http://metadata.persistence.core.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2703="http://mgt.webapp.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.webapp.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://metadata.persistence.core.carbon.wso2.org/xsd"/>
      <xs:element name="getPagedWebappsSummary">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappSearchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="webappState" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="webappType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPagedWebappsSummaryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:WebappsWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStartedWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStartedWebappResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:WebappMetadata"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStoppedWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStoppedWebappResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:WebappMetadata"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPagedFaultyWebappsSummary">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappSearchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="webappType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPagedFaultyWebappsSummaryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:WebappsWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteStartedWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteStoppedWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteFaultyWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllWebApps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllStartedWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllStoppedWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllFaultyWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadAllWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setBamConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBamConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBamConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="stopAllWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="stopWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKeys" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startAllWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="startWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKeys" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireSessionsInAllWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireSessionsInWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKeySet" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireSessionsInWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxSessionLifetimeMillis" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireSessions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="sessionIDs" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireAllSessions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadWarFileHandler">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="webappType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadWarFileHandlerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="WebappAdminArtifactMetadataException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ArtifactMetadataException" nillable="true" type="ax2704:ArtifactMetadataException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeDefaultAppVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appGroupName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isDefaultVersionManagementEnabled">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isDefaultVersionManagementEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getVhostHolder">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getVhostHolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:VhostHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappUploadDataList" nillable="true" type="ax2702:WebappUploadData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadWebappResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isUnpackWARs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isUnpackWARsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getActiveSessions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getActiveSessionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:SessionsWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://metadata.persistence.core.carbon.wso2.org/xsd">
      <xs:complexType name="ArtifactMetadataException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.webapp.carbon.wso2.org/xsd">
      <xs:complexType name="WebappsWrapper">
        <xs:sequence>
          <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="httpPort" type="xs:int"/>
          <xs:element minOccurs="0" name="httpsPort" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfCorrectWebapps" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfFaultyWebapps" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="webapps" nillable="true" type="ax2702:VersionedWebappMetadata"/>
          <xs:element minOccurs="0" name="webappsDir" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionedWebappMetadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="appVersionRoot" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="versionGroups" nillable="true" type="ax2702:WebappMetadata"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WebappMetadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="CAppArtifact" type="xs:boolean"/>
          <xs:element minOccurs="0" name="appVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="context" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="contextPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultException" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faulty" type="xs:boolean"/>
          <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModifiedTime" type="xs:long"/>
          <xs:element minOccurs="0" name="running" type="xs:boolean"/>
          <xs:element minOccurs="0" name="serviceListPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="servletContext" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="started" type="xs:boolean"/>
          <xs:element minOccurs="0" name="state" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="statistics" nillable="true" type="ax2702:WebappStatistics"/>
          <xs:element minOccurs="0" name="webappFile" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="webappType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WebappStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="activeSessions" type="xs:int"/>
          <xs:element minOccurs="0" name="avgSessionLifetime" type="xs:int"/>
          <xs:element minOccurs="0" name="expiredSessions" type="xs:long"/>
          <xs:element minOccurs="0" name="maxActiveSessions" type="xs:int"/>
          <xs:element minOccurs="0" name="maxSessionInactivityInterval" type="xs:int"/>
          <xs:element minOccurs="0" name="maxSessionLifetime" type="xs:int"/>
          <xs:element minOccurs="0" name="rejectedSessions" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VhostHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="defaultHostName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="vhosts" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WebappUploadData">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SessionsWrapper">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfActiveSessions" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sessions" nillable="true" type="ax2702:SessionMetadata"/>
          <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SessionMetadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="authType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="creationTime" type="xs:long"/>
          <xs:element minOccurs="0" name="lastAccessedTime" type="xs:long"/>
          <xs:element minOccurs="0" name="maxInactiveInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="deleteStoppedWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteStoppedWebapps"/>
  </wsdl:message>
  <wsdl:message name="isDefaultVersionManagementEnabledRequest">
    <wsdl:part name="parameters" element="ns1:isDefaultVersionManagementEnabled"/>
  </wsdl:message>
  <wsdl:message name="isDefaultVersionManagementEnabledResponse">
    <wsdl:part name="parameters" element="ns1:isDefaultVersionManagementEnabledResponse"/>
  </wsdl:message>
  <wsdl:message name="stopAllWebappsRequest">
    <wsdl:part name="parameters" element="ns1:stopAllWebapps"/>
  </wsdl:message>
  <wsdl:message name="deleteAllFaultyWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllFaultyWebapps"/>
  </wsdl:message>
  <wsdl:message name="startAllWebappsRequest">
    <wsdl:part name="parameters" element="ns1:startAllWebapps"/>
  </wsdl:message>
  <wsdl:message name="deleteAllStartedWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllStartedWebapps"/>
  </wsdl:message>
  <wsdl:message name="getPagedFaultyWebappsSummaryRequest">
    <wsdl:part name="parameters" element="ns1:getPagedFaultyWebappsSummary"/>
  </wsdl:message>
  <wsdl:message name="getPagedFaultyWebappsSummaryResponse">
    <wsdl:part name="parameters" element="ns1:getPagedFaultyWebappsSummaryResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteAllStoppedWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllStoppedWebapps"/>
  </wsdl:message>
  <wsdl:message name="getPagedWebappsSummaryRequest">
    <wsdl:part name="parameters" element="ns1:getPagedWebappsSummary"/>
  </wsdl:message>
  <wsdl:message name="getPagedWebappsSummaryResponse">
    <wsdl:part name="parameters" element="ns1:getPagedWebappsSummaryResponse"/>
  </wsdl:message>
  <wsdl:message name="setBamConfigurationRequest">
    <wsdl:part name="parameters" element="ns1:setBamConfiguration"/>
  </wsdl:message>
  <wsdl:message name="getVhostHolderRequest">
    <wsdl:part name="parameters" element="ns1:getVhostHolder"/>
  </wsdl:message>
  <wsdl:message name="getVhostHolderResponse">
    <wsdl:part name="parameters" element="ns1:getVhostHolderResponse"/>
  </wsdl:message>
  <wsdl:message name="downloadWarFileHandlerRequest">
    <wsdl:part name="parameters" element="ns1:downloadWarFileHandler"/>
  </wsdl:message>
  <wsdl:message name="downloadWarFileHandlerResponse">
    <wsdl:part name="parameters" element="ns1:downloadWarFileHandlerResponse"/>
  </wsdl:message>
  <wsdl:message name="expireSessionsRequest">
    <wsdl:part name="parameters" element="ns1:expireSessions"/>
  </wsdl:message>
  <wsdl:message name="expireSessionsInWebappsRequest">
    <wsdl:part name="parameters" element="ns1:expireSessionsInWebapps"/>
  </wsdl:message>
  <wsdl:message name="reloadAllWebappsRequest">
    <wsdl:part name="parameters" element="ns1:reloadAllWebapps"/>
  </wsdl:message>
  <wsdl:message name="getStartedWebappRequest">
    <wsdl:part name="parameters" element="ns1:getStartedWebapp"/>
  </wsdl:message>
  <wsdl:message name="getStartedWebappResponse">
    <wsdl:part name="parameters" element="ns1:getStartedWebappResponse"/>
  </wsdl:message>
  <wsdl:message name="getStoppedWebappRequest">
    <wsdl:part name="parameters" element="ns1:getStoppedWebapp"/>
  </wsdl:message>
  <wsdl:message name="getStoppedWebappResponse">
    <wsdl:part name="parameters" element="ns1:getStoppedWebappResponse"/>
  </wsdl:message>
  <wsdl:message name="getBamConfigurationRequest">
    <wsdl:part name="parameters" element="ns1:getBamConfiguration"/>
  </wsdl:message>
  <wsdl:message name="getBamConfigurationResponse">
    <wsdl:part name="parameters" element="ns1:getBamConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="startWebappsRequest">
    <wsdl:part name="parameters" element="ns1:startWebapps"/>
  </wsdl:message>
  <wsdl:message name="expireSessionsInWebappRequest">
    <wsdl:part name="parameters" element="ns1:expireSessionsInWebapp"/>
  </wsdl:message>
  <wsdl:message name="deleteStartedWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteStartedWebapps"/>
  </wsdl:message>
  <wsdl:message name="expireAllSessionsRequest">
    <wsdl:part name="parameters" element="ns1:expireAllSessions"/>
  </wsdl:message>
  <wsdl:message name="changeDefaultAppVersionRequest">
    <wsdl:part name="parameters" element="ns1:changeDefaultAppVersion"/>
  </wsdl:message>
  <wsdl:message name="WebappAdminArtifactMetadataException">
    <wsdl:part name="parameters" element="ns1:WebappAdminArtifactMetadataException"/>
  </wsdl:message>
  <wsdl:message name="uploadWebappRequest">
    <wsdl:part name="parameters" element="ns1:uploadWebapp"/>
  </wsdl:message>
  <wsdl:message name="uploadWebappResponse">
    <wsdl:part name="parameters" element="ns1:uploadWebappResponse"/>
  </wsdl:message>
  <wsdl:message name="getActiveSessionsRequest">
    <wsdl:part name="parameters" element="ns1:getActiveSessions"/>
  </wsdl:message>
  <wsdl:message name="getActiveSessionsResponse">
    <wsdl:part name="parameters" element="ns1:getActiveSessionsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteAllWebAppsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllWebApps"/>
  </wsdl:message>
  <wsdl:message name="expireSessionsInAllWebappsRequest">
    <wsdl:part name="parameters" element="ns1:expireSessionsInAllWebapps"/>
  </wsdl:message>
  <wsdl:message name="isUnpackWARsRequest">
    <wsdl:part name="parameters" element="ns1:isUnpackWARs"/>
  </wsdl:message>
  <wsdl:message name="isUnpackWARsResponse">
    <wsdl:part name="parameters" element="ns1:isUnpackWARsResponse"/>
  </wsdl:message>
  <wsdl:message name="stopWebappsRequest">
    <wsdl:part name="parameters" element="ns1:stopWebapps"/>
  </wsdl:message>
  <wsdl:message name="deleteFaultyWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteFaultyWebapps"/>
  </wsdl:message>
  <wsdl:message name="reloadWebappsRequest">
    <wsdl:part name="parameters" element="ns1:reloadWebapps"/>
  </wsdl:message>
  <wsdl:portType name="WebappAdminPortType">
    <wsdl:operation name="deleteStoppedWebapps">
      <wsdl:input message="tns:deleteStoppedWebappsRequest" wsaw:Action="urn:deleteStoppedWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="isDefaultVersionManagementEnabled">
      <wsdl:input message="tns:isDefaultVersionManagementEnabledRequest" wsaw:Action="urn:isDefaultVersionManagementEnabled"/>
      <wsdl:output message="tns:isDefaultVersionManagementEnabledResponse" wsaw:Action="urn:isDefaultVersionManagementEnabledResponse"/>
    </wsdl:operation>
    <wsdl:operation name="stopAllWebapps">
      <wsdl:input message="tns:stopAllWebappsRequest" wsaw:Action="urn:stopAllWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyWebapps">
      <wsdl:input message="tns:deleteAllFaultyWebappsRequest" wsaw:Action="urn:deleteAllFaultyWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="startAllWebapps">
      <wsdl:input message="tns:startAllWebappsRequest" wsaw:Action="urn:startAllWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStartedWebapps">
      <wsdl:input message="tns:deleteAllStartedWebappsRequest" wsaw:Action="urn:deleteAllStartedWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="getPagedFaultyWebappsSummary">
      <wsdl:input message="tns:getPagedFaultyWebappsSummaryRequest" wsaw:Action="urn:getPagedFaultyWebappsSummary"/>
      <wsdl:output message="tns:getPagedFaultyWebappsSummaryResponse" wsaw:Action="urn:getPagedFaultyWebappsSummaryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStoppedWebapps">
      <wsdl:input message="tns:deleteAllStoppedWebappsRequest" wsaw:Action="urn:deleteAllStoppedWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="getPagedWebappsSummary">
      <wsdl:input message="tns:getPagedWebappsSummaryRequest" wsaw:Action="urn:getPagedWebappsSummary"/>
      <wsdl:output message="tns:getPagedWebappsSummaryResponse" wsaw:Action="urn:getPagedWebappsSummaryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setBamConfiguration">
      <wsdl:input message="tns:setBamConfigurationRequest" wsaw:Action="urn:setBamConfiguration"/>
    </wsdl:operation>
    <wsdl:operation name="getVhostHolder">
      <wsdl:input message="tns:getVhostHolderRequest" wsaw:Action="urn:getVhostHolder"/>
      <wsdl:output message="tns:getVhostHolderResponse" wsaw:Action="urn:getVhostHolderResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadWarFileHandler">
      <wsdl:input message="tns:downloadWarFileHandlerRequest" wsaw:Action="urn:downloadWarFileHandler"/>
      <wsdl:output message="tns:downloadWarFileHandlerResponse" wsaw:Action="urn:downloadWarFileHandlerResponse"/>
    </wsdl:operation>
    <wsdl:operation name="expireSessions">
      <wsdl:input message="tns:expireSessionsRequest" wsaw:Action="urn:expireSessions"/>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapps">
      <wsdl:input message="tns:expireSessionsInWebappsRequest" wsaw:Action="urn:expireSessionsInWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="reloadAllWebapps">
      <wsdl:input message="tns:reloadAllWebappsRequest" wsaw:Action="urn:reloadAllWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="getStartedWebapp">
      <wsdl:input message="tns:getStartedWebappRequest" wsaw:Action="urn:getStartedWebapp"/>
      <wsdl:output message="tns:getStartedWebappResponse" wsaw:Action="urn:getStartedWebappResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getStoppedWebapp">
      <wsdl:input message="tns:getStoppedWebappRequest" wsaw:Action="urn:getStoppedWebapp"/>
      <wsdl:output message="tns:getStoppedWebappResponse" wsaw:Action="urn:getStoppedWebappResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getBamConfiguration">
      <wsdl:input message="tns:getBamConfigurationRequest" wsaw:Action="urn:getBamConfiguration"/>
      <wsdl:output message="tns:getBamConfigurationResponse" wsaw:Action="urn:getBamConfigurationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="startWebapps">
      <wsdl:input message="tns:startWebappsRequest" wsaw:Action="urn:startWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapp">
      <wsdl:input message="tns:expireSessionsInWebappRequest" wsaw:Action="urn:expireSessionsInWebapp"/>
    </wsdl:operation>
    <wsdl:operation name="deleteStartedWebapps">
      <wsdl:input message="tns:deleteStartedWebappsRequest" wsaw:Action="urn:deleteStartedWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="expireAllSessions">
      <wsdl:input message="tns:expireAllSessionsRequest" wsaw:Action="urn:expireAllSessions"/>
    </wsdl:operation>
    <wsdl:operation name="changeDefaultAppVersion">
      <wsdl:input message="tns:changeDefaultAppVersionRequest" wsaw:Action="urn:changeDefaultAppVersion"/>
      <wsdl:fault message="tns:WebappAdminArtifactMetadataException" name="WebappAdminArtifactMetadataException" wsaw:Action="urn:changeDefaultAppVersionWebappAdminArtifactMetadataException"/>
    </wsdl:operation>
    <wsdl:operation name="uploadWebapp">
      <wsdl:input message="tns:uploadWebappRequest" wsaw:Action="urn:uploadWebapp"/>
      <wsdl:output message="tns:uploadWebappResponse" wsaw:Action="urn:uploadWebappResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <wsdl:input message="tns:getActiveSessionsRequest" wsaw:Action="urn:getActiveSessions"/>
      <wsdl:output message="tns:getActiveSessionsResponse" wsaw:Action="urn:getActiveSessionsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllWebApps">
      <wsdl:input message="tns:deleteAllWebAppsRequest" wsaw:Action="urn:deleteAllWebApps"/>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInAllWebapps">
      <wsdl:input message="tns:expireSessionsInAllWebappsRequest" wsaw:Action="urn:expireSessionsInAllWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="isUnpackWARs">
      <wsdl:input message="tns:isUnpackWARsRequest" wsaw:Action="urn:isUnpackWARs"/>
      <wsdl:output message="tns:isUnpackWARsResponse" wsaw:Action="urn:isUnpackWARsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="stopWebapps">
      <wsdl:input message="tns:stopWebappsRequest" wsaw:Action="urn:stopWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyWebapps">
      <wsdl:input message="tns:deleteFaultyWebappsRequest" wsaw:Action="urn:deleteFaultyWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="reloadWebapps">
      <wsdl:input message="tns:reloadWebappsRequest" wsaw:Action="urn:reloadWebapps"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WebappAdminSoap11Binding" type="tns:WebappAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isDefaultVersionManagementEnabled">
      <soap:operation soapAction="urn:isDefaultVersionManagementEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteStoppedWebapps">
      <soap:operation soapAction="urn:deleteStoppedWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="stopAllWebapps">
      <soap:operation soapAction="urn:stopAllWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="startAllWebapps">
      <soap:operation soapAction="urn:startAllWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyWebapps">
      <soap:operation soapAction="urn:deleteAllFaultyWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStartedWebapps">
      <soap:operation soapAction="urn:deleteAllStartedWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedFaultyWebappsSummary">
      <soap:operation soapAction="urn:getPagedFaultyWebappsSummary" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStoppedWebapps">
      <soap:operation soapAction="urn:deleteAllStoppedWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedWebappsSummary">
      <soap:operation soapAction="urn:getPagedWebappsSummary" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBamConfiguration">
      <soap:operation soapAction="urn:setBamConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getVhostHolder">
      <soap:operation soapAction="urn:getVhostHolder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadWarFileHandler">
      <soap:operation soapAction="urn:downloadWarFileHandler" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="expireSessions">
      <soap:operation soapAction="urn:expireSessions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapps">
      <soap:operation soapAction="urn:expireSessionsInWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadAllWebapps">
      <soap:operation soapAction="urn:reloadAllWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getStartedWebapp">
      <soap:operation soapAction="urn:getStartedWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStoppedWebapp">
      <soap:operation soapAction="urn:getStoppedWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBamConfiguration">
      <soap:operation soapAction="urn:getBamConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startWebapps">
      <soap:operation soapAction="urn:startWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapp">
      <soap:operation soapAction="urn:expireSessionsInWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteStartedWebapps">
      <soap:operation soapAction="urn:deleteStartedWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireAllSessions">
      <soap:operation soapAction="urn:expireAllSessions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changeDefaultAppVersion">
      <soap:operation soapAction="urn:changeDefaultAppVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="WebappAdminArtifactMetadataException">
        <soap:fault use="literal" name="WebappAdminArtifactMetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadWebapp">
      <soap:operation soapAction="urn:uploadWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <soap:operation soapAction="urn:getActiveSessions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllWebApps">
      <soap:operation soapAction="urn:deleteAllWebApps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInAllWebapps">
      <soap:operation soapAction="urn:expireSessionsInAllWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isUnpackWARs">
      <soap:operation soapAction="urn:isUnpackWARs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="stopWebapps">
      <soap:operation soapAction="urn:stopWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyWebapps">
      <soap:operation soapAction="urn:deleteFaultyWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadWebapps">
      <soap:operation soapAction="urn:reloadWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WebappAdminSoap12Binding" type="tns:WebappAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isDefaultVersionManagementEnabled">
      <soap12:operation soapAction="urn:isDefaultVersionManagementEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteStoppedWebapps">
      <soap12:operation soapAction="urn:deleteStoppedWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="stopAllWebapps">
      <soap12:operation soapAction="urn:stopAllWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="startAllWebapps">
      <soap12:operation soapAction="urn:startAllWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyWebapps">
      <soap12:operation soapAction="urn:deleteAllFaultyWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStartedWebapps">
      <soap12:operation soapAction="urn:deleteAllStartedWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedFaultyWebappsSummary">
      <soap12:operation soapAction="urn:getPagedFaultyWebappsSummary" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStoppedWebapps">
      <soap12:operation soapAction="urn:deleteAllStoppedWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedWebappsSummary">
      <soap12:operation soapAction="urn:getPagedWebappsSummary" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBamConfiguration">
      <soap12:operation soapAction="urn:setBamConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getVhostHolder">
      <soap12:operation soapAction="urn:getVhostHolder" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadWarFileHandler">
      <soap12:operation soapAction="urn:downloadWarFileHandler" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="expireSessions">
      <soap12:operation soapAction="urn:expireSessions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapps">
      <soap12:operation soapAction="urn:expireSessionsInWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadAllWebapps">
      <soap12:operation soapAction="urn:reloadAllWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getStartedWebapp">
      <soap12:operation soapAction="urn:getStartedWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStoppedWebapp">
      <soap12:operation soapAction="urn:getStoppedWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBamConfiguration">
      <soap12:operation soapAction="urn:getBamConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startWebapps">
      <soap12:operation soapAction="urn:startWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapp">
      <soap12:operation soapAction="urn:expireSessionsInWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteStartedWebapps">
      <soap12:operation soapAction="urn:deleteStartedWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireAllSessions">
      <soap12:operation soapAction="urn:expireAllSessions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changeDefaultAppVersion">
      <soap12:operation soapAction="urn:changeDefaultAppVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="WebappAdminArtifactMetadataException">
        <soap12:fault use="literal" name="WebappAdminArtifactMetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadWebapp">
      <soap12:operation soapAction="urn:uploadWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <soap12:operation soapAction="urn:getActiveSessions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllWebApps">
      <soap12:operation soapAction="urn:deleteAllWebApps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInAllWebapps">
      <soap12:operation soapAction="urn:expireSessionsInAllWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isUnpackWARs">
      <soap12:operation soapAction="urn:isUnpackWARs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="stopWebapps">
      <soap12:operation soapAction="urn:stopWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyWebapps">
      <soap12:operation soapAction="urn:deleteFaultyWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadWebapps">
      <soap12:operation soapAction="urn:reloadWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WebappAdminHttpBinding" type="tns:WebappAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="isDefaultVersionManagementEnabled">
      <http:operation location="isDefaultVersionManagementEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteStoppedWebapps">
      <http:operation location="deleteStoppedWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="stopAllWebapps">
      <http:operation location="stopAllWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="startAllWebapps">
      <http:operation location="startAllWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyWebapps">
      <http:operation location="deleteAllFaultyWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStartedWebapps">
      <http:operation location="deleteAllStartedWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedFaultyWebappsSummary">
      <http:operation location="getPagedFaultyWebappsSummary"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStoppedWebapps">
      <http:operation location="deleteAllStoppedWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedWebappsSummary">
      <http:operation location="getPagedWebappsSummary"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBamConfiguration">
      <http:operation location="setBamConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getVhostHolder">
      <http:operation location="getVhostHolder"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadWarFileHandler">
      <http:operation location="downloadWarFileHandler"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="expireSessions">
      <http:operation location="expireSessions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapps">
      <http:operation location="expireSessionsInWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadAllWebapps">
      <http:operation location="reloadAllWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getStartedWebapp">
      <http:operation location="getStartedWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStoppedWebapp">
      <http:operation location="getStoppedWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBamConfiguration">
      <http:operation location="getBamConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startWebapps">
      <http:operation location="startWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapp">
      <http:operation location="expireSessionsInWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteStartedWebapps">
      <http:operation location="deleteStartedWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireAllSessions">
      <http:operation location="expireAllSessions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changeDefaultAppVersion">
      <http:operation location="changeDefaultAppVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="uploadWebapp">
      <http:operation location="uploadWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <http:operation location="getActiveSessions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllWebApps">
      <http:operation location="deleteAllWebApps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInAllWebapps">
      <http:operation location="expireSessionsInAllWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isUnpackWARs">
      <http:operation location="isUnpackWARs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="stopWebapps">
      <http:operation location="stopWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyWebapps">
      <http:operation location="deleteFaultyWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadWebapps">
      <http:operation location="reloadWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WebappAdmin">
    <wsdl:port name="WebappAdminHttpsSoap11Endpoint" binding="tns:WebappAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/WebappAdmin.WebappAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WebappAdminHttpsSoap12Endpoint" binding="tns:WebappAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/WebappAdmin.WebappAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WebappAdminHttpsEndpoint" binding="tns:WebappAdminHttpBinding">
      <http:address location="https://localhost:9443/services/WebappAdmin.WebappAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/WebappAdmin.WebappAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="5c12d079-2316-4060-9321-2a74f9999c3f" isOneWay="false" action="urn:changeDefaultAppVersion" name="changeDefaultAppVersion" bindingOperationName="changeDefaultAppVersion" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6d9547c-92b8-4a39-bd82-69cc5d45d9d5" isOneWay="false" action="urn:deleteAllFaultyWebapps" name="deleteAllFaultyWebapps" bindingOperationName="deleteAllFaultyWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d6df62a0-a988-4944-a21b-5d90f2f09083" isOneWay="false" action="urn:deleteAllStartedWebapps" name="deleteAllStartedWebapps" bindingOperationName="deleteAllStartedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f3dac289-a2a7-4840-b27f-b6799d3c7684" isOneWay="false" action="urn:deleteAllStoppedWebapps" name="deleteAllStoppedWebapps" bindingOperationName="deleteAllStoppedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0cc2268f-9b92-4c6e-af3f-7e6e3c2cd155" isOneWay="false" action="urn:deleteAllWebApps" name="deleteAllWebApps" bindingOperationName="deleteAllWebApps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cae38516-ede3-4b66-b441-e7f3dde6a7c7" isOneWay="false" action="urn:deleteFaultyWebapps" name="deleteFaultyWebapps" bindingOperationName="deleteFaultyWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="88891c24-b991-49c0-a36d-8c0be0a585bc" isOneWay="false" action="urn:deleteStartedWebapps" name="deleteStartedWebapps" bindingOperationName="deleteStartedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5d486ed3-27a1-4b60-b5b0-a5185e60a6d5" isOneWay="false" action="urn:deleteStoppedWebapps" name="deleteStoppedWebapps" bindingOperationName="deleteStoppedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6cb0e1b-b230-42c8-803e-3772c23100d2" isOneWay="false" action="urn:downloadWarFileHandler" name="downloadWarFileHandler" bindingOperationName="downloadWarFileHandler" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="35016d52-7d1e-4f9d-af60-971ea4b5c515" isOneWay="false" action="urn:expireAllSessions" name="expireAllSessions" bindingOperationName="expireAllSessions" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52e619a9-1f1a-466f-a1c1-e99a42481d0f" isOneWay="false" action="urn:expireSessions" name="expireSessions" bindingOperationName="expireSessions" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="44ed17a2-3412-43c2-a761-705a9cabfd70" isOneWay="false" action="urn:expireSessionsInAllWebapps" name="expireSessionsInAllWebapps" bindingOperationName="expireSessionsInAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="05b23e20-8b2c-4727-babb-d732fea2cf5e" isOneWay="false" action="urn:expireSessionsInWebapp" name="expireSessionsInWebapp" bindingOperationName="expireSessionsInWebapp" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b8bf98aa-d9a0-42ab-af58-4fe712196a3e" isOneWay="false" action="urn:expireSessionsInWebapps" name="expireSessionsInWebapps" bindingOperationName="expireSessionsInWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="da5f2721-8e4e-4110-b442-88204cccd8b4" isOneWay="false" action="urn:getActiveSessions" name="getActiveSessions" bindingOperationName="getActiveSessions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="442ac7c2-f856-4e0f-a287-67d10532a009" isOneWay="false" action="urn:getBamConfiguration" name="getBamConfiguration" bindingOperationName="getBamConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="11200054-f582-4ec0-b319-7b7bfdda74f5" isOneWay="false" action="urn:getPagedFaultyWebappsSummary" name="getPagedFaultyWebappsSummary" bindingOperationName="getPagedFaultyWebappsSummary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0b1f00fc-c124-4440-b1ca-1edc30b6ccc7" isOneWay="false" action="urn:getPagedWebappsSummary" name="getPagedWebappsSummary" bindingOperationName="getPagedWebappsSummary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bf0df956-0bba-406f-8588-f7e64d382104" isOneWay="false" action="urn:getStartedWebapp" name="getStartedWebapp" bindingOperationName="getStartedWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4362c2c1-8dd1-4af4-8727-80c98214d735" isOneWay="false" action="urn:getStoppedWebapp" name="getStoppedWebapp" bindingOperationName="getStoppedWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d712617b-ae0b-40af-832c-787ec9992eee" isOneWay="false" action="urn:getVhostHolder" name="getVhostHolder" bindingOperationName="getVhostHolder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2b919f06-86c5-446d-b050-0167de74844f" isOneWay="false" action="urn:isDefaultVersionManagementEnabled" name="isDefaultVersionManagementEnabled" bindingOperationName="isDefaultVersionManagementEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="568ae0b8-81c9-4c3f-b2ae-f17640afe674" isOneWay="false" action="urn:isUnpackWARs" name="isUnpackWARs" bindingOperationName="isUnpackWARs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="76fd3bca-64ed-4ecb-94fc-c57faa7ee2f0" isOneWay="false" action="urn:reloadAllWebapps" name="reloadAllWebapps" bindingOperationName="reloadAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="22352097-94c0-4585-8f1f-a374eac47f22" isOneWay="false" action="urn:reloadWebapps" name="reloadWebapps" bindingOperationName="reloadWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a3ec255a-f86a-416e-b181-1d6b0e4eba4a" isOneWay="false" action="urn:setBamConfiguration" name="setBamConfiguration" bindingOperationName="setBamConfiguration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1ab7b45b-a64c-47da-a90a-364809fcb362" isOneWay="false" action="urn:startAllWebapps" name="startAllWebapps" bindingOperationName="startAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fcafcf78-b8fb-476d-8a77-62cd33849902" isOneWay="false" action="urn:startWebapps" name="startWebapps" bindingOperationName="startWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3839af2b-4fcb-4a06-b300-d6b092edc2a3" isOneWay="false" action="urn:stopAllWebapps" name="stopAllWebapps" bindingOperationName="stopAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b32d867-4255-480f-a25c-3dd011b5847b" isOneWay="false" action="urn:stopWebapps" name="stopWebapps" bindingOperationName="stopWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="37bfcc78-c71f-4eae-81be-19e16facb407" isOneWay="false" action="urn:uploadWebapp" name="uploadWebapp" bindingOperationName="uploadWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3db23359-bc6f-4823-8202-7d5c2ff3de0e" wsaVersion="NONE" name="WorkflowAdminServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.workflow.identity.carbon.wso2.org}WorkflowAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/WorkflowAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="fd6d5940-fd8a-484d-9a6f-879fde3965ce" isOneWay="false" action="urn:addAssociation" name="addAssociation" bindingOperationName="addAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="acdcd3f9-3959-4ab3-b2db-4e69fd0915fa" isOneWay="false" action="urn:addWorkflow" name="addWorkflow" bindingOperationName="addWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d4cdfcea-5418-4fa5-ac25-331d2a41ca48" isOneWay="false" action="urn:changeAssociationState" name="changeAssociationState" bindingOperationName="changeAssociationState" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="01b8d6aa-63d4-4d4c-89ca-45fbf49e4d3f" isOneWay="false" action="urn:deleteWorkflowRequest" name="deleteWorkflowRequest" bindingOperationName="deleteWorkflowRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2c1b8f08-a487-4d07-8e8e-a2ffe9a1fdfa" isOneWay="false" action="urn:getEvent" name="getEvent" bindingOperationName="getEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d4e57f61-9aec-44a4-a20f-d9387e7bc684" isOneWay="false" action="urn:getRequestsCreatedByUser" name="getRequestsCreatedByUser" bindingOperationName="getRequestsCreatedByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8ae061fc-35ba-4e4a-ba83-69b654302aae" isOneWay="false" action="urn:getRequestsInFilter" name="getRequestsInFilter" bindingOperationName="getRequestsInFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f4bf53a3-87d8-4fd2-b7f5-5bb95634b32a" isOneWay="false" action="urn:getTemplate" name="getTemplate" bindingOperationName="getTemplate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9fdee2a8-eb41-4db5-985e-2403ecb5bbb3" isOneWay="false" action="urn:getWorkflow" name="getWorkflow" bindingOperationName="getWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fe986c8c-766c-45fb-a36e-5890e2870334" isOneWay="false" action="urn:getWorkflowImpl" name="getWorkflowImpl" bindingOperationName="getWorkflowImpl" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b263acfd-78e9-47fa-a0e4-769c8db2334b" isOneWay="false" action="urn:getWorkflowsOfRequest" name="getWorkflowsOfRequest" bindingOperationName="getWorkflowsOfRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e8a35ad7-5a2f-462c-9c70-d3800f2e0fc8" isOneWay="false" action="urn:listAllAssociations" name="listAllAssociations" bindingOperationName="listAllAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c1093dae-fdeb-4a55-88a9-6092dc805697" isOneWay="false" action="urn:listAssociations" name="listAssociations" bindingOperationName="listAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7f04255f-945e-4524-96d9-b4dc540bd9a4" isOneWay="false" action="urn:listTemplates" name="listTemplates" bindingOperationName="listTemplates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4735315c-59f7-4a3e-896d-ae6a1d3b7ba5" isOneWay="false" action="urn:listWorkflowEvents" name="listWorkflowEvents" bindingOperationName="listWorkflowEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0ba59ec1-8d7e-4698-baf5-f025605815da" isOneWay="false" action="urn:listWorkflowImpls" name="listWorkflowImpls" bindingOperationName="listWorkflowImpls" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f1d259a7-9735-4c8d-971d-53c527836b5c" isOneWay="false" action="urn:listWorkflows" name="listWorkflows" bindingOperationName="listWorkflows" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f87ec5a-6fa8-498f-b62f-49e6d1b726b1" isOneWay="false" action="urn:removeAssociation" name="removeAssociation" bindingOperationName="removeAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8aa8e308-48c2-43ce-9f7a-50826dc3c4ba" isOneWay="false" action="urn:removeWorkflow" name="removeWorkflow" bindingOperationName="removeWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ec42a586-3cff-4d02-a767-3c89d9bf0b4c" wsaVersion="NONE" name="WorkflowAdminServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.workflow.identity.carbon.wso2.org}WorkflowAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/WorkflowAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/WorkflowAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/WorkflowAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.workflow.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2423="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2424="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2427="http://dto.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2428="http://metadata.bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2430="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:tns="http://mgt.workflow.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>WorkflowAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2425="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="WorkflowException">
        <xs:complexContent>
          <xs:extension base="ax2424:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:complexType name="Parameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="holder" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="paramName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="paramValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="qName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkflowRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="createdAt" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdBy" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="requestId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="requestParams" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="updatedAt" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkflowRequestAssociation">
        <xs:sequence>
          <xs:element minOccurs="0" name="lastUpdatedTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://metadata.bean.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:complexType name="ParametersMetaData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parameterMetaData" nillable="true" type="ax2428:ParameterMetaData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ParameterMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="customInputType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dataType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="inputData" nillable="true" type="ax2428:InputData"/>
          <xs:element minOccurs="0" name="inputType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="isInputDataRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="isRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="regExForValidate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="validate" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InputData">
        <xs:sequence>
          <xs:element minOccurs="0" name="mapType" nillable="true" type="ax2428:MapType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MapType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="ax2428:Item"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Item">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2429="http://metadata.bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2431="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://metadata.bean.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="WorkflowWizard">
        <xs:sequence>
          <xs:element minOccurs="0" name="template" nillable="true" type="ax2427:Template"/>
          <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="templateParameters" nillable="true" type="ax2430:Parameter"/>
          <xs:element minOccurs="0" name="workflowDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowImpl" nillable="true" type="ax2427:WorkflowImpl"/>
          <xs:element minOccurs="0" name="workflowImplId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="workflowImplParameters" nillable="true" type="ax2430:Parameter"/>
          <xs:element minOccurs="0" name="workflowName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Template">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parametersMetaData" nillable="true" type="ax2428:ParametersMetaData"/>
          <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkflowImpl">
        <xs:sequence>
          <xs:element minOccurs="0" name="parametersMetaData" nillable="true" type="ax2428:ParametersMetaData"/>
          <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowImplId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowImplName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkflowEvent">
        <xs:sequence>
          <xs:element minOccurs="0" name="eventCategory" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventFriendlyName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parameters" nillable="true" type="ax2430:Parameter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Association">
        <xs:sequence>
          <xs:element minOccurs="0" name="associationId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="associationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="condition" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="eventCategory" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2432="http://dto.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2433="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2426="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:element name="WorkflowAdminServiceWorkflowException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="WorkflowException" nillable="true" type="ax2423:WorkflowException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflow">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowWizard"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowEvents">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listTemplates">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listTemplatesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:Template"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowImpls">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowImplsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowImpl"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addWorkflow">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="workflow" nillable="true" type="ax2432:WorkflowWizard"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeAssociationState">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="associationId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="isEnable" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflows">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowWizard"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeWorkflow">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAssociations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAssociationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:Association"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllAssociations">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllAssociationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:Association"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRequestsCreatedByUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="user" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="beginDate" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="endDate" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dateCategory" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRequestsCreatedByUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2433:WorkflowRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRequestsInFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="beginDate" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="endDate" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dateCategory" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRequestsInFilterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2433:WorkflowRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteWorkflowRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="requestId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowsOfRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="requestId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowsOfRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2433:WorkflowRequestAssociation"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addAssociation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="associationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="eventId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="condition" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAssociation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="associationId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTemplate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTemplateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2432:Template"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowImpl">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="implementationId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowImplResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowImpl"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEvent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="eventId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEventResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getEventRequest">
    <wsdl:part name="parameters" element="ns:getEvent"/>
  </wsdl:message>
  <wsdl:message name="getEventResponse">
    <wsdl:part name="parameters" element="ns:getEventResponse"/>
  </wsdl:message>
  <wsdl:message name="listTemplatesRequest">
    <wsdl:part name="parameters" element="ns:listTemplates"/>
  </wsdl:message>
  <wsdl:message name="listTemplatesResponse">
    <wsdl:part name="parameters" element="ns:listTemplatesResponse"/>
  </wsdl:message>
  <wsdl:message name="WorkflowAdminServiceWorkflowException">
    <wsdl:part name="parameters" element="ns:WorkflowAdminServiceWorkflowException"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowRequest">
    <wsdl:part name="parameters" element="ns:getWorkflow"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowResponse">
    <wsdl:part name="parameters" element="ns:getWorkflowResponse"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowImplRequest">
    <wsdl:part name="parameters" element="ns:getWorkflowImpl"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowImplResponse">
    <wsdl:part name="parameters" element="ns:getWorkflowImplResponse"/>
  </wsdl:message>
  <wsdl:message name="getTemplateRequest">
    <wsdl:part name="parameters" element="ns:getTemplate"/>
  </wsdl:message>
  <wsdl:message name="getTemplateResponse">
    <wsdl:part name="parameters" element="ns:getTemplateResponse"/>
  </wsdl:message>
  <wsdl:message name="changeAssociationStateRequest">
    <wsdl:part name="parameters" element="ns:changeAssociationState"/>
  </wsdl:message>
  <wsdl:message name="changeAssociationStateResponse"/>
  <wsdl:message name="removeAssociationRequest">
    <wsdl:part name="parameters" element="ns:removeAssociation"/>
  </wsdl:message>
  <wsdl:message name="removeAssociationResponse"/>
  <wsdl:message name="addWorkflowRequest">
    <wsdl:part name="parameters" element="ns:addWorkflow"/>
  </wsdl:message>
  <wsdl:message name="addWorkflowResponse"/>
  <wsdl:message name="listWorkflowsRequest">
    <wsdl:part name="parameters" element="ns:listWorkflows"/>
  </wsdl:message>
  <wsdl:message name="listWorkflowsResponse">
    <wsdl:part name="parameters" element="ns:listWorkflowsResponse"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowsOfRequestRequest">
    <wsdl:part name="parameters" element="ns:getWorkflowsOfRequest"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowsOfRequestResponse">
    <wsdl:part name="parameters" element="ns:getWorkflowsOfRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="addAssociationRequest">
    <wsdl:part name="parameters" element="ns:addAssociation"/>
  </wsdl:message>
  <wsdl:message name="addAssociationResponse"/>
  <wsdl:message name="removeWorkflowRequest">
    <wsdl:part name="parameters" element="ns:removeWorkflow"/>
  </wsdl:message>
  <wsdl:message name="removeWorkflowResponse"/>
  <wsdl:message name="listWorkflowImplsRequest">
    <wsdl:part name="parameters" element="ns:listWorkflowImpls"/>
  </wsdl:message>
  <wsdl:message name="listWorkflowImplsResponse">
    <wsdl:part name="parameters" element="ns:listWorkflowImplsResponse"/>
  </wsdl:message>
  <wsdl:message name="listWorkflowEventsRequest">
    <wsdl:part name="parameters" element="ns:listWorkflowEvents"/>
  </wsdl:message>
  <wsdl:message name="listWorkflowEventsResponse">
    <wsdl:part name="parameters" element="ns:listWorkflowEventsResponse"/>
  </wsdl:message>
  <wsdl:message name="listAssociationsRequest">
    <wsdl:part name="parameters" element="ns:listAssociations"/>
  </wsdl:message>
  <wsdl:message name="listAssociationsResponse">
    <wsdl:part name="parameters" element="ns:listAssociationsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteWorkflowRequestRequest">
    <wsdl:part name="parameters" element="ns:deleteWorkflowRequest"/>
  </wsdl:message>
  <wsdl:message name="deleteWorkflowRequestResponse"/>
  <wsdl:message name="getRequestsInFilterRequest">
    <wsdl:part name="parameters" element="ns:getRequestsInFilter"/>
  </wsdl:message>
  <wsdl:message name="getRequestsInFilterResponse">
    <wsdl:part name="parameters" element="ns:getRequestsInFilterResponse"/>
  </wsdl:message>
  <wsdl:message name="getRequestsCreatedByUserRequest">
    <wsdl:part name="parameters" element="ns:getRequestsCreatedByUser"/>
  </wsdl:message>
  <wsdl:message name="getRequestsCreatedByUserResponse">
    <wsdl:part name="parameters" element="ns:getRequestsCreatedByUserResponse"/>
  </wsdl:message>
  <wsdl:message name="listAllAssociationsRequest">
    <wsdl:part name="parameters" element="ns:listAllAssociations"/>
  </wsdl:message>
  <wsdl:message name="listAllAssociationsResponse">
    <wsdl:part name="parameters" element="ns:listAllAssociationsResponse"/>
  </wsdl:message>
  <wsdl:portType name="WorkflowAdminServicePortType">
    <wsdl:operation name="getEvent">
      <wsdl:input message="tns:getEventRequest" wsaw:Action="urn:getEvent"/>
      <wsdl:output message="tns:getEventResponse" wsaw:Action="urn:getEventResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <wsdl:input message="tns:listTemplatesRequest" wsaw:Action="urn:listTemplates"/>
      <wsdl:output message="tns:listTemplatesResponse" wsaw:Action="urn:listTemplatesResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listTemplatesWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkflow">
      <wsdl:input message="tns:getWorkflowRequest" wsaw:Action="urn:getWorkflow"/>
      <wsdl:output message="tns:getWorkflowResponse" wsaw:Action="urn:getWorkflowResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getWorkflowWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowImpl">
      <wsdl:input message="tns:getWorkflowImplRequest" wsaw:Action="urn:getWorkflowImpl"/>
      <wsdl:output message="tns:getWorkflowImplResponse" wsaw:Action="urn:getWorkflowImplResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getWorkflowImplWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <wsdl:input message="tns:getTemplateRequest" wsaw:Action="urn:getTemplate"/>
      <wsdl:output message="tns:getTemplateResponse" wsaw:Action="urn:getTemplateResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getTemplateWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="changeAssociationState">
      <wsdl:input message="tns:changeAssociationStateRequest" wsaw:Action="urn:changeAssociationState"/>
      <wsdl:output message="tns:changeAssociationStateResponse" wsaw:Action="urn:changeAssociationStateResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:changeAssociationStateWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="removeAssociation">
      <wsdl:input message="tns:removeAssociationRequest" wsaw:Action="urn:removeAssociation"/>
      <wsdl:output message="tns:removeAssociationResponse" wsaw:Action="urn:removeAssociationResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:removeAssociationWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="addWorkflow">
      <wsdl:input message="tns:addWorkflowRequest" wsaw:Action="urn:addWorkflow"/>
      <wsdl:output message="tns:addWorkflowResponse" wsaw:Action="urn:addWorkflowResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:addWorkflowWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="listWorkflows">
      <wsdl:input message="tns:listWorkflowsRequest" wsaw:Action="urn:listWorkflows"/>
      <wsdl:output message="tns:listWorkflowsResponse" wsaw:Action="urn:listWorkflowsResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listWorkflowsWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowsOfRequest">
      <wsdl:input message="tns:getWorkflowsOfRequestRequest" wsaw:Action="urn:getWorkflowsOfRequest"/>
      <wsdl:output message="tns:getWorkflowsOfRequestResponse" wsaw:Action="urn:getWorkflowsOfRequestResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getWorkflowsOfRequestWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="addAssociation">
      <wsdl:input message="tns:addAssociationRequest" wsaw:Action="urn:addAssociation"/>
      <wsdl:output message="tns:addAssociationResponse" wsaw:Action="urn:addAssociationResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:addAssociationWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="removeWorkflow">
      <wsdl:input message="tns:removeWorkflowRequest" wsaw:Action="urn:removeWorkflow"/>
      <wsdl:output message="tns:removeWorkflowResponse" wsaw:Action="urn:removeWorkflowResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:removeWorkflowWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowImpls">
      <wsdl:input message="tns:listWorkflowImplsRequest" wsaw:Action="urn:listWorkflowImpls"/>
      <wsdl:output message="tns:listWorkflowImplsResponse" wsaw:Action="urn:listWorkflowImplsResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listWorkflowImplsWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowEvents">
      <wsdl:input message="tns:listWorkflowEventsRequest" wsaw:Action="urn:listWorkflowEvents"/>
      <wsdl:output message="tns:listWorkflowEventsResponse" wsaw:Action="urn:listWorkflowEventsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listAssociations">
      <wsdl:input message="tns:listAssociationsRequest" wsaw:Action="urn:listAssociations"/>
      <wsdl:output message="tns:listAssociationsResponse" wsaw:Action="urn:listAssociationsResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listAssociationsWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteWorkflowRequest">
      <wsdl:input message="tns:deleteWorkflowRequestRequest" wsaw:Action="urn:deleteWorkflowRequest"/>
      <wsdl:output message="tns:deleteWorkflowRequestResponse" wsaw:Action="urn:deleteWorkflowRequestResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:deleteWorkflowRequestWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getRequestsInFilter">
      <wsdl:input message="tns:getRequestsInFilterRequest" wsaw:Action="urn:getRequestsInFilter"/>
      <wsdl:output message="tns:getRequestsInFilterResponse" wsaw:Action="urn:getRequestsInFilterResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getRequestsInFilterWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getRequestsCreatedByUser">
      <wsdl:input message="tns:getRequestsCreatedByUserRequest" wsaw:Action="urn:getRequestsCreatedByUser"/>
      <wsdl:output message="tns:getRequestsCreatedByUserResponse" wsaw:Action="urn:getRequestsCreatedByUserResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getRequestsCreatedByUserWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="listAllAssociations">
      <wsdl:input message="tns:listAllAssociationsRequest" wsaw:Action="urn:listAllAssociations"/>
      <wsdl:output message="tns:listAllAssociationsResponse" wsaw:Action="urn:listAllAssociationsResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listAllAssociationsWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WorkflowAdminServiceSoap11Binding" type="tns:WorkflowAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEvent">
      <soap:operation soapAction="urn:getEvent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <soap:operation soapAction="urn:listTemplates" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflow">
      <soap:operation soapAction="urn:getWorkflow" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowImpl">
      <soap:operation soapAction="urn:getWorkflowImpl" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <soap:operation soapAction="urn:getTemplate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeAssociationState">
      <soap:operation soapAction="urn:changeAssociationState" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAssociation">
      <soap:operation soapAction="urn:removeAssociation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addWorkflow">
      <soap:operation soapAction="urn:addWorkflow" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflows">
      <soap:operation soapAction="urn:listWorkflows" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowsOfRequest">
      <soap:operation soapAction="urn:getWorkflowsOfRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAssociation">
      <soap:operation soapAction="urn:addAssociation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWorkflow">
      <soap:operation soapAction="urn:removeWorkflow" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowImpls">
      <soap:operation soapAction="urn:listWorkflowImpls" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowEvents">
      <soap:operation soapAction="urn:listWorkflowEvents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAssociations">
      <soap:operation soapAction="urn:listAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteWorkflowRequest">
      <soap:operation soapAction="urn:deleteWorkflowRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsInFilter">
      <soap:operation soapAction="urn:getRequestsInFilter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsCreatedByUser">
      <soap:operation soapAction="urn:getRequestsCreatedByUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllAssociations">
      <soap:operation soapAction="urn:listAllAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowAdminServiceSoap12Binding" type="tns:WorkflowAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEvent">
      <soap12:operation soapAction="urn:getEvent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <soap12:operation soapAction="urn:listTemplates" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflow">
      <soap12:operation soapAction="urn:getWorkflow" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowImpl">
      <soap12:operation soapAction="urn:getWorkflowImpl" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <soap12:operation soapAction="urn:getTemplate" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeAssociationState">
      <soap12:operation soapAction="urn:changeAssociationState" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAssociation">
      <soap12:operation soapAction="urn:removeAssociation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addWorkflow">
      <soap12:operation soapAction="urn:addWorkflow" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflows">
      <soap12:operation soapAction="urn:listWorkflows" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowsOfRequest">
      <soap12:operation soapAction="urn:getWorkflowsOfRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAssociation">
      <soap12:operation soapAction="urn:addAssociation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWorkflow">
      <soap12:operation soapAction="urn:removeWorkflow" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowImpls">
      <soap12:operation soapAction="urn:listWorkflowImpls" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowEvents">
      <soap12:operation soapAction="urn:listWorkflowEvents" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAssociations">
      <soap12:operation soapAction="urn:listAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteWorkflowRequest">
      <soap12:operation soapAction="urn:deleteWorkflowRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsInFilter">
      <soap12:operation soapAction="urn:getRequestsInFilter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsCreatedByUser">
      <soap12:operation soapAction="urn:getRequestsCreatedByUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllAssociations">
      <soap12:operation soapAction="urn:listAllAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowAdminServiceHttpBinding" type="tns:WorkflowAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getEvent">
      <http:operation location="getEvent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <http:operation location="listTemplates"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWorkflow">
      <http:operation location="getWorkflow"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowImpl">
      <http:operation location="getWorkflowImpl"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <http:operation location="getTemplate"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeAssociationState">
      <http:operation location="changeAssociationState"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAssociation">
      <http:operation location="removeAssociation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addWorkflow">
      <http:operation location="addWorkflow"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listWorkflows">
      <http:operation location="listWorkflows"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowsOfRequest">
      <http:operation location="getWorkflowsOfRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addAssociation">
      <http:operation location="addAssociation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeWorkflow">
      <http:operation location="removeWorkflow"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowImpls">
      <http:operation location="listWorkflowImpls"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowEvents">
      <http:operation location="listWorkflowEvents"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAssociations">
      <http:operation location="listAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteWorkflowRequest">
      <http:operation location="deleteWorkflowRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRequestsInFilter">
      <http:operation location="getRequestsInFilter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRequestsCreatedByUser">
      <http:operation location="getRequestsCreatedByUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAllAssociations">
      <http:operation location="listAllAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WorkflowAdminService">
    <wsdl:port name="WorkflowAdminServiceHttpsSoap11Endpoint" binding="tns:WorkflowAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowAdminServiceHttpsSoap12Endpoint" binding="tns:WorkflowAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowAdminServiceHttpsEndpoint" binding="tns:WorkflowAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="9adc37a0-554e-4cf1-b2a6-18d316da5cd9" isOneWay="false" action="urn:addAssociation" name="addAssociation" bindingOperationName="addAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3e815019-25d1-4b1c-be2c-108f4a4cb456" isOneWay="false" action="urn:addWorkflow" name="addWorkflow" bindingOperationName="addWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5796fabf-0662-45f1-9ad5-8ed3918e519f" isOneWay="false" action="urn:changeAssociationState" name="changeAssociationState" bindingOperationName="changeAssociationState" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fffab299-51ca-411b-ac3b-5fef6e1bfcb4" isOneWay="false" action="urn:deleteWorkflowRequest" name="deleteWorkflowRequest" bindingOperationName="deleteWorkflowRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="46f21179-25c2-4418-ba21-63f32aa78551" isOneWay="false" action="urn:getEvent" name="getEvent" bindingOperationName="getEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c5c79f69-38ce-4da7-972e-ba0059311083" isOneWay="false" action="urn:getRequestsCreatedByUser" name="getRequestsCreatedByUser" bindingOperationName="getRequestsCreatedByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="570e1b21-638d-47bd-a298-e2f7ff1be313" isOneWay="false" action="urn:getRequestsInFilter" name="getRequestsInFilter" bindingOperationName="getRequestsInFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a42ac20f-f0ea-4e05-b870-650912e8436d" isOneWay="false" action="urn:getTemplate" name="getTemplate" bindingOperationName="getTemplate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8209181c-8ab8-4a82-9f61-628b549806e3" isOneWay="false" action="urn:getWorkflow" name="getWorkflow" bindingOperationName="getWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e8814bfc-6daf-4976-86d0-aaec4630afe3" isOneWay="false" action="urn:getWorkflowImpl" name="getWorkflowImpl" bindingOperationName="getWorkflowImpl" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3b1d2fe0-e98a-4519-b4ca-29b75e5f75aa" isOneWay="false" action="urn:getWorkflowsOfRequest" name="getWorkflowsOfRequest" bindingOperationName="getWorkflowsOfRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c750c205-c1fe-4db0-aae8-901b4aba96ec" isOneWay="false" action="urn:listAllAssociations" name="listAllAssociations" bindingOperationName="listAllAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5227f014-a6ac-497c-99fc-160da14c8000" isOneWay="false" action="urn:listAssociations" name="listAssociations" bindingOperationName="listAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2447e7af-3a30-40ec-b403-023d00bc6c0a" isOneWay="false" action="urn:listTemplates" name="listTemplates" bindingOperationName="listTemplates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e950266c-7ccd-4be8-81b6-46fb28f2f8e8" isOneWay="false" action="urn:listWorkflowEvents" name="listWorkflowEvents" bindingOperationName="listWorkflowEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4442a8ad-25de-4271-9fbf-83a05fd2f862" isOneWay="false" action="urn:listWorkflowImpls" name="listWorkflowImpls" bindingOperationName="listWorkflowImpls" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e6f335f6-6e5c-40bf-b73e-0f329a42a209" isOneWay="false" action="urn:listWorkflows" name="listWorkflows" bindingOperationName="listWorkflows" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9e592d3-1b95-4b1e-99e6-de75a7c30f1d" isOneWay="false" action="urn:removeAssociation" name="removeAssociation" bindingOperationName="removeAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="31a0aa4f-eb55-4a83-a3e2-ec321affc96f" isOneWay="false" action="urn:removeWorkflow" name="removeWorkflow" bindingOperationName="removeWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3a34ce0b-9578-4d41-a8b3-34b3c39c47bc" wsaVersion="NONE" name="WorkflowCallbackServiceSoap11Binding" type="wsdl" bindingName="{http://callback.mgt.workflow.identity.carbon.wso2.org}WorkflowCallbackServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/WorkflowCallbackService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c812e491-6d97-49a0-9b36-8cc3f33c813a" isOneWay="false" action="urn:onCallback" name="onCallback" bindingOperationName="onCallback" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="696063de-ff88-4d58-b1f6-6a3829c1801e" wsaVersion="NONE" name="WorkflowCallbackServiceSoap12Binding" type="wsdl" bindingName="{http://callback.mgt.workflow.identity.carbon.wso2.org}WorkflowCallbackServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/WorkflowCallbackService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/WorkflowCallbackService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/WorkflowCallbackService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://callback.mgt.workflow.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://callback.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://callback.mgt.workflow.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>WorkflowCallbackService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://callback.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:element name="onCallback">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="response" nillable="true" type="ns:WSWorkflowResponse"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="WSWorkflowResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="outputParams" nillable="true" type="ns:WSParameter"/>
          <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="uuid" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="onCallbackRequest">
    <wsdl:part name="parameters" element="ns:onCallback"/>
  </wsdl:message>
  <wsdl:portType name="WorkflowCallbackServicePortType">
    <wsdl:operation name="onCallback">
      <wsdl:input message="tns:onCallbackRequest" wsaw:Action="urn:onCallback"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WorkflowCallbackServiceSoap11Binding" type="tns:WorkflowCallbackServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="onCallback">
      <soap:operation soapAction="urn:onCallback" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowCallbackServiceSoap12Binding" type="tns:WorkflowCallbackServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="onCallback">
      <soap12:operation soapAction="urn:onCallback" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowCallbackServiceHttpBinding" type="tns:WorkflowCallbackServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="onCallback">
      <http:operation location="onCallback"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WorkflowCallbackService">
    <wsdl:port name="WorkflowCallbackServiceHttpsSoap11Endpoint" binding="tns:WorkflowCallbackServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowCallbackServiceHttpsSoap12Endpoint" binding="tns:WorkflowCallbackServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowCallbackServiceHttpsEndpoint" binding="tns:WorkflowCallbackServiceHttpBinding">
      <http:address location="https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="f650da5d-1094-4fe1-bd15-0aff08a22690" isOneWay="false" action="urn:onCallback" name="onCallback" bindingOperationName="onCallback" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="842dbe10-f33f-4f76-a29f-ba958d349706" wsaVersion="NONE" name="WorkflowImplAdminServiceSoap12Binding" type="wsdl" bindingName="{http://impl.workflow.identity.carbon.wso2.org}WorkflowImplAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/WorkflowImplAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="4fdaad0d-fd5e-4a80-b1b1-cb6d548173b8" isOneWay="false" action="urn:addBPSProfile" name="addBPSProfile" bindingOperationName="addBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c88b6a31-ca04-4388-b1da-7423672e1935" isOneWay="false" action="urn:getBPSProfile" name="getBPSProfile" bindingOperationName="getBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c11266fc-e054-4c10-9094-56cc06189354" isOneWay="false" action="urn:listBPSProfiles" name="listBPSProfiles" bindingOperationName="listBPSProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58eaf867-a851-456b-9845-49278dd23a9c" isOneWay="false" action="urn:removeBPSPackage" name="removeBPSPackage" bindingOperationName="removeBPSPackage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="266ac510-9e32-4f34-9cf0-47423c45ac03" isOneWay="false" action="urn:removeBPSProfile" name="removeBPSProfile" bindingOperationName="removeBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e3d0b08-9e56-407c-9dea-bb10cd19483e" isOneWay="false" action="urn:updateBPSProfile" name="updateBPSProfile" bindingOperationName="updateBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b0ae12ca-e021-478f-9448-9082f092a061" wsaVersion="NONE" name="WorkflowImplAdminServiceSoap11Binding" type="wsdl" bindingName="{http://impl.workflow.identity.carbon.wso2.org}WorkflowImplAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/WorkflowImplAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/WorkflowImplAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/WorkflowImplAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://impl.workflow.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2421="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2415="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ns="http://impl.workflow.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2416="http://base.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:tns="http://impl.workflow.identity.carbon.wso2.org" xmlns:ax2419="http://bean.impl.workflow.identity.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>WorkflowImplAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://bean.impl.workflow.identity.carbon.wso2.org/xsd">
      <xs:complexType name="BPSProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="managerHostURL" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="password" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workerHostURL" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2417="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="WorkflowException">
        <xs:complexContent>
          <xs:extension base="ax2416:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:complexType name="Workflow">
        <xs:sequence>
          <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowImplId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://impl.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2418="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2422="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2420="http://bean.impl.workflow.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://bean.impl.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:element name="WorkflowImplAdminServiceWorkflowImplException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="WorkflowImplException" nillable="true" type="ns:WorkflowImplException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="WorkflowImplException">
        <xs:complexContent>
          <xs:extension base="ax2415:WorkflowException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="addBPSProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="bpsProfileDTO" nillable="true" type="ax2419:BPSProfile"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listBPSProfiles">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listBPSProfilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2419:BPSProfile"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBPSProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="bpsProfileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBPSProfileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2419:BPSProfile"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateBPSProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="bpsProfileDTO" nillable="true" type="ax2419:BPSProfile"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeBPSProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeBPSPackage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="workflow" nillable="true" type="ax2421:Workflow"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getBPSProfileRequest">
    <wsdl:part name="parameters" element="ns:getBPSProfile"/>
  </wsdl:message>
  <wsdl:message name="getBPSProfileResponse">
    <wsdl:part name="parameters" element="ns:getBPSProfileResponse"/>
  </wsdl:message>
  <wsdl:message name="WorkflowImplAdminServiceWorkflowImplException">
    <wsdl:part name="parameters" element="ns:WorkflowImplAdminServiceWorkflowImplException"/>
  </wsdl:message>
  <wsdl:message name="removeBPSProfileRequest">
    <wsdl:part name="parameters" element="ns:removeBPSProfile"/>
  </wsdl:message>
  <wsdl:message name="removeBPSProfileResponse"/>
  <wsdl:message name="removeBPSPackageRequest">
    <wsdl:part name="parameters" element="ns:removeBPSPackage"/>
  </wsdl:message>
  <wsdl:message name="removeBPSPackageResponse"/>
  <wsdl:message name="listBPSProfilesRequest">
    <wsdl:part name="parameters" element="ns:listBPSProfiles"/>
  </wsdl:message>
  <wsdl:message name="listBPSProfilesResponse">
    <wsdl:part name="parameters" element="ns:listBPSProfilesResponse"/>
  </wsdl:message>
  <wsdl:message name="updateBPSProfileRequest">
    <wsdl:part name="parameters" element="ns:updateBPSProfile"/>
  </wsdl:message>
  <wsdl:message name="updateBPSProfileResponse"/>
  <wsdl:message name="addBPSProfileRequest">
    <wsdl:part name="parameters" element="ns:addBPSProfile"/>
  </wsdl:message>
  <wsdl:message name="addBPSProfileResponse"/>
  <wsdl:portType name="WorkflowImplAdminServicePortType">
    <wsdl:operation name="getBPSProfile">
      <wsdl:input message="tns:getBPSProfileRequest" wsaw:Action="urn:getBPSProfile"/>
      <wsdl:output message="tns:getBPSProfileResponse" wsaw:Action="urn:getBPSProfileResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:getBPSProfileWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="removeBPSProfile">
      <wsdl:input message="tns:removeBPSProfileRequest" wsaw:Action="urn:removeBPSProfile"/>
      <wsdl:output message="tns:removeBPSProfileResponse" wsaw:Action="urn:removeBPSProfileResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:removeBPSProfileWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="removeBPSPackage">
      <wsdl:input message="tns:removeBPSPackageRequest" wsaw:Action="urn:removeBPSPackage"/>
      <wsdl:output message="tns:removeBPSPackageResponse" wsaw:Action="urn:removeBPSPackageResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:removeBPSPackageWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="listBPSProfiles">
      <wsdl:input message="tns:listBPSProfilesRequest" wsaw:Action="urn:listBPSProfiles"/>
      <wsdl:output message="tns:listBPSProfilesResponse" wsaw:Action="urn:listBPSProfilesResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:listBPSProfilesWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="updateBPSProfile">
      <wsdl:input message="tns:updateBPSProfileRequest" wsaw:Action="urn:updateBPSProfile"/>
      <wsdl:output message="tns:updateBPSProfileResponse" wsaw:Action="urn:updateBPSProfileResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:updateBPSProfileWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="addBPSProfile">
      <wsdl:input message="tns:addBPSProfileRequest" wsaw:Action="urn:addBPSProfile"/>
      <wsdl:output message="tns:addBPSProfileResponse" wsaw:Action="urn:addBPSProfileResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:addBPSProfileWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WorkflowImplAdminServiceSoap11Binding" type="tns:WorkflowImplAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getBPSProfile">
      <soap:operation soapAction="urn:getBPSProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeBPSProfile">
      <soap:operation soapAction="urn:removeBPSProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeBPSPackage">
      <soap:operation soapAction="urn:removeBPSPackage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listBPSProfiles">
      <soap:operation soapAction="urn:listBPSProfiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBPSProfile">
      <soap:operation soapAction="urn:updateBPSProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addBPSProfile">
      <soap:operation soapAction="urn:addBPSProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowImplAdminServiceSoap12Binding" type="tns:WorkflowImplAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getBPSProfile">
      <soap12:operation soapAction="urn:getBPSProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeBPSProfile">
      <soap12:operation soapAction="urn:removeBPSProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeBPSPackage">
      <soap12:operation soapAction="urn:removeBPSPackage" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listBPSProfiles">
      <soap12:operation soapAction="urn:listBPSProfiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBPSProfile">
      <soap12:operation soapAction="urn:updateBPSProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addBPSProfile">
      <soap12:operation soapAction="urn:addBPSProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowImplAdminServiceHttpBinding" type="tns:WorkflowImplAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getBPSProfile">
      <http:operation location="getBPSProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeBPSProfile">
      <http:operation location="removeBPSProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeBPSPackage">
      <http:operation location="removeBPSPackage"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listBPSProfiles">
      <http:operation location="listBPSProfiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateBPSProfile">
      <http:operation location="updateBPSProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addBPSProfile">
      <http:operation location="addBPSProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WorkflowImplAdminService">
    <wsdl:port name="WorkflowImplAdminServiceHttpsSoap11Endpoint" binding="tns:WorkflowImplAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowImplAdminServiceHttpsSoap12Endpoint" binding="tns:WorkflowImplAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowImplAdminServiceHttpsEndpoint" binding="tns:WorkflowImplAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="b8de9ee3-e6b3-43ad-a3b2-9a1e993395fe" isOneWay="false" action="urn:addBPSProfile" name="addBPSProfile" bindingOperationName="addBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="da472fe0-78a9-436d-a9c7-27800a424c89" isOneWay="false" action="urn:getBPSProfile" name="getBPSProfile" bindingOperationName="getBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="da7fe741-9e50-4a25-82a2-6feb5589e043" isOneWay="false" action="urn:listBPSProfiles" name="listBPSProfiles" bindingOperationName="listBPSProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5e12f39c-e7f8-4d37-aa21-52ef11e47b07" isOneWay="false" action="urn:removeBPSPackage" name="removeBPSPackage" bindingOperationName="removeBPSPackage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff63a7ac-d0a3-499f-820a-e4de70f70714" isOneWay="false" action="urn:removeBPSProfile" name="removeBPSProfile" bindingOperationName="removeBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bde2c190-034a-4b14-bb83-e501407d785e" isOneWay="false" action="urn:updateBPSProfile" name="updateBPSProfile" bindingOperationName="updateBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f2bd1f5e-e715-44c3-8667-534e515c446e" wsaVersion="NONE" name="ws-xacmlSoap12Binding" type="wsdl" bindingName="{http://ws.apache.org/axis2}ws-xacmlSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/ws-xacml.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ws-xacml.ws-xacmlHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="35fdf8b8-373d-4111-87e6-da3d3e2c1b9c" isOneWay="false" action="" name="XACMLAuthzDecisionQuery" bindingOperationName="XACMLAuthzDecisionQuery" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b2fe1eca-c1fc-45d7-bfa3-1f69e566b371" wsaVersion="NONE" name="ws-xacmlSoap11Binding" type="wsdl" bindingName="{http://ws.apache.org/axis2}ws-xacmlSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/ws-xacml.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ws-xacml.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/ws-xacml.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://ws.apache.org/axis2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.apache.org/axis2" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ws-xacml</wsdl:documentation>
  <wsdl:types/>
  <wsdl:message name="XACMLAuthzDecisionQueryRequest"/>
  <wsdl:message name="XACMLAuthzDecisionQueryResponse"/>
  <wsdl:portType name="ws-xacmlPortType">
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <wsdl:input message="tns:XACMLAuthzDecisionQueryRequest" wsaw:Action="XACMLAuthzDecisionQuery"/>
      <wsdl:output message="tns:XACMLAuthzDecisionQueryResponse" wsaw:Action="urn:XACMLAuthzDecisionQueryResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ws-xacmlSoap11Binding" type="tns:ws-xacmlPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ws-xacmlSoap12Binding" type="tns:ws-xacmlPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ws-xacmlHttpBinding" type="tns:ws-xacmlPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <http:operation location="XACMLAuthzDecisionQuery"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ws-xacml">
    <wsdl:port name="ws-xacmlHttpsSoap11Endpoint" binding="tns:ws-xacmlSoap11Binding">
      <soap:address location="https://localhost:9443/services/ws-xacml.ws-xacmlHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ws-xacmlHttpsSoap12Endpoint" binding="tns:ws-xacmlSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ws-xacml.ws-xacmlHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ws-xacmlHttpsEndpoint" binding="tns:ws-xacmlHttpBinding">
      <http:address location="https://localhost:9443/services/ws-xacml.ws-xacmlHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ws-xacml.ws-xacmlHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="306739cc-704f-4c4e-ab2e-651347f221ef" isOneWay="false" action="" name="XACMLAuthzDecisionQuery" bindingOperationName="XACMLAuthzDecisionQuery" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1ed6ccbd-aa2a-4b87-bf90-7d5e979bddb9" wsaVersion="NONE" name="XMPPConfigurationServiceSoap12Binding" type="wsdl" bindingName="{http://provider.identity.carbon.wso2.org}XMPPConfigurationServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="wsdl/XMPPConfigurationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="7a4c1c52-b81c-4af2-9661-f538141a9c79" isOneWay="false" action="urn:addUserXmppSettings" name="addUserXmppSettings" bindingOperationName="addUserXmppSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b9dbbd46-7cad-4fab-a514-ee7456536849" isOneWay="false" action="urn:editXmppSettings" name="editXmppSettings" bindingOperationName="editXmppSettings" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c5d711fb-d47a-4e6c-ba8a-e8d88fae606e" isOneWay="false" action="urn:getUserIM" name="getUserIM" bindingOperationName="getUserIM" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69af5412-9c30-4cd2-82c5-b55199e0d482" isOneWay="false" action="urn:getXmppSettings" name="getXmppSettings" bindingOperationName="getXmppSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69a358cf-ebc7-4bdd-aafe-fd670cf8cee8" isOneWay="false" action="urn:hasXMPPSettings" name="hasXMPPSettings" bindingOperationName="hasXMPPSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f41381b6-843e-4799-a155-e420b3759b9b" isOneWay="false" action="urn:isXMPPSettingsEnabled" name="isXMPPSettingsEnabled" bindingOperationName="isXMPPSettingsEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="229571ca-133d-4615-a753-bfac71bcec71" wsaVersion="NONE" name="XMPPConfigurationServiceSoap11Binding" type="wsdl" bindingName="{http://provider.identity.carbon.wso2.org}XMPPConfigurationServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="wsdl/XMPPConfigurationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/XMPPConfigurationService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SoapUI/wsdl/XMPPConfigurationService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://provider.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2368="http://dto.provider.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://provider.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2364="http://provider.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ax2365="http://base.identity.carbon.wso2.org/xsd">
  <wsdl:documentation>XMPPConfigurationService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2367="http://provider.identity.carbon.wso2.org/xsd" xmlns:ax2369="http://dto.provider.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://provider.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.provider.identity.carbon.wso2.org/xsd"/>
      <xs:element name="XMPPConfigurationServiceIdentityProviderException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityProviderException" nillable="true" type="ax2367:IdentityProviderException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getXmppSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getXmppSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2368:XMPPSettingsDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasXMPPSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasXMPPSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIM">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIMResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="editXmppSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dto" nillable="true" type="ax2368:XMPPSettingsDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserXmppSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dto" nillable="true" type="ax2368:XMPPSettingsDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserXmppSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isXMPPSettingsEnabled">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isXMPPSettingsEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.provider.identity.carbon.wso2.org/xsd">
      <xs:complexType name="XMPPSettingsDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="PINEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="userCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="xmppEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="xmppServer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="xmppUserName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://provider.identity.carbon.wso2.org/xsd" xmlns:ax2366="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityProviderException">
        <xs:complexContent>
          <xs:extension base="ax2366:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="hasXMPPSettingsRequest">
    <wsdl:part name="parameters" element="ns1:hasXMPPSettings"/>
  </wsdl:message>
  <wsdl:message name="hasXMPPSettingsResponse">
    <wsdl:part name="parameters" element="ns1:hasXMPPSettingsResponse"/>
  </wsdl:message>
  <wsdl:message name="XMPPConfigurationServiceIdentityProviderException">
    <wsdl:part name="parameters" element="ns1:XMPPConfigurationServiceIdentityProviderException"/>
  </wsdl:message>
  <wsdl:message name="getUserIMRequest">
    <wsdl:part name="parameters" element="ns1:getUserIM"/>
  </wsdl:message>
  <wsdl:message name="getUserIMResponse">
    <wsdl:part name="parameters" element="ns1:getUserIMResponse"/>
  </wsdl:message>
  <wsdl:message name="getXmppSettingsRequest">
    <wsdl:part name="parameters" element="ns1:getXmppSettings"/>
  </wsdl:message>
  <wsdl:message name="getXmppSettingsResponse">
    <wsdl:part name="parameters" element="ns1:getXmppSettingsResponse"/>
  </wsdl:message>
  <wsdl:message name="editXmppSettingsRequest">
    <wsdl:part name="parameters" element="ns1:editXmppSettings"/>
  </wsdl:message>
  <wsdl:message name="addUserXmppSettingsRequest">
    <wsdl:part name="parameters" element="ns1:addUserXmppSettings"/>
  </wsdl:message>
  <wsdl:message name="addUserXmppSettingsResponse">
    <wsdl:part name="parameters" element="ns1:addUserXmppSettingsResponse"/>
  </wsdl:message>
  <wsdl:message name="isXMPPSettingsEnabledRequest">
    <wsdl:part name="parameters" element="ns1:isXMPPSettingsEnabled"/>
  </wsdl:message>
  <wsdl:message name="isXMPPSettingsEnabledResponse">
    <wsdl:part name="parameters" element="ns1:isXMPPSettingsEnabledResponse"/>
  </wsdl:message>
  <wsdl:portType name="XMPPConfigurationServicePortType">
    <wsdl:operation name="hasXMPPSettings">
      <wsdl:input message="tns:hasXMPPSettingsRequest" wsaw:Action="urn:hasXMPPSettings"/>
      <wsdl:output message="tns:hasXMPPSettingsResponse" wsaw:Action="urn:hasXMPPSettingsResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:hasXMPPSettingsXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserIM">
      <wsdl:input message="tns:getUserIMRequest" wsaw:Action="urn:getUserIM"/>
      <wsdl:output message="tns:getUserIMResponse" wsaw:Action="urn:getUserIMResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:getUserIMXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="getXmppSettings">
      <wsdl:input message="tns:getXmppSettingsRequest" wsaw:Action="urn:getXmppSettings"/>
      <wsdl:output message="tns:getXmppSettingsResponse" wsaw:Action="urn:getXmppSettingsResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:getXmppSettingsXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="editXmppSettings">
      <wsdl:input message="tns:editXmppSettingsRequest" wsaw:Action="urn:editXmppSettings"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:editXmppSettingsXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserXmppSettings">
      <wsdl:input message="tns:addUserXmppSettingsRequest" wsaw:Action="urn:addUserXmppSettings"/>
      <wsdl:output message="tns:addUserXmppSettingsResponse" wsaw:Action="urn:addUserXmppSettingsResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:addUserXmppSettingsXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="isXMPPSettingsEnabled">
      <wsdl:input message="tns:isXMPPSettingsEnabledRequest" wsaw:Action="urn:isXMPPSettingsEnabled"/>
      <wsdl:output message="tns:isXMPPSettingsEnabledResponse" wsaw:Action="urn:isXMPPSettingsEnabledResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:isXMPPSettingsEnabledXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="XMPPConfigurationServiceSoap11Binding" type="tns:XMPPConfigurationServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="hasXMPPSettings">
      <soap:operation soapAction="urn:hasXMPPSettings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIM">
      <soap:operation soapAction="urn:getUserIM" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getXmppSettings">
      <soap:operation soapAction="urn:getXmppSettings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editXmppSettings">
      <soap:operation soapAction="urn:editXmppSettings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserXmppSettings">
      <soap:operation soapAction="urn:addUserXmppSettings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isXMPPSettingsEnabled">
      <soap:operation soapAction="urn:isXMPPSettingsEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="XMPPConfigurationServiceSoap12Binding" type="tns:XMPPConfigurationServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="hasXMPPSettings">
      <soap12:operation soapAction="urn:hasXMPPSettings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIM">
      <soap12:operation soapAction="urn:getUserIM" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getXmppSettings">
      <soap12:operation soapAction="urn:getXmppSettings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editXmppSettings">
      <soap12:operation soapAction="urn:editXmppSettings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserXmppSettings">
      <soap12:operation soapAction="urn:addUserXmppSettings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isXMPPSettingsEnabled">
      <soap12:operation soapAction="urn:isXMPPSettingsEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="XMPPConfigurationServiceHttpBinding" type="tns:XMPPConfigurationServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="hasXMPPSettings">
      <http:operation location="hasXMPPSettings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserIM">
      <http:operation location="getUserIM"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getXmppSettings">
      <http:operation location="getXmppSettings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editXmppSettings">
      <http:operation location="editXmppSettings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addUserXmppSettings">
      <http:operation location="addUserXmppSettings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isXMPPSettingsEnabled">
      <http:operation location="isXMPPSettingsEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="XMPPConfigurationService">
    <wsdl:port name="XMPPConfigurationServiceHttpsSoap11Endpoint" binding="tns:XMPPConfigurationServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="XMPPConfigurationServiceHttpsSoap12Endpoint" binding="tns:XMPPConfigurationServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="XMPPConfigurationServiceHttpsEndpoint" binding="tns:XMPPConfigurationServiceHttpBinding">
      <http:address location="https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="1572aa77-8c81-4182-a9ef-34093372baaa" isOneWay="false" action="urn:addUserXmppSettings" name="addUserXmppSettings" bindingOperationName="addUserXmppSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eaffafc5-1b2c-454e-9aa5-f8b24270d9a5" isOneWay="false" action="urn:editXmppSettings" name="editXmppSettings" bindingOperationName="editXmppSettings" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3efb3a32-ff12-4587-b677-1a30c9153af0" isOneWay="false" action="urn:getUserIM" name="getUserIM" bindingOperationName="getUserIM" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="509cbbc1-9abb-467d-b180-3f40fcd504f8" isOneWay="false" action="urn:getXmppSettings" name="getXmppSettings" bindingOperationName="getXmppSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e701a8b-c04f-4c08-a473-c146aa275791" isOneWay="false" action="urn:hasXMPPSettings" name="hasXMPPSettings" bindingOperationName="hasXMPPSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="972708d6-c200-4fb1-b4fd-3f6d55d767a4" isOneWay="false" action="urn:isXMPPSettingsEnabled" name="isXMPPSettingsEnabled" bindingOperationName="isXMPPSettingsEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>