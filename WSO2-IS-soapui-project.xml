<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="01b37ed1-3502-4119-b6bb-71e853fd56f6" activeEnvironment="Default" name="WSO2-IS" resourceRoot="" soapui-version="5.2.1" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="5ea1f997-80ef-4529-a09a-afda9350c161" wsaVersion="NONE" name="AccountCredentialMgtConfigServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}AccountCredentialMgtConfigServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/AccountCredentialMgtConfigService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="eb36b284-cc03-4cca-a7b1-d9178ccb5c0b" isOneWay="false" action="urn:getEmailConfig" name="getEmailConfig" bindingOperationName="getEmailConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a8830007-0d7c-4db5-8efd-6796b7dcb10d" isOneWay="false" action="urn:saveEmailConfig" name="saveEmailConfig" bindingOperationName="saveEmailConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d5a6f267-3e9c-459a-81df-1b2daceb77f4" wsaVersion="NONE" name="AccountCredentialMgtConfigServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}AccountCredentialMgtConfigServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/AccountCredentialMgtConfigService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/AccountCredentialMgtConfigService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/AccountCredentialMgtConfigService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2323="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2324="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.identity.carbon.wso2.org" xmlns:ax2327="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>AccountCredentialMgtConfigService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:ax2326="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2328="http://dto.mgt.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:element name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityMgtServiceException" nillable="true" type="ax2323:IdentityMgtServiceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="saveEmailConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="emailTemplates" nillable="true" type="ax2327:EmailTemplateDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEmailConfig">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEmailConfigResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2327:EmailTemplateDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EmailTemplateDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="footer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="subject" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2325="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityMgtServiceException">
        <xs:complexContent>
          <xs:extension base="ax2324:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="saveEmailConfigRequest">
    <wsdl:part name="parameters" element="ns:saveEmailConfig"/>
  </wsdl:message>
  <wsdl:message name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
    <wsdl:part name="parameters" element="ns:AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
  </wsdl:message>
  <wsdl:message name="getEmailConfigRequest">
    <wsdl:part name="parameters" element="ns:getEmailConfig"/>
  </wsdl:message>
  <wsdl:message name="getEmailConfigResponse">
    <wsdl:part name="parameters" element="ns:getEmailConfigResponse"/>
  </wsdl:message>
  <wsdl:portType name="AccountCredentialMgtConfigServicePortType">
    <wsdl:operation name="saveEmailConfig">
      <wsdl:input message="ns:saveEmailConfigRequest" wsaw:Action="urn:saveEmailConfig"/>
      <wsdl:fault message="ns:AccountCredentialMgtConfigServiceIdentityMgtServiceException" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException" wsaw:Action="urn:saveEmailConfigAccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getEmailConfig">
      <wsdl:input message="ns:getEmailConfigRequest" wsaw:Action="urn:getEmailConfig"/>
      <wsdl:output message="ns:getEmailConfigResponse" wsaw:Action="urn:getEmailConfigResponse"/>
      <wsdl:fault message="ns:AccountCredentialMgtConfigServiceIdentityMgtServiceException" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException" wsaw:Action="urn:getEmailConfigAccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AccountCredentialMgtConfigServiceSoap11Binding" type="ns:AccountCredentialMgtConfigServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="saveEmailConfig">
      <soap:operation soapAction="urn:saveEmailConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEmailConfig">
      <soap:operation soapAction="urn:getEmailConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="AccountCredentialMgtConfigServiceSoap12Binding" type="ns:AccountCredentialMgtConfigServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="saveEmailConfig">
      <soap12:operation soapAction="urn:saveEmailConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEmailConfig">
      <soap12:operation soapAction="urn:getEmailConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AccountCredentialMgtConfigServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="AccountCredentialMgtConfigServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="AccountCredentialMgtConfigServiceHttpBinding" type="ns:AccountCredentialMgtConfigServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="saveEmailConfig">
      <http:operation location="saveEmailConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getEmailConfig">
      <http:operation location="getEmailConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AccountCredentialMgtConfigService">
    <wsdl:port name="AccountCredentialMgtConfigServiceHttpsSoap11Endpoint" binding="ns:AccountCredentialMgtConfigServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="AccountCredentialMgtConfigServiceHttpsSoap12Endpoint" binding="ns:AccountCredentialMgtConfigServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="AccountCredentialMgtConfigServiceHttpsEndpoint" binding="ns:AccountCredentialMgtConfigServiceHttpBinding">
      <http:address location="https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/AccountCredentialMgtConfigService.AccountCredentialMgtConfigServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="03490c28-207f-4670-9bb8-968f9bf5f1f3" isOneWay="false" action="urn:getEmailConfig" name="getEmailConfig" bindingOperationName="getEmailConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a30d5b87-8db8-4407-abca-7a55b4165fce" isOneWay="false" action="urn:saveEmailConfig" name="saveEmailConfig" bindingOperationName="saveEmailConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="0255ad66-f246-4c18-94d0-6caa2186d3a2" wsaVersion="NONE" name="BPELUploaderSoap11Binding" type="wsdl" bindingName="{http://services.deployer.bpel.carbon.wso2.org}BPELUploaderSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/BPELUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/BPELUploader.BPELUploaderHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c12bc292-e668-4c24-a119-d212788382c9" isOneWay="false" action="urn:close" name="close" bindingOperationName="close" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bc9b5274-a19b-4393-9b33-7376cbc50b3f" isOneWay="false" action="urn:uploadService" name="uploadService" bindingOperationName="uploadService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="50e65a4d-3b82-43d5-b7a4-bf6aebd3447a" wsaVersion="NONE" name="BPELUploaderSoap12Binding" type="wsdl" bindingName="{http://services.deployer.bpel.carbon.wso2.org}BPELUploaderSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/BPELUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/BPELUploader.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/BPELUploader.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.deployer.bpel.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax27="http://types.services.deployer.bpel.carbon.wso2.org/xsd" xmlns:ns="http://services.deployer.bpel.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax25="http://io.java/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>BPELUploader</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://types.services.deployer.bpel.carbon.wso2.org/xsd">
      <xs:complexType name="UploadedFileItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://io.java/xsd">
      <xs:complexType abstract="true" name="Closeable">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.deployer.bpel.carbon.wso2.org" xmlns:ax28="http://types.services.deployer.bpel.carbon.wso2.org/xsd" xmlns:ax26="http://io.java/xsd">
      <xs:import namespace="http://io.java/xsd"/>
      <xs:import namespace="http://types.services.deployer.bpel.carbon.wso2.org/xsd"/>
      <xs:element name="close">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="c" nillable="true" type="ax26:Closeable"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadService">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="fileItems" nillable="true" type="ax28:UploadedFileItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadServiceRequest">
    <wsdl:part name="parameters" element="ns:uploadService"/>
  </wsdl:message>
  <wsdl:message name="uploadServiceResponse"/>
  <wsdl:message name="closeRequest">
    <wsdl:part name="parameters" element="ns:close"/>
  </wsdl:message>
  <wsdl:portType name="BPELUploaderPortType">
    <wsdl:operation name="uploadService">
      <wsdl:input message="ns:uploadServiceRequest" wsaw:Action="urn:uploadService"/>
      <wsdl:output message="ns:uploadServiceResponse" wsaw:Action="urn:uploadServiceResponse"/>
    </wsdl:operation>
    <wsdl:operation name="close">
      <wsdl:input message="ns:closeRequest" wsaw:Action="urn:close"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BPELUploaderSoap11Binding" type="ns:BPELUploaderPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadService">
      <soap:operation soapAction="urn:uploadService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <soap:operation soapAction="urn:close" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BPELUploaderSoap12Binding" type="ns:BPELUploaderPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadService">
      <soap12:operation soapAction="urn:uploadService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <soap12:operation soapAction="urn:close" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BPELUploaderHttpBinding" type="ns:BPELUploaderPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadService">
      <http:operation location="uploadService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <http:operation location="close"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BPELUploader">
    <wsdl:port name="BPELUploaderHttpsSoap11Endpoint" binding="ns:BPELUploaderSoap11Binding">
      <soap:address location="https://localhost:9443/services/BPELUploader.BPELUploaderHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="BPELUploaderHttpsSoap12Endpoint" binding="ns:BPELUploaderSoap12Binding">
      <soap12:address location="https://localhost:9443/services/BPELUploader.BPELUploaderHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="BPELUploaderHttpsEndpoint" binding="ns:BPELUploaderHttpBinding">
      <http:address location="https://localhost:9443/services/BPELUploader.BPELUploaderHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/BPELUploader.BPELUploaderHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="3005a8f3-b98f-4374-99f3-000b3f3eaa42" isOneWay="false" action="urn:close" name="close" bindingOperationName="close" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dec1dcdd-6e34-4f2d-880c-9e5b163b1e4e" isOneWay="false" action="urn:uploadService" name="uploadService" bindingOperationName="uploadService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="55373c03-261e-4629-8a40-11595e5d3ab3" wsaVersion="NONE" name="CarbonAppUploaderSoap12Binding" type="wsdl" bindingName="{http://upload.application.carbon.wso2.org}CarbonAppUploaderSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/CarbonAppUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="6211248f-4f1c-40a7-9cbf-77c7250fa6a8" isOneWay="false" action="urn:uploadApp" name="uploadApp" bindingOperationName="uploadApp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="80a239e6-38f2-4639-85b7-390582df69f7" wsaVersion="NONE" name="CarbonAppUploaderSoap11Binding" type="wsdl" bindingName="{http://upload.application.carbon.wso2.org}CarbonAppUploaderSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/CarbonAppUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/CarbonAppUploader.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/CarbonAppUploader.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://upload.application.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax23="http://upload.application.carbon.wso2.org/xsd" xmlns:ns="http://upload.application.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>CarbonAppUploader</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://upload.application.carbon.wso2.org/xsd">
      <xs:complexType name="UploadedFileItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://upload.application.carbon.wso2.org" xmlns:ax24="http://upload.application.carbon.wso2.org/xsd">
      <xs:import namespace="http://upload.application.carbon.wso2.org/xsd"/>
      <xs:element name="uploadApp">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="fileItems" nillable="true" type="ax24:UploadedFileItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadAppRequest">
    <wsdl:part name="parameters" element="ns:uploadApp"/>
  </wsdl:message>
  <wsdl:message name="uploadAppResponse"/>
  <wsdl:portType name="CarbonAppUploaderPortType">
    <wsdl:operation name="uploadApp">
      <wsdl:input message="ns:uploadAppRequest" wsaw:Action="urn:uploadApp"/>
      <wsdl:output message="ns:uploadAppResponse" wsaw:Action="urn:uploadAppResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CarbonAppUploaderSoap11Binding" type="ns:CarbonAppUploaderPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadApp">
      <soap:operation soapAction="urn:uploadApp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CarbonAppUploaderSoap12Binding" type="ns:CarbonAppUploaderPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadApp">
      <soap12:operation soapAction="urn:uploadApp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CarbonAppUploaderHttpBinding" type="ns:CarbonAppUploaderPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadApp">
      <http:operation location="uploadApp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CarbonAppUploader">
    <wsdl:port name="CarbonAppUploaderHttpsSoap11Endpoint" binding="ns:CarbonAppUploaderSoap11Binding">
      <soap:address location="https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="CarbonAppUploaderHttpsSoap12Endpoint" binding="ns:CarbonAppUploaderSoap12Binding">
      <soap12:address location="https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="CarbonAppUploaderHttpsEndpoint" binding="ns:CarbonAppUploaderHttpBinding">
      <http:address location="https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/CarbonAppUploader.CarbonAppUploaderHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="7d352f3f-d78d-4b57-8b53-b835adc8bd63" isOneWay="false" action="urn:uploadApp" name="uploadApp" bindingOperationName="uploadApp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="00620005-6841-41f6-abe6-39a33d4b4212" wsaVersion="NONE" name="ClaimManagementServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.claim.carbon.wso2.org}ClaimManagementServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ClaimManagementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="bacdd158-25dc-4ba4-8202-ea8b11824098" isOneWay="false" action="urn:addNewClaimDialect" name="addNewClaimDialect" bindingOperationName="addNewClaimDialect" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2b98709c-c0c3-46c7-a6b5-2e37e6e0f143" isOneWay="false" action="urn:addNewClaimMapping" name="addNewClaimMapping" bindingOperationName="addNewClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e189f1aa-8cf5-4711-a726-8021779edffc" isOneWay="false" action="urn:getClaimMappingByDialect" name="getClaimMappingByDialect" bindingOperationName="getClaimMappingByDialect" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a3021e1a-bb7a-42ae-ad14-492e3be5b323" isOneWay="false" action="urn:getClaimMappings" name="getClaimMappings" bindingOperationName="getClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8d235cd9-4558-4361-a92b-20a29b6b2de9" isOneWay="false" action="urn:removeClaimDialect" name="removeClaimDialect" bindingOperationName="removeClaimDialect" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="994c3456-9a76-46bc-a63c-d22bc1700848" isOneWay="false" action="urn:removeClaimMapping" name="removeClaimMapping" bindingOperationName="removeClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6560dcb7-75c8-462f-8805-e966102d6135" isOneWay="false" action="urn:upateClaimMapping" name="upateClaimMapping" bindingOperationName="upateClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="eaec44d1-f1c8-4f11-a954-274c20cd2f47" wsaVersion="NONE" name="ClaimManagementServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.claim.carbon.wso2.org}ClaimManagementServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ClaimManagementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ClaimManagementService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ClaimManagementService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.claim.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax29="http://mgt.claim.carbon.wso2.org/xsd" xmlns:ax213="http://dto.mgt.claim.carbon.wso2.org/xsd" xmlns:ax210="http://base.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.claim.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ClaimManagementService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.claim.carbon.wso2.org/xsd" xmlns:ax211="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="ClaimManagementException">
        <xs:complexContent>
          <xs:extension base="ax210:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax214="http://dto.mgt.claim.carbon.wso2.org/xsd" xmlns:ax212="http://mgt.claim.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://mgt.claim.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.claim.carbon.wso2.org/xsd"/>
      <xs:element name="ClaimManagementServiceClaimManagementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ClaimManagementException" nillable="true" type="ax212:ClaimManagementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappings">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax214:ClaimDialectDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappingByDialect">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialectUri" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappingByDialectResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax214:ClaimDialectDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="upateClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimMappingDTO" nillable="true" type="ax214:ClaimMappingDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialectUri" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addNewClaimDialect">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimDialectDTO" nillable="true" type="ax214:ClaimDialectDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeClaimDialect">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialectUri" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addNewClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimMappingDTO" nillable="true" type="ax214:ClaimMappingDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.claim.carbon.wso2.org/xsd">
      <xs:complexType name="ClaimDialectDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="claimMappings" nillable="true" type="ax213:ClaimMappingDTO"/>
          <xs:element minOccurs="0" name="dialectURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userStore" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimMappingDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="claim" nillable="true" type="ax213:ClaimDTO"/>
          <xs:element minOccurs="0" name="mappedAttribute" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="mappedAttributes" nillable="true" type="ax213:ClaimAttributeDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="checkedAttribute" type="xs:boolean"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dialectURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="displayTag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="regEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="supportedByDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimAttributeDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="upateClaimMappingRequest">
    <wsdl:part name="parameters" element="ns1:upateClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="ClaimManagementServiceClaimManagementException">
    <wsdl:part name="parameters" element="ns1:ClaimManagementServiceClaimManagementException"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingsRequest">
    <wsdl:part name="parameters" element="ns1:getClaimMappings"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingsResponse">
    <wsdl:part name="parameters" element="ns1:getClaimMappingsResponse"/>
  </wsdl:message>
  <wsdl:message name="addNewClaimMappingRequest">
    <wsdl:part name="parameters" element="ns1:addNewClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="addNewClaimDialectRequest">
    <wsdl:part name="parameters" element="ns1:addNewClaimDialect"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingByDialectRequest">
    <wsdl:part name="parameters" element="ns1:getClaimMappingByDialect"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingByDialectResponse">
    <wsdl:part name="parameters" element="ns1:getClaimMappingByDialectResponse"/>
  </wsdl:message>
  <wsdl:message name="removeClaimMappingRequest">
    <wsdl:part name="parameters" element="ns1:removeClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="removeClaimDialectRequest">
    <wsdl:part name="parameters" element="ns1:removeClaimDialect"/>
  </wsdl:message>
  <wsdl:portType name="ClaimManagementServicePortType">
    <wsdl:operation name="upateClaimMapping">
      <wsdl:input message="tns:upateClaimMappingRequest" wsaw:Action="urn:upateClaimMapping"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:upateClaimMappingClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappings">
      <wsdl:input message="tns:getClaimMappingsRequest" wsaw:Action="urn:getClaimMappings"/>
      <wsdl:output message="tns:getClaimMappingsResponse" wsaw:Action="urn:getClaimMappingsResponse"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:getClaimMappingsClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <wsdl:input message="tns:addNewClaimMappingRequest" wsaw:Action="urn:addNewClaimMapping"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:addNewClaimMappingClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimDialect">
      <wsdl:input message="tns:addNewClaimDialectRequest" wsaw:Action="urn:addNewClaimDialect"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:addNewClaimDialectClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappingByDialect">
      <wsdl:input message="tns:getClaimMappingByDialectRequest" wsaw:Action="urn:getClaimMappingByDialect"/>
      <wsdl:output message="tns:getClaimMappingByDialectResponse" wsaw:Action="urn:getClaimMappingByDialectResponse"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:getClaimMappingByDialectClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="removeClaimMapping">
      <wsdl:input message="tns:removeClaimMappingRequest" wsaw:Action="urn:removeClaimMapping"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:removeClaimMappingClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="removeClaimDialect">
      <wsdl:input message="tns:removeClaimDialectRequest" wsaw:Action="urn:removeClaimDialect"/>
      <wsdl:fault message="tns:ClaimManagementServiceClaimManagementException" name="ClaimManagementServiceClaimManagementException" wsaw:Action="urn:removeClaimDialectClaimManagementServiceClaimManagementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ClaimManagementServiceSoap11Binding" type="tns:ClaimManagementServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="upateClaimMapping">
      <soap:operation soapAction="urn:upateClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappings">
      <soap:operation soapAction="urn:getClaimMappings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <soap:operation soapAction="urn:addNewClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimDialect">
      <soap:operation soapAction="urn:addNewClaimDialect" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappingByDialect">
      <soap:operation soapAction="urn:getClaimMappingByDialect" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeClaimMapping">
      <soap:operation soapAction="urn:removeClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeClaimDialect">
      <soap:operation soapAction="urn:removeClaimDialect" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ClaimManagementServiceSoap12Binding" type="tns:ClaimManagementServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="upateClaimMapping">
      <soap12:operation soapAction="urn:upateClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappings">
      <soap12:operation soapAction="urn:getClaimMappings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <soap12:operation soapAction="urn:addNewClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimDialect">
      <soap12:operation soapAction="urn:addNewClaimDialect" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappingByDialect">
      <soap12:operation soapAction="urn:getClaimMappingByDialect" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeClaimMapping">
      <soap12:operation soapAction="urn:removeClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeClaimDialect">
      <soap12:operation soapAction="urn:removeClaimDialect" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ClaimManagementServiceClaimManagementException">
        <soap12:fault use="literal" name="ClaimManagementServiceClaimManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ClaimManagementServiceHttpBinding" type="tns:ClaimManagementServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="upateClaimMapping">
      <http:operation location="upateClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappings">
      <http:operation location="getClaimMappings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <http:operation location="addNewClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimDialect">
      <http:operation location="addNewClaimDialect"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getClaimMappingByDialect">
      <http:operation location="getClaimMappingByDialect"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeClaimMapping">
      <http:operation location="removeClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeClaimDialect">
      <http:operation location="removeClaimDialect"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ClaimManagementService">
    <wsdl:port name="ClaimManagementServiceHttpsSoap11Endpoint" binding="tns:ClaimManagementServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ClaimManagementServiceHttpsSoap12Endpoint" binding="tns:ClaimManagementServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ClaimManagementServiceHttpsEndpoint" binding="tns:ClaimManagementServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ClaimManagementService.ClaimManagementServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="245abe99-bbd5-4e28-a7de-bfb26b4a4d7e" isOneWay="false" action="urn:addNewClaimDialect" name="addNewClaimDialect" bindingOperationName="addNewClaimDialect" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d2a24914-510b-4e66-9262-dfe67bf539bb" isOneWay="false" action="urn:addNewClaimMapping" name="addNewClaimMapping" bindingOperationName="addNewClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3086ff2-a7b4-4d1c-afe4-cd68fa4fb869" isOneWay="false" action="urn:getClaimMappingByDialect" name="getClaimMappingByDialect" bindingOperationName="getClaimMappingByDialect" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="37e371bb-5928-41ab-a8de-a7cc571ea03c" isOneWay="false" action="urn:getClaimMappings" name="getClaimMappings" bindingOperationName="getClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="96f18e24-db31-491a-93f4-d216476ccdc4" isOneWay="false" action="urn:removeClaimDialect" name="removeClaimDialect" bindingOperationName="removeClaimDialect" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7ff07c49-09b1-4a3f-8848-16f9883bfcb0" isOneWay="false" action="urn:removeClaimMapping" name="removeClaimMapping" bindingOperationName="removeClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3c2b25d6-7736-4308-a530-6744b8a6536a" isOneWay="false" action="urn:upateClaimMapping" name="upateClaimMapping" bindingOperationName="upateClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7842c514-5611-42bc-ad33-b7e70580cd9f" wsaVersion="NONE" name="CustomUIAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.custom.registry.carbon.wso2.org}CustomUIAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/CustomUIAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="0c523e27-668e-489c-aee4-dde43cb754e8" isOneWay="false" action="urn:addTextContent" name="addTextContent" bindingOperationName="addTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a23ee4d2-f6a8-481f-8a45-ce2abc0c053c" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="011e542f-1f82-4355-a0b0-a7be9b54e9a6" isOneWay="false" action="urn:isAuthorized" name="isAuthorized" bindingOperationName="isAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6b68583f-a007-4d59-ad85-c6fcd0ca3f51" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f1e951c8-5b6b-4fcd-b421-41ea51fec342" wsaVersion="NONE" name="CustomUIAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.custom.registry.carbon.wso2.org}CustomUIAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/CustomUIAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/CustomUIAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/CustomUIAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.custom.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://services.custom.registry.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>CustomUIAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.custom.registry.carbon.wso2.org">
      <xs:element name="isAuthorized">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAuthorizedResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CustomUIAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="CustomUIAdminServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="isAuthorizedRequest">
    <wsdl:part name="parameters" element="ns:isAuthorized"/>
  </wsdl:message>
  <wsdl:message name="isAuthorizedResponse">
    <wsdl:part name="parameters" element="ns:isAuthorizedResponse"/>
  </wsdl:message>
  <wsdl:message name="addTextContentRequest">
    <wsdl:part name="parameters" element="ns:addTextContent"/>
  </wsdl:message>
  <wsdl:message name="addTextContentResponse">
    <wsdl:part name="parameters" element="ns:addTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="CustomUIAdminServiceException">
    <wsdl:part name="parameters" element="ns:CustomUIAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="getTextContentRequest">
    <wsdl:part name="parameters" element="ns:getTextContent"/>
  </wsdl:message>
  <wsdl:message name="getTextContentResponse">
    <wsdl:part name="parameters" element="ns:getTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentRequest">
    <wsdl:part name="parameters" element="ns:updateTextContent"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentResponse">
    <wsdl:part name="parameters" element="ns:updateTextContentResponse"/>
  </wsdl:message>
  <wsdl:portType name="CustomUIAdminServicePortType">
    <wsdl:operation name="isAuthorized">
      <wsdl:input message="ns:isAuthorizedRequest" wsaw:Action="urn:isAuthorized"/>
      <wsdl:output message="ns:isAuthorizedResponse" wsaw:Action="urn:isAuthorizedResponse"/>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <wsdl:input message="ns:addTextContentRequest" wsaw:Action="urn:addTextContent"/>
      <wsdl:output message="ns:addTextContentResponse" wsaw:Action="urn:addTextContentResponse"/>
      <wsdl:fault message="ns:CustomUIAdminServiceException" name="CustomUIAdminServiceException" wsaw:Action="urn:addTextContentCustomUIAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <wsdl:input message="ns:getTextContentRequest" wsaw:Action="urn:getTextContent"/>
      <wsdl:output message="ns:getTextContentResponse" wsaw:Action="urn:getTextContentResponse"/>
      <wsdl:fault message="ns:CustomUIAdminServiceException" name="CustomUIAdminServiceException" wsaw:Action="urn:getTextContentCustomUIAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <wsdl:input message="ns:updateTextContentRequest" wsaw:Action="urn:updateTextContent"/>
      <wsdl:output message="ns:updateTextContentResponse" wsaw:Action="urn:updateTextContentResponse"/>
      <wsdl:fault message="ns:CustomUIAdminServiceException" name="CustomUIAdminServiceException" wsaw:Action="urn:updateTextContentCustomUIAdminServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CustomUIAdminServiceSoap11Binding" type="ns:CustomUIAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isAuthorized">
      <soap:operation soapAction="urn:isAuthorized" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <soap:operation soapAction="urn:addTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CustomUIAdminServiceSoap12Binding" type="ns:CustomUIAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isAuthorized">
      <soap12:operation soapAction="urn:isAuthorized" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <soap12:operation soapAction="urn:addTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap12:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap12:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap12:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap12:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CustomUIAdminServiceException">
        <soap12:fault use="literal" name="CustomUIAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="CustomUIAdminServiceHttpBinding" type="ns:CustomUIAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="isAuthorized">
      <http:operation location="isAuthorized"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <http:operation location="addTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <http:operation location="getTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <http:operation location="updateTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CustomUIAdminService">
    <wsdl:port name="CustomUIAdminServiceHttpsSoap11Endpoint" binding="ns:CustomUIAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="CustomUIAdminServiceHttpsSoap12Endpoint" binding="ns:CustomUIAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="CustomUIAdminServiceHttpsEndpoint" binding="ns:CustomUIAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/CustomUIAdminService.CustomUIAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="cb8bf93e-ba3f-43f6-9340-a31f5c90d72e" isOneWay="false" action="urn:addTextContent" name="addTextContent" bindingOperationName="addTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="612828a8-488a-4a1d-b016-c9682878af91" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="058e9554-07e5-4fe0-8e7e-2636a95bb4eb" isOneWay="false" action="urn:isAuthorized" name="isAuthorized" bindingOperationName="isAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7cbe43f4-12d0-4e53-b443-0a83e9273785" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f431cca9-cdc8-4029-b6df-013876dec745" wsaVersion="NONE" name="DirectoryServerManagerSoap11Binding" type="wsdl" bindingName="{http://manager.server.directory.carbon.wso2.org}DirectoryServerManagerSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/DirectoryServerManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="fa69f821-b41e-4204-8002-941a052407d5" isOneWay="false" action="urn:addServer" name="addServer" bindingOperationName="addServer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d0bfc780-4026-4c00-a77a-8570e4fadf4c" isOneWay="false" action="urn:changePassword" name="changePassword" bindingOperationName="changePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d7fb6c91-9eda-4dd9-b750-f37265cce850" isOneWay="false" action="urn:getPasswordConformanceRegularExpression" name="getPasswordConformanceRegularExpression" bindingOperationName="getPasswordConformanceRegularExpression" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bbc3ccee-c9a7-42c0-a382-0bf9e8d56870" isOneWay="false" action="urn:getServiceNameConformanceRegularExpression" name="getServiceNameConformanceRegularExpression" bindingOperationName="getServiceNameConformanceRegularExpression" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f542781b-0cc9-4ebd-9573-a6d24c831320" isOneWay="false" action="urn:isExistingServicePrinciple" name="isExistingServicePrinciple" bindingOperationName="isExistingServicePrinciple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="15206b03-5e0c-43c1-969c-fc506bc96a4e" isOneWay="false" action="urn:isKDCEnabled" name="isKDCEnabled" bindingOperationName="isKDCEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cf657188-57e6-4350-a6a0-9c7cca1f0925" isOneWay="false" action="urn:listServicePrinciples" name="listServicePrinciples" bindingOperationName="listServicePrinciples" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="764e8141-8320-481a-93c6-fe917dc3f308" isOneWay="false" action="urn:removeServer" name="removeServer" bindingOperationName="removeServer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="19fb9824-36f9-4bed-a749-6573ab36d95b" wsaVersion="NONE" name="DirectoryServerManagerSoap12Binding" type="wsdl" bindingName="{http://manager.server.directory.carbon.wso2.org}DirectoryServerManagerSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/DirectoryServerManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/DirectoryServerManager.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/DirectoryServerManager.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://manager.server.directory.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2104="http://manager.server.directory.carbon.wso2.org/xsd" xmlns:ax2105="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://manager.server.directory.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2108="http://common.manager.server.directory.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>DirectoryServerManager</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://manager.server.directory.carbon.wso2.org/xsd" xmlns:ax2106="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="DirectoryServerManagerException">
        <xs:complexContent>
          <xs:extension base="ax2105:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.manager.server.directory.carbon.wso2.org/xsd">
      <xs:complexType name="ServerPrinciple">
        <xs:sequence>
          <xs:element minOccurs="0" name="serverDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverPassword" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://manager.server.directory.carbon.wso2.org" xmlns:ax2107="http://manager.server.directory.carbon.wso2.org/xsd" xmlns:ax2109="http://common.manager.server.directory.carbon.wso2.org/xsd">
      <xs:import namespace="http://manager.server.directory.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://common.manager.server.directory.carbon.wso2.org/xsd"/>
      <xs:element name="DirectoryServerManagerDirectoryServerManagerException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DirectoryServerManagerException" nillable="true" type="ax2104:DirectoryServerManagerException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isKDCEnabled">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isKDCEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changePassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serverPrinciple" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="existingPassword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServicePrinciples">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServicePrinciplesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2108:ServerPrinciple"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addServer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverDescription" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingServicePrinciple">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="servicePrinciple" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingServicePrincipleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPasswordConformanceRegularExpression">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPasswordConformanceRegularExpressionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceNameConformanceRegularExpression">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceNameConformanceRegularExpressionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="isExistingServicePrincipleRequest">
    <wsdl:part name="parameters" element="ns:isExistingServicePrinciple"/>
  </wsdl:message>
  <wsdl:message name="isExistingServicePrincipleResponse">
    <wsdl:part name="parameters" element="ns:isExistingServicePrincipleResponse"/>
  </wsdl:message>
  <wsdl:message name="DirectoryServerManagerDirectoryServerManagerException">
    <wsdl:part name="parameters" element="ns:DirectoryServerManagerDirectoryServerManagerException"/>
  </wsdl:message>
  <wsdl:message name="isKDCEnabledRequest">
    <wsdl:part name="parameters" element="ns:isKDCEnabled"/>
  </wsdl:message>
  <wsdl:message name="isKDCEnabledResponse">
    <wsdl:part name="parameters" element="ns:isKDCEnabledResponse"/>
  </wsdl:message>
  <wsdl:message name="getPasswordConformanceRegularExpressionRequest">
    <wsdl:part name="parameters" element="ns:getPasswordConformanceRegularExpression"/>
  </wsdl:message>
  <wsdl:message name="getPasswordConformanceRegularExpressionResponse">
    <wsdl:part name="parameters" element="ns:getPasswordConformanceRegularExpressionResponse"/>
  </wsdl:message>
  <wsdl:message name="listServicePrinciplesRequest">
    <wsdl:part name="parameters" element="ns:listServicePrinciples"/>
  </wsdl:message>
  <wsdl:message name="listServicePrinciplesResponse">
    <wsdl:part name="parameters" element="ns:listServicePrinciplesResponse"/>
  </wsdl:message>
  <wsdl:message name="removeServerRequest">
    <wsdl:part name="parameters" element="ns:removeServer"/>
  </wsdl:message>
  <wsdl:message name="removeServerResponse"/>
  <wsdl:message name="addServerRequest">
    <wsdl:part name="parameters" element="ns:addServer"/>
  </wsdl:message>
  <wsdl:message name="addServerResponse"/>
  <wsdl:message name="getServiceNameConformanceRegularExpressionRequest">
    <wsdl:part name="parameters" element="ns:getServiceNameConformanceRegularExpression"/>
  </wsdl:message>
  <wsdl:message name="getServiceNameConformanceRegularExpressionResponse">
    <wsdl:part name="parameters" element="ns:getServiceNameConformanceRegularExpressionResponse"/>
  </wsdl:message>
  <wsdl:message name="changePasswordRequest">
    <wsdl:part name="parameters" element="ns:changePassword"/>
  </wsdl:message>
  <wsdl:message name="changePasswordResponse"/>
  <wsdl:portType name="DirectoryServerManagerPortType">
    <wsdl:operation name="isExistingServicePrinciple">
      <wsdl:input message="ns:isExistingServicePrincipleRequest" wsaw:Action="urn:isExistingServicePrinciple"/>
      <wsdl:output message="ns:isExistingServicePrincipleResponse" wsaw:Action="urn:isExistingServicePrincipleResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:isExistingServicePrincipleDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="isKDCEnabled">
      <wsdl:input message="ns:isKDCEnabledRequest" wsaw:Action="urn:isKDCEnabled"/>
      <wsdl:output message="ns:isKDCEnabledResponse" wsaw:Action="urn:isKDCEnabledResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:isKDCEnabledDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="getPasswordConformanceRegularExpression">
      <wsdl:input message="ns:getPasswordConformanceRegularExpressionRequest" wsaw:Action="urn:getPasswordConformanceRegularExpression"/>
      <wsdl:output message="ns:getPasswordConformanceRegularExpressionResponse" wsaw:Action="urn:getPasswordConformanceRegularExpressionResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:getPasswordConformanceRegularExpressionDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="listServicePrinciples">
      <wsdl:input message="ns:listServicePrinciplesRequest" wsaw:Action="urn:listServicePrinciples"/>
      <wsdl:output message="ns:listServicePrinciplesResponse" wsaw:Action="urn:listServicePrinciplesResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:listServicePrinciplesDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="removeServer">
      <wsdl:input message="ns:removeServerRequest" wsaw:Action="urn:removeServer"/>
      <wsdl:output message="ns:removeServerResponse" wsaw:Action="urn:removeServerResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:removeServerDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="addServer">
      <wsdl:input message="ns:addServerRequest" wsaw:Action="urn:addServer"/>
      <wsdl:output message="ns:addServerResponse" wsaw:Action="urn:addServerResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:addServerDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceNameConformanceRegularExpression">
      <wsdl:input message="ns:getServiceNameConformanceRegularExpressionRequest" wsaw:Action="urn:getServiceNameConformanceRegularExpression"/>
      <wsdl:output message="ns:getServiceNameConformanceRegularExpressionResponse" wsaw:Action="urn:getServiceNameConformanceRegularExpressionResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:getServiceNameConformanceRegularExpressionDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <wsdl:input message="ns:changePasswordRequest" wsaw:Action="urn:changePassword"/>
      <wsdl:output message="ns:changePasswordResponse" wsaw:Action="urn:changePasswordResponse"/>
      <wsdl:fault message="ns:DirectoryServerManagerDirectoryServerManagerException" name="DirectoryServerManagerDirectoryServerManagerException" wsaw:Action="urn:changePasswordDirectoryServerManagerDirectoryServerManagerException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DirectoryServerManagerSoap11Binding" type="ns:DirectoryServerManagerPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isExistingServicePrinciple">
      <soap:operation soapAction="urn:isExistingServicePrinciple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isKDCEnabled">
      <soap:operation soapAction="urn:isKDCEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPasswordConformanceRegularExpression">
      <soap:operation soapAction="urn:getPasswordConformanceRegularExpression" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listServicePrinciples">
      <soap:operation soapAction="urn:listServicePrinciples" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServer">
      <soap:operation soapAction="urn:removeServer" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addServer">
      <soap:operation soapAction="urn:addServer" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceNameConformanceRegularExpression">
      <soap:operation soapAction="urn:getServiceNameConformanceRegularExpression" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap:operation soapAction="urn:changePassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="DirectoryServerManagerSoap12Binding" type="ns:DirectoryServerManagerPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isExistingServicePrinciple">
      <soap12:operation soapAction="urn:isExistingServicePrinciple" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isKDCEnabled">
      <soap12:operation soapAction="urn:isKDCEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPasswordConformanceRegularExpression">
      <soap12:operation soapAction="urn:getPasswordConformanceRegularExpression" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listServicePrinciples">
      <soap12:operation soapAction="urn:listServicePrinciples" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServer">
      <soap12:operation soapAction="urn:removeServer" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addServer">
      <soap12:operation soapAction="urn:addServer" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceNameConformanceRegularExpression">
      <soap12:operation soapAction="urn:getServiceNameConformanceRegularExpression" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap12:operation soapAction="urn:changePassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DirectoryServerManagerDirectoryServerManagerException">
        <soap12:fault use="literal" name="DirectoryServerManagerDirectoryServerManagerException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="DirectoryServerManagerHttpBinding" type="ns:DirectoryServerManagerPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="isExistingServicePrinciple">
      <http:operation location="isExistingServicePrinciple"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isKDCEnabled">
      <http:operation location="isKDCEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPasswordConformanceRegularExpression">
      <http:operation location="getPasswordConformanceRegularExpression"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServicePrinciples">
      <http:operation location="listServicePrinciples"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServer">
      <http:operation location="removeServer"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addServer">
      <http:operation location="addServer"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceNameConformanceRegularExpression">
      <http:operation location="getServiceNameConformanceRegularExpression"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <http:operation location="changePassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DirectoryServerManager">
    <wsdl:port name="DirectoryServerManagerHttpsSoap11Endpoint" binding="ns:DirectoryServerManagerSoap11Binding">
      <soap:address location="https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="DirectoryServerManagerHttpsSoap12Endpoint" binding="ns:DirectoryServerManagerSoap12Binding">
      <soap12:address location="https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="DirectoryServerManagerHttpsEndpoint" binding="ns:DirectoryServerManagerHttpBinding">
      <http:address location="https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/DirectoryServerManager.DirectoryServerManagerHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="731e0b4f-d7b8-42e1-b871-d9ba81693d52" isOneWay="false" action="urn:addServer" name="addServer" bindingOperationName="addServer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3794ce0d-5224-4344-96dd-5d1b16ae606d" isOneWay="false" action="urn:changePassword" name="changePassword" bindingOperationName="changePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ebf0a0d7-9c9e-4364-a00e-b4b6f6fbe71a" isOneWay="false" action="urn:getPasswordConformanceRegularExpression" name="getPasswordConformanceRegularExpression" bindingOperationName="getPasswordConformanceRegularExpression" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2452229f-181f-4b65-ae08-90b9b2d74b16" isOneWay="false" action="urn:getServiceNameConformanceRegularExpression" name="getServiceNameConformanceRegularExpression" bindingOperationName="getServiceNameConformanceRegularExpression" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e9984656-d963-4296-8975-709f9a0bce24" isOneWay="false" action="urn:isExistingServicePrinciple" name="isExistingServicePrinciple" bindingOperationName="isExistingServicePrinciple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="65ccab1b-6ad3-46a3-ace0-2c071ff94e18" isOneWay="false" action="urn:isKDCEnabled" name="isKDCEnabled" bindingOperationName="isKDCEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="363ca5fa-0853-4c27-ba3c-42def1920304" isOneWay="false" action="urn:listServicePrinciples" name="listServicePrinciples" bindingOperationName="listServicePrinciples" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f7afa34f-3a1b-4ac7-9c26-04aa3d4f3467" isOneWay="false" action="urn:removeServer" name="removeServer" bindingOperationName="removeServer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="5e75709d-9dce-4897-9830-d13a6d98f245" wsaVersion="NONE" name="EntitlementAdminServiceSoap11Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="6053faf7-24dd-4b96-9d17-51c8c0914e1d" isOneWay="false" action="urn:clearAllAttributeCaches" name="clearAllAttributeCaches" bindingOperationName="clearAllAttributeCaches" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="59dbc3ae-a873-48ba-82de-4d83e932bb0b" isOneWay="false" action="urn:clearAllResourceCaches" name="clearAllResourceCaches" bindingOperationName="clearAllResourceCaches" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="407fe1e3-0905-40ba-a833-2c548871fd94" isOneWay="false" action="urn:clearAttributeFinderCache" name="clearAttributeFinderCache" bindingOperationName="clearAttributeFinderCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8a9b3623-27a9-4af9-8903-71cbdd2b21ed" isOneWay="false" action="urn:clearAttributeFinderCacheByAttributes" name="clearAttributeFinderCacheByAttributes" bindingOperationName="clearAttributeFinderCacheByAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a9d7949a-44e9-4947-ac2b-e6e8db044f87" isOneWay="false" action="urn:clearCarbonAttributeCache" name="clearCarbonAttributeCache" bindingOperationName="clearCarbonAttributeCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cc2ec37b-2b21-4dfa-b951-7fa664b971bf" isOneWay="false" action="urn:clearCarbonResourceCache" name="clearCarbonResourceCache" bindingOperationName="clearCarbonResourceCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5255de73-a1c6-4038-bb66-dcd67784018b" isOneWay="false" action="urn:clearDecisionCache" name="clearDecisionCache" bindingOperationName="clearDecisionCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="199ca5bd-00c7-4bbe-a3fc-b2118e9365f1" isOneWay="false" action="urn:clearPolicyCache" name="clearPolicyCache" bindingOperationName="clearPolicyCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cbdf8fee-fd78-418c-90e8-d8d46541b13f" isOneWay="false" action="urn:clearResourceFinderCache" name="clearResourceFinderCache" bindingOperationName="clearResourceFinderCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d479ea3d-f0dd-4b60-b256-ee4d18f2e564" isOneWay="false" action="urn:doTestRequest" name="doTestRequest" bindingOperationName="doTestRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="63530b05-0840-4eba-8537-88c78bec4cfe" isOneWay="false" action="urn:doTestRequestForGivenPolicies" name="doTestRequestForGivenPolicies" bindingOperationName="doTestRequestForGivenPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d995e84b-6b44-466f-9d4b-b8f85cecbc80" isOneWay="false" action="urn:getGlobalPolicyAlgorithm" name="getGlobalPolicyAlgorithm" bindingOperationName="getGlobalPolicyAlgorithm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7578bd74-ff90-45bd-b9cf-0018ee09a817" isOneWay="false" action="urn:getPDPData" name="getPDPData" bindingOperationName="getPDPData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9a88bc8-e453-463d-83c5-bfc0cb005b1a" isOneWay="false" action="urn:getPIPAttributeFinderData" name="getPIPAttributeFinderData" bindingOperationName="getPIPAttributeFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16522a0a-c042-4de8-87f5-26bd5201c379" isOneWay="false" action="urn:getPIPResourceFinderData" name="getPIPResourceFinderData" bindingOperationName="getPIPResourceFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6e1dd5f0-89d3-41a5-b57d-10721be77328" isOneWay="false" action="urn:getPolicyFinderData" name="getPolicyFinderData" bindingOperationName="getPolicyFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="202abbe1-4e14-462e-a6bc-246d6556a000" isOneWay="false" action="urn:refreshAttributeFinder" name="refreshAttributeFinder" bindingOperationName="refreshAttributeFinder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f2d666d-9ac3-4896-bc55-6a4fa023bf4d" isOneWay="false" action="urn:refreshPolicyFinders" name="refreshPolicyFinders" bindingOperationName="refreshPolicyFinders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0959f665-08e3-4c18-ac5f-27e046c576f7" isOneWay="false" action="urn:refreshResourceFinder" name="refreshResourceFinder" bindingOperationName="refreshResourceFinder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4b3b726b-b00a-4061-88b8-abd69663aecb" isOneWay="false" action="urn:setGlobalPolicyAlgorithm" name="setGlobalPolicyAlgorithm" bindingOperationName="setGlobalPolicyAlgorithm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="06b6cbde-d806-4604-b6b7-e8c184f4081f" wsaVersion="NONE" name="EntitlementAdminServiceSoap12Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://entitlement.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2301="http://entitlement.identity.carbon.wso2.org/xsd" xmlns:ax2303="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://entitlement.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>EntitlementAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2302="http://entitlement.identity.carbon.wso2.org/xsd" xmlns:ax2304="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:element name="EntitlementAdminServiceEntitlementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EntitlementException" nillable="true" type="ax2301:EntitlementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearDecisionCache">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearPolicyCache">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearCarbonAttributeCache">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllAttributeCaches">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAttributeFinderCache">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributeFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAttributeFinderCacheByAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributeFinder" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attributeIds" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllResourceCaches">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearCarbonResourceCache">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearResourceFinderCache">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="refreshAttributeFinder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="attributeFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="refreshResourceFinder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="refreshPolicyFinders">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyFinder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="doTestRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="xacmlRequest" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="doTestRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="doTestRequestForGivenPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="xacmlRequest" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policies" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="doTestRequestForGivenPoliciesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPDPData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPDPDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2303:PDPDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyFinderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="finder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyFinderDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2303:PolicyFinderDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPIPAttributeFinderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="finder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPIPAttributeFinderDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2303:PIPFinderDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPIPResourceFinderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="finder" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPIPResourceFinderDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2303:PIPFinderDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getGlobalPolicyAlgorithm">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getGlobalPolicyAlgorithmResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setGlobalPolicyAlgorithm">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyCombiningAlgorithm" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="PDPDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="decisionCacheEnable" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pipAttributeFinders" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pipResourceFinders" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policyFinders" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PolicyFinderDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="combiningAlgorithm" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIdentifiers" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PIPFinderDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="supportedAttributeIds" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EntitlementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getPIPResourceFinderDataRequest">
    <wsdl:part name="parameters" element="ns1:getPIPResourceFinderData"/>
  </wsdl:message>
  <wsdl:message name="getPIPResourceFinderDataResponse">
    <wsdl:part name="parameters" element="ns1:getPIPResourceFinderDataResponse"/>
  </wsdl:message>
  <wsdl:message name="setGlobalPolicyAlgorithmRequest">
    <wsdl:part name="parameters" element="ns1:setGlobalPolicyAlgorithm"/>
  </wsdl:message>
  <wsdl:message name="setGlobalPolicyAlgorithmResponse"/>
  <wsdl:message name="EntitlementAdminServiceEntitlementException">
    <wsdl:part name="parameters" element="ns1:EntitlementAdminServiceEntitlementException"/>
  </wsdl:message>
  <wsdl:message name="clearDecisionCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearDecisionCache"/>
  </wsdl:message>
  <wsdl:message name="clearDecisionCacheResponse"/>
  <wsdl:message name="getGlobalPolicyAlgorithmRequest">
    <wsdl:part name="parameters" element="ns1:getGlobalPolicyAlgorithm"/>
  </wsdl:message>
  <wsdl:message name="getGlobalPolicyAlgorithmResponse">
    <wsdl:part name="parameters" element="ns1:getGlobalPolicyAlgorithmResponse"/>
  </wsdl:message>
  <wsdl:message name="clearAllAttributeCachesRequest">
    <wsdl:part name="parameters" element="ns1:clearAllAttributeCaches"/>
  </wsdl:message>
  <wsdl:message name="clearAllAttributeCachesResponse"/>
  <wsdl:message name="clearPolicyCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearPolicyCache"/>
  </wsdl:message>
  <wsdl:message name="clearPolicyCacheResponse"/>
  <wsdl:message name="getPolicyFinderDataRequest">
    <wsdl:part name="parameters" element="ns1:getPolicyFinderData"/>
  </wsdl:message>
  <wsdl:message name="getPolicyFinderDataResponse">
    <wsdl:part name="parameters" element="ns1:getPolicyFinderDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getPDPDataRequest">
    <wsdl:part name="parameters" element="ns1:getPDPData"/>
  </wsdl:message>
  <wsdl:message name="getPDPDataResponse">
    <wsdl:part name="parameters" element="ns1:getPDPDataResponse"/>
  </wsdl:message>
  <wsdl:message name="clearAllResourceCachesRequest">
    <wsdl:part name="parameters" element="ns1:clearAllResourceCaches"/>
  </wsdl:message>
  <wsdl:message name="clearAllResourceCachesResponse"/>
  <wsdl:message name="clearCarbonAttributeCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearCarbonAttributeCache"/>
  </wsdl:message>
  <wsdl:message name="clearCarbonAttributeCacheResponse"/>
  <wsdl:message name="refreshAttributeFinderRequest">
    <wsdl:part name="parameters" element="ns1:refreshAttributeFinder"/>
  </wsdl:message>
  <wsdl:message name="refreshAttributeFinderResponse"/>
  <wsdl:message name="clearAttributeFinderCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearAttributeFinderCache"/>
  </wsdl:message>
  <wsdl:message name="clearAttributeFinderCacheResponse"/>
  <wsdl:message name="clearResourceFinderCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearResourceFinderCache"/>
  </wsdl:message>
  <wsdl:message name="clearResourceFinderCacheResponse"/>
  <wsdl:message name="getPIPAttributeFinderDataRequest">
    <wsdl:part name="parameters" element="ns1:getPIPAttributeFinderData"/>
  </wsdl:message>
  <wsdl:message name="getPIPAttributeFinderDataResponse">
    <wsdl:part name="parameters" element="ns1:getPIPAttributeFinderDataResponse"/>
  </wsdl:message>
  <wsdl:message name="clearCarbonResourceCacheRequest">
    <wsdl:part name="parameters" element="ns1:clearCarbonResourceCache"/>
  </wsdl:message>
  <wsdl:message name="clearCarbonResourceCacheResponse"/>
  <wsdl:message name="doTestRequestRequest">
    <wsdl:part name="parameters" element="ns1:doTestRequest"/>
  </wsdl:message>
  <wsdl:message name="doTestRequestResponse">
    <wsdl:part name="parameters" element="ns1:doTestRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="clearAttributeFinderCacheByAttributesRequest">
    <wsdl:part name="parameters" element="ns1:clearAttributeFinderCacheByAttributes"/>
  </wsdl:message>
  <wsdl:message name="clearAttributeFinderCacheByAttributesResponse"/>
  <wsdl:message name="doTestRequestForGivenPoliciesRequest">
    <wsdl:part name="parameters" element="ns1:doTestRequestForGivenPolicies"/>
  </wsdl:message>
  <wsdl:message name="doTestRequestForGivenPoliciesResponse">
    <wsdl:part name="parameters" element="ns1:doTestRequestForGivenPoliciesResponse"/>
  </wsdl:message>
  <wsdl:message name="refreshResourceFinderRequest">
    <wsdl:part name="parameters" element="ns1:refreshResourceFinder"/>
  </wsdl:message>
  <wsdl:message name="refreshResourceFinderResponse"/>
  <wsdl:message name="refreshPolicyFindersRequest">
    <wsdl:part name="parameters" element="ns1:refreshPolicyFinders"/>
  </wsdl:message>
  <wsdl:message name="refreshPolicyFindersResponse"/>
  <wsdl:portType name="EntitlementAdminServicePortType">
    <wsdl:operation name="getPIPResourceFinderData">
      <wsdl:input message="tns:getPIPResourceFinderDataRequest" wsaw:Action="urn:getPIPResourceFinderData"/>
      <wsdl:output message="tns:getPIPResourceFinderDataResponse" wsaw:Action="urn:getPIPResourceFinderDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setGlobalPolicyAlgorithm">
      <wsdl:input message="tns:setGlobalPolicyAlgorithmRequest" wsaw:Action="urn:setGlobalPolicyAlgorithm"/>
      <wsdl:output message="tns:setGlobalPolicyAlgorithmResponse" wsaw:Action="urn:setGlobalPolicyAlgorithmResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:setGlobalPolicyAlgorithmEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearDecisionCache">
      <wsdl:input message="tns:clearDecisionCacheRequest" wsaw:Action="urn:clearDecisionCache"/>
      <wsdl:output message="tns:clearDecisionCacheResponse" wsaw:Action="urn:clearDecisionCacheResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearDecisionCacheEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getGlobalPolicyAlgorithm">
      <wsdl:input message="tns:getGlobalPolicyAlgorithmRequest" wsaw:Action="urn:getGlobalPolicyAlgorithm"/>
      <wsdl:output message="tns:getGlobalPolicyAlgorithmResponse" wsaw:Action="urn:getGlobalPolicyAlgorithmResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:getGlobalPolicyAlgorithmEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAllAttributeCaches">
      <wsdl:input message="tns:clearAllAttributeCachesRequest" wsaw:Action="urn:clearAllAttributeCaches"/>
      <wsdl:output message="tns:clearAllAttributeCachesResponse" wsaw:Action="urn:clearAllAttributeCachesResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearAllAttributeCachesEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearPolicyCache">
      <wsdl:input message="tns:clearPolicyCacheRequest" wsaw:Action="urn:clearPolicyCache"/>
      <wsdl:output message="tns:clearPolicyCacheResponse" wsaw:Action="urn:clearPolicyCacheResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearPolicyCacheEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicyFinderData">
      <wsdl:input message="tns:getPolicyFinderDataRequest" wsaw:Action="urn:getPolicyFinderData"/>
      <wsdl:output message="tns:getPolicyFinderDataResponse" wsaw:Action="urn:getPolicyFinderDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPDPData">
      <wsdl:input message="tns:getPDPDataRequest" wsaw:Action="urn:getPDPData"/>
      <wsdl:output message="tns:getPDPDataResponse" wsaw:Action="urn:getPDPDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="clearAllResourceCaches">
      <wsdl:input message="tns:clearAllResourceCachesRequest" wsaw:Action="urn:clearAllResourceCaches"/>
      <wsdl:output message="tns:clearAllResourceCachesResponse" wsaw:Action="urn:clearAllResourceCachesResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearAllResourceCachesEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonAttributeCache">
      <wsdl:input message="tns:clearCarbonAttributeCacheRequest" wsaw:Action="urn:clearCarbonAttributeCache"/>
      <wsdl:output message="tns:clearCarbonAttributeCacheResponse" wsaw:Action="urn:clearCarbonAttributeCacheResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearCarbonAttributeCacheEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="refreshAttributeFinder">
      <wsdl:input message="tns:refreshAttributeFinderRequest" wsaw:Action="urn:refreshAttributeFinder"/>
      <wsdl:output message="tns:refreshAttributeFinderResponse" wsaw:Action="urn:refreshAttributeFinderResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:refreshAttributeFinderEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCache">
      <wsdl:input message="tns:clearAttributeFinderCacheRequest" wsaw:Action="urn:clearAttributeFinderCache"/>
      <wsdl:output message="tns:clearAttributeFinderCacheResponse" wsaw:Action="urn:clearAttributeFinderCacheResponse"/>
    </wsdl:operation>
    <wsdl:operation name="clearResourceFinderCache">
      <wsdl:input message="tns:clearResourceFinderCacheRequest" wsaw:Action="urn:clearResourceFinderCache"/>
      <wsdl:output message="tns:clearResourceFinderCacheResponse" wsaw:Action="urn:clearResourceFinderCacheResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPIPAttributeFinderData">
      <wsdl:input message="tns:getPIPAttributeFinderDataRequest" wsaw:Action="urn:getPIPAttributeFinderData"/>
      <wsdl:output message="tns:getPIPAttributeFinderDataResponse" wsaw:Action="urn:getPIPAttributeFinderDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonResourceCache">
      <wsdl:input message="tns:clearCarbonResourceCacheRequest" wsaw:Action="urn:clearCarbonResourceCache"/>
      <wsdl:output message="tns:clearCarbonResourceCacheResponse" wsaw:Action="urn:clearCarbonResourceCacheResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:clearCarbonResourceCacheEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="doTestRequest">
      <wsdl:input message="tns:doTestRequestRequest" wsaw:Action="urn:doTestRequest"/>
      <wsdl:output message="tns:doTestRequestResponse" wsaw:Action="urn:doTestRequestResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:doTestRequestEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCacheByAttributes">
      <wsdl:input message="tns:clearAttributeFinderCacheByAttributesRequest" wsaw:Action="urn:clearAttributeFinderCacheByAttributes"/>
      <wsdl:output message="tns:clearAttributeFinderCacheByAttributesResponse" wsaw:Action="urn:clearAttributeFinderCacheByAttributesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="doTestRequestForGivenPolicies">
      <wsdl:input message="tns:doTestRequestForGivenPoliciesRequest" wsaw:Action="urn:doTestRequestForGivenPolicies"/>
      <wsdl:output message="tns:doTestRequestForGivenPoliciesResponse" wsaw:Action="urn:doTestRequestForGivenPoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:doTestRequestForGivenPoliciesEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="refreshResourceFinder">
      <wsdl:input message="tns:refreshResourceFinderRequest" wsaw:Action="urn:refreshResourceFinder"/>
      <wsdl:output message="tns:refreshResourceFinderResponse" wsaw:Action="urn:refreshResourceFinderResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:refreshResourceFinderEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicyFinders">
      <wsdl:input message="tns:refreshPolicyFindersRequest" wsaw:Action="urn:refreshPolicyFinders"/>
      <wsdl:output message="tns:refreshPolicyFindersResponse" wsaw:Action="urn:refreshPolicyFindersResponse"/>
      <wsdl:fault message="tns:EntitlementAdminServiceEntitlementException" name="EntitlementAdminServiceEntitlementException" wsaw:Action="urn:refreshPolicyFindersEntitlementAdminServiceEntitlementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EntitlementAdminServiceSoap11Binding" type="tns:EntitlementAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getPIPResourceFinderData">
      <soap:operation soapAction="urn:getPIPResourceFinderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setGlobalPolicyAlgorithm">
      <soap:operation soapAction="urn:setGlobalPolicyAlgorithm" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearDecisionCache">
      <soap:operation soapAction="urn:clearDecisionCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGlobalPolicyAlgorithm">
      <soap:operation soapAction="urn:getGlobalPolicyAlgorithm" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllAttributeCaches">
      <soap:operation soapAction="urn:clearAllAttributeCaches" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearPolicyCache">
      <soap:operation soapAction="urn:clearPolicyCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyFinderData">
      <soap:operation soapAction="urn:getPolicyFinderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPDPData">
      <soap:operation soapAction="urn:getPDPData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllResourceCaches">
      <soap:operation soapAction="urn:clearAllResourceCaches" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonAttributeCache">
      <soap:operation soapAction="urn:clearCarbonAttributeCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshAttributeFinder">
      <soap:operation soapAction="urn:refreshAttributeFinder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCache">
      <soap:operation soapAction="urn:clearAttributeFinderCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearResourceFinderCache">
      <soap:operation soapAction="urn:clearResourceFinderCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPIPAttributeFinderData">
      <soap:operation soapAction="urn:getPIPAttributeFinderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonResourceCache">
      <soap:operation soapAction="urn:clearCarbonResourceCache" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doTestRequest">
      <soap:operation soapAction="urn:doTestRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCacheByAttributes">
      <soap:operation soapAction="urn:clearAttributeFinderCacheByAttributes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="doTestRequestForGivenPolicies">
      <soap:operation soapAction="urn:doTestRequestForGivenPolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshResourceFinder">
      <soap:operation soapAction="urn:refreshResourceFinder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicyFinders">
      <soap:operation soapAction="urn:refreshPolicyFinders" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementAdminServiceSoap12Binding" type="tns:EntitlementAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getPIPResourceFinderData">
      <soap12:operation soapAction="urn:getPIPResourceFinderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setGlobalPolicyAlgorithm">
      <soap12:operation soapAction="urn:setGlobalPolicyAlgorithm" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearDecisionCache">
      <soap12:operation soapAction="urn:clearDecisionCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGlobalPolicyAlgorithm">
      <soap12:operation soapAction="urn:getGlobalPolicyAlgorithm" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllAttributeCaches">
      <soap12:operation soapAction="urn:clearAllAttributeCaches" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearPolicyCache">
      <soap12:operation soapAction="urn:clearPolicyCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyFinderData">
      <soap12:operation soapAction="urn:getPolicyFinderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPDPData">
      <soap12:operation soapAction="urn:getPDPData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllResourceCaches">
      <soap12:operation soapAction="urn:clearAllResourceCaches" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonAttributeCache">
      <soap12:operation soapAction="urn:clearCarbonAttributeCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshAttributeFinder">
      <soap12:operation soapAction="urn:refreshAttributeFinder" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCache">
      <soap12:operation soapAction="urn:clearAttributeFinderCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearResourceFinderCache">
      <soap12:operation soapAction="urn:clearResourceFinderCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPIPAttributeFinderData">
      <soap12:operation soapAction="urn:getPIPAttributeFinderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonResourceCache">
      <soap12:operation soapAction="urn:clearCarbonResourceCache" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doTestRequest">
      <soap12:operation soapAction="urn:doTestRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCacheByAttributes">
      <soap12:operation soapAction="urn:clearAttributeFinderCacheByAttributes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="doTestRequestForGivenPolicies">
      <soap12:operation soapAction="urn:doTestRequestForGivenPolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshResourceFinder">
      <soap12:operation soapAction="urn:refreshResourceFinder" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicyFinders">
      <soap12:operation soapAction="urn:refreshPolicyFinders" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementAdminServiceHttpBinding" type="tns:EntitlementAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getPIPResourceFinderData">
      <http:operation location="getPIPResourceFinderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setGlobalPolicyAlgorithm">
      <http:operation location="setGlobalPolicyAlgorithm"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearDecisionCache">
      <http:operation location="clearDecisionCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGlobalPolicyAlgorithm">
      <http:operation location="getGlobalPolicyAlgorithm"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllAttributeCaches">
      <http:operation location="clearAllAttributeCaches"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearPolicyCache">
      <http:operation location="clearPolicyCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicyFinderData">
      <http:operation location="getPolicyFinderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPDPData">
      <http:operation location="getPDPData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllResourceCaches">
      <http:operation location="clearAllResourceCaches"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonAttributeCache">
      <http:operation location="clearCarbonAttributeCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="refreshAttributeFinder">
      <http:operation location="refreshAttributeFinder"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCache">
      <http:operation location="clearAttributeFinderCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearResourceFinderCache">
      <http:operation location="clearResourceFinderCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPIPAttributeFinderData">
      <http:operation location="getPIPAttributeFinderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearCarbonResourceCache">
      <http:operation location="clearCarbonResourceCache"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="doTestRequest">
      <http:operation location="doTestRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAttributeFinderCacheByAttributes">
      <http:operation location="clearAttributeFinderCacheByAttributes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="doTestRequestForGivenPolicies">
      <http:operation location="doTestRequestForGivenPolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="refreshResourceFinder">
      <http:operation location="refreshResourceFinder"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="refreshPolicyFinders">
      <http:operation location="refreshPolicyFinders"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EntitlementAdminService">
    <wsdl:port name="EntitlementAdminServiceHttpsSoap11Endpoint" binding="tns:EntitlementAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementAdminServiceHttpsSoap12Endpoint" binding="tns:EntitlementAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementAdminServiceHttpsEndpoint" binding="tns:EntitlementAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementAdminService.EntitlementAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="513767d0-a08d-45a7-bc29-910be7484802" isOneWay="false" action="urn:clearAllAttributeCaches" name="clearAllAttributeCaches" bindingOperationName="clearAllAttributeCaches" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="258ae120-a495-4de2-b3ad-1dd4d158fec2" isOneWay="false" action="urn:clearAllResourceCaches" name="clearAllResourceCaches" bindingOperationName="clearAllResourceCaches" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a6952259-efbb-461b-9602-b135441811c5" isOneWay="false" action="urn:clearAttributeFinderCache" name="clearAttributeFinderCache" bindingOperationName="clearAttributeFinderCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2091be4f-88d8-4a81-890d-25ebe912e387" isOneWay="false" action="urn:clearAttributeFinderCacheByAttributes" name="clearAttributeFinderCacheByAttributes" bindingOperationName="clearAttributeFinderCacheByAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f196605c-cd7c-4422-ad8f-a222f1040783" isOneWay="false" action="urn:clearCarbonAttributeCache" name="clearCarbonAttributeCache" bindingOperationName="clearCarbonAttributeCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d9d27de6-4dea-45fb-a963-aa5271d57909" isOneWay="false" action="urn:clearCarbonResourceCache" name="clearCarbonResourceCache" bindingOperationName="clearCarbonResourceCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7243f8f8-477b-4fdf-9cf5-83941d935149" isOneWay="false" action="urn:clearDecisionCache" name="clearDecisionCache" bindingOperationName="clearDecisionCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f5a7084c-d985-43e5-ba98-afda9772bc11" isOneWay="false" action="urn:clearPolicyCache" name="clearPolicyCache" bindingOperationName="clearPolicyCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b2381db-0276-4ebf-8e8e-11c293dab6d5" isOneWay="false" action="urn:clearResourceFinderCache" name="clearResourceFinderCache" bindingOperationName="clearResourceFinderCache" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f69641b8-b7a5-41c6-9955-e66c18e58c8a" isOneWay="false" action="urn:doTestRequest" name="doTestRequest" bindingOperationName="doTestRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e86d391c-0df7-4b5f-bccb-ee19ce151d56" isOneWay="false" action="urn:doTestRequestForGivenPolicies" name="doTestRequestForGivenPolicies" bindingOperationName="doTestRequestForGivenPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2092126b-9e23-4ba2-b28b-a6d0685bc52c" isOneWay="false" action="urn:getGlobalPolicyAlgorithm" name="getGlobalPolicyAlgorithm" bindingOperationName="getGlobalPolicyAlgorithm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="03235c7e-65e5-43c8-8ff3-e3fc21bf32a1" isOneWay="false" action="urn:getPDPData" name="getPDPData" bindingOperationName="getPDPData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ef04adb1-eb9b-4e75-8b52-be0b6bb194b2" isOneWay="false" action="urn:getPIPAttributeFinderData" name="getPIPAttributeFinderData" bindingOperationName="getPIPAttributeFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5cd4fb1a-47ad-4af7-9b6f-751dccf40951" isOneWay="false" action="urn:getPIPResourceFinderData" name="getPIPResourceFinderData" bindingOperationName="getPIPResourceFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c2f0789c-2355-4545-81be-9b7c23e1b3b9" isOneWay="false" action="urn:getPolicyFinderData" name="getPolicyFinderData" bindingOperationName="getPolicyFinderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3c48fa6f-4ebb-405a-88f4-a9789f2b9860" isOneWay="false" action="urn:refreshAttributeFinder" name="refreshAttributeFinder" bindingOperationName="refreshAttributeFinder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4b107ad2-1de6-4136-a4e3-9cf1593a6077" isOneWay="false" action="urn:refreshPolicyFinders" name="refreshPolicyFinders" bindingOperationName="refreshPolicyFinders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f152c556-6ebc-4407-970f-3de46c8e2da8" isOneWay="false" action="urn:refreshResourceFinder" name="refreshResourceFinder" bindingOperationName="refreshResourceFinder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f37a547-1dce-45dc-9f38-797406dbbda1" isOneWay="false" action="urn:setGlobalPolicyAlgorithm" name="setGlobalPolicyAlgorithm" bindingOperationName="setGlobalPolicyAlgorithm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="84cf25c9-3028-4249-877e-77d46d2b9702" wsaVersion="NONE" name="EntitlementPolicyAdminServiceSoap12Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementPolicyAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementPolicyAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="94e129e5-d88a-482f-9ed3-f18df3dce3cf" isOneWay="false" action="urn:addPolicies" name="addPolicies" bindingOperationName="addPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="491c63d8-cc25-4c70-843b-38c4e898222f" isOneWay="false" action="urn:addPolicy" name="addPolicy" bindingOperationName="addPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="51089fbe-b621-40e1-818f-cd26c910f498" isOneWay="false" action="urn:addSubscriber" name="addSubscriber" bindingOperationName="addSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="63825f73-2cd0-48e6-b722-ecf596411a79" isOneWay="false" action="urn:deleteSubscriber" name="deleteSubscriber" bindingOperationName="deleteSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2ed869ba-b4a3-4e52-ad72-8526367ad5a4" isOneWay="false" action="urn:dePromotePolicy" name="dePromotePolicy" bindingOperationName="dePromotePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cef13f8b-6d88-409f-89bc-d0beb4a0b7ea" isOneWay="false" action="urn:enableDisablePolicy" name="enableDisablePolicy" bindingOperationName="enableDisablePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c75ae99-4407-4c11-8a09-748252eac923" isOneWay="false" action="urn:getAllPolicies" name="getAllPolicies" bindingOperationName="getAllPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d2a71451-4870-4545-947a-20de6d4f727a" isOneWay="false" action="urn:getAllPolicyIds" name="getAllPolicyIds" bindingOperationName="getAllPolicyIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d2403689-5c87-4d8e-b644-49fb668eb0fe" isOneWay="false" action="urn:getEntitlementData" name="getEntitlementData" bindingOperationName="getEntitlementData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b073d6a0-d080-4fd6-a566-7cfb4438597d" isOneWay="false" action="urn:getEntitlementDataModules" name="getEntitlementDataModules" bindingOperationName="getEntitlementDataModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f700159-3d25-4b9d-8f25-7c486ec14851" isOneWay="false" action="urn:getLightPolicy" name="getLightPolicy" bindingOperationName="getLightPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8be9267c-2fc3-4b8e-a3ff-4bb47d25106d" isOneWay="false" action="urn:getPolicy" name="getPolicy" bindingOperationName="getPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1b38c72f-1347-41fb-8c5a-70b6a7e63cf2" isOneWay="false" action="urn:getPolicyByVersion" name="getPolicyByVersion" bindingOperationName="getPolicyByVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d226c3f4-7a21-42c1-a129-ed394ecc43e9" isOneWay="false" action="urn:getPolicyVersions" name="getPolicyVersions" bindingOperationName="getPolicyVersions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0bbd1f98-739d-48c0-817c-cd7d81aa50b3" isOneWay="false" action="urn:getPublisherModuleData" name="getPublisherModuleData" bindingOperationName="getPublisherModuleData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="709f9389-f94f-4796-93b2-2c036de5ff53" isOneWay="false" action="urn:getStatusData" name="getStatusData" bindingOperationName="getStatusData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="41b366e1-1793-4527-b098-240066540354" isOneWay="false" action="urn:getSubscriber" name="getSubscriber" bindingOperationName="getSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e769d336-f9ed-4927-a5b6-75624c59b5b0" isOneWay="false" action="urn:getSubscriberIds" name="getSubscriberIds" bindingOperationName="getSubscriberIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d5aca503-374b-476d-8364-730dcad1d96b" isOneWay="false" action="urn:importPolicyFromRegistry" name="importPolicyFromRegistry" bindingOperationName="importPolicyFromRegistry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="027cb6f4-786b-4d9a-8808-53e040cae712" isOneWay="false" action="urn:orderPolicy" name="orderPolicy" bindingOperationName="orderPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e793a983-8e60-412a-b3ee-069ebeca8ba6" isOneWay="false" action="urn:publish" name="publish" bindingOperationName="publish" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ffba6e63-06a2-422d-ae67-b398ffba618f" isOneWay="false" action="urn:publishPolicies" name="publishPolicies" bindingOperationName="publishPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e0a916b-2177-4960-94a9-78c697331e64" isOneWay="false" action="urn:publishToPDP" name="publishToPDP" bindingOperationName="publishToPDP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="98003474-c076-4663-a939-c9d39ff3ed9d" isOneWay="false" action="urn:removePolicies" name="removePolicies" bindingOperationName="removePolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2af413bf-22b7-4a6e-887f-c99842ca6788" isOneWay="false" action="urn:removePolicy" name="removePolicy" bindingOperationName="removePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="19c9091a-991f-4f2e-adb4-4388f395a7e5" isOneWay="false" action="urn:rollBackPolicy" name="rollBackPolicy" bindingOperationName="rollBackPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="14372362-5fd9-436b-bc04-379015ca61ae" isOneWay="false" action="urn:updatePolicy" name="updatePolicy" bindingOperationName="updatePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f73870b4-7f2d-4bc0-bfc3-fffdf5f2415c" isOneWay="false" action="urn:updateSubscriber" name="updateSubscriber" bindingOperationName="updateSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7a3b3aad-008a-4aca-a561-1a790c1e9c3a" wsaVersion="NONE" name="EntitlementPolicyAdminServiceSoap11Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementPolicyAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementPolicyAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementPolicyAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementPolicyAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://entitlement.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://entitlement.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2297="http://entitlement.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ax2299="http://dto.entitlement.identity.carbon.wso2.org/xsd">
  <wsdl:documentation>EntitlementPolicyAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2300="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2298="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:element name="EntitlementPolicyAdminServiceEntitlementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EntitlementException" nillable="true" type="ax2297:EntitlementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="isPDPPolicy" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyDTO" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importPolicyFromRegistry">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyRegistryPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policies" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyTypeFilter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policySearchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="isPDPPolicy" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPoliciesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PaginatedPolicySetDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyByVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyByVersionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLightPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLightPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removePolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIds" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dePromote" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dePromote" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPolicyIds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="searchString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPolicyIdsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSubscriber">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subscribeId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSubscriberResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PublisherDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSubscriberIds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="searchString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSubscriberIdsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addSubscriber">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="holder" nillable="true" type="ax2300:PublisherDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateSubscriber">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="holder" nillable="true" type="ax2300:PublisherDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteSubscriber">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subscriberId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="publishPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIds" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="subscriberIds" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="order" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="publishToPDP">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIds" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
            <xs:element minOccurs="0" name="order" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="rollBackPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStatusData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="about" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="searchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStatusDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:PaginatedStatusHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPublisherModuleData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPublisherModuleDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2300:PublisherDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitlementData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dataModule" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="regexp" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dataLevel" type="xs:int"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitlementDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2300:EntitlementTreeNodeDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitlementDataModules">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitlementDataModulesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2300:EntitlementFinderDataHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyVersions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyVersionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="orderPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newOrder" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="enableDisablePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enable" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="dePromotePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="policyDTO" nillable="true" type="ax2300:PolicyDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="publish">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="verificationCode" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="PolicyDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributeDTOs" nillable="true" type="ax2299:AttributeDTO"/>
          <xs:element minOccurs="0" name="lastModifiedTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModifiedUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policy" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyEditor" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policyEditorData" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policyIdReferences" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyOrder" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policySetIdReferences" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="promote" type="xs:boolean"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AttributeDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeDataType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaginatedPolicySetDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="policySet" nillable="true" type="ax2299:PolicyDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PublisherDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="propertyDTOs" nillable="true" type="ax2299:PublisherPropertyDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PublisherPropertyDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="module" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="secret" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaginatedStatusHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="statusHolders" nillable="true" type="ax2299:StatusHolder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StatusHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="success" type="xs:boolean"/>
          <xs:element minOccurs="0" name="target" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="timeInstance" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="user" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EntitlementTreeNodeDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="childNodes" nillable="true" type="ax2299:EntitlementTreeNodeDTO"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EntitlementFinderDataHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="allApplicationRelated" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="applicationIds" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fullPathSupported" type="xs:boolean"/>
          <xs:element minOccurs="0" name="hierarchicalLevels" type="xs:int"/>
          <xs:element minOccurs="0" name="hierarchicalTree" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="searchSupported" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="supportedCategory" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EntitlementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getEntitlementDataRequest">
    <wsdl:part name="parameters" element="ns1:getEntitlementData"/>
  </wsdl:message>
  <wsdl:message name="getEntitlementDataResponse">
    <wsdl:part name="parameters" element="ns1:getEntitlementDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllPolicyIdsRequest">
    <wsdl:part name="parameters" element="ns1:getAllPolicyIds"/>
  </wsdl:message>
  <wsdl:message name="getAllPolicyIdsResponse">
    <wsdl:part name="parameters" element="ns1:getAllPolicyIdsResponse"/>
  </wsdl:message>
  <wsdl:message name="EntitlementPolicyAdminServiceEntitlementException">
    <wsdl:part name="parameters" element="ns1:EntitlementPolicyAdminServiceEntitlementException"/>
  </wsdl:message>
  <wsdl:message name="getAllPoliciesRequest">
    <wsdl:part name="parameters" element="ns1:getAllPolicies"/>
  </wsdl:message>
  <wsdl:message name="getAllPoliciesResponse">
    <wsdl:part name="parameters" element="ns1:getAllPoliciesResponse"/>
  </wsdl:message>
  <wsdl:message name="getEntitlementDataModulesRequest">
    <wsdl:part name="parameters" element="ns1:getEntitlementDataModules"/>
  </wsdl:message>
  <wsdl:message name="getEntitlementDataModulesResponse">
    <wsdl:part name="parameters" element="ns1:getEntitlementDataModulesResponse"/>
  </wsdl:message>
  <wsdl:message name="getSubscriberRequest">
    <wsdl:part name="parameters" element="ns1:getSubscriber"/>
  </wsdl:message>
  <wsdl:message name="getSubscriberResponse">
    <wsdl:part name="parameters" element="ns1:getSubscriberResponse"/>
  </wsdl:message>
  <wsdl:message name="addSubscriberRequest">
    <wsdl:part name="parameters" element="ns1:addSubscriber"/>
  </wsdl:message>
  <wsdl:message name="addSubscriberResponse"/>
  <wsdl:message name="getPolicyVersionsRequest">
    <wsdl:part name="parameters" element="ns1:getPolicyVersions"/>
  </wsdl:message>
  <wsdl:message name="getPolicyVersionsResponse">
    <wsdl:part name="parameters" element="ns1:getPolicyVersionsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteSubscriberRequest">
    <wsdl:part name="parameters" element="ns1:deleteSubscriber"/>
  </wsdl:message>
  <wsdl:message name="deleteSubscriberResponse"/>
  <wsdl:message name="addPolicyRequest">
    <wsdl:part name="parameters" element="ns1:addPolicy"/>
  </wsdl:message>
  <wsdl:message name="addPolicyResponse"/>
  <wsdl:message name="updatePolicyRequest">
    <wsdl:part name="parameters" element="ns1:updatePolicy"/>
  </wsdl:message>
  <wsdl:message name="updatePolicyResponse"/>
  <wsdl:message name="addPoliciesRequest">
    <wsdl:part name="parameters" element="ns1:addPolicies"/>
  </wsdl:message>
  <wsdl:message name="addPoliciesResponse"/>
  <wsdl:message name="updateSubscriberRequest">
    <wsdl:part name="parameters" element="ns1:updateSubscriber"/>
  </wsdl:message>
  <wsdl:message name="updateSubscriberResponse"/>
  <wsdl:message name="getSubscriberIdsRequest">
    <wsdl:part name="parameters" element="ns1:getSubscriberIds"/>
  </wsdl:message>
  <wsdl:message name="getSubscriberIdsResponse">
    <wsdl:part name="parameters" element="ns1:getSubscriberIdsResponse"/>
  </wsdl:message>
  <wsdl:message name="dePromotePolicyRequest">
    <wsdl:part name="parameters" element="ns1:dePromotePolicy"/>
  </wsdl:message>
  <wsdl:message name="dePromotePolicyResponse"/>
  <wsdl:message name="orderPolicyRequest">
    <wsdl:part name="parameters" element="ns1:orderPolicy"/>
  </wsdl:message>
  <wsdl:message name="orderPolicyResponse"/>
  <wsdl:message name="rollBackPolicyRequest">
    <wsdl:part name="parameters" element="ns1:rollBackPolicy"/>
  </wsdl:message>
  <wsdl:message name="rollBackPolicyResponse"/>
  <wsdl:message name="getLightPolicyRequest">
    <wsdl:part name="parameters" element="ns1:getLightPolicy"/>
  </wsdl:message>
  <wsdl:message name="getLightPolicyResponse">
    <wsdl:part name="parameters" element="ns1:getLightPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="getPolicyRequest">
    <wsdl:part name="parameters" element="ns1:getPolicy"/>
  </wsdl:message>
  <wsdl:message name="getPolicyResponse">
    <wsdl:part name="parameters" element="ns1:getPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="removePolicyRequest">
    <wsdl:part name="parameters" element="ns1:removePolicy"/>
  </wsdl:message>
  <wsdl:message name="removePolicyResponse"/>
  <wsdl:message name="getPolicyByVersionRequest">
    <wsdl:part name="parameters" element="ns1:getPolicyByVersion"/>
  </wsdl:message>
  <wsdl:message name="getPolicyByVersionResponse">
    <wsdl:part name="parameters" element="ns1:getPolicyByVersionResponse"/>
  </wsdl:message>
  <wsdl:message name="importPolicyFromRegistryRequest">
    <wsdl:part name="parameters" element="ns1:importPolicyFromRegistry"/>
  </wsdl:message>
  <wsdl:message name="importPolicyFromRegistryResponse"/>
  <wsdl:message name="getPublisherModuleDataRequest">
    <wsdl:part name="parameters" element="ns1:getPublisherModuleData"/>
  </wsdl:message>
  <wsdl:message name="getPublisherModuleDataResponse">
    <wsdl:part name="parameters" element="ns1:getPublisherModuleDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getStatusDataRequest">
    <wsdl:part name="parameters" element="ns1:getStatusData"/>
  </wsdl:message>
  <wsdl:message name="getStatusDataResponse">
    <wsdl:part name="parameters" element="ns1:getStatusDataResponse"/>
  </wsdl:message>
  <wsdl:message name="enableDisablePolicyRequest">
    <wsdl:part name="parameters" element="ns1:enableDisablePolicy"/>
  </wsdl:message>
  <wsdl:message name="enableDisablePolicyResponse"/>
  <wsdl:message name="publishRequest">
    <wsdl:part name="parameters" element="ns1:publish"/>
  </wsdl:message>
  <wsdl:message name="publishResponse"/>
  <wsdl:message name="removePoliciesRequest">
    <wsdl:part name="parameters" element="ns1:removePolicies"/>
  </wsdl:message>
  <wsdl:message name="removePoliciesResponse"/>
  <wsdl:message name="publishPoliciesRequest">
    <wsdl:part name="parameters" element="ns1:publishPolicies"/>
  </wsdl:message>
  <wsdl:message name="publishPoliciesResponse"/>
  <wsdl:message name="publishToPDPRequest">
    <wsdl:part name="parameters" element="ns1:publishToPDP"/>
  </wsdl:message>
  <wsdl:message name="publishToPDPResponse"/>
  <wsdl:portType name="EntitlementPolicyAdminServicePortType">
    <wsdl:operation name="getEntitlementData">
      <wsdl:input message="tns:getEntitlementDataRequest" wsaw:Action="urn:getEntitlementData"/>
      <wsdl:output message="tns:getEntitlementDataResponse" wsaw:Action="urn:getEntitlementDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicyIds">
      <wsdl:input message="tns:getAllPolicyIdsRequest" wsaw:Action="urn:getAllPolicyIds"/>
      <wsdl:output message="tns:getAllPolicyIdsResponse" wsaw:Action="urn:getAllPolicyIdsResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getAllPolicyIdsEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicies">
      <wsdl:input message="tns:getAllPoliciesRequest" wsaw:Action="urn:getAllPolicies"/>
      <wsdl:output message="tns:getAllPoliciesResponse" wsaw:Action="urn:getAllPoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getAllPoliciesEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementDataModules">
      <wsdl:input message="tns:getEntitlementDataModulesRequest" wsaw:Action="urn:getEntitlementDataModules"/>
      <wsdl:output message="tns:getEntitlementDataModulesResponse" wsaw:Action="urn:getEntitlementDataModulesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSubscriber">
      <wsdl:input message="tns:getSubscriberRequest" wsaw:Action="urn:getSubscriber"/>
      <wsdl:output message="tns:getSubscriberResponse" wsaw:Action="urn:getSubscriberResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getSubscriberEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="addSubscriber">
      <wsdl:input message="tns:addSubscriberRequest" wsaw:Action="urn:addSubscriber"/>
      <wsdl:output message="tns:addSubscriberResponse" wsaw:Action="urn:addSubscriberResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:addSubscriberEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicyVersions">
      <wsdl:input message="tns:getPolicyVersionsRequest" wsaw:Action="urn:getPolicyVersions"/>
      <wsdl:output message="tns:getPolicyVersionsResponse" wsaw:Action="urn:getPolicyVersionsResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getPolicyVersionsEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteSubscriber">
      <wsdl:input message="tns:deleteSubscriberRequest" wsaw:Action="urn:deleteSubscriber"/>
      <wsdl:output message="tns:deleteSubscriberResponse" wsaw:Action="urn:deleteSubscriberResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:deleteSubscriberEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="addPolicy">
      <wsdl:input message="tns:addPolicyRequest" wsaw:Action="urn:addPolicy"/>
      <wsdl:output message="tns:addPolicyResponse" wsaw:Action="urn:addPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:addPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="updatePolicy">
      <wsdl:input message="tns:updatePolicyRequest" wsaw:Action="urn:updatePolicy"/>
      <wsdl:output message="tns:updatePolicyResponse" wsaw:Action="urn:updatePolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:updatePolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="addPolicies">
      <wsdl:input message="tns:addPoliciesRequest" wsaw:Action="urn:addPolicies"/>
      <wsdl:output message="tns:addPoliciesResponse" wsaw:Action="urn:addPoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:addPoliciesEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="updateSubscriber">
      <wsdl:input message="tns:updateSubscriberRequest" wsaw:Action="urn:updateSubscriber"/>
      <wsdl:output message="tns:updateSubscriberResponse" wsaw:Action="urn:updateSubscriberResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:updateSubscriberEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberIds">
      <wsdl:input message="tns:getSubscriberIdsRequest" wsaw:Action="urn:getSubscriberIds"/>
      <wsdl:output message="tns:getSubscriberIdsResponse" wsaw:Action="urn:getSubscriberIdsResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getSubscriberIdsEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="dePromotePolicy">
      <wsdl:input message="tns:dePromotePolicyRequest" wsaw:Action="urn:dePromotePolicy"/>
      <wsdl:output message="tns:dePromotePolicyResponse" wsaw:Action="urn:dePromotePolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:dePromotePolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="orderPolicy">
      <wsdl:input message="tns:orderPolicyRequest" wsaw:Action="urn:orderPolicy"/>
      <wsdl:output message="tns:orderPolicyResponse" wsaw:Action="urn:orderPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:orderPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="rollBackPolicy">
      <wsdl:input message="tns:rollBackPolicyRequest" wsaw:Action="urn:rollBackPolicy"/>
      <wsdl:output message="tns:rollBackPolicyResponse" wsaw:Action="urn:rollBackPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:rollBackPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getLightPolicy">
      <wsdl:input message="tns:getLightPolicyRequest" wsaw:Action="urn:getLightPolicy"/>
      <wsdl:output message="tns:getLightPolicyResponse" wsaw:Action="urn:getLightPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getLightPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <wsdl:input message="tns:getPolicyRequest" wsaw:Action="urn:getPolicy"/>
      <wsdl:output message="tns:getPolicyResponse" wsaw:Action="urn:getPolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getPolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="removePolicy">
      <wsdl:input message="tns:removePolicyRequest" wsaw:Action="urn:removePolicy"/>
      <wsdl:output message="tns:removePolicyResponse" wsaw:Action="urn:removePolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:removePolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicyByVersion">
      <wsdl:input message="tns:getPolicyByVersionRequest" wsaw:Action="urn:getPolicyByVersion"/>
      <wsdl:output message="tns:getPolicyByVersionResponse" wsaw:Action="urn:getPolicyByVersionResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getPolicyByVersionEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="importPolicyFromRegistry">
      <wsdl:input message="tns:importPolicyFromRegistryRequest" wsaw:Action="urn:importPolicyFromRegistry"/>
      <wsdl:output message="tns:importPolicyFromRegistryResponse" wsaw:Action="urn:importPolicyFromRegistryResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:importPolicyFromRegistryEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getPublisherModuleData">
      <wsdl:input message="tns:getPublisherModuleDataRequest" wsaw:Action="urn:getPublisherModuleData"/>
      <wsdl:output message="tns:getPublisherModuleDataResponse" wsaw:Action="urn:getPublisherModuleDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getStatusData">
      <wsdl:input message="tns:getStatusDataRequest" wsaw:Action="urn:getStatusData"/>
      <wsdl:output message="tns:getStatusDataResponse" wsaw:Action="urn:getStatusDataResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:getStatusDataEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="enableDisablePolicy">
      <wsdl:input message="tns:enableDisablePolicyRequest" wsaw:Action="urn:enableDisablePolicy"/>
      <wsdl:output message="tns:enableDisablePolicyResponse" wsaw:Action="urn:enableDisablePolicyResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:enableDisablePolicyEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <wsdl:input message="tns:publishRequest" wsaw:Action="urn:publish"/>
      <wsdl:output message="tns:publishResponse" wsaw:Action="urn:publishResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:publishEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="removePolicies">
      <wsdl:input message="tns:removePoliciesRequest" wsaw:Action="urn:removePolicies"/>
      <wsdl:output message="tns:removePoliciesResponse" wsaw:Action="urn:removePoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:removePoliciesEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="publishPolicies">
      <wsdl:input message="tns:publishPoliciesRequest" wsaw:Action="urn:publishPolicies"/>
      <wsdl:output message="tns:publishPoliciesResponse" wsaw:Action="urn:publishPoliciesResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:publishPoliciesEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="publishToPDP">
      <wsdl:input message="tns:publishToPDPRequest" wsaw:Action="urn:publishToPDP"/>
      <wsdl:output message="tns:publishToPDPResponse" wsaw:Action="urn:publishToPDPResponse"/>
      <wsdl:fault message="tns:EntitlementPolicyAdminServiceEntitlementException" name="EntitlementPolicyAdminServiceEntitlementException" wsaw:Action="urn:publishToPDPEntitlementPolicyAdminServiceEntitlementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EntitlementPolicyAdminServiceSoap11Binding" type="tns:EntitlementPolicyAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEntitlementData">
      <soap:operation soapAction="urn:getEntitlementData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicyIds">
      <soap:operation soapAction="urn:getAllPolicyIds" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicies">
      <soap:operation soapAction="urn:getAllPolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementDataModules">
      <soap:operation soapAction="urn:getEntitlementDataModules" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriber">
      <soap:operation soapAction="urn:getSubscriber" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSubscriber">
      <soap:operation soapAction="urn:addSubscriber" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyVersions">
      <soap:operation soapAction="urn:getPolicyVersions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePolicy">
      <soap:operation soapAction="urn:updatePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicy">
      <soap:operation soapAction="urn:addPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSubscriber">
      <soap:operation soapAction="urn:deleteSubscriber" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicies">
      <soap:operation soapAction="urn:addPolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateSubscriber">
      <soap:operation soapAction="urn:updateSubscriber" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberIds">
      <soap:operation soapAction="urn:getSubscriberIds" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dePromotePolicy">
      <soap:operation soapAction="urn:dePromotePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="orderPolicy">
      <soap:operation soapAction="urn:orderPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rollBackPolicy">
      <soap:operation soapAction="urn:rollBackPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLightPolicy">
      <soap:operation soapAction="urn:getLightPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <soap:operation soapAction="urn:getPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePolicy">
      <soap:operation soapAction="urn:removePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyByVersion">
      <soap:operation soapAction="urn:getPolicyByVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importPolicyFromRegistry">
      <soap:operation soapAction="urn:importPolicyFromRegistry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPublisherModuleData">
      <soap:operation soapAction="urn:getPublisherModuleData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatusData">
      <soap:operation soapAction="urn:getStatusData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enableDisablePolicy">
      <soap:operation soapAction="urn:enableDisablePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <soap:operation soapAction="urn:publish" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePolicies">
      <soap:operation soapAction="urn:removePolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishPolicies">
      <soap:operation soapAction="urn:publishPolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishToPDP">
      <soap:operation soapAction="urn:publishToPDP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementPolicyAdminServiceSoap12Binding" type="tns:EntitlementPolicyAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEntitlementData">
      <soap12:operation soapAction="urn:getEntitlementData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicyIds">
      <soap12:operation soapAction="urn:getAllPolicyIds" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicies">
      <soap12:operation soapAction="urn:getAllPolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementDataModules">
      <soap12:operation soapAction="urn:getEntitlementDataModules" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriber">
      <soap12:operation soapAction="urn:getSubscriber" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSubscriber">
      <soap12:operation soapAction="urn:addSubscriber" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyVersions">
      <soap12:operation soapAction="urn:getPolicyVersions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePolicy">
      <soap12:operation soapAction="urn:updatePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicy">
      <soap12:operation soapAction="urn:addPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSubscriber">
      <soap12:operation soapAction="urn:deleteSubscriber" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPolicies">
      <soap12:operation soapAction="urn:addPolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateSubscriber">
      <soap12:operation soapAction="urn:updateSubscriber" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberIds">
      <soap12:operation soapAction="urn:getSubscriberIds" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dePromotePolicy">
      <soap12:operation soapAction="urn:dePromotePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="orderPolicy">
      <soap12:operation soapAction="urn:orderPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rollBackPolicy">
      <soap12:operation soapAction="urn:rollBackPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLightPolicy">
      <soap12:operation soapAction="urn:getLightPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <soap12:operation soapAction="urn:getPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePolicy">
      <soap12:operation soapAction="urn:removePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicyByVersion">
      <soap12:operation soapAction="urn:getPolicyByVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importPolicyFromRegistry">
      <soap12:operation soapAction="urn:importPolicyFromRegistry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPublisherModuleData">
      <soap12:operation soapAction="urn:getPublisherModuleData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatusData">
      <soap12:operation soapAction="urn:getStatusData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enableDisablePolicy">
      <soap12:operation soapAction="urn:enableDisablePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <soap12:operation soapAction="urn:publish" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePolicies">
      <soap12:operation soapAction="urn:removePolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishPolicies">
      <soap12:operation soapAction="urn:publishPolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="publishToPDP">
      <soap12:operation soapAction="urn:publishToPDP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementPolicyAdminServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementPolicyAdminServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementPolicyAdminServiceHttpBinding" type="tns:EntitlementPolicyAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getEntitlementData">
      <http:operation location="getEntitlementData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicyIds">
      <http:operation location="getAllPolicyIds"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPolicies">
      <http:operation location="getAllPolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementDataModules">
      <http:operation location="getEntitlementDataModules"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriber">
      <http:operation location="getSubscriber"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addSubscriber">
      <http:operation location="addSubscriber"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicyVersions">
      <http:operation location="getPolicyVersions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updatePolicy">
      <http:operation location="updatePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addPolicy">
      <http:operation location="addPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteSubscriber">
      <http:operation location="deleteSubscriber"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addPolicies">
      <http:operation location="addPolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSubscriber">
      <http:operation location="updateSubscriber"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriberIds">
      <http:operation location="getSubscriberIds"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="dePromotePolicy">
      <http:operation location="dePromotePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="orderPolicy">
      <http:operation location="orderPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="rollBackPolicy">
      <http:operation location="rollBackPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLightPolicy">
      <http:operation location="getLightPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <http:operation location="getPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removePolicy">
      <http:operation location="removePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicyByVersion">
      <http:operation location="getPolicyByVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="importPolicyFromRegistry">
      <http:operation location="importPolicyFromRegistry"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPublisherModuleData">
      <http:operation location="getPublisherModuleData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatusData">
      <http:operation location="getStatusData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enableDisablePolicy">
      <http:operation location="enableDisablePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <http:operation location="publish"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removePolicies">
      <http:operation location="removePolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publishPolicies">
      <http:operation location="publishPolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publishToPDP">
      <http:operation location="publishToPDP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EntitlementPolicyAdminService">
    <wsdl:port name="EntitlementPolicyAdminServiceHttpsSoap11Endpoint" binding="tns:EntitlementPolicyAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementPolicyAdminServiceHttpsSoap12Endpoint" binding="tns:EntitlementPolicyAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementPolicyAdminServiceHttpsEndpoint" binding="tns:EntitlementPolicyAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementPolicyAdminService.EntitlementPolicyAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="dd7941af-7a50-41ba-b82f-e7a8ff943d31" isOneWay="false" action="urn:addPolicies" name="addPolicies" bindingOperationName="addPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="350edad6-0fa2-46ad-84cd-3f2db8bcdfea" isOneWay="false" action="urn:addPolicy" name="addPolicy" bindingOperationName="addPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="55fc7220-daff-43ea-ba2d-481ffa184396" isOneWay="false" action="urn:addSubscriber" name="addSubscriber" bindingOperationName="addSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4da43fbf-a94b-4887-ac9e-15ab10a6a356" isOneWay="false" action="urn:deleteSubscriber" name="deleteSubscriber" bindingOperationName="deleteSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5c753e50-070e-4945-8730-b8200d0654f6" isOneWay="false" action="urn:dePromotePolicy" name="dePromotePolicy" bindingOperationName="dePromotePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dd5c835b-fd07-4895-b1e8-e3cca5ff30fc" isOneWay="false" action="urn:enableDisablePolicy" name="enableDisablePolicy" bindingOperationName="enableDisablePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="275327d3-486d-4a37-ac2a-5908ca0cad93" isOneWay="false" action="urn:getAllPolicies" name="getAllPolicies" bindingOperationName="getAllPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ba5008d2-607a-4722-bc26-b1f0e71ada29" isOneWay="false" action="urn:getAllPolicyIds" name="getAllPolicyIds" bindingOperationName="getAllPolicyIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2b758de8-d6f9-463e-a76c-c9797ba6259a" isOneWay="false" action="urn:getEntitlementData" name="getEntitlementData" bindingOperationName="getEntitlementData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d5f86d89-7b1d-4120-83ae-d0c6d806084b" isOneWay="false" action="urn:getEntitlementDataModules" name="getEntitlementDataModules" bindingOperationName="getEntitlementDataModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7111e8a9-3afb-4324-bc6e-2a6f30bc6183" isOneWay="false" action="urn:getLightPolicy" name="getLightPolicy" bindingOperationName="getLightPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="32ed545d-d2e6-444e-9eff-c365c5ff442a" isOneWay="false" action="urn:getPolicy" name="getPolicy" bindingOperationName="getPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b65f9ddb-cebe-496c-900c-479b7710406f" isOneWay="false" action="urn:getPolicyByVersion" name="getPolicyByVersion" bindingOperationName="getPolicyByVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f7494455-c504-43f2-93c6-aa9c9997dc33" isOneWay="false" action="urn:getPolicyVersions" name="getPolicyVersions" bindingOperationName="getPolicyVersions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9f6cc621-2ff5-41f2-8b87-73d68dd41b48" isOneWay="false" action="urn:getPublisherModuleData" name="getPublisherModuleData" bindingOperationName="getPublisherModuleData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="251f75d7-f40c-4c16-8a6c-ea543189d53e" isOneWay="false" action="urn:getStatusData" name="getStatusData" bindingOperationName="getStatusData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0b765745-4d24-499c-a97f-d37f5c8c9bbf" isOneWay="false" action="urn:getSubscriber" name="getSubscriber" bindingOperationName="getSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e21178f9-15e1-4ff0-9f50-23a0d638ff24" isOneWay="false" action="urn:getSubscriberIds" name="getSubscriberIds" bindingOperationName="getSubscriberIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3aa4992d-da9f-4fc2-99d1-042c038dfb52" isOneWay="false" action="urn:importPolicyFromRegistry" name="importPolicyFromRegistry" bindingOperationName="importPolicyFromRegistry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="45d6d4bc-39a7-4ade-a3ed-20edaf40e64b" isOneWay="false" action="urn:orderPolicy" name="orderPolicy" bindingOperationName="orderPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0165a237-ab6e-42f6-9cb5-21b95eecc06b" isOneWay="false" action="urn:publish" name="publish" bindingOperationName="publish" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86aa0e3a-de5b-450a-bdc0-6b8d59feda89" isOneWay="false" action="urn:publishPolicies" name="publishPolicies" bindingOperationName="publishPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b30c2dd8-2483-49e1-aa06-ac2ddc51d134" isOneWay="false" action="urn:publishToPDP" name="publishToPDP" bindingOperationName="publishToPDP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e37a2589-3ab7-407b-8435-e01d327faf56" isOneWay="false" action="urn:removePolicies" name="removePolicies" bindingOperationName="removePolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12c0362a-5785-42a1-a805-57e07ad3eb19" isOneWay="false" action="urn:removePolicy" name="removePolicy" bindingOperationName="removePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b72ad4ea-c9d2-4abe-ba21-03e4ce2407e8" isOneWay="false" action="urn:rollBackPolicy" name="rollBackPolicy" bindingOperationName="rollBackPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d3f83aaf-4cdd-43a4-8f63-c01b461e408f" isOneWay="false" action="urn:updatePolicy" name="updatePolicy" bindingOperationName="updatePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0399f1cd-b760-4dea-9fb1-a858af6e3f10" isOneWay="false" action="urn:updateSubscriber" name="updateSubscriber" bindingOperationName="updateSubscriber" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b3805052-88ec-49e6-9d77-12b9886f447d" wsaVersion="NONE" name="EntitlementServiceSoap12Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="6e92b70b-f32f-4162-b86b-5456e5308d5a" isOneWay="false" action="urn:getAllEntitlements" name="getAllEntitlements" bindingOperationName="getAllEntitlements" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e52b4552-4154-48ab-9919-380e2bc5d033" isOneWay="false" action="urn:getBooleanDecision" name="getBooleanDecision" bindingOperationName="getBooleanDecision" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2109c7d5-4237-4635-b1e9-7a69e74a32ae" isOneWay="false" action="urn:getDecision" name="getDecision" bindingOperationName="getDecision" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed5396de-d95c-4fa3-b1e8-aa7dc8fec2d7" isOneWay="false" action="urn:getDecisionByAttributes" name="getDecisionByAttributes" bindingOperationName="getDecisionByAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8da15197-81b9-478c-b6e4-d75f022b77ee" isOneWay="false" action="urn:getEntitledAttributes" name="getEntitledAttributes" bindingOperationName="getEntitledAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bcae7a18-438b-4185-af56-d4cf084ae3ce" isOneWay="false" action="urn:XACMLAuthzDecisionQuery" name="XACMLAuthzDecisionQuery" bindingOperationName="XACMLAuthzDecisionQuery" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="db473736-55f9-486a-8c95-5db60416e3e6" wsaVersion="NONE" name="EntitlementServiceSoap11Binding" type="wsdl" bindingName="{http://entitlement.identity.carbon.wso2.org}EntitlementServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EntitlementService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://entitlement.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2305="http://entitlement.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2307="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://entitlement.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>EntitlementService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2308="http://dto.entitlement.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2306="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.entitlement.identity.carbon.wso2.org/xsd"/>
      <xs:element name="EntitlementServiceEntitlementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EntitlementException" nillable="true" type="ax2305:EntitlementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDecision">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDecisionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDecisionByAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subject" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resource" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="environment" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDecisionByAttributesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="EntitlementServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EntitlementServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getBooleanDecision">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subject" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resource" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBooleanDecisionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitledAttributes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="subjectName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="subjectId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enableChildSearch" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEntitledAttributesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2307:EntitledResultSetDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllEntitlements">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="givenAttributes" nillable="true" type="ax2307:AttributeDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllEntitlementsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2307:EntitledResultSetDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="XACMLAuthzDecisionQuery">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="request" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="XACMLAuthzDecisionQueryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EntitledResultSetDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="advanceResult" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="entitledAttributesDTOs" nillable="true" type="ax2307:EntitledAttributesDTO"/>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="messageType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="EntitledAttributesDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="allActions" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allResources" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attributeDTOs" nillable="true" type="ax2307:AttributeDTO"/>
          <xs:element minOccurs="0" name="environment" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AttributeDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeDataType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://entitlement.identity.carbon.wso2.org/xsd">
      <xs:complexType name="EntitlementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getDecisionRequest">
    <wsdl:part name="parameters" element="ns1:getDecision"/>
  </wsdl:message>
  <wsdl:message name="getDecisionResponse">
    <wsdl:part name="parameters" element="ns1:getDecisionResponse"/>
  </wsdl:message>
  <wsdl:message name="EntitlementServiceEntitlementException">
    <wsdl:part name="parameters" element="ns1:EntitlementServiceEntitlementException"/>
  </wsdl:message>
  <wsdl:message name="getEntitledAttributesRequest">
    <wsdl:part name="parameters" element="ns1:getEntitledAttributes"/>
  </wsdl:message>
  <wsdl:message name="getEntitledAttributesResponse">
    <wsdl:part name="parameters" element="ns1:getEntitledAttributesResponse"/>
  </wsdl:message>
  <wsdl:message name="getDecisionByAttributesRequest">
    <wsdl:part name="parameters" element="ns1:getDecisionByAttributes"/>
  </wsdl:message>
  <wsdl:message name="getDecisionByAttributesResponse">
    <wsdl:part name="parameters" element="ns1:getDecisionByAttributesResponse"/>
  </wsdl:message>
  <wsdl:message name="XACMLAuthzDecisionQueryRequest">
    <wsdl:part name="parameters" element="ns1:XACMLAuthzDecisionQuery"/>
  </wsdl:message>
  <wsdl:message name="XACMLAuthzDecisionQueryResponse">
    <wsdl:part name="parameters" element="ns1:XACMLAuthzDecisionQueryResponse"/>
  </wsdl:message>
  <wsdl:message name="EntitlementServiceException">
    <wsdl:part name="parameters" element="ns1:EntitlementServiceException"/>
  </wsdl:message>
  <wsdl:message name="getBooleanDecisionRequest">
    <wsdl:part name="parameters" element="ns1:getBooleanDecision"/>
  </wsdl:message>
  <wsdl:message name="getBooleanDecisionResponse">
    <wsdl:part name="parameters" element="ns1:getBooleanDecisionResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllEntitlementsRequest">
    <wsdl:part name="parameters" element="ns1:getAllEntitlements"/>
  </wsdl:message>
  <wsdl:message name="getAllEntitlementsResponse">
    <wsdl:part name="parameters" element="ns1:getAllEntitlementsResponse"/>
  </wsdl:message>
  <wsdl:portType name="EntitlementServicePortType">
    <wsdl:operation name="getDecision">
      <wsdl:input message="tns:getDecisionRequest" wsaw:Action="urn:getDecision"/>
      <wsdl:output message="tns:getDecisionResponse" wsaw:Action="urn:getDecisionResponse"/>
      <wsdl:fault message="tns:EntitlementServiceEntitlementException" name="EntitlementServiceEntitlementException" wsaw:Action="urn:getDecisionEntitlementServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getEntitledAttributes">
      <wsdl:input message="tns:getEntitledAttributesRequest" wsaw:Action="urn:getEntitledAttributes"/>
      <wsdl:output message="tns:getEntitledAttributesResponse" wsaw:Action="urn:getEntitledAttributesResponse"/>
      <wsdl:fault message="tns:EntitlementServiceEntitlementException" name="EntitlementServiceEntitlementException" wsaw:Action="urn:getEntitledAttributesEntitlementServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="getDecisionByAttributes">
      <wsdl:input message="tns:getDecisionByAttributesRequest" wsaw:Action="urn:getDecisionByAttributes"/>
      <wsdl:output message="tns:getDecisionByAttributesResponse" wsaw:Action="urn:getDecisionByAttributesResponse"/>
      <wsdl:fault message="tns:EntitlementServiceEntitlementException" name="EntitlementServiceEntitlementException" wsaw:Action="urn:getDecisionByAttributesEntitlementServiceEntitlementException"/>
    </wsdl:operation>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <wsdl:input message="tns:XACMLAuthzDecisionQueryRequest" wsaw:Action="urn:XACMLAuthzDecisionQuery"/>
      <wsdl:output message="tns:XACMLAuthzDecisionQueryResponse" wsaw:Action="urn:XACMLAuthzDecisionQueryResponse"/>
      <wsdl:fault message="tns:EntitlementServiceException" name="EntitlementServiceException" wsaw:Action="urn:XACMLAuthzDecisionQueryEntitlementServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getBooleanDecision">
      <wsdl:input message="tns:getBooleanDecisionRequest" wsaw:Action="urn:getBooleanDecision"/>
      <wsdl:output message="tns:getBooleanDecisionResponse" wsaw:Action="urn:getBooleanDecisionResponse"/>
      <wsdl:fault message="tns:EntitlementServiceException" name="EntitlementServiceException" wsaw:Action="urn:getBooleanDecisionEntitlementServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllEntitlements">
      <wsdl:input message="tns:getAllEntitlementsRequest" wsaw:Action="urn:getAllEntitlements"/>
      <wsdl:output message="tns:getAllEntitlementsResponse" wsaw:Action="urn:getAllEntitlementsResponse"/>
      <wsdl:fault message="tns:EntitlementServiceEntitlementException" name="EntitlementServiceEntitlementException" wsaw:Action="urn:getAllEntitlementsEntitlementServiceEntitlementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EntitlementServiceSoap11Binding" type="tns:EntitlementServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getDecision">
      <soap:operation soapAction="urn:getDecision" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitledAttributes">
      <soap:operation soapAction="urn:getEntitledAttributes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDecisionByAttributes">
      <soap:operation soapAction="urn:getDecisionByAttributes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <soap:operation soapAction="urn:XACMLAuthzDecisionQuery" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceException">
        <soap:fault use="literal" name="EntitlementServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBooleanDecision">
      <soap:operation soapAction="urn:getBooleanDecision" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceException">
        <soap:fault use="literal" name="EntitlementServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllEntitlements">
      <soap:operation soapAction="urn:getAllEntitlements" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementServiceSoap12Binding" type="tns:EntitlementServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getDecision">
      <soap12:operation soapAction="urn:getDecision" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitledAttributes">
      <soap12:operation soapAction="urn:getEntitledAttributes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDecisionByAttributes">
      <soap12:operation soapAction="urn:getDecisionByAttributes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <soap12:operation soapAction="urn:XACMLAuthzDecisionQuery" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceException">
        <soap12:fault use="literal" name="EntitlementServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBooleanDecision">
      <soap12:operation soapAction="urn:getBooleanDecision" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceException">
        <soap12:fault use="literal" name="EntitlementServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllEntitlements">
      <soap12:operation soapAction="urn:getAllEntitlements" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="EntitlementServiceEntitlementException">
        <soap12:fault use="literal" name="EntitlementServiceEntitlementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EntitlementServiceHttpBinding" type="tns:EntitlementServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getDecision">
      <http:operation location="getDecision"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEntitledAttributes">
      <http:operation location="getEntitledAttributes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDecisionByAttributes">
      <http:operation location="getDecisionByAttributes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <http:operation location="XACMLAuthzDecisionQuery"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBooleanDecision">
      <http:operation location="getBooleanDecision"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllEntitlements">
      <http:operation location="getAllEntitlements"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EntitlementService">
    <wsdl:port name="EntitlementServiceHttpsSoap11Endpoint" binding="tns:EntitlementServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementServiceHttpsSoap12Endpoint" binding="tns:EntitlementServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EntitlementServiceHttpsEndpoint" binding="tns:EntitlementServiceHttpBinding">
      <http:address location="https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/EntitlementService.EntitlementServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="023b5d4f-a66f-4d96-a537-c5cd34b14785" isOneWay="false" action="urn:getAllEntitlements" name="getAllEntitlements" bindingOperationName="getAllEntitlements" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="03268f7b-bec1-4cde-8a84-09eaabb5f8a9" isOneWay="false" action="urn:getBooleanDecision" name="getBooleanDecision" bindingOperationName="getBooleanDecision" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="beb32e3d-67dd-4bca-b441-0fe6646ec413" isOneWay="false" action="urn:getDecision" name="getDecision" bindingOperationName="getDecision" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52cc9b80-f80e-4c57-9372-7b3f89b8f7b4" isOneWay="false" action="urn:getDecisionByAttributes" name="getDecisionByAttributes" bindingOperationName="getDecisionByAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58b2f1a8-cc0d-49c3-a1ee-95f3943c26f8" isOneWay="false" action="urn:getEntitledAttributes" name="getEntitledAttributes" bindingOperationName="getEntitledAttributes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="81fcee97-a70d-4813-91f0-d52bdadf1234" isOneWay="false" action="urn:XACMLAuthzDecisionQuery" name="XACMLAuthzDecisionQuery" bindingOperationName="XACMLAuthzDecisionQuery" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7132f77a-fade-4fc2-85ee-1a6aaaff7353" wsaVersion="NONE" name="EventBrokerServiceSoap11Binding" type="wsdl" bindingName="{http://ws.apache.org/axis2}EventBrokerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EventBrokerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="5e14a83f-66bf-4038-9b38-52470db689c3" isOneWay="false" action="" name="getStatus" bindingOperationName="getStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b62da86-2ddf-4bdd-b166-73059d65e614" isOneWay="false" action="" name="getSubscriptions" bindingOperationName="getSubscriptions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a2b2a692-e5db-4e39-bd68-7ba4e303dec1" isOneWay="false" action="" name="installEventSink" bindingOperationName="installEventSink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="59e40ec6-2103-4639-84a2-34d74040269c" isOneWay="false" action="urn:publish" name="publish" bindingOperationName="publish" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e544ff8-8357-4d34-8a77-d961045b50a6" isOneWay="false" action="" name="renew" bindingOperationName="renew" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dd4a6395-abc3-4a01-aab0-fd943e9b7e33" isOneWay="false" action="" name="subscribe" bindingOperationName="subscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="de55b18b-87cc-43c0-b830-1a68788efbd1" isOneWay="false" action="" name="subscriptionEnd" bindingOperationName="subscriptionEnd" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d10d434f-064f-470f-b89d-0afef701c667" isOneWay="false" action="" name="unsubscribe" bindingOperationName="unsubscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="463ae6c3-2cbf-47e2-b2c6-0be8b39fc8ed" wsaVersion="NONE" name="EventBrokerServiceSoap12Binding" type="wsdl" bindingName="{http://ws.apache.org/axis2}EventBrokerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EventBrokerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EventBrokerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/EventBrokerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://ws.apache.org/axis2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.apache.org/axis2" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>EventBrokerService</wsdl:documentation>
  <wsdl:types/>
  <wsdl:message name="subscriptionEndRequest"/>
  <wsdl:message name="subscriptionEndResponse"/>
  <wsdl:message name="getSubscriptionsRequest"/>
  <wsdl:message name="getSubscriptionsResponse"/>
  <wsdl:message name="subscribeRequest"/>
  <wsdl:message name="subscribeResponse"/>
  <wsdl:message name="unsubscribeRequest"/>
  <wsdl:message name="unsubscribeResponse"/>
  <wsdl:message name="installEventSinkRequest"/>
  <wsdl:message name="installEventSinkResponse"/>
  <wsdl:message name="publishRequest"/>
  <wsdl:message name="publishResponse"/>
  <wsdl:message name="renewRequest"/>
  <wsdl:message name="renewResponse"/>
  <wsdl:message name="getStatusRequest"/>
  <wsdl:message name="getStatusResponse"/>
  <wsdl:portType name="EventBrokerServicePortType">
    <wsdl:operation name="subscriptionEnd">
      <wsdl:input message="tns:subscriptionEndRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/SubscriptionEnd"/>
      <wsdl:output message="tns:subscriptionEndResponse" wsaw:Action="urn:subscriptionEndResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSubscriptions">
      <wsdl:input message="tns:getSubscriptionsRequest" wsaw:Action="http://ws.apache.org/ws/2007/05/eventing-extended/getSubscriptions"/>
      <wsdl:output message="tns:getSubscriptionsResponse" wsaw:Action="http://ws.apache.org/ws/2007/05/eventing-extended/getSubscriptionsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="subscribe">
      <wsdl:input message="tns:subscribeRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/Subscribe"/>
      <wsdl:output message="tns:subscribeResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/SubscribeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="unsubscribe">
      <wsdl:input message="tns:unsubscribeRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/Unsubscribe"/>
      <wsdl:output message="tns:unsubscribeResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/UnsubscribeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="installEventSink">
      <wsdl:input message="tns:installEventSinkRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/installEventSink"/>
      <wsdl:output message="tns:installEventSinkResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/installEventSinkResponse"/>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <wsdl:input message="tns:publishRequest" wsaw:Action="urn:publish"/>
      <wsdl:output message="tns:publishResponse" wsaw:Action="urn:publishResponse"/>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <wsdl:input message="tns:renewRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/Renew"/>
      <wsdl:output message="tns:renewResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/RenewResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:input message="tns:getStatusRequest" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/GetStatus"/>
      <wsdl:output message="tns:getStatusResponse" wsaw:Action="http://schemas.xmlsoap.org/ws/2004/08/eventing/GetStatusResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EventBrokerServiceSoap11Binding" type="tns:EventBrokerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="subscriptionEnd">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriptions">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="subscribe">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unsubscribe">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="installEventSink">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <soap:operation soapAction="urn:publish" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EventBrokerServiceSoap12Binding" type="tns:EventBrokerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="subscriptionEnd">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriptions">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="subscribe">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unsubscribe">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="installEventSink">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <soap12:operation soapAction="urn:publish" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EventBrokerServiceHttpBinding" type="tns:EventBrokerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="subscriptionEnd">
      <http:operation location="subscriptionEnd"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubscriptions">
      <http:operation location="getSubscriptions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="subscribe">
      <http:operation location="subscribe"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unsubscribe">
      <http:operation location="unsubscribe"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="installEventSink">
      <http:operation location="installEventSink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="publish">
      <http:operation location="publish"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renew">
      <http:operation location="renew"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <http:operation location="getStatus"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EventBrokerService">
    <wsdl:port name="EventBrokerServiceHttpsSoap11Endpoint" binding="tns:EventBrokerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EventBrokerServiceHttpsSoap12Endpoint" binding="tns:EventBrokerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="EventBrokerServiceHttpsEndpoint" binding="tns:EventBrokerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/EventBrokerService.EventBrokerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="63a6a1f5-7ed3-47c2-8780-3d3481bd52b2" isOneWay="false" action="" name="getStatus" bindingOperationName="getStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e5313277-c102-4696-a7c6-a5730f1d0de5" isOneWay="false" action="" name="getSubscriptions" bindingOperationName="getSubscriptions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c79444b9-2d49-4cdf-ae9a-ee3bf21358e9" isOneWay="false" action="" name="installEventSink" bindingOperationName="installEventSink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5eda01da-50d4-4756-ba7d-c41333d4e218" isOneWay="false" action="urn:publish" name="publish" bindingOperationName="publish" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7378158d-723e-4971-9146-6315b8744be3" isOneWay="false" action="" name="renew" bindingOperationName="renew" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="393119d6-2481-4849-9cc9-6044d72e2979" isOneWay="false" action="" name="subscribe" bindingOperationName="subscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0889da46-dc0e-48d3-a016-5140212936fc" isOneWay="false" action="" name="subscriptionEnd" bindingOperationName="subscriptionEnd" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bd4e2021-f371-4c12-a67a-5e017cb7fc20" isOneWay="false" action="" name="unsubscribe" bindingOperationName="unsubscribe" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="152731db-36c4-4bd6-9ea5-d53d4ecbc118" wsaVersion="NONE" name="FIDOServiceSoap11Binding" type="wsdl" bindingName="{http://service.fido.authenticator.application.identity.carbon.wso2.org}FIDOServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FIDOService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/FIDOService.FIDOServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c024b93c-bf38-44df-b2ee-7a7d28de2130" isOneWay="false" action="urn:finishRegistration" name="finishRegistration" bindingOperationName="finishRegistration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="adceea91-abb4-4274-9927-1de845e70d7c" isOneWay="false" action="urn:getDeviceMetadataList" name="getDeviceMetadataList" bindingOperationName="getDeviceMetadataList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e6eace7f-8d0e-4d20-95cf-901086d55d03" isOneWay="false" action="urn:isDeviceRegistered" name="isDeviceRegistered" bindingOperationName="isDeviceRegistered" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="09979bd1-0765-46c0-92df-14277e9b837d" isOneWay="false" action="urn:removeAllRegistrations" name="removeAllRegistrations" bindingOperationName="removeAllRegistrations" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="35adc9e3-252f-403e-a47c-c1caff4fd454" isOneWay="false" action="urn:removeRegistration" name="removeRegistration" bindingOperationName="removeRegistration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2aac749d-e633-4462-999b-fff28a372a30" isOneWay="false" action="urn:startRegistration" name="startRegistration" bindingOperationName="startRegistration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="455a30e3-14fc-4d54-bb8e-a1d1536e7a74" wsaVersion="NONE" name="FIDOServiceSoap12Binding" type="wsdl" bindingName="{http://service.fido.authenticator.application.identity.carbon.wso2.org}FIDOServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FIDOService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FIDOService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FIDOService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.fido.authenticator.application.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2126="http://exception.fido.authenticator.application.identity.carbon.wso2.org/xsd" xmlns:ax2127="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://service.fido.authenticator.application.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>FIDOService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.fido.authenticator.application.identity.carbon.wso2.org" xmlns:ax2129="http://exception.fido.authenticator.application.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.fido.authenticator.application.identity.carbon.wso2.org/xsd"/>
      <xs:element name="FIDOServiceFIDOAuthenticatorClientException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="FIDOAuthenticatorClientException" nillable="true" type="ax2126:FIDOAuthenticatorClientException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startRegistration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startRegistrationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="finishRegistration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="response" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isDeviceRegistered">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isDeviceRegisteredResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllRegistrations">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeRegistration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="deviceRemarks" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeviceMetadataList">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeviceMetadataListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.fido.authenticator.application.identity.carbon.wso2.org/xsd" xmlns:ax2128="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="FIDOAuthenticatorException">
        <xs:complexContent>
          <xs:extension base="ax2127:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="FIDOAuthenticatorClientException">
        <xs:complexContent>
          <xs:extension base="ax2126:FIDOAuthenticatorException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="isDeviceRegisteredRequest">
    <wsdl:part name="parameters" element="ns:isDeviceRegistered"/>
  </wsdl:message>
  <wsdl:message name="isDeviceRegisteredResponse">
    <wsdl:part name="parameters" element="ns:isDeviceRegisteredResponse"/>
  </wsdl:message>
  <wsdl:message name="FIDOServiceFIDOAuthenticatorClientException">
    <wsdl:part name="parameters" element="ns:FIDOServiceFIDOAuthenticatorClientException"/>
  </wsdl:message>
  <wsdl:message name="getDeviceMetadataListRequest">
    <wsdl:part name="parameters" element="ns:getDeviceMetadataList"/>
  </wsdl:message>
  <wsdl:message name="getDeviceMetadataListResponse">
    <wsdl:part name="parameters" element="ns:getDeviceMetadataListResponse"/>
  </wsdl:message>
  <wsdl:message name="startRegistrationRequest">
    <wsdl:part name="parameters" element="ns:startRegistration"/>
  </wsdl:message>
  <wsdl:message name="startRegistrationResponse">
    <wsdl:part name="parameters" element="ns:startRegistrationResponse"/>
  </wsdl:message>
  <wsdl:message name="removeAllRegistrationsRequest">
    <wsdl:part name="parameters" element="ns:removeAllRegistrations"/>
  </wsdl:message>
  <wsdl:message name="removeRegistrationRequest">
    <wsdl:part name="parameters" element="ns:removeRegistration"/>
  </wsdl:message>
  <wsdl:message name="finishRegistrationRequest">
    <wsdl:part name="parameters" element="ns:finishRegistration"/>
  </wsdl:message>
  <wsdl:portType name="FIDOServicePortType">
    <wsdl:operation name="isDeviceRegistered">
      <wsdl:input message="ns:isDeviceRegisteredRequest" wsaw:Action="urn:isDeviceRegistered"/>
      <wsdl:output message="ns:isDeviceRegisteredResponse" wsaw:Action="urn:isDeviceRegisteredResponse"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:isDeviceRegisteredFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="getDeviceMetadataList">
      <wsdl:input message="ns:getDeviceMetadataListRequest" wsaw:Action="urn:getDeviceMetadataList"/>
      <wsdl:output message="ns:getDeviceMetadataListResponse" wsaw:Action="urn:getDeviceMetadataListResponse"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:getDeviceMetadataListFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="startRegistration">
      <wsdl:input message="ns:startRegistrationRequest" wsaw:Action="urn:startRegistration"/>
      <wsdl:output message="ns:startRegistrationResponse" wsaw:Action="urn:startRegistrationResponse"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:startRegistrationFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="removeAllRegistrations">
      <wsdl:input message="ns:removeAllRegistrationsRequest" wsaw:Action="urn:removeAllRegistrations"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:removeAllRegistrationsFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="removeRegistration">
      <wsdl:input message="ns:removeRegistrationRequest" wsaw:Action="urn:removeRegistration"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:removeRegistrationFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
    <wsdl:operation name="finishRegistration">
      <wsdl:input message="ns:finishRegistrationRequest" wsaw:Action="urn:finishRegistration"/>
      <wsdl:fault message="ns:FIDOServiceFIDOAuthenticatorClientException" name="FIDOServiceFIDOAuthenticatorClientException" wsaw:Action="urn:finishRegistrationFIDOServiceFIDOAuthenticatorClientException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="FIDOServiceSoap11Binding" type="ns:FIDOServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isDeviceRegistered">
      <soap:operation soapAction="urn:isDeviceRegistered" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeviceMetadataList">
      <soap:operation soapAction="urn:getDeviceMetadataList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startRegistration">
      <soap:operation soapAction="urn:startRegistration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAllRegistrations">
      <soap:operation soapAction="urn:removeAllRegistrations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRegistration">
      <soap:operation soapAction="urn:removeRegistration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="finishRegistration">
      <soap:operation soapAction="urn:finishRegistration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FIDOServiceSoap12Binding" type="ns:FIDOServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isDeviceRegistered">
      <soap12:operation soapAction="urn:isDeviceRegistered" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeviceMetadataList">
      <soap12:operation soapAction="urn:getDeviceMetadataList" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startRegistration">
      <soap12:operation soapAction="urn:startRegistration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAllRegistrations">
      <soap12:operation soapAction="urn:removeAllRegistrations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRegistration">
      <soap12:operation soapAction="urn:removeRegistration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="finishRegistration">
      <soap12:operation soapAction="urn:finishRegistration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="FIDOServiceFIDOAuthenticatorClientException">
        <soap12:fault use="literal" name="FIDOServiceFIDOAuthenticatorClientException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FIDOServiceHttpBinding" type="ns:FIDOServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="isDeviceRegistered">
      <http:operation location="isDeviceRegistered"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDeviceMetadataList">
      <http:operation location="getDeviceMetadataList"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startRegistration">
      <http:operation location="startRegistration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllRegistrations">
      <http:operation location="removeAllRegistrations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeRegistration">
      <http:operation location="removeRegistration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="finishRegistration">
      <http:operation location="finishRegistration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="FIDOService">
    <wsdl:port name="FIDOServiceHttpsSoap11Endpoint" binding="ns:FIDOServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/FIDOService.FIDOServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FIDOServiceHttpsSoap12Endpoint" binding="ns:FIDOServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/FIDOService.FIDOServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FIDOServiceHttpsEndpoint" binding="ns:FIDOServiceHttpBinding">
      <http:address location="https://localhost:9443/services/FIDOService.FIDOServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/FIDOService.FIDOServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="4bd4175d-4908-4ad8-8db2-560ca819603c" isOneWay="false" action="urn:finishRegistration" name="finishRegistration" bindingOperationName="finishRegistration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="99f04a64-ee86-42e1-9a57-d10189786c08" isOneWay="false" action="urn:getDeviceMetadataList" name="getDeviceMetadataList" bindingOperationName="getDeviceMetadataList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8173f23b-8e16-4512-9d8e-4a5d99ea216e" isOneWay="false" action="urn:isDeviceRegistered" name="isDeviceRegistered" bindingOperationName="isDeviceRegistered" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e21c4ba8-b687-4000-a58e-9270ffb36c19" isOneWay="false" action="urn:removeAllRegistrations" name="removeAllRegistrations" bindingOperationName="removeAllRegistrations" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a8d28927-1184-4c70-bf8c-5f79ff1ddeee" isOneWay="false" action="urn:removeRegistration" name="removeRegistration" bindingOperationName="removeRegistration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7d43e8d3-a25e-41a7-8b58-99b529509c2c" isOneWay="false" action="urn:startRegistration" name="startRegistration" bindingOperationName="startRegistration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a046e0a1-0a40-4cf9-abde-684629440802" wsaVersion="NONE" name="FileDownloadServiceSoap11Binding" type="wsdl" bindingName="{http://filedownload.services.core.carbon.wso2.org}FileDownloadServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FileDownloadService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="2997b419-5853-4fd9-bd3e-77c407e41b89" isOneWay="false" action="urn:downloadFile" name="downloadFile" bindingOperationName="downloadFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="82b5d1d2-454d-48fc-8ec4-b53d529cd3fc" wsaVersion="NONE" name="FileDownloadServiceSoap12Binding" type="wsdl" bindingName="{http://filedownload.services.core.carbon.wso2.org}FileDownloadServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FileDownloadService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FileDownloadService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FileDownloadService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://filedownload.services.core.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://filedownload.services.core.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>FileDownloadService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://filedownload.services.core.carbon.wso2.org">
      <xs:element name="downloadFile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadFileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="downloadFileRequest">
    <wsdl:part name="parameters" element="ns:downloadFile"/>
  </wsdl:message>
  <wsdl:message name="downloadFileResponse">
    <wsdl:part name="parameters" element="ns:downloadFileResponse"/>
  </wsdl:message>
  <wsdl:portType name="FileDownloadServicePortType">
    <wsdl:operation name="downloadFile">
      <wsdl:input message="ns:downloadFileRequest" wsaw:Action="urn:downloadFile"/>
      <wsdl:output message="ns:downloadFileResponse" wsaw:Action="urn:downloadFileResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="FileDownloadServiceSoap11Binding" type="ns:FileDownloadServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="downloadFile">
      <soap:operation soapAction="urn:downloadFile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FileDownloadServiceSoap12Binding" type="ns:FileDownloadServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="downloadFile">
      <soap12:operation soapAction="urn:downloadFile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FileDownloadServiceHttpBinding" type="ns:FileDownloadServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="downloadFile">
      <http:operation location="downloadFile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="FileDownloadService">
    <wsdl:port name="FileDownloadServiceHttpsSoap11Endpoint" binding="ns:FileDownloadServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FileDownloadServiceHttpsSoap12Endpoint" binding="ns:FileDownloadServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FileDownloadServiceHttpsEndpoint" binding="ns:FileDownloadServiceHttpBinding">
      <http:address location="https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/FileDownloadService.FileDownloadServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="7288f2b3-8b7c-4f76-b137-7792a63afa2d" isOneWay="false" action="urn:downloadFile" name="downloadFile" bindingOperationName="downloadFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c853fd35-bacb-4cd5-a9f2-04a9549bbd1e" wsaVersion="NONE" name="FileUploadServiceSoap12Binding" type="wsdl" bindingName="{http://fileupload.services.core.carbon.wso2.org}FileUploadServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FileUploadService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="071594cf-0104-46ad-82ff-af82b72cf0c2" isOneWay="false" action="urn:uploadFiles" name="uploadFiles" bindingOperationName="uploadFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d75b2163-ac39-4aa1-b9d5-85c57fe06069" wsaVersion="NONE" name="FileUploadServiceSoap11Binding" type="wsdl" bindingName="{http://fileupload.services.core.carbon.wso2.org}FileUploadServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FileUploadService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FileUploadService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/FileUploadService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fileupload.services.core.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax215="http://common.core.carbon.wso2.org/xsd" xmlns:ns="http://fileupload.services.core.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>FileUploadService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.core.carbon.wso2.org/xsd">
      <xs:complexType name="UploadedFileItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://fileupload.services.core.carbon.wso2.org" xmlns:ax216="http://common.core.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.core.carbon.wso2.org/xsd"/>
      <xs:element name="FileUploadServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="FileUploadServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="uploadFiles">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="uploadedFileItems" nillable="true" type="ax215:UploadedFileItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadFilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadFilesRequest">
    <wsdl:part name="parameters" element="ns:uploadFiles"/>
  </wsdl:message>
  <wsdl:message name="uploadFilesResponse">
    <wsdl:part name="parameters" element="ns:uploadFilesResponse"/>
  </wsdl:message>
  <wsdl:message name="FileUploadServiceException">
    <wsdl:part name="parameters" element="ns:FileUploadServiceException"/>
  </wsdl:message>
  <wsdl:portType name="FileUploadServicePortType">
    <wsdl:operation name="uploadFiles">
      <wsdl:input message="ns:uploadFilesRequest" wsaw:Action="urn:uploadFiles"/>
      <wsdl:output message="ns:uploadFilesResponse" wsaw:Action="urn:uploadFilesResponse"/>
      <wsdl:fault message="ns:FileUploadServiceException" name="FileUploadServiceException" wsaw:Action="urn:uploadFilesFileUploadServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="FileUploadServiceSoap11Binding" type="ns:FileUploadServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadFiles">
      <soap:operation soapAction="urn:uploadFiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FileUploadServiceException">
        <soap:fault use="literal" name="FileUploadServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FileUploadServiceSoap12Binding" type="ns:FileUploadServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadFiles">
      <soap12:operation soapAction="urn:uploadFiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FileUploadServiceException">
        <soap12:fault use="literal" name="FileUploadServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="FileUploadServiceHttpBinding" type="ns:FileUploadServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadFiles">
      <http:operation location="uploadFiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="FileUploadService">
    <wsdl:port name="FileUploadServiceHttpsSoap11Endpoint" binding="ns:FileUploadServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FileUploadServiceHttpsSoap12Endpoint" binding="ns:FileUploadServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="FileUploadServiceHttpsEndpoint" binding="ns:FileUploadServiceHttpBinding">
      <http:address location="https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/FileUploadService.FileUploadServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="8596e591-e1a6-4e60-9e0d-0ba9072faf9a" isOneWay="false" action="urn:uploadFiles" name="uploadFiles" bindingOperationName="uploadFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="417e4b3d-91df-4c55-8df1-142f0d9deea7" wsaVersion="NONE" name="humanTaskParticipantSOAPBinding" type="wsdl" bindingName="{http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803}humanTaskParticipantSOAPBinding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskProtocolHandler.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskProtocolHandler.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskProtocolHandler.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:htp="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>Web Service Definition for WS-HumanTask 1.1 - Operations WS-HumanTask Protocol Participants</wsdl:documentation>
  <wsdl:types>
    <xsd:schema blockDefault="#all" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803">
      <xsd:complexType name="tProtocolMsgType">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="skipped" type="htp:tProtocolMsgType"/>
      <xsd:element name="fault" type="htp:tProtocolMsgType"/>
      <xsd:element name="exit" type="htp:tProtocolMsgType"/>
      <xsd:element name="responseAction" type="xsd:anyURI"/>
      <xsd:element name="responseOperation" type="xsd:NCName"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="fault">
    <wsdl:part name="parameters" element="fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="skipped">
    <wsdl:part name="parameters" element="skipped"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="exit">
    <wsdl:part name="parameters" element="exit"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="clientParticipantPortType">
    <wsdl:operation name="skippedOperation">
      <wsdl:input message="skipped"></wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="faultOperation">
      <wsdl:input message="fault"></wsdl:input>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="humanTaskParticipantPortType">
    <wsdl:operation name="exitOperation">
      <wsdl:input message="exit"></wsdl:input>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="humanTaskParticipantSOAPBinding" type="humanTaskParticipantPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="exitOperation">
      <soap:operation soapAction="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803/exit"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HumanTaskProtocolHandler">
    <wsdl:port name="humanTaskParticipantPortType" binding="humanTaskParticipantSOAPBinding">
      <soap:address location="https://localhost:9443/services/HumanTaskProtocolHandler/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/HumanTaskProtocolHandler/</con:endpoint></con:endpoints><con:operation id="ee0d1950-2ef0-4598-ba4c-eaeb985f9577" isOneWay="false" action="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/protocol/200803/exit" name="exitOperation" bindingOperationName="exitOperation" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6d3e169a-1308-4067-9f71-e45f2bfb41a4" wsaVersion="NONE" name="renderingOperationsSOAP" type="wsdl" bindingName="{http://wso2.org/ht/schema/renderings/}renderingOperationsSOAP" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskRenderingAPI.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskRenderingAPI.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskRenderingAPI.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ws-humantask-rendering-api" targetNamespace="http://wso2.org/ht/schema/renderings/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://wso2.org/ht/schema/renderings/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://wso2.org/ht/schema/renderings/">
      <xsd:element name="getRenderings">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="taskIdentifier" type="xsd:anyURI"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRenderingsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="input" type="tns:inputType"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="output" type="tns:outputType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="inputType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="element" type="tns:inputElementType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="outputType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="element" type="tns:outputElementType"></xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="inputElementType">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="label" type="xsd:string"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="value" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="outputElementType">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="1" name="label" type="xsd:string"></xsd:element>
          <xsd:element maxOccurs="1" minOccurs="0" name="xpath" type="xsd:string"></xsd:element>
          <xsd:element maxOccurs="1" minOccurs="1" name="value" type="tns:valueType"></xsd:element>
          <xsd:element maxOccurs="1" minOccurs="0" name="default" type="xsd:string"></xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string"/>
      </xsd:complexType>
      <xsd:complexType name="valueType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attribute name="type" type="tns:value_tType"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="value_tType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="string"/>
          <xsd:enumeration value="int"/>
          <xsd:enumeration value="double"/>
          <xsd:enumeration value="float"/>
          <xsd:enumeration value="boolean"/>
          <xsd:enumeration value="list"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="setTaskOutput">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="taskIdentifier" type="xsd:anyURI"></xsd:element>
            <xsd:element maxOccurs="1" minOccurs="1" name="values" type="tns:setOutputValuesType"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setTaskOutputResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="success" type="xsd:boolean"></xsd:element>
            <xsd:element maxOccurs="1" minOccurs="0" name="fault" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="setOutputValuesType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="value" type="tns:setOutputvalueType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="setOutputvalueType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attribute name="id" type="xsd:string"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:element name="getRenderingsFault">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="getRenderingsFault" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setTaskOutputFault">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="setTaskOutputFault" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="completeTask">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="taskIdentifier" type="xsd:anyURI"/>
            <xsd:element name="values" type="tns:setOutputValuesType"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="completeTaskResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="success" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="completeTaskFault">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="completeTaskFault" type="xsd:string"></xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="completeTaskResponse">
    <wsdl:part name="parameters" element="tns:completeTaskResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRenderingsFault">
    <wsdl:part name="parameters" element="tns:getRenderingsFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="completeTaskRequest">
    <wsdl:part name="parameters" element="tns:completeTask"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTaskOutputRequest">
    <wsdl:part name="parameters" element="tns:setTaskOutput"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRenderingsRequest">
    <wsdl:part name="parameters" element="tns:getRenderings"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTaskOutputFault">
    <wsdl:part name="parameters" element="tns:setTaskOutputFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRenderingsResponse">
    <wsdl:part name="parameters" element="tns:getRenderingsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTaskOutputResponse">
    <wsdl:part name="parameters" element="tns:setTaskOutputResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="completeTaskFault">
    <wsdl:part name="parameters" element="tns:completeTaskFault"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="renderingOperations">
    <wsdl:operation name="getRenderings">
      <wsdl:input message="tns:getRenderingsRequest"></wsdl:input>
      <wsdl:output message="tns:getRenderingsResponse"></wsdl:output>
      <wsdl:fault name="getRenderingsFault" message="tns:getRenderingsFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTaskOutput">
      <wsdl:input message="tns:setTaskOutputRequest"></wsdl:input>
      <wsdl:output message="tns:setTaskOutputResponse"></wsdl:output>
      <wsdl:fault name="setTaskOutputFault" message="tns:setTaskOutputFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="completeTask">
      <wsdl:input message="tns:completeTaskRequest"></wsdl:input>
      <wsdl:output message="tns:completeTaskResponse"></wsdl:output>
      <wsdl:fault name="completeTaskFault" message="tns:completeTaskFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="renderingOperationsSOAP" type="tns:renderingOperations">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getRenderings">
      <soap:operation soapAction="http://wso2.org/ht/schema/renderings/getRenderings"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="getRenderingsFault">
        <soap:fault name="getRenderingsFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTaskOutput">
      <soap:operation soapAction="http://wso2.org/ht/schema/renderings/setTaskOutput"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="setTaskOutputFault">
        <soap:fault name="setTaskOutputFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="completeTask">
      <soap:operation soapAction="http://wso2.org/ht/schema/renderings/completeTask"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="completeTaskFault">
        <soap:fault name="completeTaskFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HumanTaskRenderingAPI">
    <wsdl:port name="renderingOperationsSOAP" binding="tns:renderingOperationsSOAP">
      <soap:address location="https://localhost:9443/services/HumanTaskRenderingAPI/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/HumanTaskRenderingAPI/</con:endpoint></con:endpoints><con:operation id="b4ee6ef0-9752-4cf7-ba45-b83a3f0df9ca" isOneWay="false" action="http://wso2.org/ht/schema/renderings/completeTask" name="completeTask" bindingOperationName="completeTask" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a85f7451-34a0-4ecd-b8e5-f1d79742d2e5" isOneWay="false" action="http://wso2.org/ht/schema/renderings/getRenderings" name="getRenderings" bindingOperationName="getRenderings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="30cf77a9-b4cd-4b3e-934b-6b1b8ed36031" isOneWay="false" action="http://wso2.org/ht/schema/renderings/setTaskOutput" name="setTaskOutput" bindingOperationName="setTaskOutput" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="49a4fd34-b420-4c76-a304-73ea74428959" wsaVersion="NONE" name="HumanTaskUploaderSoap12Binding" type="wsdl" bindingName="{http://services.deployer.humantask.carbon.wso2.org}HumanTaskUploaderSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="11b1797d-5284-4c96-83af-44b58fd37bf0" isOneWay="false" action="urn:close" name="close" bindingOperationName="close" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8ba39c4f-2439-460f-aeb5-889eb2707697" isOneWay="false" action="urn:uploadHumanTask" name="uploadHumanTask" bindingOperationName="uploadHumanTask" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ae3a2c59-b0da-4783-a8df-34545c14b973" wsaVersion="NONE" name="HumanTaskUploaderSoap11Binding" type="wsdl" bindingName="{http://services.deployer.humantask.carbon.wso2.org}HumanTaskUploaderSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskUploader.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskUploader.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/HumanTaskUploader.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.deployer.humantask.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2124="http://common.core.carbon.wso2.org/xsd" xmlns:ns="http://services.deployer.humantask.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2122="http://io.java/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>HumanTaskUploader</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.deployer.humantask.carbon.wso2.org" xmlns:ax2125="http://common.core.carbon.wso2.org/xsd" xmlns:ax2123="http://io.java/xsd">
      <xs:import namespace="http://io.java/xsd"/>
      <xs:import namespace="http://common.core.carbon.wso2.org/xsd"/>
      <xs:element name="close">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="c" nillable="true" type="ax2122:Closeable"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadHumanTask">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="fileItems" nillable="true" type="ax2124:UploadedFileItem"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.core.carbon.wso2.org/xsd">
      <xs:complexType name="UploadedFileItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://io.java/xsd">
      <xs:complexType abstract="true" name="Closeable">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadHumanTaskRequest">
    <wsdl:part name="parameters" element="ns:uploadHumanTask"/>
  </wsdl:message>
  <wsdl:message name="uploadHumanTaskResponse"/>
  <wsdl:message name="closeRequest">
    <wsdl:part name="parameters" element="ns:close"/>
  </wsdl:message>
  <wsdl:portType name="HumanTaskUploaderPortType">
    <wsdl:operation name="uploadHumanTask">
      <wsdl:input message="ns:uploadHumanTaskRequest" wsaw:Action="urn:uploadHumanTask"/>
      <wsdl:output message="ns:uploadHumanTaskResponse" wsaw:Action="urn:uploadHumanTaskResponse"/>
    </wsdl:operation>
    <wsdl:operation name="close">
      <wsdl:input message="ns:closeRequest" wsaw:Action="urn:close"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HumanTaskUploaderSoap11Binding" type="ns:HumanTaskUploaderPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadHumanTask">
      <soap:operation soapAction="urn:uploadHumanTask" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <soap:operation soapAction="urn:close" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="HumanTaskUploaderSoap12Binding" type="ns:HumanTaskUploaderPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadHumanTask">
      <soap12:operation soapAction="urn:uploadHumanTask" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <soap12:operation soapAction="urn:close" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="HumanTaskUploaderHttpBinding" type="ns:HumanTaskUploaderPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadHumanTask">
      <http:operation location="uploadHumanTask"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="close">
      <http:operation location="close"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HumanTaskUploader">
    <wsdl:port name="HumanTaskUploaderHttpsSoap11Endpoint" binding="ns:HumanTaskUploaderSoap11Binding">
      <soap:address location="https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="HumanTaskUploaderHttpsSoap12Endpoint" binding="ns:HumanTaskUploaderSoap12Binding">
      <soap12:address location="https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="HumanTaskUploaderHttpsEndpoint" binding="ns:HumanTaskUploaderHttpBinding">
      <http:address location="https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/HumanTaskUploader.HumanTaskUploaderHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="2cdfecf6-458e-4364-a213-6527abec6029" isOneWay="false" action="urn:close" name="close" bindingOperationName="close" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fd29c1f2-b271-4565-bbd7-f4e8ee2f7a1d" isOneWay="false" action="urn:uploadHumanTask" name="uploadHumanTask" bindingOperationName="uploadHumanTask" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="77b8f923-4cb4-4a35-b6d5-df067739de51" wsaVersion="NONE" name="IWAAuthenticatorSoap12Binding" type="wsdl" bindingName="{http://iwa.authenticator.identity.carbon.wso2.org}IWAAuthenticatorSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IWAAuthenticator.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="e0984052-c5bc-4c7f-9173-8d1fd1cdf92a" isOneWay="false" action="urn:canHandle" name="canHandle" bindingOperationName="canHandle" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b26c3327-192c-43f6-b6a1-f91a66dd1c5b" isOneWay="false" action="urn:login" name="login" bindingOperationName="login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="881d7adf-d481-443d-9ccb-92ac5c2ac535" wsaVersion="NONE" name="IWAAuthenticatorSoap11Binding" type="wsdl" bindingName="{http://iwa.authenticator.identity.carbon.wso2.org}IWAAuthenticatorSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IWAAuthenticator.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IWAAuthenticator.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IWAAuthenticator.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://iwa.authenticator.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2168="http://securevault.wso2.org/xsd" xmlns:ax2146="http://engine.axis2.apache.org/xsd" xmlns:ax2202="http://client.axis2.apache.org/xsd" xmlns:ax2147="http://clustering.axis2.apache.org/xsd" xmlns:ax2204="http://transport.axis2.apache.org/xsd" xmlns:ns="http://iwa.authenticator.identity.carbon.wso2.org" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2184="http://schema.commons.ws.apache.org/xsd" xmlns:ax2140="http://util.java/xsd" xmlns:ax2163="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2142="http://lifecycle.attachments.axiom.apache.org/xsd" xmlns:ax2186="http://dom.w3c.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2188="http://constants.schema.commons.ws.apache.org/xsd" xmlns:ax2166="http://net.java/xsd" xmlns:ax2145="http://description.axis2.apache.org/xsd" xmlns:ax2181="http://neethi.apache.org/xsd" xmlns:ax2157="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2136="http://context.axis2.apache.org/xsd" xmlns:ax2137="http://attachments.axiom.apache.org/xsd" xmlns:ax2138="http://io.java/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2193="http://soap.axiom.apache.org/xsd" xmlns:ax2172="http://transaction.axis2.apache.org/xsd" xmlns:ax2150="http://threadpool.util.axis2.apache.org/xsd" xmlns:ax2194="http://om.axiom.apache.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2154="http://management.clustering.axis2.apache.org/xsd" xmlns:ax2199="http://addressing.axis2.apache.org/xsd" xmlns:ax2134="http://common.core.carbon.wso2.org/xsd" xmlns:ax2178="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:ax2170="http://util.axis2.apache.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsp:Policy wsu:Id="SigOnly" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsp:ExactlyOne>
      <wsp:All>
        <sp:AsymmetricBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <wsp:Policy>
            <sp:InitiatorToken>
              <wsp:Policy>
                <sp:X509Token sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient">
                  <wsp:Policy>
                    <sp:RequireThumbprintReference/>
                    <sp:WssX509V3Token10/>
                  </wsp:Policy>
                </sp:X509Token>
              </wsp:Policy>
            </sp:InitiatorToken>
            <sp:RecipientToken>
              <wsp:Policy>
                <sp:X509Token sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Never">
                  <wsp:Policy>
                    <sp:RequireThumbprintReference/>
                    <sp:WssX509V3Token10/>
                  </wsp:Policy>
                </sp:X509Token>
              </wsp:Policy>
            </sp:RecipientToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:Basic256/>
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict/>
              </wsp:Policy>
            </sp:Layout>
            <sp:IncludeTimestamp/>
            <sp:OnlySignEntireHeadersAndBody/>
          </wsp:Policy>
        </sp:AsymmetricBinding>
        <sp:Wss10 xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <sp:Policy>
            <sp:MustSupportRefKeyIdentifier/>
            <sp:MustSupportRefIssuerSerial/>
          </sp:Policy>
        </sp:Wss10>
        <sp:SignedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <sp:Body/>
        </sp:SignedParts>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="c756734ad2b2357eb94f6742d778a740ad7805d63c3df109" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsp:ExactlyOne>
      <wsp:All/>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsdl:documentation>IWAAuthenticator</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://transaction.axis2.apache.org/xsd">
      <xs:complexType name="TransactionConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="transactionManager" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="transactionTimeout" type="xs:int"/>
          <xs:element minOccurs="0" name="userTransaction" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://neethi.apache.org/xsd" xmlns:ax2182="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType abstract="true" name="AbstractPolicyOperator">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
          <xs:element minOccurs="0" name="firstPolicyComponent" nillable="true" type="ax2181:PolicyComponent"/>
          <xs:element minOccurs="0" name="policyComponents" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="PolicyComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="xs:short"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="All">
        <xs:complexContent>
          <xs:extension base="ax2181:AbstractPolicyOperator">
            <xs:sequence>
              <xs:element minOccurs="0" name="assertions" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="type" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Policy">
        <xs:complexContent>
          <xs:extension base="ax2181:All">
            <xs:sequence>
              <xs:element minOccurs="0" name="alternatives" nillable="true" type="ax2182:Iterator"/>
              <xs:element minOccurs="0" name="attributes" nillable="true" type="ax2182:Map"/>
              <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="type" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://constants.schema.commons.ws.apache.org/xsd">
      <xs:complexType abstract="true" name="Enum">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://threadpool.util.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="ThreadFactory">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schema.commons.ws.apache.org/xsd" xmlns:ax2185="http://util.java/xsd" xmlns:ax2187="http://dom.w3c.org/xsd" xmlns:ax2189="http://constants.schema.commons.ws.apache.org/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://dom.w3c.org/xsd"/>
      <xs:import namespace="http://constants.schema.commons.ws.apache.org/xsd"/>
      <xs:complexType abstract="true" name="XmlSchemaObject">
        <xs:sequence>
          <xs:element minOccurs="0" name="lineNumber" type="xs:int"/>
          <xs:element minOccurs="0" name="linePosition" type="xs:int"/>
          <xs:element minOccurs="0" name="metaInfoMap" nillable="true" type="ax2140:Map"/>
          <xs:element minOccurs="0" name="sourceURI" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="XmlSchemaAnnotated">
        <xs:complexContent>
          <xs:extension base="ax2184:XmlSchemaObject">
            <xs:sequence>
              <xs:element minOccurs="0" name="annotation" nillable="true" type="ax2184:XmlSchemaAnnotation"/>
              <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="unhandledAttributes" nillable="true" type="ax2186:Attr"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaAnnotation">
        <xs:complexContent>
          <xs:extension base="ax2184:XmlSchemaObject">
            <xs:sequence>
              <xs:element minOccurs="0" name="items" nillable="true" type="ax2184:XmlSchemaObjectCollection"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaObjectCollection">
        <xs:sequence>
          <xs:element minOccurs="0" name="count" type="xs:int"/>
          <xs:element minOccurs="0" name="iterator" nillable="true" type="ax2140:Iterator"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="XmlSchemaParticle">
        <xs:complexContent>
          <xs:extension base="ax2184:XmlSchemaAnnotated">
            <xs:sequence>
              <xs:element minOccurs="0" name="maxOccurs" type="xs:long"/>
              <xs:element minOccurs="0" name="minOccurs" type="xs:long"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaElement">
        <xs:complexContent>
          <xs:extension base="ax2184:XmlSchemaParticle">
            <xs:sequence>
              <xs:element minOccurs="0" name="QName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="abstract" type="xs:boolean"/>
              <xs:element minOccurs="0" name="block" nillable="true" type="ax2184:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="blockResolved" nillable="true" type="ax2184:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="constraints" nillable="true" type="ax2184:XmlSchemaObjectCollection"/>
              <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="elementType" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="final" nillable="true" type="ax2184:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="fixedValue" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="form" nillable="true" type="ax2184:XmlSchemaForm"/>
              <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="nillable" type="xs:boolean"/>
              <xs:element minOccurs="0" name="refName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="schemaType" nillable="true" type="ax2184:XmlSchemaType"/>
              <xs:element minOccurs="0" name="schemaTypeName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="substitutionGroup" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="type" nillable="true" type="ax2184:XmlSchemaType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaDerivationMethod">
        <xs:complexContent>
          <xs:extension base="ax2188:Enum">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="values" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaForm">
        <xs:complexContent>
          <xs:extension base="ax2188:Enum">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="values" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="XmlSchemaType">
        <xs:complexContent>
          <xs:extension base="ax2184:XmlSchemaAnnotated">
            <xs:sequence>
              <xs:element minOccurs="0" name="QName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="baseSchemaType" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="baseSchemaTypeName" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="dataType" nillable="true" type="ax2184:XmlSchemaDatatype"/>
              <xs:element minOccurs="0" name="deriveBy" nillable="true" type="ax2184:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="final" nillable="true" type="ax2184:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="finalResolved" nillable="true" type="ax2184:XmlSchemaDerivationMethod"/>
              <xs:element minOccurs="0" name="mixed" type="xs:boolean"/>
              <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="XmlSchemaDatatype">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="TargetResolver">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://lifecycle.attachments.axiom.apache.org/xsd">
      <xs:complexType abstract="true" name="LifecycleManager">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://soap.axiom.apache.org/xsd" xmlns:ax2195="http://om.axiom.apache.org/xsd" xmlns:ax2196="http://util.java/xsd">
      <xs:import namespace="http://om.axiom.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType abstract="true" name="SOAPEnvelope">
        <xs:sequence>
          <xs:element minOccurs="0" name="SOAPBodyFirstElementLocalName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SOAPBodyFirstElementNS" nillable="true" type="ax2194:OMNamespace"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="ax2193:SOAPBody"/>
          <xs:element minOccurs="0" name="header" nillable="true" type="ax2193:SOAPHeader"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="ax2193:SOAPVersion"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPBody">
        <xs:sequence>
          <xs:element minOccurs="0" name="fault" nillable="true" type="ax2193:SOAPFault"/>
          <xs:element minOccurs="0" name="firstElementLocalName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="firstElementNS" nillable="true" type="ax2194:OMNamespace"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFault">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="ax2193:SOAPFaultCode"/>
          <xs:element minOccurs="0" name="detail" nillable="true" type="ax2193:SOAPFaultDetail"/>
          <xs:element minOccurs="0" name="exception" nillable="true"/>
          <xs:element minOccurs="0" name="node" nillable="true" type="ax2193:SOAPFaultNode"/>
          <xs:element minOccurs="0" name="reason" nillable="true" type="ax2193:SOAPFaultReason"/>
          <xs:element minOccurs="0" name="role" nillable="true" type="ax2193:SOAPFaultRole"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultCode">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultDetail">
        <xs:sequence>
          <xs:element minOccurs="0" name="allDetailEntries" nillable="true" type="ax2140:Iterator"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="nodeValue" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultReason">
        <xs:sequence>
          <xs:element minOccurs="0" name="allSoapTexts" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="firstSOAPText" nillable="true" type="ax2193:SOAPFaultText"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultText">
        <xs:sequence>
          <xs:element minOccurs="0" name="lang" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPFaultRole">
        <xs:sequence>
          <xs:element minOccurs="0" name="roleValue" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPHeader">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="SOAPVersion">
        <xs:sequence>
          <xs:element minOccurs="0" name="encodingURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="envelopeURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultCodeQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="faultDetailQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="faultReasonQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="faultRoleQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="mustUnderstandFaultCode" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="nextRoleURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="receiverFaultCode" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="roleAttributeQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="senderFaultCode" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://attachments.axiom.apache.org/xsd" xmlns:ax2141="http://util.java/xsd" xmlns:ax2139="http://io.java/xsd" xmlns:ax2143="http://lifecycle.attachments.axiom.apache.org/xsd">
      <xs:import namespace="http://io.java/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://lifecycle.attachments.axiom.apache.org/xsd"/>
      <xs:complexType name="Attachments">
        <xs:sequence>
          <xs:element minOccurs="0" name="SOAPPartContentID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SOAPPartContentType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="SOAPPartInputStream" nillable="true" type="ax2138:InputStream"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="allContentIDs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attachmentSpecType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="contentIDList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="contentIDSet" nillable="true" type="ax2140:Set"/>
          <xs:element minOccurs="0" name="contentLength" type="xs:long"/>
          <xs:element minOccurs="0" name="incomingAttachmentStreams" nillable="true" type="ax2137:IncomingAttachmentStreams"/>
          <xs:element minOccurs="0" name="incomingAttachmentsAsSingleStream" nillable="true" type="ax2138:InputStream"/>
          <xs:element minOccurs="0" name="lifecycleManager" nillable="true" type="ax2142:LifecycleManager"/>
          <xs:element minOccurs="0" name="map" nillable="true" type="ax2140:Map"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="IncomingAttachmentStreams">
        <xs:sequence>
          <xs:element minOccurs="0" name="nextStream" nillable="true" type="ax2137:IncomingAttachmentInputStream"/>
          <xs:element minOccurs="0" name="readyToGetNextStream" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IncomingAttachmentInputStream">
        <xs:complexContent>
          <xs:extension base="ax2138:InputStream">
            <xs:sequence>
              <xs:element minOccurs="0" name="contentId" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="contentLocation" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="contentType" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="headers" nillable="true" type="ax2140:Map"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.core.carbon.wso2.org/xsd">
      <xs:complexType name="AuthenticationException">
        <xs:sequence>
          <xs:element minOccurs="0" name="uiErrorCode" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://transport.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="TransportListener">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="TransportSender">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dom.w3c.org/xsd">
      <xs:complexType abstract="true" name="Attr">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ownerElement" nillable="true" type="ax2186:Element"/>
          <xs:element minOccurs="0" name="schemaTypeInfo" nillable="true" type="ax2186:TypeInfo"/>
          <xs:element minOccurs="0" name="specified" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Element">
        <xs:sequence>
          <xs:element minOccurs="0" name="schemaTypeInfo" nillable="true" type="ax2186:TypeInfo"/>
          <xs:element minOccurs="0" name="tagName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="TypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="typeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="typeNamespace" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://client.axis2.apache.org/xsd" xmlns:ax2203="http://addressing.axis2.apache.org/xsd" xmlns:ax2205="http://transport.axis2.apache.org/xsd" xmlns:ax2208="http://description.axis2.apache.org/xsd">
      <xs:import namespace="http://addressing.axis2.apache.org/xsd"/>
      <xs:import namespace="http://transport.axis2.apache.org/xsd"/>
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:complexType name="Options">
        <xs:sequence>
          <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="callTransportCleanup" type="xs:boolean"/>
          <xs:element minOccurs="0" name="exceptionToBeThrownOnSOAPFault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="faultTo" nillable="true" type="ax2203:EndpointReference"/>
          <xs:element minOccurs="0" name="from" nillable="true" type="ax2203:EndpointReference"/>
          <xs:element minOccurs="0" name="listener" nillable="true" type="ax2204:TransportListener"/>
          <xs:element minOccurs="0" name="logCorrelationIDString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="manageSession" type="xs:boolean"/>
          <xs:element minOccurs="0" name="messageId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parent" nillable="true" type="ax2202:Options"/>
          <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="relatesTo" nillable="true" type="ax2203:RelatesTo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="relationships" nillable="true" type="ax2203:RelatesTo"/>
          <xs:element minOccurs="0" name="replyTo" nillable="true" type="ax2203:EndpointReference"/>
          <xs:element minOccurs="0" name="soapVersionURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="timeOutInMilliSeconds" type="xs:long"/>
          <xs:element minOccurs="0" name="to" nillable="true" type="ax2203:EndpointReference"/>
          <xs:element minOccurs="0" name="transportIn" nillable="true" type="ax2208:TransportInDescription"/>
          <xs:element minOccurs="0" name="transportInProtocol" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="transportOut" nillable="true" type="ax2208:TransportOutDescription"/>
          <xs:element minOccurs="0" name="useSeparateListener" type="xs:boolean"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.java/xsd">
      <xs:complexType abstract="true" name="Set">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Map">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Iterator">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="LinkedList">
        <xs:sequence>
          <xs:element minOccurs="0" name="first" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="last" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LinkedHashMap">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://io.java/xsd">
      <xs:complexType abstract="true" name="InputStream">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://iwa.authenticator.identity.carbon.wso2.org" xmlns:ax2135="http://common.core.carbon.wso2.org/xsd" xmlns:ax2210="http://context.axis2.apache.org/xsd">
      <xs:import namespace="http://common.core.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:element name="IWAAuthenticatorAuthenticationException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="AuthenticationException" nillable="true" type="ax2135:AuthenticationException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="login">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="windowsLoggedInUser" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="remoteAddress" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="loginResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="canHandle">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="msgContext" nillable="true" type="ax2136:MessageContext"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="canHandleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://management.clustering.axis2.apache.org/xsd" xmlns:ax2155="http://context.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="NodeManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2136:ConfigurationContext"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://description.axis2.apache.org/xsd" xmlns:ax2190="http://schema.commons.ws.apache.org/xsd" xmlns:ax2207="http://transport.axis2.apache.org/xsd" xmlns:ax2180="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:ax2183="http://neethi.apache.org/xsd" xmlns:ax2174="http://engine.axis2.apache.org/xsd" xmlns:ax2175="http://util.java/xsd" xmlns:ax2176="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2177="http://net.java/xsd">
      <xs:import namespace="http://engine.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://util.deployment.axis2.apache.org/xsd"/>
      <xs:import namespace="http://net.java/xsd"/>
      <xs:import namespace="http://java2wsdl.description.axis2.apache.org/xsd"/>
      <xs:import namespace="http://neethi.apache.org/xsd"/>
      <xs:import namespace="http://schema.commons.ws.apache.org/xsd"/>
      <xs:import namespace="http://transport.axis2.apache.org/xsd"/>
      <xs:complexType name="AxisMessage">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisOperation" nillable="true" type="ax2145:AxisOperation"/>
          <xs:element minOccurs="0" name="direction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="effectivePolicy" nillable="true" type="ax2183:Policy"/>
          <xs:element minOccurs="0" name="elementQName" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extensibilityAttributes" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="messageFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="messagePartName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="modulerefs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="partName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyUpdated" type="xs:boolean"/>
          <xs:element minOccurs="0" name="schemaElement" nillable="true" type="ax2184:XmlSchemaElement"/>
          <xs:element minOccurs="0" name="soapHeaders" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="wrapped" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="AxisOperation">
        <xs:sequence>
          <xs:element minOccurs="0" name="WSAMappingList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="axisService" nillable="true" type="ax2145:AxisService"/>
          <xs:element minOccurs="0" name="axisSpecificMEPConstant" type="xs:int"/>
          <xs:element minOccurs="0" name="controlOperation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="faultAction" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultActionNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultMessages" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inputAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="messageExchangePattern" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="messageReceiver" nillable="true" type="ax2146:MessageReceiver"/>
          <xs:element minOccurs="0" name="messages" nillable="true" type="ax2140:Iterator"/>
          <xs:element minOccurs="0" name="moduleRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outputAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="phasesInFaultFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesOutFaultFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesOutFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="remainingPhasesInFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="soapAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="style" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsamappingList" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AxisService">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="EPRs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="WSAddressingFlag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="axisServiceGroup" nillable="true" type="ax2145:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="classLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="clientSide" type="xs:boolean"/>
          <xs:element minOccurs="0" name="controlOperations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="customSchemaNamePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="customSchemaNameSuffix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="customWsdl" type="xs:boolean"/>
          <xs:element minOccurs="0" name="elementFormDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableAllTransports" type="xs:boolean"/>
          <xs:element minOccurs="0" name="endpointName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="endpointURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="endpoints" nillable="true" type="ax2140:Map"/>
          <xs:element minOccurs="0" name="excludeInfo" nillable="true" type="ax2163:ExcludeInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="exposedTransports" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="ax2166:URL"/>
          <xs:element minOccurs="0" name="importedNamespaces" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="lastUpdate" type="xs:long"/>
          <xs:element minOccurs="0" name="lastupdate" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageElementQNameToOperationMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="modifyUserWSDLPortAddress" type="xs:boolean"/>
          <xs:element minOccurs="0" name="modules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nameSpacesMap" nillable="true" type="ax2140:Map"/>
          <xs:element minOccurs="0" name="namespaceMap" nillable="true" type="ax2140:Map"/>
          <xs:element minOccurs="0" name="objectSupplier" nillable="true" type="ax2146:ObjectSupplier"/>
          <xs:element minOccurs="0" name="operations" nillable="true" type="ax2140:Iterator"/>
          <xs:element minOccurs="0" name="operationsNameList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="p2nMap" nillable="true" type="ax2140:Map"/>
          <xs:element minOccurs="0" name="parent" nillable="true" type="ax2145:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="portTypeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="publishedOperations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="schema" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="schemaLocationsAdjusted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="schemaMappingTable" nillable="true" type="ax2140:Map"/>
          <xs:element minOccurs="0" name="schemaTargetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schemaTargetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schematargetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schematargetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceLifeCycle" nillable="true" type="ax2146:ServiceLifeCycle"/>
          <xs:element minOccurs="0" name="setEndpointsToAllUsedBindings" type="xs:boolean"/>
          <xs:element minOccurs="0" name="soapNsUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="typeTable" nillable="true" type="ax2180:TypeTable"/>
          <xs:element minOccurs="0" name="useDefaultChains" type="xs:boolean"/>
          <xs:element minOccurs="0" name="useUserWSDL" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wsdlFound" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AxisServiceGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisDescription" nillable="true" type="ax2146:AxisConfiguration"/>
          <xs:element minOccurs="0" name="foundWebResources" type="xs:boolean"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="moduleRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroupClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="services" nillable="true" type="ax2140:Iterator"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransportInDescription">
        <xs:sequence>
          <xs:element minOccurs="0" name="faultFlow" nillable="true" type="ax2145:Flow"/>
          <xs:element minOccurs="0" name="faultPhase" nillable="true" type="ax2146:Phase"/>
          <xs:element minOccurs="0" name="inFlow" nillable="true" type="ax2145:Flow"/>
          <xs:element minOccurs="0" name="inPhase" nillable="true" type="ax2146:Phase"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parameters" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="receiver" nillable="true" type="ax2204:TransportListener"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Flow">
        <xs:sequence>
          <xs:element minOccurs="0" name="handlerCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="HandlerDescription">
        <xs:sequence>
          <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="handler" nillable="true" type="ax2146:Handler"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parameters" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="parent" nillable="true" type="ax2145:ParameterInclude"/>
          <xs:element minOccurs="0" name="rules" nillable="true" type="ax2145:PhaseRule"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="ParameterInclude">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PhaseRule">
        <xs:sequence>
          <xs:element minOccurs="0" name="after" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="before" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="phaseFirst" type="xs:boolean"/>
          <xs:element minOccurs="0" name="phaseLast" type="xs:boolean"/>
          <xs:element minOccurs="0" name="phaseName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransportOutDescription">
        <xs:sequence>
          <xs:element minOccurs="0" name="faultFlow" nillable="true" type="ax2145:Flow"/>
          <xs:element minOccurs="0" name="faultPhase" nillable="true" type="ax2146:Phase"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="outFlow" nillable="true" type="ax2145:Flow"/>
          <xs:element minOccurs="0" name="outPhase" nillable="true" type="ax2146:Phase"/>
          <xs:element minOccurs="0" name="parameters" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="sender" nillable="true" type="ax2204:TransportSender"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://om.axiom.apache.org/xsd">
      <xs:complexType abstract="true" name="OMNamespace">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="namespaceURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="prefix" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://context.axis2.apache.org/xsd" xmlns:ax2201="http://addressing.axis2.apache.org/xsd" xmlns:ax2148="http://engine.axis2.apache.org/xsd" xmlns:ax2191="http://description.axis2.apache.org/xsd" xmlns:ax2192="http://neethi.apache.org/xsd" xmlns:ax2209="http://client.axis2.apache.org/xsd" xmlns:ax2151="http://threadpool.util.axis2.apache.org/xsd" xmlns:ax2197="http://soap.axiom.apache.org/xsd" xmlns:ax2198="http://util.java/xsd" xmlns:ax2144="http://attachments.axiom.apache.org/xsd">
      <xs:import namespace="http://attachments.axiom.apache.org/xsd"/>
      <xs:import namespace="http://engine.axis2.apache.org/xsd"/>
      <xs:import namespace="http://threadpool.util.axis2.apache.org/xsd"/>
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:import namespace="http://neethi.apache.org/xsd"/>
      <xs:import namespace="http://soap.axiom.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://addressing.axis2.apache.org/xsd"/>
      <xs:import namespace="http://client.axis2.apache.org/xsd"/>
      <xs:complexType name="MessageContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="FLOW" type="xs:int"/>
          <xs:element minOccurs="0" name="SOAP11" type="xs:boolean"/>
          <xs:element minOccurs="0" name="WSAAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="WSAMessageId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attachmentMap" nillable="true" type="ax2144:Attachments"/>
          <xs:element minOccurs="0" name="axisMessage" nillable="true" type="ax2145:AxisMessage"/>
          <xs:element minOccurs="0" name="axisOperation" nillable="true" type="ax2145:AxisOperation"/>
          <xs:element minOccurs="0" name="axisService" nillable="true" type="ax2145:AxisService"/>
          <xs:element minOccurs="0" name="axisServiceGroup" nillable="true" type="ax2145:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="currentHandlerIndex" type="xs:int"/>
          <xs:element minOccurs="0" name="currentPhaseIndex" type="xs:int"/>
          <xs:element minOccurs="0" name="doingMTOM" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doingREST" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doingSwA" type="xs:boolean"/>
          <xs:element minOccurs="0" name="effectivePolicy" nillable="true" type="ax2181:Policy"/>
          <xs:element minOccurs="0" name="envelope" nillable="true" type="ax2193:SOAPEnvelope"/>
          <xs:element minOccurs="0" name="executedPhases" nillable="true" type="ax2140:Iterator"/>
          <xs:element minOccurs="0" name="executedPhasesExplicit" nillable="true" type="ax2140:LinkedList"/>
          <xs:element minOccurs="0" name="executionChain" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="failureReason" nillable="true"/>
          <xs:element minOccurs="0" name="fault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="faultTo" nillable="true" type="ax2201:EndpointReference"/>
          <xs:element minOccurs="0" name="from" nillable="true" type="ax2201:EndpointReference"/>
          <xs:element minOccurs="0" name="headerPresent" type="xs:boolean"/>
          <xs:element minOccurs="0" name="inboundContentLength" type="xs:long"/>
          <xs:element minOccurs="0" name="incomingTransportName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="isSOAP11Explicit" type="xs:boolean"/>
          <xs:element minOccurs="0" name="logCorrelationID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logIDString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="messageID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="newThreadRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="operationContext" nillable="true" type="ax2136:OperationContext"/>
          <xs:element minOccurs="0" name="options" nillable="true" type="ax2202:Options"/>
          <xs:element minOccurs="0" name="optionsExplicit" nillable="true" type="ax2202:Options"/>
          <xs:element minOccurs="0" name="outputWritten" type="xs:boolean"/>
          <xs:element minOccurs="0" name="paused" type="xs:boolean"/>
          <xs:element minOccurs="0" name="processingFault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="properties" nillable="true" type="ax2140:Map"/>
          <xs:element minOccurs="0" name="relatesTo" nillable="true" type="ax2201:RelatesTo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="relationships" nillable="true" type="ax2201:RelatesTo"/>
          <xs:element minOccurs="0" name="replyTo" nillable="true" type="ax2201:EndpointReference"/>
          <xs:element minOccurs="0" name="responseWritten" type="xs:boolean"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="selfManagedDataMapExplicit" nillable="true" type="ax2140:LinkedHashMap"/>
          <xs:element minOccurs="0" name="serverSide" type="xs:boolean"/>
          <xs:element minOccurs="0" name="serviceContext" nillable="true" type="ax2136:ServiceContext"/>
          <xs:element minOccurs="0" name="serviceContextID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupContext" nillable="true" type="ax2136:ServiceGroupContext"/>
          <xs:element minOccurs="0" name="serviceGroupContextId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sessionContext" nillable="true" type="ax2136:SessionContext"/>
          <xs:element minOccurs="0" name="soapAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="to" nillable="true" type="ax2201:EndpointReference"/>
          <xs:element minOccurs="0" name="transportIn" nillable="true" type="ax2145:TransportInDescription"/>
          <xs:element minOccurs="0" name="transportOut" nillable="true" type="ax2145:TransportOutDescription"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ConfigurationContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="anyOperationContextRegistered" type="xs:boolean"/>
          <xs:element minOccurs="0" name="axisConfiguration" nillable="true" type="ax2146:AxisConfiguration"/>
          <xs:element minOccurs="0" name="contextRoot" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="listenerManager" nillable="true" type="ax2146:ListenerManager"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceContextPath" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceGroupContextIDs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupContextTimeoutInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="serviceGroupContextTimoutInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="serviceGroupContexts" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="servicePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="threadPool" nillable="true" type="ax2150:ThreadFactory"/>
          <xs:element minOccurs="0" name="transportManager" nillable="true" type="ax2146:ListenerManager"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OperationContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisOperation" nillable="true" type="ax2145:AxisOperation"/>
          <xs:element minOccurs="0" name="complete" type="xs:boolean"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logCorrelationIDString" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageContexts" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceContext" nillable="true" type="ax2136:ServiceContext"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisService" nillable="true" type="ax2145:AxisService"/>
          <xs:element minOccurs="0" name="cachingOperationContext" type="xs:boolean"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="groupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastOperationContext" nillable="true" type="ax2136:OperationContext"/>
          <xs:element minOccurs="0" name="logCorrelationIDString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="myEPR" nillable="true" type="ax2201:EndpointReference"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceGroupContext" nillable="true" type="ax2136:ServiceGroupContext"/>
          <xs:element minOccurs="0" name="targetEPR" nillable="true" type="ax2201:EndpointReference"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceGroupContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" nillable="true" type="ax2145:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceContexts" nillable="true" type="ax2140:Iterator"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SessionContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="cookieID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastTouchedTime" type="xs:long"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceGroupContext" nillable="true" type="ax2140:Iterator"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2164="http://description.axis2.apache.org/xsd">
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:complexType name="PhasesInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="INPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="IN_FaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="OUTPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="OUT_FaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalInFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalInflow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalOutPhaseList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationInFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationInPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationOutFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationOutPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationPhases" nillable="true" type="ax2164:AxisOperation"/>
          <xs:element minOccurs="0" name="outFaultPhaseList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExcludeInfo">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://net.java/xsd">
      <xs:complexType name="URL">
        <xs:sequence>
          <xs:element minOccurs="0" name="authority" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="content" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="defaultPort" type="xs:int"/>
          <xs:element minOccurs="0" name="file" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="host" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="port" type="xs:int"/>
          <xs:element minOccurs="0" name="protocol" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="query" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ref" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userInfo" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://addressing.axis2.apache.org/xsd" xmlns:ax2200="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType name="EndpointReference">
        <xs:sequence>
          <xs:element minOccurs="0" name="WSAddressingAnonymous" type="xs:boolean"/>
          <xs:element minOccurs="0" name="address" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="addressAttributes" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allReferenceParameters" nillable="true" type="ax2140:Map"/>
          <xs:element minOccurs="0" name="attributes" nillable="true" type="xs:anyType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="extensibleElements" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="logCorrelationIDString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="metaData" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadataAttributes" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="referenceParameters" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RelatesTo">
        <xs:sequence>
          <xs:element minOccurs="0" name="extensibilityAttributes" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="relationshipType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://securevault.wso2.org/xsd">
      <xs:complexType name="SecretResolver">
        <xs:sequence>
          <xs:element minOccurs="0" name="initialized" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://engine.axis2.apache.org/xsd" xmlns:ax2169="http://securevault.wso2.org/xsd" xmlns:ax2149="http://context.axis2.apache.org/xsd" xmlns:ax2206="http://description.axis2.apache.org/xsd" xmlns:ax2171="http://util.axis2.apache.org/xsd" xmlns:ax2161="http://clustering.axis2.apache.org/xsd" xmlns:ax2162="http://util.java/xsd" xmlns:ax2173="http://transaction.axis2.apache.org/xsd" xmlns:ax2165="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2167="http://net.java/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://clustering.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://util.deployment.axis2.apache.org/xsd"/>
      <xs:import namespace="http://net.java/xsd"/>
      <xs:import namespace="http://securevault.wso2.org/xsd"/>
      <xs:import namespace="http://util.axis2.apache.org/xsd"/>
      <xs:import namespace="http://transaction.axis2.apache.org/xsd"/>
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:complexType name="AxisConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="childFirstClassLoading" type="xs:boolean"/>
          <xs:element minOccurs="0" name="clusteringAgent" nillable="true" type="ax2147:ClusteringAgent"/>
          <xs:element minOccurs="0" name="configurator" nillable="true" type="ax2146:AxisConfigurator"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultyModules" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultyServices" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultyServicesDuetoModules" nillable="true" type="ax2140:Map"/>
          <xs:element minOccurs="0" name="globalModules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalOutPhase" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFaultFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inPhasesUptoAndIncludingPostDispatch" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="localPolicyAssertions" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="moduleClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="modules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="observersList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFaultFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesInfo" nillable="true" type="ax2163:PhasesInfo"/>
          <xs:element minOccurs="0" name="repository" nillable="true" type="ax2166:URL"/>
          <xs:element minOccurs="0" name="secretResolver" nillable="true" type="ax2168:SecretResolver"/>
          <xs:element minOccurs="0" name="serviceClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroups" nillable="true" type="ax2140:Iterator"/>
          <xs:element minOccurs="0" name="services" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="start" type="xs:boolean"/>
          <xs:element minOccurs="0" name="systemClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="targetResolverChain" nillable="true" type="ax2171:TargetResolver"/>
          <xs:element minOccurs="0" name="transactionConfig" nillable="true" type="ax2172:TransactionConfiguration"/>
          <xs:element minOccurs="0" name="transactionConfiguration" nillable="true" type="ax2172:TransactionConfiguration"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="transportsIn" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="transportsOut" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ListenerManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configctx" nillable="true" type="ax2149:ConfigurationContext"/>
          <xs:element minOccurs="0" name="shutdownHookRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="stopped" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="AxisConfigurator">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisConfiguration" nillable="true" type="ax2146:AxisConfiguration"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="ObjectSupplier">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="ServiceLifeCycle">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="MessageReceiver">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Phase">
        <xs:sequence>
          <xs:element minOccurs="0" name="handlerCount" type="xs:int"/>
          <xs:element minOccurs="0" name="handlerDesc" nillable="true" type="ax2206:HandlerDescription"/>
          <xs:element minOccurs="0" name="handlers" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="phaseFirst" nillable="true" type="ax2146:Handler"/>
          <xs:element minOccurs="0" name="phaseLast" nillable="true" type="ax2146:Handler"/>
          <xs:element minOccurs="0" name="phaseName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Handler">
        <xs:sequence>
          <xs:element minOccurs="0" name="handlerDesc" nillable="true" type="ax2206:HandlerDescription"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2158="http://context.axis2.apache.org/xsd" xmlns:ax2159="http://util.java/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType abstract="true" name="StateManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="replicationExcludePatterns" nillable="true" type="ax2140:Map"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://clustering.axis2.apache.org/xsd" xmlns:ax2160="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2152="http://context.axis2.apache.org/xsd" xmlns:ax2153="http://util.java/xsd" xmlns:ax2156="http://management.clustering.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://management.clustering.axis2.apache.org/xsd"/>
      <xs:import namespace="http://state.clustering.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="ClusteringAgent">
        <xs:sequence>
          <xs:element minOccurs="0" name="aliveMemberCount" type="xs:int"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2136:ConfigurationContext"/>
          <xs:element minOccurs="0" name="coordinator" type="xs:boolean"/>
          <xs:element minOccurs="0" name="domains" nillable="true" type="ax2140:Set"/>
          <xs:element minOccurs="0" name="members" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="nodeManager" nillable="true" type="ax2154:NodeManager"/>
          <xs:element minOccurs="0" name="stateManager" nillable="true" type="ax2160:StateManager"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:ax2179="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType name="TypeTable">
        <xs:sequence>
          <xs:element minOccurs="0" name="complexSchemaMap" nillable="true" type="ax2140:Map"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="canHandleRequest">
    <wsdl:part name="parameters" element="ns:canHandle"/>
  </wsdl:message>
  <wsdl:message name="canHandleResponse">
    <wsdl:part name="parameters" element="ns:canHandleResponse"/>
  </wsdl:message>
  <wsdl:message name="loginRequest">
    <wsdl:part name="parameters" element="ns:login"/>
  </wsdl:message>
  <wsdl:message name="loginResponse">
    <wsdl:part name="parameters" element="ns:loginResponse"/>
  </wsdl:message>
  <wsdl:message name="IWAAuthenticatorAuthenticationException">
    <wsdl:part name="parameters" element="ns:IWAAuthenticatorAuthenticationException"/>
  </wsdl:message>
  <wsdl:portType name="IWAAuthenticatorPortType" wsp:PolicyURIs="#c756734ad2b2357eb94f6742d778a740ad7805d63c3df109 #SigOnly" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy">
    <wsdl:operation name="canHandle">
      <wsdl:input message="ns:canHandleRequest" wsaw:Action="urn:canHandle"/>
      <wsdl:output message="ns:canHandleResponse" wsaw:Action="urn:canHandleResponse"/>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdl:input message="ns:loginRequest" wsaw:Action="urn:login"/>
      <wsdl:output message="ns:loginResponse" wsaw:Action="urn:loginResponse"/>
      <wsdl:fault message="ns:IWAAuthenticatorAuthenticationException" name="IWAAuthenticatorAuthenticationException" wsaw:Action="urn:loginIWAAuthenticatorAuthenticationException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IWAAuthenticatorSoap11Binding" type="ns:IWAAuthenticatorPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="canHandle">
      <soap:operation soapAction="urn:canHandle" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap:operation soapAction="urn:login" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IWAAuthenticatorAuthenticationException">
        <soap:fault use="literal" name="IWAAuthenticatorAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IWAAuthenticatorSoap12Binding" type="ns:IWAAuthenticatorPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="canHandle">
      <soap12:operation soapAction="urn:canHandle" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap12:operation soapAction="urn:login" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IWAAuthenticatorAuthenticationException">
        <soap12:fault use="literal" name="IWAAuthenticatorAuthenticationException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IWAAuthenticatorHttpBinding" type="ns:IWAAuthenticatorPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="canHandle">
      <http:operation location="canHandle"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="login">
      <http:operation location="login"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IWAAuthenticator">
    <wsdl:port name="IWAAuthenticatorHttpsSoap11Endpoint" binding="ns:IWAAuthenticatorSoap11Binding">
      <soap:address location="https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IWAAuthenticatorHttpsSoap12Endpoint" binding="ns:IWAAuthenticatorSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IWAAuthenticatorHttpsEndpoint" binding="ns:IWAAuthenticatorHttpBinding">
      <http:address location="https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IWAAuthenticator.IWAAuthenticatorHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="75ab1bf4-d916-4cfc-8af9-3635389aa5c4" isOneWay="false" action="urn:canHandle" name="canHandle" bindingOperationName="canHandle" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="df69c627-6c6f-4e26-8f49-c61d67901dce" isOneWay="false" action="urn:login" name="login" bindingOperationName="login" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c7401c3c-c347-4d83-9e9f-7c0ccd2a8b00" wsaVersion="NONE" name="IdentityApplicationManagementServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.application.identity.carbon.wso2.org}IdentityApplicationManagementServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityApplicationManagementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="17a8a820-ce53-4cae-81be-0b26175e3b07" isOneWay="false" action="urn:createApplication" name="createApplication" bindingOperationName="createApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b66b8531-43e2-47dc-a4ac-cd3b16983ab0" isOneWay="false" action="urn:deleteApplication" name="deleteApplication" bindingOperationName="deleteApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4bc6dd6d-8857-4faa-b951-d58487c18ae3" isOneWay="false" action="urn:getAllApplicationBasicInfo" name="getAllApplicationBasicInfo" bindingOperationName="getAllApplicationBasicInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c20663f-887a-4ac4-ac82-f83f4eea2c03" isOneWay="false" action="urn:getAllIdentityProviders" name="getAllIdentityProviders" bindingOperationName="getAllIdentityProviders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f0602311-0052-4da1-8680-b68d2eb530f3" isOneWay="false" action="urn:getAllLocalAuthenticators" name="getAllLocalAuthenticators" bindingOperationName="getAllLocalAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="63e96fea-3f72-449e-b0ba-efa827d13d1e" isOneWay="false" action="urn:getAllLocalClaimUris" name="getAllLocalClaimUris" bindingOperationName="getAllLocalClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6ea90120-8bd6-4f4f-90d4-bb96ceeff743" isOneWay="false" action="urn:getAllRequestPathAuthenticators" name="getAllRequestPathAuthenticators" bindingOperationName="getAllRequestPathAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0edfe4eb-d219-4698-a42b-006fb2af74cc" isOneWay="false" action="urn:getApplication" name="getApplication" bindingOperationName="getApplication" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cd4a5033-52e5-45e4-8111-1480547815d5" isOneWay="false" action="urn:getIdentityProvider" name="getIdentityProvider" bindingOperationName="getIdentityProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c77c4540-e6a8-4eb7-bfe6-4209606c04da" isOneWay="false" action="urn:updateApplication" name="updateApplication" bindingOperationName="updateApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b2c802d4-d9a4-4486-99eb-2bbbe4d604a9" wsaVersion="NONE" name="IdentityApplicationManagementServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.application.identity.carbon.wso2.org}IdentityApplicationManagementServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityApplicationManagementService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityApplicationManagementService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityApplicationManagementService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.application.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.application.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2130="http://common.application.identity.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2132="http://model.common.application.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentityApplicationManagementService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.application.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityApplicationManagementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2131="http://common.application.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2133="http://model.common.application.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.application.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://model.common.application.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityApplicationManagementException" nillable="true" type="ax2130:IdentityApplicationManagementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2132:ServiceProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getIdentityProvider">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="federatedIdPName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getIdentityProviderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2132:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceProvider" nillable="true" type="ax2132:ServiceProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllApplicationBasicInfo">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllApplicationBasicInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2132:ApplicationBasicInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceProvider" nillable="true" type="ax2132:ServiceProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllIdentityProviders">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllIdentityProvidersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2132:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalAuthenticators">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalAuthenticatorsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2132:LocalAuthenticatorConfig"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRequestPathAuthenticators">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRequestPathAuthenticatorsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2132:RequestPathAuthenticatorConfig"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalClaimUris">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalClaimUrisResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://model.common.application.identity.carbon.wso2.org/xsd">
      <xs:complexType name="ServiceProvider">
        <xs:sequence>
          <xs:element minOccurs="0" name="applicationID" type="xs:int"/>
          <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimConfig" nillable="true" type="ax2132:ClaimConfig"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="inboundAuthenticationConfig" nillable="true" type="ax2132:InboundAuthenticationConfig"/>
          <xs:element minOccurs="0" name="inboundProvisioningConfig" nillable="true" type="ax2132:InboundProvisioningConfig"/>
          <xs:element minOccurs="0" name="localAndOutBoundAuthenticationConfig" nillable="true" type="ax2132:LocalAndOutboundAuthenticationConfig"/>
          <xs:element minOccurs="0" name="outboundProvisioningConfig" nillable="true" type="ax2132:OutboundProvisioningConfig"/>
          <xs:element minOccurs="0" name="owner" nillable="true" type="ax2132:User"/>
          <xs:element minOccurs="0" name="permissionAndRoleConfig" nillable="true" type="ax2132:PermissionsAndRoleConfig"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requestPathAuthenticatorConfigs" nillable="true" type="ax2132:RequestPathAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="saasApp" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="spProperties" nillable="true" type="ax2132:ServiceProviderProperty"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="alwaysSendMappedLocalSubjectId" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="claimMappings" nillable="true" type="ax2132:ClaimMapping"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpClaims" nillable="true" type="ax2132:Claim"/>
          <xs:element minOccurs="0" name="localClaimDialect" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleClaimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userClaimURI" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="localClaim" nillable="true" type="ax2132:Claim"/>
          <xs:element minOccurs="0" name="remoteClaim" nillable="true" type="ax2132:Claim"/>
          <xs:element minOccurs="0" name="requested" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Claim">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimId" type="xs:int"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InboundAuthenticationConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="inboundAuthenticationRequestConfigs" nillable="true" type="ax2132:InboundAuthenticationRequestConfig"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InboundAuthenticationRequestConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="friendlyName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="inboundAuthKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="inboundAuthType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2132:Property"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Property">
        <xs:sequence>
          <xs:element minOccurs="0" name="confidential" type="xs:boolean"/>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InboundProvisioningConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="dumbMode" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provisioningEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provisioningUserStore" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LocalAndOutboundAuthenticationConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="alwaysSendBackAuthenticatedListOfIdPs" type="xs:boolean"/>
          <xs:element minOccurs="0" name="authenticationStepForAttributes" nillable="true" type="ax2132:AuthenticationStep"/>
          <xs:element minOccurs="0" name="authenticationStepForSubject" nillable="true" type="ax2132:AuthenticationStep"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="authenticationSteps" nillable="true" type="ax2132:AuthenticationStep"/>
          <xs:element minOccurs="0" name="authenticationType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="subjectClaimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="useTenantDomainInLocalSubjectIdentifier" type="xs:boolean"/>
          <xs:element minOccurs="0" name="useUserstoreDomainInLocalSubjectIdentifier" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AuthenticationStep">
        <xs:sequence>
          <xs:element minOccurs="0" name="attributeStep" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="federatedIdentityProviders" nillable="true" type="ax2132:IdentityProvider"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="localAuthenticatorConfigs" nillable="true" type="ax2132:LocalAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="stepOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="subjectStep" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IdentityProvider">
        <xs:sequence>
          <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="certificate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimConfig" nillable="true" type="ax2132:ClaimConfig"/>
          <xs:element minOccurs="0" name="defaultAuthenticatorConfig" nillable="true" type="ax2132:FederatedAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="defaultProvisioningConnectorConfig" nillable="true" type="ax2132:ProvisioningConnectorConfig"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enable" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="federatedAuthenticatorConfigs" nillable="true" type="ax2132:FederatedAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="federationHub" type="xs:boolean"/>
          <xs:element minOccurs="0" name="homeRealmId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identityProviderDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identityProviderName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpProperties" nillable="true" type="ax2132:IdentityProviderProperty"/>
          <xs:element minOccurs="0" name="justInTimeProvisioningConfig" nillable="true" type="ax2132:JustInTimeProvisioningConfig"/>
          <xs:element minOccurs="0" name="permissionAndRoleConfig" nillable="true" type="ax2132:PermissionsAndRoleConfig"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningConnectorConfigs" nillable="true" type="ax2132:ProvisioningConnectorConfig"/>
          <xs:element minOccurs="0" name="provisioningRole" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FederatedAuthenticatorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2132:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProvisioningConnectorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="blocking" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningProperties" nillable="true" type="ax2132:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IdentityProviderProperty">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="JustInTimeProvisioningConfig">
        <xs:complexContent>
          <xs:extension base="ax2132:InboundProvisioningConfig">
            <xs:sequence>
              <xs:element minOccurs="0" name="userStoreClaimUri" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PermissionsAndRoleConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpRoles" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="ax2132:ApplicationPermission"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roleMappings" nillable="true" type="ax2132:RoleMapping"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ApplicationPermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RoleMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="localRole" nillable="true" type="ax2132:LocalRole"/>
          <xs:element minOccurs="0" name="remoteRole" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LocalRole">
        <xs:sequence>
          <xs:element minOccurs="0" name="localRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userStoreId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LocalAuthenticatorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2132:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OutboundProvisioningConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisionByRoleList" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningIdentityProviders" nillable="true" type="ax2132:IdentityProvider"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="User">
        <xs:sequence>
          <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userStoreDomain" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RequestPathAuthenticatorConfig">
        <xs:complexContent>
          <xs:extension base="ax2132:LocalAuthenticatorConfig">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ServiceProviderProperty">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ApplicationBasicInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getApplicationRequest">
    <wsdl:part name="parameters" element="ns1:getApplication"/>
  </wsdl:message>
  <wsdl:message name="getApplicationResponse">
    <wsdl:part name="parameters" element="ns1:getApplicationResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
    <wsdl:part name="parameters" element="ns1:IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalClaimUrisRequest">
    <wsdl:part name="parameters" element="ns1:getAllLocalClaimUris"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalClaimUrisResponse">
    <wsdl:part name="parameters" element="ns1:getAllLocalClaimUrisResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllRequestPathAuthenticatorsRequest">
    <wsdl:part name="parameters" element="ns1:getAllRequestPathAuthenticators"/>
  </wsdl:message>
  <wsdl:message name="getAllRequestPathAuthenticatorsResponse">
    <wsdl:part name="parameters" element="ns1:getAllRequestPathAuthenticatorsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateApplicationRequest">
    <wsdl:part name="parameters" element="ns1:updateApplication"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalAuthenticatorsRequest">
    <wsdl:part name="parameters" element="ns1:getAllLocalAuthenticators"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalAuthenticatorsResponse">
    <wsdl:part name="parameters" element="ns1:getAllLocalAuthenticatorsResponse"/>
  </wsdl:message>
  <wsdl:message name="createApplicationRequest">
    <wsdl:part name="parameters" element="ns1:createApplication"/>
  </wsdl:message>
  <wsdl:message name="getAllApplicationBasicInfoRequest">
    <wsdl:part name="parameters" element="ns1:getAllApplicationBasicInfo"/>
  </wsdl:message>
  <wsdl:message name="getAllApplicationBasicInfoResponse">
    <wsdl:part name="parameters" element="ns1:getAllApplicationBasicInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getIdentityProviderRequest">
    <wsdl:part name="parameters" element="ns1:getIdentityProvider"/>
  </wsdl:message>
  <wsdl:message name="getIdentityProviderResponse">
    <wsdl:part name="parameters" element="ns1:getIdentityProviderResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllIdentityProvidersRequest">
    <wsdl:part name="parameters" element="ns1:getAllIdentityProviders"/>
  </wsdl:message>
  <wsdl:message name="getAllIdentityProvidersResponse">
    <wsdl:part name="parameters" element="ns1:getAllIdentityProvidersResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteApplicationRequest">
    <wsdl:part name="parameters" element="ns1:deleteApplication"/>
  </wsdl:message>
  <wsdl:portType name="IdentityApplicationManagementServicePortType">
    <wsdl:operation name="getApplication">
      <wsdl:input message="tns:getApplicationRequest" wsaw:Action="urn:getApplication"/>
      <wsdl:output message="tns:getApplicationResponse" wsaw:Action="urn:getApplicationResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getApplicationIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <wsdl:input message="tns:getAllLocalClaimUrisRequest" wsaw:Action="urn:getAllLocalClaimUris"/>
      <wsdl:output message="tns:getAllLocalClaimUrisResponse" wsaw:Action="urn:getAllLocalClaimUrisResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllLocalClaimUrisIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllRequestPathAuthenticators">
      <wsdl:input message="tns:getAllRequestPathAuthenticatorsRequest" wsaw:Action="urn:getAllRequestPathAuthenticators"/>
      <wsdl:output message="tns:getAllRequestPathAuthenticatorsResponse" wsaw:Action="urn:getAllRequestPathAuthenticatorsResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllRequestPathAuthenticatorsIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="updateApplication">
      <wsdl:input message="tns:updateApplicationRequest" wsaw:Action="urn:updateApplication"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:updateApplicationIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalAuthenticators">
      <wsdl:input message="tns:getAllLocalAuthenticatorsRequest" wsaw:Action="urn:getAllLocalAuthenticators"/>
      <wsdl:output message="tns:getAllLocalAuthenticatorsResponse" wsaw:Action="urn:getAllLocalAuthenticatorsResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllLocalAuthenticatorsIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="createApplication">
      <wsdl:input message="tns:createApplicationRequest" wsaw:Action="urn:createApplication"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:createApplicationIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllApplicationBasicInfo">
      <wsdl:input message="tns:getAllApplicationBasicInfoRequest" wsaw:Action="urn:getAllApplicationBasicInfo"/>
      <wsdl:output message="tns:getAllApplicationBasicInfoResponse" wsaw:Action="urn:getAllApplicationBasicInfoResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllApplicationBasicInfoIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getIdentityProvider">
      <wsdl:input message="tns:getIdentityProviderRequest" wsaw:Action="urn:getIdentityProvider"/>
      <wsdl:output message="tns:getIdentityProviderResponse" wsaw:Action="urn:getIdentityProviderResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getIdentityProviderIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllIdentityProviders">
      <wsdl:input message="tns:getAllIdentityProvidersRequest" wsaw:Action="urn:getAllIdentityProviders"/>
      <wsdl:output message="tns:getAllIdentityProvidersResponse" wsaw:Action="urn:getAllIdentityProvidersResponse"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:getAllIdentityProvidersIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteApplication">
      <wsdl:input message="tns:deleteApplicationRequest" wsaw:Action="urn:deleteApplication"/>
      <wsdl:fault message="tns:IdentityApplicationManagementServiceIdentityApplicationManagementException" name="IdentityApplicationManagementServiceIdentityApplicationManagementException" wsaw:Action="urn:deleteApplicationIdentityApplicationManagementServiceIdentityApplicationManagementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentityApplicationManagementServiceSoap11Binding" type="tns:IdentityApplicationManagementServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getApplication">
      <soap:operation soapAction="urn:getApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <soap:operation soapAction="urn:getAllLocalClaimUris" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRequestPathAuthenticators">
      <soap:operation soapAction="urn:getAllRequestPathAuthenticators" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateApplication">
      <soap:operation soapAction="urn:updateApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalAuthenticators">
      <soap:operation soapAction="urn:getAllLocalAuthenticators" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createApplication">
      <soap:operation soapAction="urn:createApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllApplicationBasicInfo">
      <soap:operation soapAction="urn:getAllApplicationBasicInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIdentityProvider">
      <soap:operation soapAction="urn:getIdentityProvider" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllIdentityProviders">
      <soap:operation soapAction="urn:getAllIdentityProviders" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteApplication">
      <soap:operation soapAction="urn:deleteApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityApplicationManagementServiceSoap12Binding" type="tns:IdentityApplicationManagementServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getApplication">
      <soap12:operation soapAction="urn:getApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <soap12:operation soapAction="urn:getAllLocalClaimUris" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRequestPathAuthenticators">
      <soap12:operation soapAction="urn:getAllRequestPathAuthenticators" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateApplication">
      <soap12:operation soapAction="urn:updateApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalAuthenticators">
      <soap12:operation soapAction="urn:getAllLocalAuthenticators" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createApplication">
      <soap12:operation soapAction="urn:createApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllApplicationBasicInfo">
      <soap12:operation soapAction="urn:getAllApplicationBasicInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIdentityProvider">
      <soap12:operation soapAction="urn:getIdentityProvider" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllIdentityProviders">
      <soap12:operation soapAction="urn:getAllIdentityProviders" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteApplication">
      <soap12:operation soapAction="urn:deleteApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityApplicationManagementServiceIdentityApplicationManagementException">
        <soap12:fault use="literal" name="IdentityApplicationManagementServiceIdentityApplicationManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityApplicationManagementServiceHttpBinding" type="tns:IdentityApplicationManagementServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getApplication">
      <http:operation location="getApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <http:operation location="getAllLocalClaimUris"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRequestPathAuthenticators">
      <http:operation location="getAllRequestPathAuthenticators"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateApplication">
      <http:operation location="updateApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalAuthenticators">
      <http:operation location="getAllLocalAuthenticators"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createApplication">
      <http:operation location="createApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllApplicationBasicInfo">
      <http:operation location="getAllApplicationBasicInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getIdentityProvider">
      <http:operation location="getIdentityProvider"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllIdentityProviders">
      <http:operation location="getAllIdentityProviders"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteApplication">
      <http:operation location="deleteApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentityApplicationManagementService">
    <wsdl:port name="IdentityApplicationManagementServiceHttpsSoap11Endpoint" binding="tns:IdentityApplicationManagementServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityApplicationManagementServiceHttpsSoap12Endpoint" binding="tns:IdentityApplicationManagementServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityApplicationManagementServiceHttpsEndpoint" binding="tns:IdentityApplicationManagementServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityApplicationManagementService.IdentityApplicationManagementServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="27b6672d-876f-46ce-bddd-b119ae6c24b6" isOneWay="false" action="urn:createApplication" name="createApplication" bindingOperationName="createApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="18679974-f6ad-42a4-8394-439728237199" isOneWay="false" action="urn:deleteApplication" name="deleteApplication" bindingOperationName="deleteApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6b273f2b-5df1-49a5-ac7f-ea7ea4c2c2e6" isOneWay="false" action="urn:getAllApplicationBasicInfo" name="getAllApplicationBasicInfo" bindingOperationName="getAllApplicationBasicInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a1c3e5c4-d712-48ae-82f0-a3583a8f1dcc" isOneWay="false" action="urn:getAllIdentityProviders" name="getAllIdentityProviders" bindingOperationName="getAllIdentityProviders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="49aea480-175b-4fb5-8d8e-dcc034ed6557" isOneWay="false" action="urn:getAllLocalAuthenticators" name="getAllLocalAuthenticators" bindingOperationName="getAllLocalAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f10aa87-785e-4f03-980c-87bf4d1a65ad" isOneWay="false" action="urn:getAllLocalClaimUris" name="getAllLocalClaimUris" bindingOperationName="getAllLocalClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1c9a3f99-6aa3-41e6-9831-6b161cfcaa81" isOneWay="false" action="urn:getAllRequestPathAuthenticators" name="getAllRequestPathAuthenticators" bindingOperationName="getAllRequestPathAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="433046a6-371c-4bf0-88b5-3856dd3b69cd" isOneWay="false" action="urn:getApplication" name="getApplication" bindingOperationName="getApplication" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fe89f883-d123-494f-a5be-efb1036c0429" isOneWay="false" action="urn:getIdentityProvider" name="getIdentityProvider" bindingOperationName="getIdentityProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d1c863a-0848-4cdd-bdfb-13d2a8574662" isOneWay="false" action="urn:updateApplication" name="updateApplication" bindingOperationName="updateApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6fcda0bf-a3af-41a1-b2ea-346e4eacbd9f" wsaVersion="NONE" name="IdentityProviderAdminServiceSoap11Binding" type="wsdl" bindingName="{http://provider.identity.carbon.wso2.org}IdentityProviderAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityProviderAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="549fb96d-e26b-464f-a121-1d27dff4d774" isOneWay="false" action="urn:addOpenID" name="addOpenID" bindingOperationName="addOpenID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0c720a96-d824-4c3b-bbd0-c3d0ba5087b7" isOneWay="false" action="urn:extractPrimaryUserName" name="extractPrimaryUserName" bindingOperationName="extractPrimaryUserName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="df4808db-25b2-4dee-a6a1-f37fa92573ac" isOneWay="false" action="urn:getAllOpenIDs" name="getAllOpenIDs" bindingOperationName="getAllOpenIDs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4c94a0d6-ef85-41c6-9114-f3a0bcdb8551" isOneWay="false" action="urn:getPrimaryOpenID" name="getPrimaryOpenID" bindingOperationName="getPrimaryOpenID" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b1c7c339-0757-4d3f-bad8-e5689d3b0d63" isOneWay="false" action="urn:removeOpenID" name="removeOpenID" bindingOperationName="removeOpenID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4d63c744-c732-41de-badf-22a2b68d9723" wsaVersion="NONE" name="IdentityProviderAdminServiceSoap12Binding" type="wsdl" bindingName="{http://provider.identity.carbon.wso2.org}IdentityProviderAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityProviderAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityProviderAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityProviderAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://provider.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://provider.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2352="http://provider.identity.carbon.wso2.org/xsd" xmlns:ax2353="http://base.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentityProviderAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2355="http://provider.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://provider.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentityProviderAdminServiceIdentityProviderException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityProviderException" nillable="true" type="ax2355:IdentityProviderException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPrimaryOpenID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPrimaryOpenIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllOpenIDs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllOpenIDsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeOpenID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="openID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addOpenID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="openID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IdentityProviderAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityProviderAdminServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="extractPrimaryUserName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ppid" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="extractPrimaryUserNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://provider.identity.carbon.wso2.org/xsd" xmlns:ax2354="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityProviderException">
        <xs:complexContent>
          <xs:extension base="ax2353:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="removeOpenIDRequest">
    <wsdl:part name="parameters" element="ns1:removeOpenID"/>
  </wsdl:message>
  <wsdl:message name="getAllOpenIDsRequest">
    <wsdl:part name="parameters" element="ns1:getAllOpenIDs"/>
  </wsdl:message>
  <wsdl:message name="getAllOpenIDsResponse">
    <wsdl:part name="parameters" element="ns1:getAllOpenIDsResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentityProviderAdminServiceIdentityProviderException">
    <wsdl:part name="parameters" element="ns1:IdentityProviderAdminServiceIdentityProviderException"/>
  </wsdl:message>
  <wsdl:message name="addOpenIDRequest">
    <wsdl:part name="parameters" element="ns1:addOpenID"/>
  </wsdl:message>
  <wsdl:message name="extractPrimaryUserNameRequest">
    <wsdl:part name="parameters" element="ns1:extractPrimaryUserName"/>
  </wsdl:message>
  <wsdl:message name="extractPrimaryUserNameResponse">
    <wsdl:part name="parameters" element="ns1:extractPrimaryUserNameResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentityProviderAdminServiceException">
    <wsdl:part name="parameters" element="ns1:IdentityProviderAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="getPrimaryOpenIDRequest">
    <wsdl:part name="parameters" element="ns1:getPrimaryOpenID"/>
  </wsdl:message>
  <wsdl:message name="getPrimaryOpenIDResponse">
    <wsdl:part name="parameters" element="ns1:getPrimaryOpenIDResponse"/>
  </wsdl:message>
  <wsdl:portType name="IdentityProviderAdminServicePortType">
    <wsdl:operation name="removeOpenID">
      <wsdl:input message="tns:removeOpenIDRequest" wsaw:Action="urn:removeOpenID"/>
    </wsdl:operation>
    <wsdl:operation name="getAllOpenIDs">
      <wsdl:input message="tns:getAllOpenIDsRequest" wsaw:Action="urn:getAllOpenIDs"/>
      <wsdl:output message="tns:getAllOpenIDsResponse" wsaw:Action="urn:getAllOpenIDsResponse"/>
      <wsdl:fault message="tns:IdentityProviderAdminServiceIdentityProviderException" name="IdentityProviderAdminServiceIdentityProviderException" wsaw:Action="urn:getAllOpenIDsIdentityProviderAdminServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="addOpenID">
      <wsdl:input message="tns:addOpenIDRequest" wsaw:Action="urn:addOpenID"/>
    </wsdl:operation>
    <wsdl:operation name="extractPrimaryUserName">
      <wsdl:input message="tns:extractPrimaryUserNameRequest" wsaw:Action="urn:extractPrimaryUserName"/>
      <wsdl:output message="tns:extractPrimaryUserNameResponse" wsaw:Action="urn:extractPrimaryUserNameResponse"/>
      <wsdl:fault message="tns:IdentityProviderAdminServiceException" name="IdentityProviderAdminServiceException" wsaw:Action="urn:extractPrimaryUserNameIdentityProviderAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getPrimaryOpenID">
      <wsdl:input message="tns:getPrimaryOpenIDRequest" wsaw:Action="urn:getPrimaryOpenID"/>
      <wsdl:output message="tns:getPrimaryOpenIDResponse" wsaw:Action="urn:getPrimaryOpenIDResponse"/>
      <wsdl:fault message="tns:IdentityProviderAdminServiceIdentityProviderException" name="IdentityProviderAdminServiceIdentityProviderException" wsaw:Action="urn:getPrimaryOpenIDIdentityProviderAdminServiceIdentityProviderException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentityProviderAdminServiceSoap11Binding" type="tns:IdentityProviderAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeOpenID">
      <soap:operation soapAction="urn:removeOpenID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllOpenIDs">
      <soap:operation soapAction="urn:getAllOpenIDs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceIdentityProviderException">
        <soap:fault use="literal" name="IdentityProviderAdminServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addOpenID">
      <soap:operation soapAction="urn:addOpenID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="extractPrimaryUserName">
      <soap:operation soapAction="urn:extractPrimaryUserName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceException">
        <soap:fault use="literal" name="IdentityProviderAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrimaryOpenID">
      <soap:operation soapAction="urn:getPrimaryOpenID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceIdentityProviderException">
        <soap:fault use="literal" name="IdentityProviderAdminServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityProviderAdminServiceSoap12Binding" type="tns:IdentityProviderAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeOpenID">
      <soap12:operation soapAction="urn:removeOpenID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllOpenIDs">
      <soap12:operation soapAction="urn:getAllOpenIDs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceIdentityProviderException">
        <soap12:fault use="literal" name="IdentityProviderAdminServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addOpenID">
      <soap12:operation soapAction="urn:addOpenID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="extractPrimaryUserName">
      <soap12:operation soapAction="urn:extractPrimaryUserName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceException">
        <soap12:fault use="literal" name="IdentityProviderAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrimaryOpenID">
      <soap12:operation soapAction="urn:getPrimaryOpenID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderAdminServiceIdentityProviderException">
        <soap12:fault use="literal" name="IdentityProviderAdminServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityProviderAdminServiceHttpBinding" type="tns:IdentityProviderAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="removeOpenID">
      <http:operation location="removeOpenID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllOpenIDs">
      <http:operation location="getAllOpenIDs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addOpenID">
      <http:operation location="addOpenID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="extractPrimaryUserName">
      <http:operation location="extractPrimaryUserName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPrimaryOpenID">
      <http:operation location="getPrimaryOpenID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentityProviderAdminService">
    <wsdl:port name="IdentityProviderAdminServiceHttpsSoap11Endpoint" binding="tns:IdentityProviderAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityProviderAdminServiceHttpsSoap12Endpoint" binding="tns:IdentityProviderAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityProviderAdminServiceHttpsEndpoint" binding="tns:IdentityProviderAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityProviderAdminService.IdentityProviderAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="6dbfb787-60ac-473d-bc15-bcb1b49ef1c9" isOneWay="false" action="urn:addOpenID" name="addOpenID" bindingOperationName="addOpenID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="da3d3342-9668-424d-9e85-c41eae78bb37" isOneWay="false" action="urn:extractPrimaryUserName" name="extractPrimaryUserName" bindingOperationName="extractPrimaryUserName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c5bf30ca-68fa-43fe-894d-174b7d8faf1a" isOneWay="false" action="urn:getAllOpenIDs" name="getAllOpenIDs" bindingOperationName="getAllOpenIDs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1a05f379-5f77-4a7a-8d25-5d2cd8592792" isOneWay="false" action="urn:getPrimaryOpenID" name="getPrimaryOpenID" bindingOperationName="getPrimaryOpenID" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5f3b69ab-a39b-4cc4-b2a1-50018f86af7a" isOneWay="false" action="urn:removeOpenID" name="removeOpenID" bindingOperationName="removeOpenID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b61d02bd-86d5-428d-9752-262f95e684d4" wsaVersion="NONE" name="IdentityProviderMgtServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.idp.carbon.wso2.org}IdentityProviderMgtServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityProviderMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="43eb4951-46be-4e8c-9de3-33dcdc2f9b39" isOneWay="false" action="urn:addIdP" name="addIdP" bindingOperationName="addIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa615df1-02c3-4ad3-b356-74b3a1562e96" isOneWay="false" action="urn:deleteIdP" name="deleteIdP" bindingOperationName="deleteIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f86429d4-1b68-4f73-afb3-4ad3b65b9100" isOneWay="false" action="urn:getAllFederatedAuthenticators" name="getAllFederatedAuthenticators" bindingOperationName="getAllFederatedAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9649072a-22dd-440d-bd62-9d2245e5b38a" isOneWay="false" action="urn:getAllIdPs" name="getAllIdPs" bindingOperationName="getAllIdPs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3b0a5b30-a2d5-43c7-9b45-505c2da493c9" isOneWay="false" action="urn:getAllLocalClaimUris" name="getAllLocalClaimUris" bindingOperationName="getAllLocalClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e205d226-4253-4698-b9ee-385183b69006" isOneWay="false" action="urn:getAllProvisioningConnectors" name="getAllProvisioningConnectors" bindingOperationName="getAllProvisioningConnectors" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1282713d-9dbc-4f2a-8d73-573bdf37fc7c" isOneWay="false" action="urn:getEnabledAllIdPs" name="getEnabledAllIdPs" bindingOperationName="getEnabledAllIdPs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cf12bff0-0da0-4643-954e-7dfa9258b565" isOneWay="false" action="urn:getIdPByName" name="getIdPByName" bindingOperationName="getIdPByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5cb14258-c5aa-48f2-8378-52b2e1a3b05d" isOneWay="false" action="urn:getResidentIdP" name="getResidentIdP" bindingOperationName="getResidentIdP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="20c1e09d-92ec-4cca-b6f3-ada9617a3b72" isOneWay="false" action="urn:updateIdP" name="updateIdP" bindingOperationName="updateIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d170b4b4-df57-4e25-83f3-4e644c0a9569" isOneWay="false" action="urn:updateResidentIdP" name="updateResidentIdP" bindingOperationName="updateResidentIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="dcf62abe-dd09-4fc9-aa96-e5933279c76e" wsaVersion="NONE" name="IdentityProviderMgtServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.idp.carbon.wso2.org}IdentityProviderMgtServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityProviderMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityProviderMgtService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentityProviderMgtService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.idp.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2434="http://mgt.idp.carbon.wso2.org/xsd" xmlns:ax2435="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://mgt.idp.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2438="http://model.common.application.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentityProviderMgtService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://model.common.application.identity.carbon.wso2.org/xsd">
      <xs:complexType name="ProvisioningConnectorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="blocking" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningProperties" nillable="true" type="ax2438:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Property">
        <xs:sequence>
          <xs:element minOccurs="0" name="confidential" type="xs:boolean"/>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IdentityProvider">
        <xs:sequence>
          <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="certificate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimConfig" nillable="true" type="ax2438:ClaimConfig"/>
          <xs:element minOccurs="0" name="defaultAuthenticatorConfig" nillable="true" type="ax2438:FederatedAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="defaultProvisioningConnectorConfig" nillable="true" type="ax2438:ProvisioningConnectorConfig"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enable" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="federatedAuthenticatorConfigs" nillable="true" type="ax2438:FederatedAuthenticatorConfig"/>
          <xs:element minOccurs="0" name="federationHub" type="xs:boolean"/>
          <xs:element minOccurs="0" name="homeRealmId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identityProviderDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identityProviderName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpProperties" nillable="true" type="ax2438:IdentityProviderProperty"/>
          <xs:element minOccurs="0" name="justInTimeProvisioningConfig" nillable="true" type="ax2438:JustInTimeProvisioningConfig"/>
          <xs:element minOccurs="0" name="permissionAndRoleConfig" nillable="true" type="ax2438:PermissionsAndRoleConfig"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="provisioningConnectorConfigs" nillable="true" type="ax2438:ProvisioningConnectorConfig"/>
          <xs:element minOccurs="0" name="provisioningRole" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="alwaysSendMappedLocalSubjectId" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="claimMappings" nillable="true" type="ax2438:ClaimMapping"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpClaims" nillable="true" type="ax2438:Claim"/>
          <xs:element minOccurs="0" name="localClaimDialect" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleClaimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userClaimURI" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="localClaim" nillable="true" type="ax2438:Claim"/>
          <xs:element minOccurs="0" name="remoteClaim" nillable="true" type="ax2438:Claim"/>
          <xs:element minOccurs="0" name="requested" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Claim">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimId" type="xs:int"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FederatedAuthenticatorConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2438:Property"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="IdentityProviderProperty">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InboundProvisioningConfig">
        <xs:sequence>
          <xs:element minOccurs="0" name="dumbMode" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provisioningEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provisioningUserStore" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="JustInTimeProvisioningConfig">
        <xs:complexContent>
          <xs:extension base="ax2438:InboundProvisioningConfig">
            <xs:sequence>
              <xs:element minOccurs="0" name="userStoreClaimUri" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="PermissionsAndRoleConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpRoles" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="ax2438:ApplicationPermission"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roleMappings" nillable="true" type="ax2438:RoleMapping"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ApplicationPermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RoleMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="localRole" nillable="true" type="ax2438:LocalRole"/>
          <xs:element minOccurs="0" name="remoteRole" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LocalRole">
        <xs:sequence>
          <xs:element minOccurs="0" name="localRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userStoreId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.idp.carbon.wso2.org" xmlns:ax2437="http://mgt.idp.carbon.wso2.org/xsd" xmlns:ax2439="http://model.common.application.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.idp.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://model.common.application.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityProviderManagementException" nillable="true" type="ax2434:IdentityProviderManagementException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProvisioningConnectors">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProvisioningConnectorsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2438:ProvisioningConnectorConfig"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateResidentIdP">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identityProvider" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllIdPs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllIdPsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEnabledAllIdPs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEnabledAllIdPsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getIdPByName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idPName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getIdPByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateIdP">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="oldIdPName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="identityProvider" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllFederatedAuthenticators">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllFederatedAuthenticatorsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2438:FederatedAuthenticatorConfig"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResidentIdP">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResidentIdPResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteIdP">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idPName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalClaimUris">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLocalClaimUrisResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addIdP">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identityProvider" nillable="true" type="ax2438:IdentityProvider"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.idp.carbon.wso2.org/xsd" xmlns:ax2436="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityProviderManagementException">
        <xs:complexContent>
          <xs:extension base="ax2435:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAllIdPsRequest">
    <wsdl:part name="parameters" element="ns:getAllIdPs"/>
  </wsdl:message>
  <wsdl:message name="getAllIdPsResponse">
    <wsdl:part name="parameters" element="ns:getAllIdPsResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentityProviderMgtServiceIdentityProviderManagementException">
    <wsdl:part name="parameters" element="ns:IdentityProviderMgtServiceIdentityProviderManagementException"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalClaimUrisRequest">
    <wsdl:part name="parameters" element="ns:getAllLocalClaimUris"/>
  </wsdl:message>
  <wsdl:message name="getAllLocalClaimUrisResponse">
    <wsdl:part name="parameters" element="ns:getAllLocalClaimUrisResponse"/>
  </wsdl:message>
  <wsdl:message name="addIdPRequest">
    <wsdl:part name="parameters" element="ns:addIdP"/>
  </wsdl:message>
  <wsdl:message name="getResidentIdPRequest">
    <wsdl:part name="parameters" element="ns:getResidentIdP"/>
  </wsdl:message>
  <wsdl:message name="getResidentIdPResponse">
    <wsdl:part name="parameters" element="ns:getResidentIdPResponse"/>
  </wsdl:message>
  <wsdl:message name="getEnabledAllIdPsRequest">
    <wsdl:part name="parameters" element="ns:getEnabledAllIdPs"/>
  </wsdl:message>
  <wsdl:message name="getEnabledAllIdPsResponse">
    <wsdl:part name="parameters" element="ns:getEnabledAllIdPsResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllFederatedAuthenticatorsRequest">
    <wsdl:part name="parameters" element="ns:getAllFederatedAuthenticators"/>
  </wsdl:message>
  <wsdl:message name="getAllFederatedAuthenticatorsResponse">
    <wsdl:part name="parameters" element="ns:getAllFederatedAuthenticatorsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateResidentIdPRequest">
    <wsdl:part name="parameters" element="ns:updateResidentIdP"/>
  </wsdl:message>
  <wsdl:message name="deleteIdPRequest">
    <wsdl:part name="parameters" element="ns:deleteIdP"/>
  </wsdl:message>
  <wsdl:message name="getIdPByNameRequest">
    <wsdl:part name="parameters" element="ns:getIdPByName"/>
  </wsdl:message>
  <wsdl:message name="getIdPByNameResponse">
    <wsdl:part name="parameters" element="ns:getIdPByNameResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllProvisioningConnectorsRequest">
    <wsdl:part name="parameters" element="ns:getAllProvisioningConnectors"/>
  </wsdl:message>
  <wsdl:message name="getAllProvisioningConnectorsResponse">
    <wsdl:part name="parameters" element="ns:getAllProvisioningConnectorsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateIdPRequest">
    <wsdl:part name="parameters" element="ns:updateIdP"/>
  </wsdl:message>
  <wsdl:portType name="IdentityProviderMgtServicePortType">
    <wsdl:operation name="getAllIdPs">
      <wsdl:input message="ns:getAllIdPsRequest" wsaw:Action="urn:getAllIdPs"/>
      <wsdl:output message="ns:getAllIdPsResponse" wsaw:Action="urn:getAllIdPsResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getAllIdPsIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <wsdl:input message="ns:getAllLocalClaimUrisRequest" wsaw:Action="urn:getAllLocalClaimUris"/>
      <wsdl:output message="ns:getAllLocalClaimUrisResponse" wsaw:Action="urn:getAllLocalClaimUrisResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getAllLocalClaimUrisIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="addIdP">
      <wsdl:input message="ns:addIdPRequest" wsaw:Action="urn:addIdP"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:addIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getResidentIdP">
      <wsdl:input message="ns:getResidentIdPRequest" wsaw:Action="urn:getResidentIdP"/>
      <wsdl:output message="ns:getResidentIdPResponse" wsaw:Action="urn:getResidentIdPResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getResidentIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getEnabledAllIdPs">
      <wsdl:input message="ns:getEnabledAllIdPsRequest" wsaw:Action="urn:getEnabledAllIdPs"/>
      <wsdl:output message="ns:getEnabledAllIdPsResponse" wsaw:Action="urn:getEnabledAllIdPsResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getEnabledAllIdPsIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllFederatedAuthenticators">
      <wsdl:input message="ns:getAllFederatedAuthenticatorsRequest" wsaw:Action="urn:getAllFederatedAuthenticators"/>
      <wsdl:output message="ns:getAllFederatedAuthenticatorsResponse" wsaw:Action="urn:getAllFederatedAuthenticatorsResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getAllFederatedAuthenticatorsIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="updateResidentIdP">
      <wsdl:input message="ns:updateResidentIdPRequest" wsaw:Action="urn:updateResidentIdP"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:updateResidentIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteIdP">
      <wsdl:input message="ns:deleteIdPRequest" wsaw:Action="urn:deleteIdP"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:deleteIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getIdPByName">
      <wsdl:input message="ns:getIdPByNameRequest" wsaw:Action="urn:getIdPByName"/>
      <wsdl:output message="ns:getIdPByNameResponse" wsaw:Action="urn:getIdPByNameResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getIdPByNameIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllProvisioningConnectors">
      <wsdl:input message="ns:getAllProvisioningConnectorsRequest" wsaw:Action="urn:getAllProvisioningConnectors"/>
      <wsdl:output message="ns:getAllProvisioningConnectorsResponse" wsaw:Action="urn:getAllProvisioningConnectorsResponse"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:getAllProvisioningConnectorsIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
    <wsdl:operation name="updateIdP">
      <wsdl:input message="ns:updateIdPRequest" wsaw:Action="urn:updateIdP"/>
      <wsdl:fault message="ns:IdentityProviderMgtServiceIdentityProviderManagementException" name="IdentityProviderMgtServiceIdentityProviderManagementException" wsaw:Action="urn:updateIdPIdentityProviderMgtServiceIdentityProviderManagementException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentityProviderMgtServiceSoap11Binding" type="ns:IdentityProviderMgtServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllIdPs">
      <soap:operation soapAction="urn:getAllIdPs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <soap:operation soapAction="urn:getAllLocalClaimUris" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addIdP">
      <soap:operation soapAction="urn:addIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResidentIdP">
      <soap:operation soapAction="urn:getResidentIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEnabledAllIdPs">
      <soap:operation soapAction="urn:getEnabledAllIdPs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllFederatedAuthenticators">
      <soap:operation soapAction="urn:getAllFederatedAuthenticators" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateResidentIdP">
      <soap:operation soapAction="urn:updateResidentIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteIdP">
      <soap:operation soapAction="urn:deleteIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIdPByName">
      <soap:operation soapAction="urn:getIdPByName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProvisioningConnectors">
      <soap:operation soapAction="urn:getAllProvisioningConnectors" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateIdP">
      <soap:operation soapAction="urn:updateIdP" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityProviderMgtServiceSoap12Binding" type="ns:IdentityProviderMgtServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllIdPs">
      <soap12:operation soapAction="urn:getAllIdPs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <soap12:operation soapAction="urn:getAllLocalClaimUris" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addIdP">
      <soap12:operation soapAction="urn:addIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResidentIdP">
      <soap12:operation soapAction="urn:getResidentIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEnabledAllIdPs">
      <soap12:operation soapAction="urn:getEnabledAllIdPs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllFederatedAuthenticators">
      <soap12:operation soapAction="urn:getAllFederatedAuthenticators" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateResidentIdP">
      <soap12:operation soapAction="urn:updateResidentIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteIdP">
      <soap12:operation soapAction="urn:deleteIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIdPByName">
      <soap12:operation soapAction="urn:getIdPByName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProvisioningConnectors">
      <soap12:operation soapAction="urn:getAllProvisioningConnectors" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateIdP">
      <soap12:operation soapAction="urn:updateIdP" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentityProviderMgtServiceIdentityProviderManagementException">
        <soap12:fault use="literal" name="IdentityProviderMgtServiceIdentityProviderManagementException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentityProviderMgtServiceHttpBinding" type="ns:IdentityProviderMgtServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAllIdPs">
      <http:operation location="getAllIdPs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllLocalClaimUris">
      <http:operation location="getAllLocalClaimUris"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addIdP">
      <http:operation location="addIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getResidentIdP">
      <http:operation location="getResidentIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEnabledAllIdPs">
      <http:operation location="getEnabledAllIdPs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllFederatedAuthenticators">
      <http:operation location="getAllFederatedAuthenticators"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateResidentIdP">
      <http:operation location="updateResidentIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteIdP">
      <http:operation location="deleteIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getIdPByName">
      <http:operation location="getIdPByName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllProvisioningConnectors">
      <http:operation location="getAllProvisioningConnectors"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateIdP">
      <http:operation location="updateIdP"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentityProviderMgtService">
    <wsdl:port name="IdentityProviderMgtServiceHttpsSoap11Endpoint" binding="ns:IdentityProviderMgtServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityProviderMgtServiceHttpsSoap12Endpoint" binding="ns:IdentityProviderMgtServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentityProviderMgtServiceHttpsEndpoint" binding="ns:IdentityProviderMgtServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentityProviderMgtService.IdentityProviderMgtServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="0ebe7a0b-2daf-4a27-b35f-94e2aaa9f577" isOneWay="false" action="urn:addIdP" name="addIdP" bindingOperationName="addIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f88c194a-8e6d-4b72-ae5e-4950cd72b4fe" isOneWay="false" action="urn:deleteIdP" name="deleteIdP" bindingOperationName="deleteIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69313bf9-9b3b-4024-a65e-7e47ee1b6a41" isOneWay="false" action="urn:getAllFederatedAuthenticators" name="getAllFederatedAuthenticators" bindingOperationName="getAllFederatedAuthenticators" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="952c413e-23b7-47cf-a58c-9e05e45b22c7" isOneWay="false" action="urn:getAllIdPs" name="getAllIdPs" bindingOperationName="getAllIdPs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="517ecdd7-cb24-49b1-95d5-58e38d9630ae" isOneWay="false" action="urn:getAllLocalClaimUris" name="getAllLocalClaimUris" bindingOperationName="getAllLocalClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d55d6a18-52fa-4272-8575-2b8be4b6c204" isOneWay="false" action="urn:getAllProvisioningConnectors" name="getAllProvisioningConnectors" bindingOperationName="getAllProvisioningConnectors" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="98351fc5-317b-4fcc-b53f-8eced58a9c42" isOneWay="false" action="urn:getEnabledAllIdPs" name="getEnabledAllIdPs" bindingOperationName="getEnabledAllIdPs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ece3bd2f-da21-4184-92a3-61821e966ffc" isOneWay="false" action="urn:getIdPByName" name="getIdPByName" bindingOperationName="getIdPByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1d3ce0c0-e080-4149-8fcd-2e42d5f71685" isOneWay="false" action="urn:getResidentIdP" name="getResidentIdP" bindingOperationName="getResidentIdP" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9530f65b-c3f5-4168-ac32-2dcd82b7a32f" isOneWay="false" action="urn:updateIdP" name="updateIdP" bindingOperationName="updateIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7f35048-072d-4b43-9c53-f0e2589c30b5" isOneWay="false" action="urn:updateResidentIdP" name="updateResidentIdP" bindingOperationName="updateResidentIdP" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ffe691c4-1205-47a5-b25e-66578f33c037" wsaVersion="NONE" name="IdentitySAMLSSOConfigServiceSoap11Binding" type="wsdl" bindingName="{http://saml.sso.identity.carbon.wso2.org}IdentitySAMLSSOConfigServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentitySAMLSSOConfigService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="bd998f28-e819-4bb9-8b62-cfddf414a297" isOneWay="false" action="urn:addRPServiceProvider" name="addRPServiceProvider" bindingOperationName="addRPServiceProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="19af2ba5-ede4-4919-a477-fe78d9f7309a" isOneWay="false" action="urn:getCertAliasOfPrimaryKeyStore" name="getCertAliasOfPrimaryKeyStore" bindingOperationName="getCertAliasOfPrimaryKeyStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="948e9a1a-3217-426c-aad7-eecb0d57d7ef" isOneWay="false" action="urn:getClaimURIs" name="getClaimURIs" bindingOperationName="getClaimURIs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8d2fdefb-41d6-4c60-b0dd-562fe77bf327" isOneWay="false" action="urn:getDigestAlgorithmURIByConfig" name="getDigestAlgorithmURIByConfig" bindingOperationName="getDigestAlgorithmURIByConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cc31fb54-0f9f-45a2-9a91-7d1bf32af916" isOneWay="false" action="urn:getDigestAlgorithmURIs" name="getDigestAlgorithmURIs" bindingOperationName="getDigestAlgorithmURIs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="87848561-289e-4be1-a0e7-c7691dd1a9fc" isOneWay="false" action="urn:getServiceProviders" name="getServiceProviders" bindingOperationName="getServiceProviders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e9d89e59-208d-4fe0-94ff-25aef108df70" isOneWay="false" action="urn:getSigningAlgorithmUriByConfig" name="getSigningAlgorithmUriByConfig" bindingOperationName="getSigningAlgorithmUriByConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="54170cf1-ea39-48fa-ab13-ad513aa87dde" isOneWay="false" action="urn:getSigningAlgorithmUris" name="getSigningAlgorithmUris" bindingOperationName="getSigningAlgorithmUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2f6e761e-436b-4a41-8b26-cb5752611877" isOneWay="false" action="urn:removeServiceProvider" name="removeServiceProvider" bindingOperationName="removeServiceProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="59762b63-0f52-4d58-94e4-ed47e850b687" wsaVersion="NONE" name="IdentitySAMLSSOConfigServiceSoap12Binding" type="wsdl" bindingName="{http://saml.sso.identity.carbon.wso2.org}IdentitySAMLSSOConfigServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentitySAMLSSOConfigService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentitySAMLSSOConfigService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentitySAMLSSOConfigService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://saml.sso.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2380="http://base.identity.carbon.wso2.org/xsd" xmlns:tns="http://saml.sso.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax2382="http://dto.saml.sso.identity.carbon.wso2.org/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentitySAMLSSOConfigService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2381="http://base.identity.carbon.wso2.org/xsd" xmlns:ax2383="http://dto.saml.sso.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.saml.sso.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentitySAMLSSOConfigServiceIdentityException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityException" nillable="true" type="ax2380:IdentityException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRPServiceProvider">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="spDto" nillable="true" type="ax2382:SAMLSSOServiceProviderDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRPServiceProviderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceProviders">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceProvidersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2382:SAMLSSOServiceProviderInfoDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCertAliasOfPrimaryKeyStore">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCertAliasOfPrimaryKeyStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSigningAlgorithmUris">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSigningAlgorithmUrisResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSigningAlgorithmUriByConfig">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSigningAlgorithmUriByConfigResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDigestAlgorithmURIs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDigestAlgorithmURIsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDigestAlgorithmURIByConfig">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDigestAlgorithmURIByConfigResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServiceProvider">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="issuer" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServiceProviderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimURIs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimURIsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.saml.sso.identity.carbon.wso2.org/xsd">
      <xs:complexType name="SAMLSSOServiceProviderDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="assertionConsumerUrl" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="assertionConsumerUrls" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="attributeConsumingServiceIndex" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="certAlias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="defaultAssertionConsumerUrl" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="digestAlgorithmURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="doEnableEncryptedAssertion" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doSignAssertions" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doSignResponse" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doSingleLogout" type="xs:boolean"/>
          <xs:element minOccurs="0" name="doValidateSignatureInRequests" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableAttributeProfile" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableAttributesByDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="idPInitSLOEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="idPInitSSOEnabled" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="idpInitSLOReturnToURLs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="issuer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="loginPageURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nameIDFormat" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nameIdClaimUri" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requestedAudiences" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requestedClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requestedRecipients" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="signingAlgorithmURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sloRequestURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sloResponseURL" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SAMLSSOServiceProviderInfoDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="pubCertFilePath" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceProviders" nillable="true" type="ax2382:SAMLSSOServiceProviderDTO"/>
          <xs:element minOccurs="0" name="tenantZero" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getSigningAlgorithmUrisRequest">
    <wsdl:part name="parameters" element="ns1:getSigningAlgorithmUris"/>
  </wsdl:message>
  <wsdl:message name="getSigningAlgorithmUrisResponse">
    <wsdl:part name="parameters" element="ns1:getSigningAlgorithmUrisResponse"/>
  </wsdl:message>
  <wsdl:message name="getSigningAlgorithmUriByConfigRequest">
    <wsdl:part name="parameters" element="ns1:getSigningAlgorithmUriByConfig"/>
  </wsdl:message>
  <wsdl:message name="getSigningAlgorithmUriByConfigResponse">
    <wsdl:part name="parameters" element="ns1:getSigningAlgorithmUriByConfigResponse"/>
  </wsdl:message>
  <wsdl:message name="getDigestAlgorithmURIByConfigRequest">
    <wsdl:part name="parameters" element="ns1:getDigestAlgorithmURIByConfig"/>
  </wsdl:message>
  <wsdl:message name="getDigestAlgorithmURIByConfigResponse">
    <wsdl:part name="parameters" element="ns1:getDigestAlgorithmURIByConfigResponse"/>
  </wsdl:message>
  <wsdl:message name="getClaimURIsRequest">
    <wsdl:part name="parameters" element="ns1:getClaimURIs"/>
  </wsdl:message>
  <wsdl:message name="getClaimURIsResponse">
    <wsdl:part name="parameters" element="ns1:getClaimURIsResponse"/>
  </wsdl:message>
  <wsdl:message name="IdentitySAMLSSOConfigServiceIdentityException">
    <wsdl:part name="parameters" element="ns1:IdentitySAMLSSOConfigServiceIdentityException"/>
  </wsdl:message>
  <wsdl:message name="addRPServiceProviderRequest">
    <wsdl:part name="parameters" element="ns1:addRPServiceProvider"/>
  </wsdl:message>
  <wsdl:message name="addRPServiceProviderResponse">
    <wsdl:part name="parameters" element="ns1:addRPServiceProviderResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceProvidersRequest">
    <wsdl:part name="parameters" element="ns1:getServiceProviders"/>
  </wsdl:message>
  <wsdl:message name="getServiceProvidersResponse">
    <wsdl:part name="parameters" element="ns1:getServiceProvidersResponse"/>
  </wsdl:message>
  <wsdl:message name="getCertAliasOfPrimaryKeyStoreRequest">
    <wsdl:part name="parameters" element="ns1:getCertAliasOfPrimaryKeyStore"/>
  </wsdl:message>
  <wsdl:message name="getCertAliasOfPrimaryKeyStoreResponse">
    <wsdl:part name="parameters" element="ns1:getCertAliasOfPrimaryKeyStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="getDigestAlgorithmURIsRequest">
    <wsdl:part name="parameters" element="ns1:getDigestAlgorithmURIs"/>
  </wsdl:message>
  <wsdl:message name="getDigestAlgorithmURIsResponse">
    <wsdl:part name="parameters" element="ns1:getDigestAlgorithmURIsResponse"/>
  </wsdl:message>
  <wsdl:message name="removeServiceProviderRequest">
    <wsdl:part name="parameters" element="ns1:removeServiceProvider"/>
  </wsdl:message>
  <wsdl:message name="removeServiceProviderResponse">
    <wsdl:part name="parameters" element="ns1:removeServiceProviderResponse"/>
  </wsdl:message>
  <wsdl:portType name="IdentitySAMLSSOConfigServicePortType">
    <wsdl:operation name="getSigningAlgorithmUris">
      <wsdl:input message="tns:getSigningAlgorithmUrisRequest" wsaw:Action="urn:getSigningAlgorithmUris"/>
      <wsdl:output message="tns:getSigningAlgorithmUrisResponse" wsaw:Action="urn:getSigningAlgorithmUrisResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSigningAlgorithmUriByConfig">
      <wsdl:input message="tns:getSigningAlgorithmUriByConfigRequest" wsaw:Action="urn:getSigningAlgorithmUriByConfig"/>
      <wsdl:output message="tns:getSigningAlgorithmUriByConfigResponse" wsaw:Action="urn:getSigningAlgorithmUriByConfigResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIByConfig">
      <wsdl:input message="tns:getDigestAlgorithmURIByConfigRequest" wsaw:Action="urn:getDigestAlgorithmURIByConfig"/>
      <wsdl:output message="tns:getDigestAlgorithmURIByConfigResponse" wsaw:Action="urn:getDigestAlgorithmURIByConfigResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimURIs">
      <wsdl:input message="tns:getClaimURIsRequest" wsaw:Action="urn:getClaimURIs"/>
      <wsdl:output message="tns:getClaimURIsResponse" wsaw:Action="urn:getClaimURIsResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:getClaimURIsIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="addRPServiceProvider">
      <wsdl:input message="tns:addRPServiceProviderRequest" wsaw:Action="urn:addRPServiceProvider"/>
      <wsdl:output message="tns:addRPServiceProviderResponse" wsaw:Action="urn:addRPServiceProviderResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:addRPServiceProviderIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviders">
      <wsdl:input message="tns:getServiceProvidersRequest" wsaw:Action="urn:getServiceProviders"/>
      <wsdl:output message="tns:getServiceProvidersResponse" wsaw:Action="urn:getServiceProvidersResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:getServiceProvidersIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <wsdl:input message="tns:getCertAliasOfPrimaryKeyStoreRequest" wsaw:Action="urn:getCertAliasOfPrimaryKeyStore"/>
      <wsdl:output message="tns:getCertAliasOfPrimaryKeyStoreResponse" wsaw:Action="urn:getCertAliasOfPrimaryKeyStoreResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:getCertAliasOfPrimaryKeyStoreIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIs">
      <wsdl:input message="tns:getDigestAlgorithmURIsRequest" wsaw:Action="urn:getDigestAlgorithmURIs"/>
      <wsdl:output message="tns:getDigestAlgorithmURIsResponse" wsaw:Action="urn:getDigestAlgorithmURIsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeServiceProvider">
      <wsdl:input message="tns:removeServiceProviderRequest" wsaw:Action="urn:removeServiceProvider"/>
      <wsdl:output message="tns:removeServiceProviderResponse" wsaw:Action="urn:removeServiceProviderResponse"/>
      <wsdl:fault message="tns:IdentitySAMLSSOConfigServiceIdentityException" name="IdentitySAMLSSOConfigServiceIdentityException" wsaw:Action="urn:removeServiceProviderIdentitySAMLSSOConfigServiceIdentityException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentitySAMLSSOConfigServiceSoap11Binding" type="tns:IdentitySAMLSSOConfigServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSigningAlgorithmUris">
      <soap:operation soapAction="urn:getSigningAlgorithmUris" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSigningAlgorithmUriByConfig">
      <soap:operation soapAction="urn:getSigningAlgorithmUriByConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIByConfig">
      <soap:operation soapAction="urn:getDigestAlgorithmURIByConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClaimURIs">
      <soap:operation soapAction="urn:getClaimURIs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRPServiceProvider">
      <soap:operation soapAction="urn:addRPServiceProvider" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviders">
      <soap:operation soapAction="urn:getServiceProviders" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <soap:operation soapAction="urn:getCertAliasOfPrimaryKeyStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIs">
      <soap:operation soapAction="urn:getDigestAlgorithmURIs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceProvider">
      <soap:operation soapAction="urn:removeServiceProvider" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentitySAMLSSOConfigServiceSoap12Binding" type="tns:IdentitySAMLSSOConfigServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSigningAlgorithmUris">
      <soap12:operation soapAction="urn:getSigningAlgorithmUris" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSigningAlgorithmUriByConfig">
      <soap12:operation soapAction="urn:getSigningAlgorithmUriByConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIByConfig">
      <soap12:operation soapAction="urn:getDigestAlgorithmURIByConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClaimURIs">
      <soap12:operation soapAction="urn:getClaimURIs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRPServiceProvider">
      <soap12:operation soapAction="urn:addRPServiceProvider" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviders">
      <soap12:operation soapAction="urn:getServiceProviders" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <soap12:operation soapAction="urn:getCertAliasOfPrimaryKeyStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIs">
      <soap12:operation soapAction="urn:getDigestAlgorithmURIs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceProvider">
      <soap12:operation soapAction="urn:removeServiceProvider" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySAMLSSOConfigServiceIdentityException">
        <soap12:fault use="literal" name="IdentitySAMLSSOConfigServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentitySAMLSSOConfigServiceHttpBinding" type="tns:IdentitySAMLSSOConfigServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getSigningAlgorithmUris">
      <http:operation location="getSigningAlgorithmUris"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSigningAlgorithmUriByConfig">
      <http:operation location="getSigningAlgorithmUriByConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIByConfig">
      <http:operation location="getDigestAlgorithmURIByConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClaimURIs">
      <http:operation location="getClaimURIs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRPServiceProvider">
      <http:operation location="addRPServiceProvider"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceProviders">
      <http:operation location="getServiceProviders"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <http:operation location="getCertAliasOfPrimaryKeyStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDigestAlgorithmURIs">
      <http:operation location="getDigestAlgorithmURIs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceProvider">
      <http:operation location="removeServiceProvider"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentitySAMLSSOConfigService">
    <wsdl:port name="IdentitySAMLSSOConfigServiceHttpsSoap11Endpoint" binding="tns:IdentitySAMLSSOConfigServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentitySAMLSSOConfigServiceHttpsSoap12Endpoint" binding="tns:IdentitySAMLSSOConfigServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentitySAMLSSOConfigServiceHttpsEndpoint" binding="tns:IdentitySAMLSSOConfigServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentitySAMLSSOConfigService.IdentitySAMLSSOConfigServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="73487883-6f45-4915-b812-4ab19a02b235" isOneWay="false" action="urn:addRPServiceProvider" name="addRPServiceProvider" bindingOperationName="addRPServiceProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79bb47c7-9038-4b89-aac1-6ab2b43dd3bc" isOneWay="false" action="urn:getCertAliasOfPrimaryKeyStore" name="getCertAliasOfPrimaryKeyStore" bindingOperationName="getCertAliasOfPrimaryKeyStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3dada601-bafe-4df6-b269-d0f0c912b31e" isOneWay="false" action="urn:getClaimURIs" name="getClaimURIs" bindingOperationName="getClaimURIs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b477930a-1381-4c58-ae23-3f844916705f" isOneWay="false" action="urn:getDigestAlgorithmURIByConfig" name="getDigestAlgorithmURIByConfig" bindingOperationName="getDigestAlgorithmURIByConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6cee679b-021e-4007-b05f-673e61332456" isOneWay="false" action="urn:getDigestAlgorithmURIs" name="getDigestAlgorithmURIs" bindingOperationName="getDigestAlgorithmURIs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1698c230-312e-4477-b637-d136dcae1760" isOneWay="false" action="urn:getServiceProviders" name="getServiceProviders" bindingOperationName="getServiceProviders" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fba954c7-7e7c-4728-8dc7-62e725cb1420" isOneWay="false" action="urn:getSigningAlgorithmUriByConfig" name="getSigningAlgorithmUriByConfig" bindingOperationName="getSigningAlgorithmUriByConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="350fbcc8-b718-48a9-a2f8-08cc5356e036" isOneWay="false" action="urn:getSigningAlgorithmUris" name="getSigningAlgorithmUris" bindingOperationName="getSigningAlgorithmUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e7d9055-880b-4cb2-8a6a-20545ee468de" isOneWay="false" action="urn:removeServiceProvider" name="removeServiceProvider" bindingOperationName="removeServiceProvider" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3421539f-4513-4039-9c70-ae65b3efac27" wsaVersion="NONE" name="IdentitySTSAdminServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.sts.identity.carbon.wso2.org}IdentitySTSAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentitySTSAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="231c711e-5760-4bf2-8019-9e104de1b445" isOneWay="false" action="urn:readCardIssuerConfiguration" name="readCardIssuerConfiguration" bindingOperationName="readCardIssuerConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2b6650ce-96d5-41e6-b800-da59bcd076fb" isOneWay="false" action="urn:updateCardIssueConfiguration" name="updateCardIssueConfiguration" bindingOperationName="updateCardIssueConfiguration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ab73f0a6-8dc9-4cdf-b05c-3973ff055352" wsaVersion="NONE" name="IdentitySTSAdminServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.sts.identity.carbon.wso2.org}IdentitySTSAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentitySTSAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentitySTSAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/IdentitySTSAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.sts.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.sts.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2384="http://dto.mgt.sts.identity.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>IdentitySTSAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2385="http://dto.mgt.sts.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://dto.mgt.sts.identity.carbon.wso2.org/xsd"/>
      <xs:element name="IdentitySTSAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentitySTSAdminServiceException" nillable="true" type="ns1:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="readCardIssuerConfiguration">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="readCardIssuerConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2384:CardIssuerDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateCardIssueConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="issuer" nillable="true" type="ax2384:CardIssuerDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.sts.identity.carbon.wso2.org/xsd">
      <xs:complexType name="CardIssuerDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="cardName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="supportedTokenTypes" nillable="true" type="ax2384:CardIssuerTokenDTO"/>
          <xs:element minOccurs="0" name="symmetricBinding" type="xs:boolean"/>
          <xs:element minOccurs="0" name="validPeriodInDays" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CardIssuerTokenDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="supported" type="xs:boolean"/>
          <xs:element minOccurs="0" name="tokenType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateCardIssueConfigurationRequest">
    <wsdl:part name="parameters" element="ns1:updateCardIssueConfiguration"/>
  </wsdl:message>
  <wsdl:message name="IdentitySTSAdminServiceException">
    <wsdl:part name="parameters" element="ns1:IdentitySTSAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="readCardIssuerConfigurationRequest">
    <wsdl:part name="parameters" element="ns1:readCardIssuerConfiguration"/>
  </wsdl:message>
  <wsdl:message name="readCardIssuerConfigurationResponse">
    <wsdl:part name="parameters" element="ns1:readCardIssuerConfigurationResponse"/>
  </wsdl:message>
  <wsdl:portType name="IdentitySTSAdminServicePortType">
    <wsdl:operation name="updateCardIssueConfiguration">
      <wsdl:input message="tns:updateCardIssueConfigurationRequest" wsaw:Action="urn:updateCardIssueConfiguration"/>
      <wsdl:fault message="tns:IdentitySTSAdminServiceException" name="IdentitySTSAdminServiceException" wsaw:Action="urn:updateCardIssueConfigurationIdentitySTSAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="readCardIssuerConfiguration">
      <wsdl:input message="tns:readCardIssuerConfigurationRequest" wsaw:Action="urn:readCardIssuerConfiguration"/>
      <wsdl:output message="tns:readCardIssuerConfigurationResponse" wsaw:Action="urn:readCardIssuerConfigurationResponse"/>
      <wsdl:fault message="tns:IdentitySTSAdminServiceException" name="IdentitySTSAdminServiceException" wsaw:Action="urn:readCardIssuerConfigurationIdentitySTSAdminServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="IdentitySTSAdminServiceSoap11Binding" type="tns:IdentitySTSAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCardIssueConfiguration">
      <soap:operation soapAction="urn:updateCardIssueConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentitySTSAdminServiceException">
        <soap:fault use="literal" name="IdentitySTSAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readCardIssuerConfiguration">
      <soap:operation soapAction="urn:readCardIssuerConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySTSAdminServiceException">
        <soap:fault use="literal" name="IdentitySTSAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentitySTSAdminServiceSoap12Binding" type="tns:IdentitySTSAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCardIssueConfiguration">
      <soap12:operation soapAction="urn:updateCardIssueConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="IdentitySTSAdminServiceException">
        <soap12:fault use="literal" name="IdentitySTSAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readCardIssuerConfiguration">
      <soap12:operation soapAction="urn:readCardIssuerConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="IdentitySTSAdminServiceException">
        <soap12:fault use="literal" name="IdentitySTSAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="IdentitySTSAdminServiceHttpBinding" type="tns:IdentitySTSAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateCardIssueConfiguration">
      <http:operation location="updateCardIssueConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="readCardIssuerConfiguration">
      <http:operation location="readCardIssuerConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="IdentitySTSAdminService">
    <wsdl:port name="IdentitySTSAdminServiceHttpsSoap11Endpoint" binding="tns:IdentitySTSAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentitySTSAdminServiceHttpsSoap12Endpoint" binding="tns:IdentitySTSAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="IdentitySTSAdminServiceHttpsEndpoint" binding="tns:IdentitySTSAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/IdentitySTSAdminService.IdentitySTSAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="4240015d-60f1-4300-8ca2-9aa8b828de04" isOneWay="false" action="urn:readCardIssuerConfiguration" name="readCardIssuerConfiguration" bindingOperationName="readCardIssuerConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f4d79486-9b2b-4e29-960f-8eb12497808f" isOneWay="false" action="urn:updateCardIssueConfiguration" name="updateCardIssueConfiguration" bindingOperationName="updateCardIssueConfiguration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6ade4147-0160-4ce6-b5c1-0b5ba6f88c4c" wsaVersion="NONE" name="JaggeryAppAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.app.jaggery.jaggeryjs.org}JaggeryAppAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/JaggeryAppAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="c8f83d12-6bce-4d41-9946-72d03700530b" isOneWay="false" action="urn:uploadWebapp" name="uploadWebapp" bindingOperationName="uploadWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="726b49a1-3e5c-4d81-86ec-0a583964b14f" wsaVersion="NONE" name="JaggeryAppAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.app.jaggery.jaggeryjs.org}JaggeryAppAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/JaggeryAppAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/JaggeryAppAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/JaggeryAppAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.app.jaggery.jaggeryjs.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.app.jaggery.jaggeryjs.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax21="http://mgt.webapp.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>JaggeryAppAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax22="http://mgt.webapp.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://mgt.webapp.carbon.wso2.org/xsd"/>
      <xs:element name="uploadWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappUploadDataList" nillable="true" type="ax22:WebappUploadData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadWebappResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.webapp.carbon.wso2.org/xsd">
      <xs:complexType name="WebappUploadData">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="uploadWebappRequest">
    <wsdl:part name="parameters" element="ns1:uploadWebapp"/>
  </wsdl:message>
  <wsdl:message name="uploadWebappResponse">
    <wsdl:part name="parameters" element="ns1:uploadWebappResponse"/>
  </wsdl:message>
  <wsdl:portType name="JaggeryAppAdminPortType">
    <wsdl:operation name="uploadWebapp">
      <wsdl:input message="tns:uploadWebappRequest" wsaw:Action="urn:uploadWebapp"/>
      <wsdl:output message="tns:uploadWebappResponse" wsaw:Action="urn:uploadWebappResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="JaggeryAppAdminSoap11Binding" type="tns:JaggeryAppAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadWebapp">
      <soap:operation soapAction="urn:uploadWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="JaggeryAppAdminSoap12Binding" type="tns:JaggeryAppAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="uploadWebapp">
      <soap12:operation soapAction="urn:uploadWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="JaggeryAppAdminHttpBinding" type="tns:JaggeryAppAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="uploadWebapp">
      <http:operation location="uploadWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="JaggeryAppAdmin">
    <wsdl:port name="JaggeryAppAdminHttpsSoap11Endpoint" binding="tns:JaggeryAppAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="JaggeryAppAdminHttpsSoap12Endpoint" binding="tns:JaggeryAppAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="JaggeryAppAdminHttpsEndpoint" binding="tns:JaggeryAppAdminHttpBinding">
      <http:address location="https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/JaggeryAppAdmin.JaggeryAppAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c1ec60cf-f670-48fd-be0a-6dda3c69b1c3" isOneWay="false" action="urn:uploadWebapp" name="uploadWebapp" bindingOperationName="uploadWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="fbea8026-77e3-4fb1-a31f-8c59121fe587" wsaVersion="NONE" name="KeyStoreAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.keystore.security.carbon.wso2.org}KeyStoreAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/KeyStoreAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="f0b52c71-0366-41cf-a722-45726bf8bb1c" isOneWay="false" action="urn:addKeyStore" name="addKeyStore" bindingOperationName="addKeyStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0a9dba74-1c56-4497-85a8-5c471eac2f77" isOneWay="false" action="urn:addTrustStore" name="addTrustStore" bindingOperationName="addTrustStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d672e6cb-03a1-4d49-b8e4-5a62e6c15893" isOneWay="false" action="urn:deleteStore" name="deleteStore" bindingOperationName="deleteStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8baf8681-c324-4597-9995-45c9650d40fd" isOneWay="false" action="urn:getKeystoreInfo" name="getKeystoreInfo" bindingOperationName="getKeystoreInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="01cb6d72-f730-43a4-80f1-a093319c5094" isOneWay="false" action="urn:getKeyStores" name="getKeyStores" bindingOperationName="getKeyStores" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="47f80231-c893-434b-bc15-53356fe7143e" isOneWay="false" action="urn:getPaginatedKeystoreInfo" name="getPaginatedKeystoreInfo" bindingOperationName="getPaginatedKeystoreInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="82f4ebfc-e153-4f0d-b143-680b3d6908d8" isOneWay="false" action="urn:getStoreEntries" name="getStoreEntries" bindingOperationName="getStoreEntries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0a4e21dd-ed0f-4dc5-b0de-132567ad8289" isOneWay="false" action="urn:importCertToStore" name="importCertToStore" bindingOperationName="importCertToStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7194666-f6c0-400e-adb1-fe3abd637546" isOneWay="false" action="urn:removeCertFromStore" name="removeCertFromStore" bindingOperationName="removeCertFromStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c1bd5e5b-09d8-47ec-9839-a7ff5ca4c177" wsaVersion="NONE" name="KeyStoreAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.keystore.security.carbon.wso2.org}KeyStoreAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/KeyStoreAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/KeyStoreAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/KeyStoreAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.keystore.security.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2553="http://service.keystore.security.carbon.wso2.org/xsd" xmlns:ns="http://service.keystore.security.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2549="http://security.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2550="http://base.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>KeyStoreAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.keystore.security.carbon.wso2.org" xmlns:ax2554="http://service.keystore.security.carbon.wso2.org/xsd" xmlns:ax2552="http://security.carbon.wso2.org/xsd">
      <xs:import namespace="http://security.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://service.keystore.security.carbon.wso2.org/xsd"/>
      <xs:element name="KeyStoreAdminServiceSecurityConfigException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SecurityConfigException" nillable="true" type="ax2549:SecurityConfigException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getKeyStores">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getKeyStoresResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2553:KeyStoreData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addKeyStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fileData" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="filename" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pvtkeyPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTrustStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fileData" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="filename" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importCertToStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileData" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getKeystoreInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getKeystoreInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2553:KeyStoreData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeCertFromStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedKeystoreInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedKeystoreInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2553:PaginatedKeyStoreData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStoreEntries">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStoreEntriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.keystore.security.carbon.wso2.org/xsd">
      <xs:complexType name="KeyStoreData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="certs" nillable="true" type="ax2553:CertData"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="ax2553:CertData"/>
          <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="keyStoreType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="keyValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="privateStore" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pubKeyFilePath" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CertData">
        <xs:sequence>
          <xs:element minOccurs="0" name="alias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="issuerDN" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notAfter" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notBefore" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="publicKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serialNumber" nillable="true" type="xs:integer"/>
          <xs:element minOccurs="0" name="subjectDN" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaginatedKeyStoreData">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="ax2553:CertData"/>
          <xs:element minOccurs="0" name="keyStoreName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="keyStoreType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="keyValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="paginatedCertData" nillable="true" type="ax2553:PaginatedCertData"/>
          <xs:element minOccurs="0" name="privateStore" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pubKeyFilePath" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaginatedCertData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="certDataSet" nillable="true" type="ax2553:CertData"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://security.carbon.wso2.org/xsd" xmlns:ax2551="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="SecurityConfigException">
        <xs:complexContent>
          <xs:extension base="ax2550:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="addKeyStoreRequest">
    <wsdl:part name="parameters" element="ns:addKeyStore"/>
  </wsdl:message>
  <wsdl:message name="KeyStoreAdminServiceSecurityConfigException">
    <wsdl:part name="parameters" element="ns:KeyStoreAdminServiceSecurityConfigException"/>
  </wsdl:message>
  <wsdl:message name="getStoreEntriesRequest">
    <wsdl:part name="parameters" element="ns:getStoreEntries"/>
  </wsdl:message>
  <wsdl:message name="getStoreEntriesResponse">
    <wsdl:part name="parameters" element="ns:getStoreEntriesResponse"/>
  </wsdl:message>
  <wsdl:message name="getKeyStoresRequest">
    <wsdl:part name="parameters" element="ns:getKeyStores"/>
  </wsdl:message>
  <wsdl:message name="getKeyStoresResponse">
    <wsdl:part name="parameters" element="ns:getKeyStoresResponse"/>
  </wsdl:message>
  <wsdl:message name="removeCertFromStoreRequest">
    <wsdl:part name="parameters" element="ns:removeCertFromStore"/>
  </wsdl:message>
  <wsdl:message name="importCertToStoreRequest">
    <wsdl:part name="parameters" element="ns:importCertToStore"/>
  </wsdl:message>
  <wsdl:message name="addTrustStoreRequest">
    <wsdl:part name="parameters" element="ns:addTrustStore"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedKeystoreInfoRequest">
    <wsdl:part name="parameters" element="ns:getPaginatedKeystoreInfo"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedKeystoreInfoResponse">
    <wsdl:part name="parameters" element="ns:getPaginatedKeystoreInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getKeystoreInfoRequest">
    <wsdl:part name="parameters" element="ns:getKeystoreInfo"/>
  </wsdl:message>
  <wsdl:message name="getKeystoreInfoResponse">
    <wsdl:part name="parameters" element="ns:getKeystoreInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteStoreRequest">
    <wsdl:part name="parameters" element="ns:deleteStore"/>
  </wsdl:message>
  <wsdl:portType name="KeyStoreAdminServicePortType">
    <wsdl:operation name="addKeyStore">
      <wsdl:input message="ns:addKeyStoreRequest" wsaw:Action="urn:addKeyStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:addKeyStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getStoreEntries">
      <wsdl:input message="ns:getStoreEntriesRequest" wsaw:Action="urn:getStoreEntries"/>
      <wsdl:output message="ns:getStoreEntriesResponse" wsaw:Action="urn:getStoreEntriesResponse"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:getStoreEntriesKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getKeyStores">
      <wsdl:input message="ns:getKeyStoresRequest" wsaw:Action="urn:getKeyStores"/>
      <wsdl:output message="ns:getKeyStoresResponse" wsaw:Action="urn:getKeyStoresResponse"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:getKeyStoresKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="removeCertFromStore">
      <wsdl:input message="ns:removeCertFromStoreRequest" wsaw:Action="urn:removeCertFromStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:removeCertFromStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="importCertToStore">
      <wsdl:input message="ns:importCertToStoreRequest" wsaw:Action="urn:importCertToStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:importCertToStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="addTrustStore">
      <wsdl:input message="ns:addTrustStoreRequest" wsaw:Action="urn:addTrustStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:addTrustStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedKeystoreInfo">
      <wsdl:input message="ns:getPaginatedKeystoreInfoRequest" wsaw:Action="urn:getPaginatedKeystoreInfo"/>
      <wsdl:output message="ns:getPaginatedKeystoreInfoResponse" wsaw:Action="urn:getPaginatedKeystoreInfoResponse"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:getPaginatedKeystoreInfoKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getKeystoreInfo">
      <wsdl:input message="ns:getKeystoreInfoRequest" wsaw:Action="urn:getKeystoreInfo"/>
      <wsdl:output message="ns:getKeystoreInfoResponse" wsaw:Action="urn:getKeystoreInfoResponse"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:getKeystoreInfoKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteStore">
      <wsdl:input message="ns:deleteStoreRequest" wsaw:Action="urn:deleteStore"/>
      <wsdl:fault message="ns:KeyStoreAdminServiceSecurityConfigException" name="KeyStoreAdminServiceSecurityConfigException" wsaw:Action="urn:deleteStoreKeyStoreAdminServiceSecurityConfigException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="KeyStoreAdminServiceSoap11Binding" type="ns:KeyStoreAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="addKeyStore">
      <soap:operation soapAction="urn:addKeyStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStoreEntries">
      <soap:operation soapAction="urn:getStoreEntries" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKeyStores">
      <soap:operation soapAction="urn:getKeyStores" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCertFromStore">
      <soap:operation soapAction="urn:removeCertFromStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importCertToStore">
      <soap:operation soapAction="urn:importCertToStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTrustStore">
      <soap:operation soapAction="urn:addTrustStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedKeystoreInfo">
      <soap:operation soapAction="urn:getPaginatedKeystoreInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKeystoreInfo">
      <soap:operation soapAction="urn:getKeystoreInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteStore">
      <soap:operation soapAction="urn:deleteStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="KeyStoreAdminServiceSoap12Binding" type="ns:KeyStoreAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="addKeyStore">
      <soap12:operation soapAction="urn:addKeyStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStoreEntries">
      <soap12:operation soapAction="urn:getStoreEntries" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKeyStores">
      <soap12:operation soapAction="urn:getKeyStores" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCertFromStore">
      <soap12:operation soapAction="urn:removeCertFromStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importCertToStore">
      <soap12:operation soapAction="urn:importCertToStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTrustStore">
      <soap12:operation soapAction="urn:addTrustStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedKeystoreInfo">
      <soap12:operation soapAction="urn:getPaginatedKeystoreInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getKeystoreInfo">
      <soap12:operation soapAction="urn:getKeystoreInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteStore">
      <soap12:operation soapAction="urn:deleteStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="KeyStoreAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="KeyStoreAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="KeyStoreAdminServiceHttpBinding" type="ns:KeyStoreAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="addKeyStore">
      <http:operation location="addKeyStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getStoreEntries">
      <http:operation location="getStoreEntries"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeyStores">
      <http:operation location="getKeyStores"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeCertFromStore">
      <http:operation location="removeCertFromStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="importCertToStore">
      <http:operation location="importCertToStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addTrustStore">
      <http:operation location="addTrustStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedKeystoreInfo">
      <http:operation location="getPaginatedKeystoreInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeystoreInfo">
      <http:operation location="getKeystoreInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteStore">
      <http:operation location="deleteStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="KeyStoreAdminService">
    <wsdl:port name="KeyStoreAdminServiceHttpsSoap11Endpoint" binding="ns:KeyStoreAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="KeyStoreAdminServiceHttpsSoap12Endpoint" binding="ns:KeyStoreAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="KeyStoreAdminServiceHttpsEndpoint" binding="ns:KeyStoreAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/KeyStoreAdminService.KeyStoreAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="86562474-18a5-4276-bdda-3556a393fd3e" isOneWay="false" action="urn:addKeyStore" name="addKeyStore" bindingOperationName="addKeyStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bbccc5fd-2b82-418b-b24e-ab553c9b8f50" isOneWay="false" action="urn:addTrustStore" name="addTrustStore" bindingOperationName="addTrustStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8baffc41-d740-4ca1-991b-a5577c3b83fb" isOneWay="false" action="urn:deleteStore" name="deleteStore" bindingOperationName="deleteStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58f2e821-0ebf-403d-96da-b1c1ec6a4ac5" isOneWay="false" action="urn:getKeystoreInfo" name="getKeystoreInfo" bindingOperationName="getKeystoreInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="845dc079-088a-4ecc-9fb2-1b0b60bbe2c7" isOneWay="false" action="urn:getKeyStores" name="getKeyStores" bindingOperationName="getKeyStores" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b8878e9f-5aec-419f-9613-7502358f3947" isOneWay="false" action="urn:getPaginatedKeystoreInfo" name="getPaginatedKeystoreInfo" bindingOperationName="getPaginatedKeystoreInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d393411-821e-4b5c-9b4f-d132cddfb5cb" isOneWay="false" action="urn:getStoreEntries" name="getStoreEntries" bindingOperationName="getStoreEntries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="278293f1-721c-4900-a3c4-3c11444ca3b0" isOneWay="false" action="urn:importCertToStore" name="importCertToStore" bindingOperationName="importCertToStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2b3c2f63-206a-40f7-b482-2bacbd0f22f2" isOneWay="false" action="urn:removeCertFromStore" name="removeCertFromStore" bindingOperationName="removeCertFromStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="deca0938-58c4-459c-aea0-9f95c8072971" wsaVersion="NONE" name="LogViewerSoap12Binding" type="wsdl" bindingName="{http://service.logging.carbon.wso2.org}LogViewerSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LogViewer.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/LogViewer.LogViewerHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="c473f603-8bda-41e7-b264-f003a1ee9da1" isOneWay="false" action="urn:clearLogs" name="clearLogs" bindingOperationName="clearLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a81bb6ee-8429-4b78-9f7a-06958df3ad1c" isOneWay="false" action="urn:downloadArchivedLogFiles" name="downloadArchivedLogFiles" bindingOperationName="downloadArchivedLogFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="65b78956-868f-44af-978d-abb8664224ab" isOneWay="false" action="urn:getAllSystemLogs" name="getAllSystemLogs" bindingOperationName="getAllSystemLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d8649f0b-abdb-4cc7-be87-8c279b187f46" isOneWay="false" action="urn:getApplicationLogs" name="getApplicationLogs" bindingOperationName="getApplicationLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bc84eed2-22ce-47b7-a52c-dff343269bc4" isOneWay="false" action="urn:getApplicationNames" name="getApplicationNames" bindingOperationName="getApplicationNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f33d3b2-d390-4b8b-a8b4-b67d566b244c" isOneWay="false" action="urn:getLineNumbers" name="getLineNumbers" bindingOperationName="getLineNumbers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2b2c0333-5694-470a-9ddd-254903ada59c" isOneWay="false" action="urn:getLocalLogFiles" name="getLocalLogFiles" bindingOperationName="getLocalLogFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed20c54f-0735-495a-bab1-bd269354857b" isOneWay="false" action="urn:getLogLinesFromFile" name="getLogLinesFromFile" bindingOperationName="getLogLinesFromFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eea2eaa6-0b36-41f3-836b-f240b3e97238" isOneWay="false" action="urn:getLogs" name="getLogs" bindingOperationName="getLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fb8c7647-d9cb-456c-a811-c9e28351c477" isOneWay="false" action="urn:getNoOfLogEvents" name="getNoOfLogEvents" bindingOperationName="getNoOfLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="25a79301-8f44-4a83-b2bb-18a6780f39dd" isOneWay="false" action="urn:getPaginatedApplicationLogEvents" name="getPaginatedApplicationLogEvents" bindingOperationName="getPaginatedApplicationLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7aa03876-b5a2-4d63-bf15-f77a83627cc1" isOneWay="false" action="urn:getPaginatedLogEvents" name="getPaginatedLogEvents" bindingOperationName="getPaginatedLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="944c5702-2f90-40e9-aa73-da46ea0e06ee" isOneWay="false" action="urn:getPaginatedLogFileInfo" name="getPaginatedLogFileInfo" bindingOperationName="getPaginatedLogFileInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5861cc23-8ea3-4523-95b6-ba681d4ff431" isOneWay="false" action="urn:getServiceNames" name="getServiceNames" bindingOperationName="getServiceNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12e5b9ae-7c0d-40d2-9d7c-ea557fce133e" isOneWay="false" action="urn:isFileAppenderConfiguredForST" name="isFileAppenderConfiguredForST" bindingOperationName="isFileAppenderConfiguredForST" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="81256024-ad94-469b-add6-b68658131761" isOneWay="false" action="urn:isManager" name="isManager" bindingOperationName="isManager" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3cfe045c-b09a-4e50-824f-fdcc9746103a" isOneWay="false" action="urn:isValidTenant" name="isValidTenant" bindingOperationName="isValidTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b8de5ed0-1756-4d31-801d-a62f22f78343" isOneWay="false" action="urn:isValidTenantDomain" name="isValidTenantDomain" bindingOperationName="isValidTenantDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e7216f2d-e2a2-45c6-832c-5d92f3e54e3b" wsaVersion="NONE" name="LogViewerSoap11Binding" type="wsdl" bindingName="{http://service.logging.carbon.wso2.org}LogViewerSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LogViewer.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LogViewer.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LogViewer.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.logging.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2444="http://service.logging.carbon.wso2.org/xsd" xmlns:ax2446="http://data.service.logging.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://service.logging.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>LogViewer</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.logging.carbon.wso2.org/xsd">
      <xs:complexType name="LogViewerException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2445="http://service.logging.carbon.wso2.org/xsd" xmlns:ax2447="http://data.service.logging.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://service.logging.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://data.service.logging.carbon.wso2.org/xsd"/>
      <xs:element name="LogViewerLogViewerException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LogViewerException" nillable="true" type="ax2444:LogViewerException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedLogFileInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedLogFileInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2446:PaginatedLogFileInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLocalLogFiles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLocalLogFilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2446:PaginatedLogFileInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadArchivedLogFiles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadArchivedLogFilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isValidTenantDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isValidTenantDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isManager">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isManagerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isValidTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isValidTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LogViewerException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LogViewerException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getLineNumbers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLineNumbersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLogLinesFromFile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxLogs" type="xs:int"/>
            <xs:element minOccurs="0" name="start" type="xs:int"/>
            <xs:element minOccurs="0" name="end" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLogLinesFromFileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isFileAppenderConfiguredForST">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isFileAppenderConfiguredForSTResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSystemLogs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSystemLogsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2446:LogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedLogEvents">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedLogEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2446:PaginatedLogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedApplicationLogEvents">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPaginatedApplicationLogEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2446:PaginatedLogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNoOfLogEvents">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNoOfLogEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationLogs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="appName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getApplicationLogsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2446:LogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearLogs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearLogsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLogs">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="keyword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLogsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2446:LogEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceNames">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.service.logging.carbon.wso2.org/xsd">
      <xs:complexType name="PaginatedLogFileInfo">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="logFileInfo" nillable="true" type="ax2446:LogFileInfo"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LogFileInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="fileSize" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logDate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LogEvent">
        <xs:sequence>
          <xs:element minOccurs="0" name="appName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="instance" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ip" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logger" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="priority" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="stacktrace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tenantId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PaginatedLogEvent">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="logInfo" nillable="true" type="ax2446:LogEvent"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="clearLogsRequest">
    <wsdl:part name="parameters" element="ns1:clearLogs"/>
  </wsdl:message>
  <wsdl:message name="clearLogsResponse">
    <wsdl:part name="parameters" element="ns1:clearLogsResponse"/>
  </wsdl:message>
  <wsdl:message name="downloadArchivedLogFilesRequest">
    <wsdl:part name="parameters" element="ns1:downloadArchivedLogFiles"/>
  </wsdl:message>
  <wsdl:message name="downloadArchivedLogFilesResponse">
    <wsdl:part name="parameters" element="ns1:downloadArchivedLogFilesResponse"/>
  </wsdl:message>
  <wsdl:message name="LogViewerLogViewerException">
    <wsdl:part name="parameters" element="ns1:LogViewerLogViewerException"/>
  </wsdl:message>
  <wsdl:message name="getApplicationNamesRequest">
    <wsdl:part name="parameters" element="ns1:getApplicationNames"/>
  </wsdl:message>
  <wsdl:message name="getApplicationNamesResponse">
    <wsdl:part name="parameters" element="ns1:getApplicationNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="getLocalLogFilesRequest">
    <wsdl:part name="parameters" element="ns1:getLocalLogFiles"/>
  </wsdl:message>
  <wsdl:message name="getLocalLogFilesResponse">
    <wsdl:part name="parameters" element="ns1:getLocalLogFilesResponse"/>
  </wsdl:message>
  <wsdl:message name="isFileAppenderConfiguredForSTRequest">
    <wsdl:part name="parameters" element="ns1:isFileAppenderConfiguredForST"/>
  </wsdl:message>
  <wsdl:message name="isFileAppenderConfiguredForSTResponse">
    <wsdl:part name="parameters" element="ns1:isFileAppenderConfiguredForSTResponse"/>
  </wsdl:message>
  <wsdl:message name="getNoOfLogEventsRequest">
    <wsdl:part name="parameters" element="ns1:getNoOfLogEvents"/>
  </wsdl:message>
  <wsdl:message name="getNoOfLogEventsResponse">
    <wsdl:part name="parameters" element="ns1:getNoOfLogEventsResponse"/>
  </wsdl:message>
  <wsdl:message name="isValidTenantDomainRequest">
    <wsdl:part name="parameters" element="ns1:isValidTenantDomain"/>
  </wsdl:message>
  <wsdl:message name="isValidTenantDomainResponse">
    <wsdl:part name="parameters" element="ns1:isValidTenantDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedLogFileInfoRequest">
    <wsdl:part name="parameters" element="ns1:getPaginatedLogFileInfo"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedLogFileInfoResponse">
    <wsdl:part name="parameters" element="ns1:getPaginatedLogFileInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getLogsRequest">
    <wsdl:part name="parameters" element="ns1:getLogs"/>
  </wsdl:message>
  <wsdl:message name="getLogsResponse">
    <wsdl:part name="parameters" element="ns1:getLogsResponse"/>
  </wsdl:message>
  <wsdl:message name="isValidTenantRequest">
    <wsdl:part name="parameters" element="ns1:isValidTenant"/>
  </wsdl:message>
  <wsdl:message name="isValidTenantResponse">
    <wsdl:part name="parameters" element="ns1:isValidTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="getLineNumbersRequest">
    <wsdl:part name="parameters" element="ns1:getLineNumbers"/>
  </wsdl:message>
  <wsdl:message name="getLineNumbersResponse">
    <wsdl:part name="parameters" element="ns1:getLineNumbersResponse"/>
  </wsdl:message>
  <wsdl:message name="LogViewerException">
    <wsdl:part name="parameters" element="ns1:LogViewerException"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedApplicationLogEventsRequest">
    <wsdl:part name="parameters" element="ns1:getPaginatedApplicationLogEvents"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedApplicationLogEventsResponse">
    <wsdl:part name="parameters" element="ns1:getPaginatedApplicationLogEventsResponse"/>
  </wsdl:message>
  <wsdl:message name="getApplicationLogsRequest">
    <wsdl:part name="parameters" element="ns1:getApplicationLogs"/>
  </wsdl:message>
  <wsdl:message name="getApplicationLogsResponse">
    <wsdl:part name="parameters" element="ns1:getApplicationLogsResponse"/>
  </wsdl:message>
  <wsdl:message name="getLogLinesFromFileRequest">
    <wsdl:part name="parameters" element="ns1:getLogLinesFromFile"/>
  </wsdl:message>
  <wsdl:message name="getLogLinesFromFileResponse">
    <wsdl:part name="parameters" element="ns1:getLogLinesFromFileResponse"/>
  </wsdl:message>
  <wsdl:message name="isManagerRequest">
    <wsdl:part name="parameters" element="ns1:isManager"/>
  </wsdl:message>
  <wsdl:message name="isManagerResponse">
    <wsdl:part name="parameters" element="ns1:isManagerResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceNamesRequest">
    <wsdl:part name="parameters" element="ns1:getServiceNames"/>
  </wsdl:message>
  <wsdl:message name="getServiceNamesResponse">
    <wsdl:part name="parameters" element="ns1:getServiceNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllSystemLogsRequest">
    <wsdl:part name="parameters" element="ns1:getAllSystemLogs"/>
  </wsdl:message>
  <wsdl:message name="getAllSystemLogsResponse">
    <wsdl:part name="parameters" element="ns1:getAllSystemLogsResponse"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedLogEventsRequest">
    <wsdl:part name="parameters" element="ns1:getPaginatedLogEvents"/>
  </wsdl:message>
  <wsdl:message name="getPaginatedLogEventsResponse">
    <wsdl:part name="parameters" element="ns1:getPaginatedLogEventsResponse"/>
  </wsdl:message>
  <wsdl:portType name="LogViewerPortType">
    <wsdl:operation name="clearLogs">
      <wsdl:input message="tns:clearLogsRequest" wsaw:Action="urn:clearLogs"/>
      <wsdl:output message="tns:clearLogsResponse" wsaw:Action="urn:clearLogsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadArchivedLogFiles">
      <wsdl:input message="tns:downloadArchivedLogFilesRequest" wsaw:Action="urn:downloadArchivedLogFiles"/>
      <wsdl:output message="tns:downloadArchivedLogFilesResponse" wsaw:Action="urn:downloadArchivedLogFilesResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:downloadArchivedLogFilesLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getApplicationNames">
      <wsdl:input message="tns:getApplicationNamesRequest" wsaw:Action="urn:getApplicationNames"/>
      <wsdl:output message="tns:getApplicationNamesResponse" wsaw:Action="urn:getApplicationNamesResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getApplicationNamesLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getLocalLogFiles">
      <wsdl:input message="tns:getLocalLogFilesRequest" wsaw:Action="urn:getLocalLogFiles"/>
      <wsdl:output message="tns:getLocalLogFilesResponse" wsaw:Action="urn:getLocalLogFilesResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getLocalLogFilesLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="isFileAppenderConfiguredForST">
      <wsdl:input message="tns:isFileAppenderConfiguredForSTRequest" wsaw:Action="urn:isFileAppenderConfiguredForST"/>
      <wsdl:output message="tns:isFileAppenderConfiguredForSTResponse" wsaw:Action="urn:isFileAppenderConfiguredForSTResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getNoOfLogEvents">
      <wsdl:input message="tns:getNoOfLogEventsRequest" wsaw:Action="urn:getNoOfLogEvents"/>
      <wsdl:output message="tns:getNoOfLogEventsResponse" wsaw:Action="urn:getNoOfLogEventsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getNoOfLogEventsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="isValidTenantDomain">
      <wsdl:input message="tns:isValidTenantDomainRequest" wsaw:Action="urn:isValidTenantDomain"/>
      <wsdl:output message="tns:isValidTenantDomainResponse" wsaw:Action="urn:isValidTenantDomainResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogFileInfo">
      <wsdl:input message="tns:getPaginatedLogFileInfoRequest" wsaw:Action="urn:getPaginatedLogFileInfo"/>
      <wsdl:output message="tns:getPaginatedLogFileInfoResponse" wsaw:Action="urn:getPaginatedLogFileInfoResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getPaginatedLogFileInfoLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <wsdl:input message="tns:getLogsRequest" wsaw:Action="urn:getLogs"/>
      <wsdl:output message="tns:getLogsResponse" wsaw:Action="urn:getLogsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getLogsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="isValidTenant">
      <wsdl:input message="tns:isValidTenantRequest" wsaw:Action="urn:isValidTenant"/>
      <wsdl:output message="tns:isValidTenantResponse" wsaw:Action="urn:isValidTenantResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getLineNumbers">
      <wsdl:input message="tns:getLineNumbersRequest" wsaw:Action="urn:getLineNumbers"/>
      <wsdl:output message="tns:getLineNumbersResponse" wsaw:Action="urn:getLineNumbersResponse"/>
      <wsdl:fault message="tns:LogViewerException" name="LogViewerException" wsaw:Action="urn:getLineNumbersLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedApplicationLogEvents">
      <wsdl:input message="tns:getPaginatedApplicationLogEventsRequest" wsaw:Action="urn:getPaginatedApplicationLogEvents"/>
      <wsdl:output message="tns:getPaginatedApplicationLogEventsResponse" wsaw:Action="urn:getPaginatedApplicationLogEventsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getPaginatedApplicationLogEventsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getApplicationLogs">
      <wsdl:input message="tns:getApplicationLogsRequest" wsaw:Action="urn:getApplicationLogs"/>
      <wsdl:output message="tns:getApplicationLogsResponse" wsaw:Action="urn:getApplicationLogsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getApplicationLogsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getLogLinesFromFile">
      <wsdl:input message="tns:getLogLinesFromFileRequest" wsaw:Action="urn:getLogLinesFromFile"/>
      <wsdl:output message="tns:getLogLinesFromFileResponse" wsaw:Action="urn:getLogLinesFromFileResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getLogLinesFromFileLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="isManager">
      <wsdl:input message="tns:isManagerRequest" wsaw:Action="urn:isManager"/>
      <wsdl:output message="tns:isManagerResponse" wsaw:Action="urn:isManagerResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceNames">
      <wsdl:input message="tns:getServiceNamesRequest" wsaw:Action="urn:getServiceNames"/>
      <wsdl:output message="tns:getServiceNamesResponse" wsaw:Action="urn:getServiceNamesResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getServiceNamesLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSystemLogs">
      <wsdl:input message="tns:getAllSystemLogsRequest" wsaw:Action="urn:getAllSystemLogs"/>
      <wsdl:output message="tns:getAllSystemLogsResponse" wsaw:Action="urn:getAllSystemLogsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getAllSystemLogsLogViewerLogViewerException"/>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogEvents">
      <wsdl:input message="tns:getPaginatedLogEventsRequest" wsaw:Action="urn:getPaginatedLogEvents"/>
      <wsdl:output message="tns:getPaginatedLogEventsResponse" wsaw:Action="urn:getPaginatedLogEventsResponse"/>
      <wsdl:fault message="tns:LogViewerLogViewerException" name="LogViewerLogViewerException" wsaw:Action="urn:getPaginatedLogEventsLogViewerLogViewerException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LogViewerSoap11Binding" type="tns:LogViewerPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="clearLogs">
      <soap:operation soapAction="urn:clearLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadArchivedLogFiles">
      <soap:operation soapAction="urn:downloadArchivedLogFiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationNames">
      <soap:operation soapAction="urn:getApplicationNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLocalLogFiles">
      <soap:operation soapAction="urn:getLocalLogFiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isFileAppenderConfiguredForST">
      <soap:operation soapAction="urn:isFileAppenderConfiguredForST" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNoOfLogEvents">
      <soap:operation soapAction="urn:getNoOfLogEvents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidTenantDomain">
      <soap:operation soapAction="urn:isValidTenantDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogFileInfo">
      <soap:operation soapAction="urn:getPaginatedLogFileInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <soap:operation soapAction="urn:getLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidTenant">
      <soap:operation soapAction="urn:isValidTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLineNumbers">
      <soap:operation soapAction="urn:getLineNumbers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerException">
        <soap:fault use="literal" name="LogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedApplicationLogEvents">
      <soap:operation soapAction="urn:getPaginatedApplicationLogEvents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationLogs">
      <soap:operation soapAction="urn:getApplicationLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogLinesFromFile">
      <soap:operation soapAction="urn:getLogLinesFromFile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isManager">
      <soap:operation soapAction="urn:isManager" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceNames">
      <soap:operation soapAction="urn:getServiceNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSystemLogs">
      <soap:operation soapAction="urn:getAllSystemLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogEvents">
      <soap:operation soapAction="urn:getPaginatedLogEvents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LogViewerSoap12Binding" type="tns:LogViewerPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="clearLogs">
      <soap12:operation soapAction="urn:clearLogs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadArchivedLogFiles">
      <soap12:operation soapAction="urn:downloadArchivedLogFiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationNames">
      <soap12:operation soapAction="urn:getApplicationNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLocalLogFiles">
      <soap12:operation soapAction="urn:getLocalLogFiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isFileAppenderConfiguredForST">
      <soap12:operation soapAction="urn:isFileAppenderConfiguredForST" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNoOfLogEvents">
      <soap12:operation soapAction="urn:getNoOfLogEvents" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidTenantDomain">
      <soap12:operation soapAction="urn:isValidTenantDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogFileInfo">
      <soap12:operation soapAction="urn:getPaginatedLogFileInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <soap12:operation soapAction="urn:getLogs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidTenant">
      <soap12:operation soapAction="urn:isValidTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLineNumbers">
      <soap12:operation soapAction="urn:getLineNumbers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerException">
        <soap12:fault use="literal" name="LogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedApplicationLogEvents">
      <soap12:operation soapAction="urn:getPaginatedApplicationLogEvents" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getApplicationLogs">
      <soap12:operation soapAction="urn:getApplicationLogs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogLinesFromFile">
      <soap12:operation soapAction="urn:getLogLinesFromFile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isManager">
      <soap12:operation soapAction="urn:isManager" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceNames">
      <soap12:operation soapAction="urn:getServiceNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSystemLogs">
      <soap12:operation soapAction="urn:getAllSystemLogs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogEvents">
      <soap12:operation soapAction="urn:getPaginatedLogEvents" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogViewerLogViewerException">
        <soap12:fault use="literal" name="LogViewerLogViewerException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LogViewerHttpBinding" type="tns:LogViewerPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="clearLogs">
      <http:operation location="clearLogs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadArchivedLogFiles">
      <http:operation location="downloadArchivedLogFiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getApplicationNames">
      <http:operation location="getApplicationNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLocalLogFiles">
      <http:operation location="getLocalLogFiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isFileAppenderConfiguredForST">
      <http:operation location="isFileAppenderConfiguredForST"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNoOfLogEvents">
      <http:operation location="getNoOfLogEvents"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isValidTenantDomain">
      <http:operation location="isValidTenantDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogFileInfo">
      <http:operation location="getPaginatedLogFileInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <http:operation location="getLogs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isValidTenant">
      <http:operation location="isValidTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLineNumbers">
      <http:operation location="getLineNumbers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedApplicationLogEvents">
      <http:operation location="getPaginatedApplicationLogEvents"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getApplicationLogs">
      <http:operation location="getApplicationLogs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLogLinesFromFile">
      <http:operation location="getLogLinesFromFile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isManager">
      <http:operation location="isManager"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceNames">
      <http:operation location="getServiceNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllSystemLogs">
      <http:operation location="getAllSystemLogs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPaginatedLogEvents">
      <http:operation location="getPaginatedLogEvents"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LogViewer">
    <wsdl:port name="LogViewerHttpsSoap11Endpoint" binding="tns:LogViewerSoap11Binding">
      <soap:address location="https://localhost:9443/services/LogViewer.LogViewerHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LogViewerHttpsSoap12Endpoint" binding="tns:LogViewerSoap12Binding">
      <soap12:address location="https://localhost:9443/services/LogViewer.LogViewerHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LogViewerHttpsEndpoint" binding="tns:LogViewerHttpBinding">
      <http:address location="https://localhost:9443/services/LogViewer.LogViewerHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/LogViewer.LogViewerHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="5b69792d-5b70-405b-97a4-3ebd30a1bba6" isOneWay="false" action="urn:clearLogs" name="clearLogs" bindingOperationName="clearLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16290451-f591-4f0d-8195-23f73e373a63" isOneWay="false" action="urn:downloadArchivedLogFiles" name="downloadArchivedLogFiles" bindingOperationName="downloadArchivedLogFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7334d65a-6f7a-4edf-9965-5957e627dc5c" isOneWay="false" action="urn:getAllSystemLogs" name="getAllSystemLogs" bindingOperationName="getAllSystemLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c5420b89-6702-4d08-be1a-d6416da99b05" isOneWay="false" action="urn:getApplicationLogs" name="getApplicationLogs" bindingOperationName="getApplicationLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b5ee72c9-2165-4f0a-a72b-aa57eb57b157" isOneWay="false" action="urn:getApplicationNames" name="getApplicationNames" bindingOperationName="getApplicationNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16214f29-128c-4b5a-9692-b5eedd0b5c5c" isOneWay="false" action="urn:getLineNumbers" name="getLineNumbers" bindingOperationName="getLineNumbers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="88db3ba3-26b6-4f47-813f-78f0882c9483" isOneWay="false" action="urn:getLocalLogFiles" name="getLocalLogFiles" bindingOperationName="getLocalLogFiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5cc7e9ec-6150-4b8b-a4f8-e06dcb174dea" isOneWay="false" action="urn:getLogLinesFromFile" name="getLogLinesFromFile" bindingOperationName="getLogLinesFromFile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9a32b65c-5054-45a4-a5da-09c619d1c8fd" isOneWay="false" action="urn:getLogs" name="getLogs" bindingOperationName="getLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="09aa1fc3-219d-495a-85d8-ba12d70429b4" isOneWay="false" action="urn:getNoOfLogEvents" name="getNoOfLogEvents" bindingOperationName="getNoOfLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="76d75ef7-1958-4e01-882e-bdd7b24e440c" isOneWay="false" action="urn:getPaginatedApplicationLogEvents" name="getPaginatedApplicationLogEvents" bindingOperationName="getPaginatedApplicationLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab47962f-1302-44f6-a1de-f9cbd991c979" isOneWay="false" action="urn:getPaginatedLogEvents" name="getPaginatedLogEvents" bindingOperationName="getPaginatedLogEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b1d089c-30d7-4548-89a3-ed0e9d24f038" isOneWay="false" action="urn:getPaginatedLogFileInfo" name="getPaginatedLogFileInfo" bindingOperationName="getPaginatedLogFileInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4cc1be84-8dbd-4434-a2f5-3d4901fd6423" isOneWay="false" action="urn:getServiceNames" name="getServiceNames" bindingOperationName="getServiceNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b813017b-23fc-49e0-a7c5-9e0482249328" isOneWay="false" action="urn:isFileAppenderConfiguredForST" name="isFileAppenderConfiguredForST" bindingOperationName="isFileAppenderConfiguredForST" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8d39ed08-b0e7-4954-9ee7-83655624b661" isOneWay="false" action="urn:isManager" name="isManager" bindingOperationName="isManager" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9dd5a189-3137-4b20-938b-46e096995a04" isOneWay="false" action="urn:isValidTenant" name="isValidTenant" bindingOperationName="isValidTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ee1ab8be-98bd-4a3f-b9a2-05b65a2aa334" isOneWay="false" action="urn:isValidTenantDomain" name="isValidTenantDomain" bindingOperationName="isValidTenantDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="871f927d-e488-4119-a683-826ffba2faf8" wsaVersion="NONE" name="LoggedUserInfoAdminSoap11Binding" type="wsdl" bindingName="{http://loggeduserinfo.services.core.carbon.wso2.org}LoggedUserInfoAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoggedUserInfoAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="9b707929-8129-43f5-bf73-c07f4a1e3228" isOneWay="false" action="urn:getUserInfo" name="getUserInfo" bindingOperationName="getUserInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="56b8ca3d-e2f3-46b7-b2c0-aed2a5a8c83e" wsaVersion="NONE" name="LoggedUserInfoAdminSoap12Binding" type="wsdl" bindingName="{http://loggeduserinfo.services.core.carbon.wso2.org}LoggedUserInfoAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoggedUserInfoAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoggedUserInfoAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoggedUserInfoAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://loggeduserinfo.services.core.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://loggeduserinfo.services.core.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax296="http://common.core.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>LoggedUserInfoAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.core.carbon.wso2.org/xsd">
      <xs:complexType name="LoggedUserInfo">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="UIPermissionOfUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordExpiration" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://loggeduserinfo.services.core.carbon.wso2.org" xmlns:ax297="http://common.core.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.core.carbon.wso2.org/xsd"/>
      <xs:element name="LoggedUserInfoAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LoggedUserInfoAdminException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getUserInfo">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax296:LoggedUserInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getUserInfoRequest">
    <wsdl:part name="parameters" element="ns:getUserInfo"/>
  </wsdl:message>
  <wsdl:message name="getUserInfoResponse">
    <wsdl:part name="parameters" element="ns:getUserInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="LoggedUserInfoAdminException">
    <wsdl:part name="parameters" element="ns:LoggedUserInfoAdminException"/>
  </wsdl:message>
  <wsdl:portType name="LoggedUserInfoAdminPortType">
    <wsdl:operation name="getUserInfo">
      <wsdl:input message="ns:getUserInfoRequest" wsaw:Action="urn:getUserInfo"/>
      <wsdl:output message="ns:getUserInfoResponse" wsaw:Action="urn:getUserInfoResponse"/>
      <wsdl:fault message="ns:LoggedUserInfoAdminException" name="LoggedUserInfoAdminException" wsaw:Action="urn:getUserInfoLoggedUserInfoAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LoggedUserInfoAdminSoap11Binding" type="ns:LoggedUserInfoAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getUserInfo">
      <soap:operation soapAction="urn:getUserInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggedUserInfoAdminException">
        <soap:fault use="literal" name="LoggedUserInfoAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoggedUserInfoAdminSoap12Binding" type="ns:LoggedUserInfoAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getUserInfo">
      <soap12:operation soapAction="urn:getUserInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggedUserInfoAdminException">
        <soap12:fault use="literal" name="LoggedUserInfoAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoggedUserInfoAdminHttpBinding" type="ns:LoggedUserInfoAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getUserInfo">
      <http:operation location="getUserInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LoggedUserInfoAdmin">
    <wsdl:port name="LoggedUserInfoAdminHttpsSoap11Endpoint" binding="ns:LoggedUserInfoAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoggedUserInfoAdminHttpsSoap12Endpoint" binding="ns:LoggedUserInfoAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoggedUserInfoAdminHttpsEndpoint" binding="ns:LoggedUserInfoAdminHttpBinding">
      <http:address location="https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/LoggedUserInfoAdmin.LoggedUserInfoAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="26bfa88b-0716-4011-ad79-7060836d8fb2" isOneWay="false" action="urn:getUserInfo" name="getUserInfo" bindingOperationName="getUserInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="0274d522-10d5-43f5-8f57-2094f22d8df4" wsaVersion="NONE" name="LoggingAdminSoap11Binding" type="wsdl" bindingName="{http://service.logging.carbon.wso2.org}LoggingAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoggingAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="53127db9-2f34-4fbb-a532-0ba917529ba3" isOneWay="false" action="urn:getAllLoggerData" name="getAllLoggerData" bindingOperationName="getAllLoggerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="46cf2d67-3796-4d4a-b28a-e12d6a22092f" isOneWay="false" action="urn:getAppenderData" name="getAppenderData" bindingOperationName="getAppenderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ba5aa523-01b4-4a77-878a-e2174b4106f7" isOneWay="false" action="urn:getLoggerData" name="getLoggerData" bindingOperationName="getLoggerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="09104c7d-4937-49a1-ad46-d7d550ba2931" isOneWay="false" action="urn:getSyslogData" name="getSyslogData" bindingOperationName="getSyslogData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7df6acc5-edfc-451d-b479-6cdad1b5955a" isOneWay="false" action="urn:getSystemLog" name="getSystemLog" bindingOperationName="getSystemLog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b8bc7a4-46d3-4916-928f-7586baaab0fc" isOneWay="false" action="urn:isStratosService" name="isStratosService" bindingOperationName="isStratosService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c5d459d1-9693-4f79-a16b-acfc4d8ad83c" isOneWay="false" action="urn:removeSyslogPattern" name="removeSyslogPattern" bindingOperationName="removeSyslogPattern" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1aa183ae-73e9-46d5-b9e6-ebe85e9ef4aa" isOneWay="false" action="urn:updateAllAppenderData" name="updateAllAppenderData" bindingOperationName="updateAllAppenderData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ebcc5bfd-cd67-4803-87be-f619eae3bf3f" isOneWay="false" action="urn:updateLoggerData" name="updateLoggerData" bindingOperationName="updateLoggerData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1bb234b8-213d-4fbb-9b43-3f89d4b25f94" isOneWay="false" action="urn:updateSyslogConfig" name="updateSyslogConfig" bindingOperationName="updateSyslogConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66784db8-1640-4f0a-aea5-30da28c0cf56" isOneWay="false" action="urn:updateSystemLog" name="updateSystemLog" bindingOperationName="updateSystemLog" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="5df17b75-70ab-4089-9207-dd0b57af53a1" wsaVersion="NONE" name="LoggingAdminSoap12Binding" type="wsdl" bindingName="{http://service.logging.carbon.wso2.org}LoggingAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoggingAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoggingAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoggingAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.logging.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://service.logging.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2440="http://data.service.logging.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ax2442="http://service.logging.carbon.wso2.org/xsd">
  <wsdl:documentation>LoggingAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.logging.carbon.wso2.org/xsd">
      <xs:complexType name="LoggingAdminException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2443="http://service.logging.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2441="http://data.service.logging.carbon.wso2.org/xsd">
      <xs:import namespace="http://data.service.logging.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://service.logging.carbon.wso2.org/xsd"/>
      <xs:element name="LoggingAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LoggingAdminException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getSystemLog">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemLogResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2440:LogData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLoggerData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logNameFilter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="beginsWith" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllLoggerDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2440:LoggerData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppenderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appenderName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppenderDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2440:AppenderData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoggerData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="loggerName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoggerDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2440:LoggerData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LoggingAdminLoggingAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="LoggingAdminException" nillable="true" type="ax2443:LoggingAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateSyslogConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="url" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="port" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="realm" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSyslogData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSyslogDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2440:SyslogData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeSyslogPattern">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appenderPattern" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeSyslogPatternResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateAllAppenderData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appenderName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="appenderPattern" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="threshold" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="logFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="sysLogHost" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="facility" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="persist" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isStratosService">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isStratosServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateSystemLog">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="logLevel" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="logPattern" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="persist" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateLoggerData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="loggerName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="loggerLevel" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="additivity" type="xs:boolean"/>
            <xs:element minOccurs="0" name="persist" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.service.logging.carbon.wso2.org/xsd">
      <xs:complexType name="LogData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="appenderData" nillable="true" type="ax2440:AppenderData"/>
          <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logLevel" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="logPattern" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="loggerData" nillable="true" type="ax2440:LoggerData"/>
          <xs:element minOccurs="0" name="selectedAppenderData" nillable="true" type="ax2440:AppenderData"/>
          <xs:element minOccurs="0" name="selectedLoggerData" nillable="true" type="ax2440:LoggerData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AppenderData">
        <xs:sequence>
          <xs:element minOccurs="0" name="facility" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="isFileAppender" type="xs:boolean"/>
          <xs:element minOccurs="0" name="isSysLogAppender" type="xs:boolean"/>
          <xs:element minOccurs="0" name="logFile" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pattern" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sysLogHost" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="threshold" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoggerData">
        <xs:sequence>
          <xs:element minOccurs="0" name="additivity" type="xs:boolean"/>
          <xs:element minOccurs="0" name="level" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parentName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SyslogData">
        <xs:sequence>
          <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="port" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="realm" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="url" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateSyslogConfigRequest">
    <wsdl:part name="parameters" element="ns1:updateSyslogConfig"/>
  </wsdl:message>
  <wsdl:message name="LoggingAdminLoggingAdminException">
    <wsdl:part name="parameters" element="ns1:LoggingAdminLoggingAdminException"/>
  </wsdl:message>
  <wsdl:message name="removeSyslogPatternRequest">
    <wsdl:part name="parameters" element="ns1:removeSyslogPattern"/>
  </wsdl:message>
  <wsdl:message name="removeSyslogPatternResponse">
    <wsdl:part name="parameters" element="ns1:removeSyslogPatternResponse"/>
  </wsdl:message>
  <wsdl:message name="updateAllAppenderDataRequest">
    <wsdl:part name="parameters" element="ns1:updateAllAppenderData"/>
  </wsdl:message>
  <wsdl:message name="LoggingAdminException">
    <wsdl:part name="parameters" element="ns1:LoggingAdminException"/>
  </wsdl:message>
  <wsdl:message name="isStratosServiceRequest">
    <wsdl:part name="parameters" element="ns1:isStratosService"/>
  </wsdl:message>
  <wsdl:message name="isStratosServiceResponse">
    <wsdl:part name="parameters" element="ns1:isStratosServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllLoggerDataRequest">
    <wsdl:part name="parameters" element="ns1:getAllLoggerData"/>
  </wsdl:message>
  <wsdl:message name="getAllLoggerDataResponse">
    <wsdl:part name="parameters" element="ns1:getAllLoggerDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getLoggerDataRequest">
    <wsdl:part name="parameters" element="ns1:getLoggerData"/>
  </wsdl:message>
  <wsdl:message name="getLoggerDataResponse">
    <wsdl:part name="parameters" element="ns1:getLoggerDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getSyslogDataRequest">
    <wsdl:part name="parameters" element="ns1:getSyslogData"/>
  </wsdl:message>
  <wsdl:message name="getSyslogDataResponse">
    <wsdl:part name="parameters" element="ns1:getSyslogDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemLogRequest">
    <wsdl:part name="parameters" element="ns1:getSystemLog"/>
  </wsdl:message>
  <wsdl:message name="getSystemLogResponse">
    <wsdl:part name="parameters" element="ns1:getSystemLogResponse"/>
  </wsdl:message>
  <wsdl:message name="getAppenderDataRequest">
    <wsdl:part name="parameters" element="ns1:getAppenderData"/>
  </wsdl:message>
  <wsdl:message name="getAppenderDataResponse">
    <wsdl:part name="parameters" element="ns1:getAppenderDataResponse"/>
  </wsdl:message>
  <wsdl:message name="updateSystemLogRequest">
    <wsdl:part name="parameters" element="ns1:updateSystemLog"/>
  </wsdl:message>
  <wsdl:message name="updateLoggerDataRequest">
    <wsdl:part name="parameters" element="ns1:updateLoggerData"/>
  </wsdl:message>
  <wsdl:portType name="LoggingAdminPortType">
    <wsdl:operation name="updateSyslogConfig">
      <wsdl:input message="tns:updateSyslogConfigRequest" wsaw:Action="urn:updateSyslogConfig"/>
      <wsdl:fault message="tns:LoggingAdminLoggingAdminException" name="LoggingAdminLoggingAdminException" wsaw:Action="urn:updateSyslogConfigLoggingAdminLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="removeSyslogPattern">
      <wsdl:input message="tns:removeSyslogPatternRequest" wsaw:Action="urn:removeSyslogPattern"/>
      <wsdl:output message="tns:removeSyslogPatternResponse" wsaw:Action="urn:removeSyslogPatternResponse"/>
    </wsdl:operation>
    <wsdl:operation name="updateAllAppenderData">
      <wsdl:input message="tns:updateAllAppenderDataRequest" wsaw:Action="urn:updateAllAppenderData"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:updateAllAppenderDataLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="isStratosService">
      <wsdl:input message="tns:isStratosServiceRequest" wsaw:Action="urn:isStratosService"/>
      <wsdl:output message="tns:isStratosServiceResponse" wsaw:Action="urn:isStratosServiceResponse"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:isStratosServiceLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllLoggerData">
      <wsdl:input message="tns:getAllLoggerDataRequest" wsaw:Action="urn:getAllLoggerData"/>
      <wsdl:output message="tns:getAllLoggerDataResponse" wsaw:Action="urn:getAllLoggerDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getLoggerData">
      <wsdl:input message="tns:getLoggerDataRequest" wsaw:Action="urn:getLoggerData"/>
      <wsdl:output message="tns:getLoggerDataResponse" wsaw:Action="urn:getLoggerDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSyslogData">
      <wsdl:input message="tns:getSyslogDataRequest" wsaw:Action="urn:getSyslogData"/>
      <wsdl:output message="tns:getSyslogDataResponse" wsaw:Action="urn:getSyslogDataResponse"/>
      <wsdl:fault message="tns:LoggingAdminLoggingAdminException" name="LoggingAdminLoggingAdminException" wsaw:Action="urn:getSyslogDataLoggingAdminLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemLog">
      <wsdl:input message="tns:getSystemLogRequest" wsaw:Action="urn:getSystemLog"/>
      <wsdl:output message="tns:getSystemLogResponse" wsaw:Action="urn:getSystemLogResponse"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:getSystemLogLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAppenderData">
      <wsdl:input message="tns:getAppenderDataRequest" wsaw:Action="urn:getAppenderData"/>
      <wsdl:output message="tns:getAppenderDataResponse" wsaw:Action="urn:getAppenderDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="updateSystemLog">
      <wsdl:input message="tns:updateSystemLogRequest" wsaw:Action="urn:updateSystemLog"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:updateSystemLogLoggingAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updateLoggerData">
      <wsdl:input message="tns:updateLoggerDataRequest" wsaw:Action="urn:updateLoggerData"/>
      <wsdl:fault message="tns:LoggingAdminException" name="LoggingAdminException" wsaw:Action="urn:updateLoggerDataLoggingAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LoggingAdminSoap11Binding" type="tns:LoggingAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateSyslogConfig">
      <soap:operation soapAction="urn:updateSyslogConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminLoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminLoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeSyslogPattern">
      <soap:operation soapAction="urn:removeSyslogPattern" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAllAppenderData">
      <soap:operation soapAction="urn:updateAllAppenderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isStratosService">
      <soap:operation soapAction="urn:isStratosService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLoggerData">
      <soap:operation soapAction="urn:getAllLoggerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLoggerData">
      <soap:operation soapAction="urn:getLoggerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSyslogData">
      <soap:operation soapAction="urn:getSyslogData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminLoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminLoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSystemLog">
      <soap:operation soapAction="urn:getSystemLog" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppenderData">
      <soap:operation soapAction="urn:getAppenderData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSystemLog">
      <soap:operation soapAction="urn:updateSystemLog" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLoggerData">
      <soap:operation soapAction="urn:updateLoggerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoggingAdminSoap12Binding" type="tns:LoggingAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateSyslogConfig">
      <soap12:operation soapAction="urn:updateSyslogConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminLoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminLoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeSyslogPattern">
      <soap12:operation soapAction="urn:removeSyslogPattern" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAllAppenderData">
      <soap12:operation soapAction="urn:updateAllAppenderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isStratosService">
      <soap12:operation soapAction="urn:isStratosService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLoggerData">
      <soap12:operation soapAction="urn:getAllLoggerData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLoggerData">
      <soap12:operation soapAction="urn:getLoggerData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSyslogData">
      <soap12:operation soapAction="urn:getSyslogData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminLoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminLoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSystemLog">
      <soap12:operation soapAction="urn:getSystemLog" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppenderData">
      <soap12:operation soapAction="urn:getAppenderData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSystemLog">
      <soap12:operation soapAction="urn:updateSystemLog" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLoggerData">
      <soap12:operation soapAction="urn:updateLoggerData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="LoggingAdminException">
        <soap12:fault use="literal" name="LoggingAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoggingAdminHttpBinding" type="tns:LoggingAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateSyslogConfig">
      <http:operation location="updateSyslogConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeSyslogPattern">
      <http:operation location="removeSyslogPattern"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAllAppenderData">
      <http:operation location="updateAllAppenderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isStratosService">
      <http:operation location="isStratosService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllLoggerData">
      <http:operation location="getAllLoggerData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLoggerData">
      <http:operation location="getLoggerData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSyslogData">
      <http:operation location="getSyslogData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemLog">
      <http:operation location="getSystemLog"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAppenderData">
      <http:operation location="getAppenderData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateSystemLog">
      <http:operation location="updateSystemLog"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateLoggerData">
      <http:operation location="updateLoggerData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LoggingAdmin">
    <wsdl:port name="LoggingAdminHttpsSoap11Endpoint" binding="tns:LoggingAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoggingAdminHttpsSoap12Endpoint" binding="tns:LoggingAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoggingAdminHttpsEndpoint" binding="tns:LoggingAdminHttpBinding">
      <http:address location="https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/LoggingAdmin.LoggingAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="2af89745-cd51-4fe4-831e-ae077e0e8ace" isOneWay="false" action="urn:getAllLoggerData" name="getAllLoggerData" bindingOperationName="getAllLoggerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a34a7102-66c6-492f-ba98-c34941378d71" isOneWay="false" action="urn:getAppenderData" name="getAppenderData" bindingOperationName="getAppenderData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="26af7097-b51c-4260-83a1-6b28da415ce1" isOneWay="false" action="urn:getLoggerData" name="getLoggerData" bindingOperationName="getLoggerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="97340043-9684-48a3-b936-15f375443ae6" isOneWay="false" action="urn:getSyslogData" name="getSyslogData" bindingOperationName="getSyslogData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7cf25b87-a486-462c-ae9b-c31142d3b33e" isOneWay="false" action="urn:getSystemLog" name="getSystemLog" bindingOperationName="getSystemLog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e9a7d30-82d7-40a8-886a-e9654690942d" isOneWay="false" action="urn:isStratosService" name="isStratosService" bindingOperationName="isStratosService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="944c6e32-c841-46e0-b9b1-0e6924f8e9a5" isOneWay="false" action="urn:removeSyslogPattern" name="removeSyslogPattern" bindingOperationName="removeSyslogPattern" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7115ad40-9ba7-459e-a094-0c36d7417664" isOneWay="false" action="urn:updateAllAppenderData" name="updateAllAppenderData" bindingOperationName="updateAllAppenderData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="584b2a51-c503-49c5-a75d-4c8e6fb94b27" isOneWay="false" action="urn:updateLoggerData" name="updateLoggerData" bindingOperationName="updateLoggerData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4bdc0dde-f9ba-4b5f-a0fd-998c10fbd6d7" isOneWay="false" action="urn:updateSyslogConfig" name="updateSyslogConfig" bindingOperationName="updateSyslogConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52674d8f-96d4-4ea6-8cce-ae34940ea779" isOneWay="false" action="urn:updateSystemLog" name="updateSystemLog" bindingOperationName="updateSystemLog" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ef653f57-808e-418a-a08c-b15adddbe6ca" wsaVersion="NONE" name="LoginStatisticsAdminSoap12Binding" type="wsdl" bindingName="{http://stats.authentication.services.core.carbon.wso2.org}LoginStatisticsAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoginStatisticsAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="b0b74f75-e9b3-45ff-8e3b-23fa682583a0" isOneWay="false" action="urn:getLoginAttempts" name="getLoginAttempts" bindingOperationName="getLoginAttempts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a1be055f-9835-4363-b281-dc8a927f63fe" isOneWay="false" action="urn:getUserBasedLoginAttempts" name="getUserBasedLoginAttempts" bindingOperationName="getUserBasedLoginAttempts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="77f5626d-cc44-40ac-a2b6-e2701408c9e1" wsaVersion="NONE" name="LoginStatisticsAdminSoap11Binding" type="wsdl" bindingName="{http://stats.authentication.services.core.carbon.wso2.org}LoginStatisticsAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoginStatisticsAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoginStatisticsAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/LoginStatisticsAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://stats.authentication.services.core.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax298="http://stats.authentication.services.core.carbon.wso2.org/xsd" xmlns:ns="http://stats.authentication.services.core.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>LoginStatisticsAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://stats.authentication.services.core.carbon.wso2.org" xmlns:ax299="http://stats.authentication.services.core.carbon.wso2.org/xsd">
      <xs:import namespace="http://stats.authentication.services.core.carbon.wso2.org/xsd"/>
      <xs:element name="getUserBasedLoginAttempts">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserBasedLoginAttemptsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax298:UserAttempts"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoginAttempts">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLoginAttemptsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax298:LoginAttempts"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://stats.authentication.services.core.carbon.wso2.org/xsd">
      <xs:complexType name="UserAttempts">
        <xs:sequence>
          <xs:element minOccurs="0" name="failedLogins" type="xs:int"/>
          <xs:element minOccurs="0" name="totalLogins" type="xs:int"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoginAttempts">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="loginAttempts" nillable="true" type="ax298:LoginAttempt"/>
          <xs:element minOccurs="0" name="totalAttempts" type="xs:int"/>
          <xs:element minOccurs="0" name="totalFailedAttempts" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LoginAttempt">
        <xs:sequence>
          <xs:element minOccurs="0" name="failureReason" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="remoteAddress" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="successful" type="xs:boolean"/>
          <xs:element minOccurs="0" name="timestamp" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getLoginAttemptsRequest">
    <wsdl:part name="parameters" element="ns:getLoginAttempts"/>
  </wsdl:message>
  <wsdl:message name="getLoginAttemptsResponse">
    <wsdl:part name="parameters" element="ns:getLoginAttemptsResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserBasedLoginAttemptsRequest">
    <wsdl:part name="parameters" element="ns:getUserBasedLoginAttempts"/>
  </wsdl:message>
  <wsdl:message name="getUserBasedLoginAttemptsResponse">
    <wsdl:part name="parameters" element="ns:getUserBasedLoginAttemptsResponse"/>
  </wsdl:message>
  <wsdl:portType name="LoginStatisticsAdminPortType">
    <wsdl:operation name="getLoginAttempts">
      <wsdl:input message="ns:getLoginAttemptsRequest" wsaw:Action="urn:getLoginAttempts"/>
      <wsdl:output message="ns:getLoginAttemptsResponse" wsaw:Action="urn:getLoginAttemptsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <wsdl:input message="ns:getUserBasedLoginAttemptsRequest" wsaw:Action="urn:getUserBasedLoginAttempts"/>
      <wsdl:output message="ns:getUserBasedLoginAttemptsResponse" wsaw:Action="urn:getUserBasedLoginAttemptsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LoginStatisticsAdminSoap11Binding" type="ns:LoginStatisticsAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getLoginAttempts">
      <soap:operation soapAction="urn:getLoginAttempts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <soap:operation soapAction="urn:getUserBasedLoginAttempts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoginStatisticsAdminSoap12Binding" type="ns:LoginStatisticsAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getLoginAttempts">
      <soap12:operation soapAction="urn:getLoginAttempts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <soap12:operation soapAction="urn:getUserBasedLoginAttempts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="LoginStatisticsAdminHttpBinding" type="ns:LoginStatisticsAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getLoginAttempts">
      <http:operation location="getLoginAttempts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserBasedLoginAttempts">
      <http:operation location="getUserBasedLoginAttempts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LoginStatisticsAdmin">
    <wsdl:port name="LoginStatisticsAdminHttpsSoap11Endpoint" binding="ns:LoginStatisticsAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoginStatisticsAdminHttpsSoap12Endpoint" binding="ns:LoginStatisticsAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="LoginStatisticsAdminHttpsEndpoint" binding="ns:LoginStatisticsAdminHttpBinding">
      <http:address location="https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/LoginStatisticsAdmin.LoginStatisticsAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="fee72569-5c5d-45a7-ad06-09ef79e88458" isOneWay="false" action="urn:getLoginAttempts" name="getLoginAttempts" bindingOperationName="getLoginAttempts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="549c47b8-195b-43b7-ba79-af9720655583" isOneWay="false" action="urn:getUserBasedLoginAttempts" name="getUserBasedLoginAttempts" bindingOperationName="getUserBasedLoginAttempts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="cdaf1f8d-95d5-4eb7-a5bf-2d581ce9b997" wsaVersion="NONE" name="MetricsDataServiceSoap11Binding" type="wsdl" bindingName="{http://service.data.metrics.carbon.wso2.org}MetricsDataServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/MetricsDataService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="9a504104-c9b5-4993-8978-7eac4ab5399d" isOneWay="false" action="urn:findLastMetrics" name="findLastMetrics" bindingOperationName="findLastMetrics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff76131e-61de-439f-bc81-2fbc29530487" isOneWay="false" action="urn:findMetricsByTimePeriod" name="findMetricsByTimePeriod" bindingOperationName="findMetricsByTimePeriod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dd941557-4112-4be3-98db-2bc486451447" isOneWay="false" action="urn:getAllSources" name="getAllSources" bindingOperationName="getAllSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ad980bdf-1119-4606-8d05-9d8f2113d70e" wsaVersion="NONE" name="MetricsDataServiceSoap12Binding" type="wsdl" bindingName="{http://service.data.metrics.carbon.wso2.org}MetricsDataServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/MetricsDataService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/MetricsDataService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/MetricsDataService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.data.metrics.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2448="http://common.data.metrics.carbon.wso2.org/xsd" xmlns:ns="http://service.data.metrics.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2450="http://service.data.metrics.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>MetricsDataService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.data.metrics.carbon.wso2.org/xsd">
      <xs:complexType name="MetricData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="data" nillable="true" type="ax2450:ArrayOfBigDecimal"/>
          <xs:element minOccurs="0" name="metadata" nillable="true" type="ax2450:Metadata"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfBigDecimal">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="array" nillable="true" type="xs:decimal"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Metadata">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="names" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="types" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.data.metrics.carbon.wso2.org/xsd">
      <xs:complexType name="MetricList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="metric" nillable="true" type="ax2448:Metric"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Metric">
        <xs:sequence>
          <xs:element minOccurs="0" name="attr" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="format" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.data.metrics.carbon.wso2.org" xmlns:ax2451="http://service.data.metrics.carbon.wso2.org/xsd" xmlns:ax2449="http://common.data.metrics.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.data.metrics.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://service.data.metrics.carbon.wso2.org/xsd"/>
      <xs:element name="getAllSources">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSourcesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findLastMetrics">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="metrics" nillable="true" type="ax2448:MetricList"/>
            <xs:element minOccurs="0" name="source" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="from" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findLastMetricsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2450:MetricData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findMetricsByTimePeriod">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="metrics" nillable="true" type="ax2448:MetricList"/>
            <xs:element minOccurs="0" name="source" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="startTime" type="xs:long"/>
            <xs:element minOccurs="0" name="endTime" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findMetricsByTimePeriodResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2450:MetricData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="findLastMetricsRequest">
    <wsdl:part name="parameters" element="ns:findLastMetrics"/>
  </wsdl:message>
  <wsdl:message name="findLastMetricsResponse">
    <wsdl:part name="parameters" element="ns:findLastMetricsResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllSourcesRequest">
    <wsdl:part name="parameters" element="ns:getAllSources"/>
  </wsdl:message>
  <wsdl:message name="getAllSourcesResponse">
    <wsdl:part name="parameters" element="ns:getAllSourcesResponse"/>
  </wsdl:message>
  <wsdl:message name="findMetricsByTimePeriodRequest">
    <wsdl:part name="parameters" element="ns:findMetricsByTimePeriod"/>
  </wsdl:message>
  <wsdl:message name="findMetricsByTimePeriodResponse">
    <wsdl:part name="parameters" element="ns:findMetricsByTimePeriodResponse"/>
  </wsdl:message>
  <wsdl:portType name="MetricsDataServicePortType">
    <wsdl:operation name="findLastMetrics">
      <wsdl:input message="ns:findLastMetricsRequest" wsaw:Action="urn:findLastMetrics"/>
      <wsdl:output message="ns:findLastMetricsResponse" wsaw:Action="urn:findLastMetricsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSources">
      <wsdl:input message="ns:getAllSourcesRequest" wsaw:Action="urn:getAllSources"/>
      <wsdl:output message="ns:getAllSourcesResponse" wsaw:Action="urn:getAllSourcesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="findMetricsByTimePeriod">
      <wsdl:input message="ns:findMetricsByTimePeriodRequest" wsaw:Action="urn:findMetricsByTimePeriod"/>
      <wsdl:output message="ns:findMetricsByTimePeriodResponse" wsaw:Action="urn:findMetricsByTimePeriodResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MetricsDataServiceSoap11Binding" type="ns:MetricsDataServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="findLastMetrics">
      <soap:operation soapAction="urn:findLastMetrics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllSources">
      <soap:operation soapAction="urn:getAllSources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMetricsByTimePeriod">
      <soap:operation soapAction="urn:findMetricsByTimePeriod" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MetricsDataServiceSoap12Binding" type="ns:MetricsDataServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="findLastMetrics">
      <soap12:operation soapAction="urn:findLastMetrics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllSources">
      <soap12:operation soapAction="urn:getAllSources" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMetricsByTimePeriod">
      <soap12:operation soapAction="urn:findMetricsByTimePeriod" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MetricsDataServiceHttpBinding" type="ns:MetricsDataServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="findLastMetrics">
      <http:operation location="findLastMetrics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllSources">
      <http:operation location="getAllSources"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findMetricsByTimePeriod">
      <http:operation location="findMetricsByTimePeriod"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MetricsDataService">
    <wsdl:port name="MetricsDataServiceHttpsSoap11Endpoint" binding="ns:MetricsDataServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="MetricsDataServiceHttpsSoap12Endpoint" binding="ns:MetricsDataServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="MetricsDataServiceHttpsEndpoint" binding="ns:MetricsDataServiceHttpBinding">
      <http:address location="https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/MetricsDataService.MetricsDataServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="c91beeaa-c0a1-4ad7-8075-97e4622d5c93" isOneWay="false" action="urn:findLastMetrics" name="findLastMetrics" bindingOperationName="findLastMetrics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0142d2a3-b190-4bdd-8a8b-bf5846283537" isOneWay="false" action="urn:findMetricsByTimePeriod" name="findMetricsByTimePeriod" bindingOperationName="findMetricsByTimePeriod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="00a48bf9-9133-4239-a8d3-defffd6afb6d" isOneWay="false" action="urn:getAllSources" name="getAllSources" bindingOperationName="getAllSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="026b2370-4fc1-430e-8346-571d9681e2da" wsaVersion="NONE" name="ModuleAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.mgt.module.carbon.wso2.org}ModuleAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ModuleAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="753865bd-5d3c-49a1-818d-b7fbe0dbdba9" isOneWay="false" action="urn:disengageModuleForOperation" name="disengageModuleForOperation" bindingOperationName="disengageModuleForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69fcb54f-ff8f-4034-9767-e394a9cb06ee" isOneWay="false" action="urn:disengageModuleForService" name="disengageModuleForService" bindingOperationName="disengageModuleForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c16ce2cc-3932-45e8-8e51-ef326bc32ee4" isOneWay="false" action="urn:disengageModuleForServiceGroup" name="disengageModuleForServiceGroup" bindingOperationName="disengageModuleForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9e429932-a4cc-4f6e-add5-563e4a9a7478" isOneWay="false" action="urn:disengageModuleFromSystem" name="disengageModuleFromSystem" bindingOperationName="disengageModuleFromSystem" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed3ad466-b5d3-4431-a0ee-005d9fcfef2d" isOneWay="false" action="urn:engageModuleForOperation" name="engageModuleForOperation" bindingOperationName="engageModuleForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b1c8822e-8b25-4806-97c4-d278016ba3cc" isOneWay="false" action="urn:engageModuleForService" name="engageModuleForService" bindingOperationName="engageModuleForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b9ed9cb-742c-4c66-805a-3159b5d1bf79" isOneWay="false" action="urn:engageModuleForServiceGroup" name="engageModuleForServiceGroup" bindingOperationName="engageModuleForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa9247f6-14bd-41c1-bfda-44cd7810dab1" isOneWay="false" action="urn:getModuleInfo" name="getModuleInfo" bindingOperationName="getModuleInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c41df289-ea4c-4ac0-afba-b1b593abe40a" isOneWay="false" action="urn:getModuleParameters" name="getModuleParameters" bindingOperationName="getModuleParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f5f71730-2463-4b3a-9fea-b95d57fb4b11" isOneWay="false" action="urn:globallyDisengageModule" name="globallyDisengageModule" bindingOperationName="globallyDisengageModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="028cf64b-0054-4fa7-bd1f-8f587293086d" isOneWay="false" action="urn:globallyEngageModule" name="globallyEngageModule" bindingOperationName="globallyEngageModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fea71914-89e8-4212-837e-50fdf8e5236b" isOneWay="false" action="urn:listGloballyEngagedModules" name="listGloballyEngagedModules" bindingOperationName="listGloballyEngagedModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="091820f7-fa42-4f0d-bc5e-73e689f2aaed" isOneWay="false" action="urn:listModules" name="listModules" bindingOperationName="listModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ca7f2640-dfd3-4292-ac3a-6d558c8345bb" isOneWay="false" action="urn:listModulesForOperation" name="listModulesForOperation" bindingOperationName="listModulesForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6e54ab21-4a35-4bd2-bb69-ffc506423675" isOneWay="false" action="urn:listModulesForService" name="listModulesForService" bindingOperationName="listModulesForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="95edeecf-86f0-437a-9b46-0fb49227ad46" isOneWay="false" action="urn:listModulesForServiceGroup" name="listModulesForServiceGroup" bindingOperationName="listModulesForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b5c2f431-82b6-44f1-81e7-497598d3bb5a" isOneWay="false" action="urn:removeModule" name="removeModule" bindingOperationName="removeModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab964118-4996-47a1-af14-7282480526eb" isOneWay="false" action="urn:removeModuleParameter" name="removeModuleParameter" bindingOperationName="removeModuleParameter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="827ff732-6438-49b7-a96d-78e88c638f81" isOneWay="false" action="urn:setModuleParameters" name="setModuleParameters" bindingOperationName="setModuleParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="276ed6c7-595b-4de8-8575-a5c146f19ade" isOneWay="false" action="urn:uploadModule" name="uploadModule" bindingOperationName="uploadModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="42a6b62d-8ef2-4800-ad79-36e5b905f2c7" wsaVersion="NONE" name="ModuleAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.mgt.module.carbon.wso2.org}ModuleAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ModuleAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ModuleAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ModuleAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.mgt.module.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://service.mgt.module.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2452="http://mgt.module.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ModuleAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.module.carbon.wso2.org/xsd">
      <xs:complexType name="ModuleMgtException">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="level" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ModuleMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="engagedGlobalLevel" type="xs:boolean"/>
          <xs:element minOccurs="0" name="engagedOperationLevel" type="xs:boolean"/>
          <xs:element minOccurs="0" name="engagedServiceGroupLevel" type="xs:boolean"/>
          <xs:element minOccurs="0" name="engagedServiceLevel" type="xs:boolean"/>
          <xs:element minOccurs="0" name="managedModule" type="xs:boolean"/>
          <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="modulename" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ModuleUploadData">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.mgt.module.carbon.wso2.org" xmlns:ax2453="http://mgt.module.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.module.carbon.wso2.org/xsd"/>
      <xs:element name="ModuleAdminServiceModuleMgtException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ModuleMgtException" nillable="true" type="ax2452:ModuleMgtException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeModule">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeModuleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModules">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listGloballyEngagedModules">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listGloballyEngagedModulesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForOperation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForOperationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listModulesForServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModuleInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModuleInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2452:ModuleMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="globallyEngageModule">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="globallyEngageModuleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForOperation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleForOperationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForOperation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleForOperationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="globallyDisengageModule">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="globallyDisengageModuleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadModule">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="moduleUploadData" nillable="true" type="ax2452:ModuleUploadData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadModuleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModuleParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModuleParametersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setModuleParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="parameters" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeModuleParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeModuleParameterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleFromSystem">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disengageModuleFromSystemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="disengageModuleFromSystemRequest">
    <wsdl:part name="parameters" element="ns:disengageModuleFromSystem"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleFromSystemResponse">
    <wsdl:part name="parameters" element="ns:disengageModuleFromSystemResponse"/>
  </wsdl:message>
  <wsdl:message name="ModuleAdminServiceModuleMgtException">
    <wsdl:part name="parameters" element="ns:ModuleAdminServiceModuleMgtException"/>
  </wsdl:message>
  <wsdl:message name="listModulesForOperationRequest">
    <wsdl:part name="parameters" element="ns:listModulesForOperation"/>
  </wsdl:message>
  <wsdl:message name="listModulesForOperationResponse">
    <wsdl:part name="parameters" element="ns:listModulesForOperationResponse"/>
  </wsdl:message>
  <wsdl:message name="listGloballyEngagedModulesRequest">
    <wsdl:part name="parameters" element="ns:listGloballyEngagedModules"/>
  </wsdl:message>
  <wsdl:message name="listGloballyEngagedModulesResponse">
    <wsdl:part name="parameters" element="ns:listGloballyEngagedModulesResponse"/>
  </wsdl:message>
  <wsdl:message name="listModulesForServiceRequest">
    <wsdl:part name="parameters" element="ns:listModulesForService"/>
  </wsdl:message>
  <wsdl:message name="listModulesForServiceResponse">
    <wsdl:part name="parameters" element="ns:listModulesForServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="globallyEngageModuleRequest">
    <wsdl:part name="parameters" element="ns:globallyEngageModule"/>
  </wsdl:message>
  <wsdl:message name="globallyEngageModuleResponse">
    <wsdl:part name="parameters" element="ns:globallyEngageModuleResponse"/>
  </wsdl:message>
  <wsdl:message name="globallyDisengageModuleRequest">
    <wsdl:part name="parameters" element="ns:globallyDisengageModule"/>
  </wsdl:message>
  <wsdl:message name="globallyDisengageModuleResponse">
    <wsdl:part name="parameters" element="ns:globallyDisengageModuleResponse"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForOperationRequest">
    <wsdl:part name="parameters" element="ns:disengageModuleForOperation"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForOperationResponse">
    <wsdl:part name="parameters" element="ns:disengageModuleForOperationResponse"/>
  </wsdl:message>
  <wsdl:message name="removeModuleRequest">
    <wsdl:part name="parameters" element="ns:removeModule"/>
  </wsdl:message>
  <wsdl:message name="removeModuleResponse">
    <wsdl:part name="parameters" element="ns:removeModuleResponse"/>
  </wsdl:message>
  <wsdl:message name="listModulesRequest">
    <wsdl:part name="parameters" element="ns:listModules"/>
  </wsdl:message>
  <wsdl:message name="listModulesResponse">
    <wsdl:part name="parameters" element="ns:listModulesResponse"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForServiceGroupRequest">
    <wsdl:part name="parameters" element="ns:engageModuleForServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForServiceGroupResponse">
    <wsdl:part name="parameters" element="ns:engageModuleForServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="getModuleInfoRequest">
    <wsdl:part name="parameters" element="ns:getModuleInfo"/>
  </wsdl:message>
  <wsdl:message name="getModuleInfoResponse">
    <wsdl:part name="parameters" element="ns:getModuleInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForServiceRequest">
    <wsdl:part name="parameters" element="ns:engageModuleForService"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForServiceResponse">
    <wsdl:part name="parameters" element="ns:engageModuleForServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForServiceGroupRequest">
    <wsdl:part name="parameters" element="ns:disengageModuleForServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForServiceGroupResponse">
    <wsdl:part name="parameters" element="ns:disengageModuleForServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="removeModuleParameterRequest">
    <wsdl:part name="parameters" element="ns:removeModuleParameter"/>
  </wsdl:message>
  <wsdl:message name="removeModuleParameterResponse">
    <wsdl:part name="parameters" element="ns:removeModuleParameterResponse"/>
  </wsdl:message>
  <wsdl:message name="uploadModuleRequest">
    <wsdl:part name="parameters" element="ns:uploadModule"/>
  </wsdl:message>
  <wsdl:message name="uploadModuleResponse">
    <wsdl:part name="parameters" element="ns:uploadModuleResponse"/>
  </wsdl:message>
  <wsdl:message name="setModuleParametersRequest">
    <wsdl:part name="parameters" element="ns:setModuleParameters"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForServiceRequest">
    <wsdl:part name="parameters" element="ns:disengageModuleForService"/>
  </wsdl:message>
  <wsdl:message name="disengageModuleForServiceResponse">
    <wsdl:part name="parameters" element="ns:disengageModuleForServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForOperationRequest">
    <wsdl:part name="parameters" element="ns:engageModuleForOperation"/>
  </wsdl:message>
  <wsdl:message name="engageModuleForOperationResponse">
    <wsdl:part name="parameters" element="ns:engageModuleForOperationResponse"/>
  </wsdl:message>
  <wsdl:message name="getModuleParametersRequest">
    <wsdl:part name="parameters" element="ns:getModuleParameters"/>
  </wsdl:message>
  <wsdl:message name="getModuleParametersResponse">
    <wsdl:part name="parameters" element="ns:getModuleParametersResponse"/>
  </wsdl:message>
  <wsdl:message name="listModulesForServiceGroupRequest">
    <wsdl:part name="parameters" element="ns:listModulesForServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="listModulesForServiceGroupResponse">
    <wsdl:part name="parameters" element="ns:listModulesForServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:portType name="ModuleAdminServicePortType">
    <wsdl:operation name="disengageModuleFromSystem">
      <wsdl:input message="ns:disengageModuleFromSystemRequest" wsaw:Action="urn:disengageModuleFromSystem"/>
      <wsdl:output message="ns:disengageModuleFromSystemResponse" wsaw:Action="urn:disengageModuleFromSystemResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:disengageModuleFromSystemModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="listModulesForOperation">
      <wsdl:input message="ns:listModulesForOperationRequest" wsaw:Action="urn:listModulesForOperation"/>
      <wsdl:output message="ns:listModulesForOperationResponse" wsaw:Action="urn:listModulesForOperationResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:listModulesForOperationModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="listGloballyEngagedModules">
      <wsdl:input message="ns:listGloballyEngagedModulesRequest" wsaw:Action="urn:listGloballyEngagedModules"/>
      <wsdl:output message="ns:listGloballyEngagedModulesResponse" wsaw:Action="urn:listGloballyEngagedModulesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listModulesForService">
      <wsdl:input message="ns:listModulesForServiceRequest" wsaw:Action="urn:listModulesForService"/>
      <wsdl:output message="ns:listModulesForServiceResponse" wsaw:Action="urn:listModulesForServiceResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:listModulesForServiceModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="globallyEngageModule">
      <wsdl:input message="ns:globallyEngageModuleRequest" wsaw:Action="urn:globallyEngageModule"/>
      <wsdl:output message="ns:globallyEngageModuleResponse" wsaw:Action="urn:globallyEngageModuleResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:globallyEngageModuleModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="globallyDisengageModule">
      <wsdl:input message="ns:globallyDisengageModuleRequest" wsaw:Action="urn:globallyDisengageModule"/>
      <wsdl:output message="ns:globallyDisengageModuleResponse" wsaw:Action="urn:globallyDisengageModuleResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:globallyDisengageModuleModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForOperation">
      <wsdl:input message="ns:disengageModuleForOperationRequest" wsaw:Action="urn:disengageModuleForOperation"/>
      <wsdl:output message="ns:disengageModuleForOperationResponse" wsaw:Action="urn:disengageModuleForOperationResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:disengageModuleForOperationModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="removeModule">
      <wsdl:input message="ns:removeModuleRequest" wsaw:Action="urn:removeModule"/>
      <wsdl:output message="ns:removeModuleResponse" wsaw:Action="urn:removeModuleResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:removeModuleModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="listModules">
      <wsdl:input message="ns:listModulesRequest" wsaw:Action="urn:listModules"/>
      <wsdl:output message="ns:listModulesResponse" wsaw:Action="urn:listModulesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForServiceGroup">
      <wsdl:input message="ns:engageModuleForServiceGroupRequest" wsaw:Action="urn:engageModuleForServiceGroup"/>
      <wsdl:output message="ns:engageModuleForServiceGroupResponse" wsaw:Action="urn:engageModuleForServiceGroupResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:engageModuleForServiceGroupModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="getModuleInfo">
      <wsdl:input message="ns:getModuleInfoRequest" wsaw:Action="urn:getModuleInfo"/>
      <wsdl:output message="ns:getModuleInfoResponse" wsaw:Action="urn:getModuleInfoResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:getModuleInfoModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForService">
      <wsdl:input message="ns:engageModuleForServiceRequest" wsaw:Action="urn:engageModuleForService"/>
      <wsdl:output message="ns:engageModuleForServiceResponse" wsaw:Action="urn:engageModuleForServiceResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:engageModuleForServiceModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForServiceGroup">
      <wsdl:input message="ns:disengageModuleForServiceGroupRequest" wsaw:Action="urn:disengageModuleForServiceGroup"/>
      <wsdl:output message="ns:disengageModuleForServiceGroupResponse" wsaw:Action="urn:disengageModuleForServiceGroupResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:disengageModuleForServiceGroupModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="removeModuleParameter">
      <wsdl:input message="ns:removeModuleParameterRequest" wsaw:Action="urn:removeModuleParameter"/>
      <wsdl:output message="ns:removeModuleParameterResponse" wsaw:Action="urn:removeModuleParameterResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:removeModuleParameterModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="uploadModule">
      <wsdl:input message="ns:uploadModuleRequest" wsaw:Action="urn:uploadModule"/>
      <wsdl:output message="ns:uploadModuleResponse" wsaw:Action="urn:uploadModuleResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setModuleParameters">
      <wsdl:input message="ns:setModuleParametersRequest" wsaw:Action="urn:setModuleParameters"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:setModuleParametersModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForService">
      <wsdl:input message="ns:disengageModuleForServiceRequest" wsaw:Action="urn:disengageModuleForService"/>
      <wsdl:output message="ns:disengageModuleForServiceResponse" wsaw:Action="urn:disengageModuleForServiceResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:disengageModuleForServiceModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForOperation">
      <wsdl:input message="ns:engageModuleForOperationRequest" wsaw:Action="urn:engageModuleForOperation"/>
      <wsdl:output message="ns:engageModuleForOperationResponse" wsaw:Action="urn:engageModuleForOperationResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:engageModuleForOperationModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="getModuleParameters">
      <wsdl:input message="ns:getModuleParametersRequest" wsaw:Action="urn:getModuleParameters"/>
      <wsdl:output message="ns:getModuleParametersResponse" wsaw:Action="urn:getModuleParametersResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:getModuleParametersModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="listModulesForServiceGroup">
      <wsdl:input message="ns:listModulesForServiceGroupRequest" wsaw:Action="urn:listModulesForServiceGroup"/>
      <wsdl:output message="ns:listModulesForServiceGroupResponse" wsaw:Action="urn:listModulesForServiceGroupResponse"/>
      <wsdl:fault message="ns:ModuleAdminServiceModuleMgtException" name="ModuleAdminServiceModuleMgtException" wsaw:Action="urn:listModulesForServiceGroupModuleAdminServiceModuleMgtException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ModuleAdminServiceSoap11Binding" type="ns:ModuleAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="disengageModuleFromSystem">
      <soap:operation soapAction="urn:disengageModuleFromSystem" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModulesForOperation">
      <soap:operation soapAction="urn:listModulesForOperation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listGloballyEngagedModules">
      <soap:operation soapAction="urn:listGloballyEngagedModules" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForService">
      <soap:operation soapAction="urn:listModulesForService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="globallyEngageModule">
      <soap:operation soapAction="urn:globallyEngageModule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="globallyDisengageModule">
      <soap:operation soapAction="urn:globallyDisengageModule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForOperation">
      <soap:operation soapAction="urn:disengageModuleForOperation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModule">
      <soap:operation soapAction="urn:removeModule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModules">
      <soap:operation soapAction="urn:listModules" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForServiceGroup">
      <soap:operation soapAction="urn:engageModuleForServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleInfo">
      <soap:operation soapAction="urn:getModuleInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForService">
      <soap:operation soapAction="urn:engageModuleForService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForServiceGroup">
      <soap:operation soapAction="urn:disengageModuleForServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModuleParameter">
      <soap:operation soapAction="urn:removeModuleParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadModule">
      <soap:operation soapAction="urn:uploadModule" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setModuleParameters">
      <soap:operation soapAction="urn:setModuleParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForService">
      <soap:operation soapAction="urn:disengageModuleForService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForOperation">
      <soap:operation soapAction="urn:engageModuleForOperation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleParameters">
      <soap:operation soapAction="urn:getModuleParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModulesForServiceGroup">
      <soap:operation soapAction="urn:listModulesForServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ModuleAdminServiceSoap12Binding" type="ns:ModuleAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="disengageModuleFromSystem">
      <soap12:operation soapAction="urn:disengageModuleFromSystem" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModulesForOperation">
      <soap12:operation soapAction="urn:listModulesForOperation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listGloballyEngagedModules">
      <soap12:operation soapAction="urn:listGloballyEngagedModules" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForService">
      <soap12:operation soapAction="urn:listModulesForService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="globallyEngageModule">
      <soap12:operation soapAction="urn:globallyEngageModule" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="globallyDisengageModule">
      <soap12:operation soapAction="urn:globallyDisengageModule" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForOperation">
      <soap12:operation soapAction="urn:disengageModuleForOperation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModule">
      <soap12:operation soapAction="urn:removeModule" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModules">
      <soap12:operation soapAction="urn:listModules" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForServiceGroup">
      <soap12:operation soapAction="urn:engageModuleForServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleInfo">
      <soap12:operation soapAction="urn:getModuleInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForService">
      <soap12:operation soapAction="urn:engageModuleForService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForServiceGroup">
      <soap12:operation soapAction="urn:disengageModuleForServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModuleParameter">
      <soap12:operation soapAction="urn:removeModuleParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadModule">
      <soap12:operation soapAction="urn:uploadModule" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setModuleParameters">
      <soap12:operation soapAction="urn:setModuleParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForService">
      <soap12:operation soapAction="urn:disengageModuleForService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForOperation">
      <soap12:operation soapAction="urn:engageModuleForOperation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModuleParameters">
      <soap12:operation soapAction="urn:getModuleParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listModulesForServiceGroup">
      <soap12:operation soapAction="urn:listModulesForServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ModuleAdminServiceModuleMgtException">
        <soap12:fault use="literal" name="ModuleAdminServiceModuleMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ModuleAdminServiceHttpBinding" type="ns:ModuleAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="disengageModuleFromSystem">
      <http:operation location="disengageModuleFromSystem"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForOperation">
      <http:operation location="listModulesForOperation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listGloballyEngagedModules">
      <http:operation location="listGloballyEngagedModules"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForService">
      <http:operation location="listModulesForService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="globallyEngageModule">
      <http:operation location="globallyEngageModule"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="globallyDisengageModule">
      <http:operation location="globallyDisengageModule"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForOperation">
      <http:operation location="disengageModuleForOperation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeModule">
      <http:operation location="removeModule"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModules">
      <http:operation location="listModules"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForServiceGroup">
      <http:operation location="engageModuleForServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getModuleInfo">
      <http:operation location="getModuleInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForService">
      <http:operation location="engageModuleForService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForServiceGroup">
      <http:operation location="disengageModuleForServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeModuleParameter">
      <http:operation location="removeModuleParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="uploadModule">
      <http:operation location="uploadModule"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setModuleParameters">
      <http:operation location="setModuleParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="disengageModuleForService">
      <http:operation location="disengageModuleForService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="engageModuleForOperation">
      <http:operation location="engageModuleForOperation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getModuleParameters">
      <http:operation location="getModuleParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listModulesForServiceGroup">
      <http:operation location="listModulesForServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ModuleAdminService">
    <wsdl:port name="ModuleAdminServiceHttpsSoap11Endpoint" binding="ns:ModuleAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ModuleAdminServiceHttpsSoap12Endpoint" binding="ns:ModuleAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ModuleAdminServiceHttpsEndpoint" binding="ns:ModuleAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ModuleAdminService.ModuleAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="7689d3f0-afd7-4bfe-afc2-3c3cedd76b74" isOneWay="false" action="urn:disengageModuleForOperation" name="disengageModuleForOperation" bindingOperationName="disengageModuleForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5815c93a-c05a-4ed3-b340-a7e30ab59c9f" isOneWay="false" action="urn:disengageModuleForService" name="disengageModuleForService" bindingOperationName="disengageModuleForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e328f594-f598-48f1-8a25-6023b8555d05" isOneWay="false" action="urn:disengageModuleForServiceGroup" name="disengageModuleForServiceGroup" bindingOperationName="disengageModuleForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e6cc5db7-0e0b-4670-9f03-dd98bb1158d7" isOneWay="false" action="urn:disengageModuleFromSystem" name="disengageModuleFromSystem" bindingOperationName="disengageModuleFromSystem" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4e134784-608b-4ec8-b11c-0ee12613dadf" isOneWay="false" action="urn:engageModuleForOperation" name="engageModuleForOperation" bindingOperationName="engageModuleForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="74ec9f11-fc0e-4800-8988-730f7a356d84" isOneWay="false" action="urn:engageModuleForService" name="engageModuleForService" bindingOperationName="engageModuleForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a5b8dfcb-8886-446e-9982-afb8b13792fb" isOneWay="false" action="urn:engageModuleForServiceGroup" name="engageModuleForServiceGroup" bindingOperationName="engageModuleForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="38a5b451-632a-4a9b-8a3c-460b6b7cde15" isOneWay="false" action="urn:getModuleInfo" name="getModuleInfo" bindingOperationName="getModuleInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b48bc99f-e3b3-4fff-b514-e75a10a67639" isOneWay="false" action="urn:getModuleParameters" name="getModuleParameters" bindingOperationName="getModuleParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ec76d2c6-635f-40df-8254-f33d858d325d" isOneWay="false" action="urn:globallyDisengageModule" name="globallyDisengageModule" bindingOperationName="globallyDisengageModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6c8b96f7-0dcf-4f93-ab05-3b5c07a326a7" isOneWay="false" action="urn:globallyEngageModule" name="globallyEngageModule" bindingOperationName="globallyEngageModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e4f48744-b8b5-4bbc-9d59-95edc9ce72dd" isOneWay="false" action="urn:listGloballyEngagedModules" name="listGloballyEngagedModules" bindingOperationName="listGloballyEngagedModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1b6fbf28-97da-44b7-bfdc-0c2fdfc98d9e" isOneWay="false" action="urn:listModules" name="listModules" bindingOperationName="listModules" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3ebb1ba8-c1da-44d1-9ba8-22d8f611e1bc" isOneWay="false" action="urn:listModulesForOperation" name="listModulesForOperation" bindingOperationName="listModulesForOperation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3bb5e769-3d87-4524-85f0-48cc3c14bc29" isOneWay="false" action="urn:listModulesForService" name="listModulesForService" bindingOperationName="listModulesForService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="db0394c2-3e5e-4181-94b0-a61d1990038e" isOneWay="false" action="urn:listModulesForServiceGroup" name="listModulesForServiceGroup" bindingOperationName="listModulesForServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5cfa837d-de6b-44f6-b518-506968aaba70" isOneWay="false" action="urn:removeModule" name="removeModule" bindingOperationName="removeModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b2978107-74dc-424b-8e85-cc886bff097d" isOneWay="false" action="urn:removeModuleParameter" name="removeModuleParameter" bindingOperationName="removeModuleParameter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a32b0a63-e09f-48bc-a1c9-1073e337c1b3" isOneWay="false" action="urn:setModuleParameters" name="setModuleParameters" bindingOperationName="setModuleParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7fb8ca0d-835f-4888-a7cf-7df5292aa821" isOneWay="false" action="urn:uploadModule" name="uploadModule" bindingOperationName="uploadModule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2644e48a-a626-423c-be6d-58777fe2da36" wsaVersion="NONE" name="MultipleCredentialsUserAdminSoap12Binding" type="wsdl" bindingName="{http://multiplecredentials.mgt.user.carbon.wso2.org}MultipleCredentialsUserAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/MultipleCredentialsUserAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="45adf863-7609-4e6a-9de0-5cad388e9d7d" isOneWay="false" action="urn:addCredential" name="addCredential" bindingOperationName="addCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c7587020-9db6-49cd-9885-38592b48bd2a" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="96eec71d-cc6a-4937-9287-7c7650077ea6" isOneWay="false" action="urn:addUsers" name="addUsers" bindingOperationName="addUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4e2aaecc-59a5-424c-9b54-5c54b7eb9fdd" isOneWay="false" action="urn:addUserWithUserId" name="addUserWithUserId" bindingOperationName="addUserWithUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="35f2adec-9b31-41b5-a637-2501db0b31a7" isOneWay="false" action="urn:authenticate" name="authenticate" bindingOperationName="authenticate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f3f5d8a-fbc7-456d-a137-905464d39928" isOneWay="false" action="urn:deleteCredential" name="deleteCredential" bindingOperationName="deleteCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="83af9e5a-e0a8-45ba-8f30-739cfbc89e85" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7a4daa5-3ca3-49cc-a891-de28a6331710" isOneWay="false" action="urn:deleteUserClaimValue" name="deleteUserClaimValue" bindingOperationName="deleteUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b7b9c96c-b473-4446-bfa3-6937b1eb800d" isOneWay="false" action="urn:deleteUserClaimValues" name="deleteUserClaimValues" bindingOperationName="deleteUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="95b2641b-c195-4a3c-860d-fc28406a5154" isOneWay="false" action="urn:getAllUserClaimValues" name="getAllUserClaimValues" bindingOperationName="getAllUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="882c5da7-b80e-4f77-9339-6b7a0e3a8a0d" isOneWay="false" action="urn:getCredentials" name="getCredentials" bindingOperationName="getCredentials" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="82240fc8-b721-4d4b-8490-a9cb22722992" isOneWay="false" action="urn:getUserClaimValue" name="getUserClaimValue" bindingOperationName="getUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e25d9988-ce23-4e89-a6ea-4ec5837f02c7" isOneWay="false" action="urn:getUserClaimValues" name="getUserClaimValues" bindingOperationName="getUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="251f25ba-20c4-4600-9fb4-16cec50f3998" isOneWay="false" action="urn:getUserId" name="getUserId" bindingOperationName="getUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a451389c-023d-4775-a31f-d799728a528b" isOneWay="false" action="urn:setUserClaimValue" name="setUserClaimValue" bindingOperationName="setUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a144009-5ea5-4d4b-8c0a-68eed8059568" isOneWay="false" action="urn:setUserClaimValues" name="setUserClaimValues" bindingOperationName="setUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8440cf52-3c4c-4105-81cc-5d1320ec7183" isOneWay="false" action="urn:updateCredential" name="updateCredential" bindingOperationName="updateCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b602e860-a765-472c-a5cd-085c85b2f782" wsaVersion="NONE" name="MultipleCredentialsUserAdminSoap11Binding" type="wsdl" bindingName="{http://multiplecredentials.mgt.user.carbon.wso2.org}MultipleCredentialsUserAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/MultipleCredentialsUserAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/MultipleCredentialsUserAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/MultipleCredentialsUserAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://multiplecredentials.mgt.user.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://multiplecredentials.mgt.user.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2692="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2694="http://multiplecredentials.core.user.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>MultipleCredentialsUserAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.mgt.user.carbon.wso2.org/xsd">
      <xs:complexType name="MultipleCredentialsUserAdminException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://multiplecredentials.mgt.user.carbon.wso2.org" xmlns:ax2693="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ax2695="http://multiplecredentials.core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.mgt.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://multiplecredentials.core.user.carbon.wso2.org/xsd"/>
      <xs:element name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="MultipleCredentialsUserAdminException" nillable="true" type="ax2692:MultipleCredentialsUserAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roleList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2692:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCredentials">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="anIdentifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCredentialsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateCredential">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValueResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValuesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2692:ClaimValue"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2692:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserWithUserId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roleList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2692:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roleList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2692:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCredential">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="anIdentifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="ax2694:Credential"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteCredential">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="identifer" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credentialType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUserClaimValuesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2692:ClaimValue"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://multiplecredentials.core.user.carbon.wso2.org/xsd">
      <xs:complexType name="Credential">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="credentialProperties" nillable="true" type="ax2694:CredentialProperty"/>
          <xs:element minOccurs="0" name="credentialsType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="secret" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CredentialProperty">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateCredentialRequest">
    <wsdl:part name="parameters" element="ns:updateCredential"/>
  </wsdl:message>
  <wsdl:message name="updateCredentialResponse"/>
  <wsdl:message name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
    <wsdl:part name="parameters" element="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:deleteUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValuesResponse"/>
  <wsdl:message name="authenticateRequest">
    <wsdl:part name="parameters" element="ns:authenticate"/>
  </wsdl:message>
  <wsdl:message name="authenticateResponse">
    <wsdl:part name="parameters" element="ns:authenticateResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserRequest">
    <wsdl:part name="parameters" element="ns:addUser"/>
  </wsdl:message>
  <wsdl:message name="addUserResponse"/>
  <wsdl:message name="getCredentialsRequest">
    <wsdl:part name="parameters" element="ns:getCredentials"/>
  </wsdl:message>
  <wsdl:message name="getCredentialsResponse">
    <wsdl:part name="parameters" element="ns:getCredentialsResponse"/>
  </wsdl:message>
  <wsdl:message name="addCredentialRequest">
    <wsdl:part name="parameters" element="ns:addCredential"/>
  </wsdl:message>
  <wsdl:message name="addCredentialResponse"/>
  <wsdl:message name="addUsersRequest">
    <wsdl:part name="parameters" element="ns:addUsers"/>
  </wsdl:message>
  <wsdl:message name="addUsersResponse"/>
  <wsdl:message name="setUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:setUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="setUserClaimValuesResponse"/>
  <wsdl:message name="deleteUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:deleteUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValueResponse"/>
  <wsdl:message name="setUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:setUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="setUserClaimValueResponse"/>
  <wsdl:message name="getUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValuesResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValueResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValueResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserRequest">
    <wsdl:part name="parameters" element="ns:deleteUser"/>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse"/>
  <wsdl:message name="getAllUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:getAllUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="getAllUserClaimValuesResponse">
    <wsdl:part name="parameters" element="ns:getAllUserClaimValuesResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserWithUserIdRequest">
    <wsdl:part name="parameters" element="ns:addUserWithUserId"/>
  </wsdl:message>
  <wsdl:message name="addUserWithUserIdResponse"/>
  <wsdl:message name="getUserIdRequest">
    <wsdl:part name="parameters" element="ns:getUserId"/>
  </wsdl:message>
  <wsdl:message name="getUserIdResponse">
    <wsdl:part name="parameters" element="ns:getUserIdResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteCredentialRequest">
    <wsdl:part name="parameters" element="ns:deleteCredential"/>
  </wsdl:message>
  <wsdl:message name="deleteCredentialResponse"/>
  <wsdl:portType name="MultipleCredentialsUserAdminPortType">
    <wsdl:operation name="updateCredential">
      <wsdl:input message="ns:updateCredentialRequest" wsaw:Action="urn:updateCredential"/>
      <wsdl:output message="ns:updateCredentialResponse" wsaw:Action="urn:updateCredentialResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:updateCredentialMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <wsdl:input message="ns:deleteUserClaimValuesRequest" wsaw:Action="urn:deleteUserClaimValues"/>
      <wsdl:output message="ns:deleteUserClaimValuesResponse" wsaw:Action="urn:deleteUserClaimValuesResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:deleteUserClaimValuesMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <wsdl:input message="ns:authenticateRequest" wsaw:Action="urn:authenticate"/>
      <wsdl:output message="ns:authenticateResponse" wsaw:Action="urn:authenticateResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:authenticateMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdl:input message="ns:addUserRequest" wsaw:Action="urn:addUser"/>
      <wsdl:output message="ns:addUserResponse" wsaw:Action="urn:addUserResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:addUserMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getCredentials">
      <wsdl:input message="ns:getCredentialsRequest" wsaw:Action="urn:getCredentials"/>
      <wsdl:output message="ns:getCredentialsResponse" wsaw:Action="urn:getCredentialsResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getCredentialsMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addCredential">
      <wsdl:input message="ns:addCredentialRequest" wsaw:Action="urn:addCredential"/>
      <wsdl:output message="ns:addCredentialResponse" wsaw:Action="urn:addCredentialResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:addCredentialMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addUsers">
      <wsdl:input message="ns:addUsersRequest" wsaw:Action="urn:addUsers"/>
      <wsdl:output message="ns:addUsersResponse" wsaw:Action="urn:addUsersResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:addUsersMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <wsdl:input message="ns:setUserClaimValuesRequest" wsaw:Action="urn:setUserClaimValues"/>
      <wsdl:output message="ns:setUserClaimValuesResponse" wsaw:Action="urn:setUserClaimValuesResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:setUserClaimValuesMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <wsdl:input message="ns:deleteUserClaimValueRequest" wsaw:Action="urn:deleteUserClaimValue"/>
      <wsdl:output message="ns:deleteUserClaimValueResponse" wsaw:Action="urn:deleteUserClaimValueResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:deleteUserClaimValueMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <wsdl:input message="ns:setUserClaimValueRequest" wsaw:Action="urn:setUserClaimValue"/>
      <wsdl:output message="ns:setUserClaimValueResponse" wsaw:Action="urn:setUserClaimValueResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:setUserClaimValueMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <wsdl:input message="ns:getUserClaimValuesRequest" wsaw:Action="urn:getUserClaimValues"/>
      <wsdl:output message="ns:getUserClaimValuesResponse" wsaw:Action="urn:getUserClaimValuesResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getUserClaimValuesMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <wsdl:input message="ns:getUserClaimValueRequest" wsaw:Action="urn:getUserClaimValue"/>
      <wsdl:output message="ns:getUserClaimValueResponse" wsaw:Action="urn:getUserClaimValueResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getUserClaimValueMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="ns:deleteUserRequest" wsaw:Action="urn:deleteUser"/>
      <wsdl:output message="ns:deleteUserResponse" wsaw:Action="urn:deleteUserResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:deleteUserMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllUserClaimValues">
      <wsdl:input message="ns:getAllUserClaimValuesRequest" wsaw:Action="urn:getAllUserClaimValues"/>
      <wsdl:output message="ns:getAllUserClaimValuesResponse" wsaw:Action="urn:getAllUserClaimValuesResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getAllUserClaimValuesMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserWithUserId">
      <wsdl:input message="ns:addUserWithUserIdRequest" wsaw:Action="urn:addUserWithUserId"/>
      <wsdl:output message="ns:addUserWithUserIdResponse" wsaw:Action="urn:addUserWithUserIdResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:addUserWithUserIdMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <wsdl:input message="ns:getUserIdRequest" wsaw:Action="urn:getUserId"/>
      <wsdl:output message="ns:getUserIdResponse" wsaw:Action="urn:getUserIdResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:getUserIdMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteCredential">
      <wsdl:input message="ns:deleteCredentialRequest" wsaw:Action="urn:deleteCredential"/>
      <wsdl:output message="ns:deleteCredentialResponse" wsaw:Action="urn:deleteCredentialResponse"/>
      <wsdl:fault message="ns:MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException" wsaw:Action="urn:deleteCredentialMultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MultipleCredentialsUserAdminSoap11Binding" type="ns:MultipleCredentialsUserAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCredential">
      <soap:operation soapAction="urn:updateCredential" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <soap:operation soapAction="urn:deleteUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <soap:operation soapAction="urn:authenticate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCredentials">
      <soap:operation soapAction="urn:getCredentials" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCredential">
      <soap:operation soapAction="urn:addCredential" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUsers">
      <soap:operation soapAction="urn:addUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <soap:operation soapAction="urn:setUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <soap:operation soapAction="urn:deleteUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <soap:operation soapAction="urn:setUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <soap:operation soapAction="urn:getUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <soap:operation soapAction="urn:getUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserClaimValues">
      <soap:operation soapAction="urn:getAllUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserWithUserId">
      <soap:operation soapAction="urn:addUserWithUserId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <soap:operation soapAction="urn:getUserId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCredential">
      <soap:operation soapAction="urn:deleteCredential" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MultipleCredentialsUserAdminSoap12Binding" type="ns:MultipleCredentialsUserAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCredential">
      <soap12:operation soapAction="urn:updateCredential" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <soap12:operation soapAction="urn:deleteUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <soap12:operation soapAction="urn:authenticate" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap12:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCredentials">
      <soap12:operation soapAction="urn:getCredentials" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCredential">
      <soap12:operation soapAction="urn:addCredential" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUsers">
      <soap12:operation soapAction="urn:addUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <soap12:operation soapAction="urn:setUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <soap12:operation soapAction="urn:deleteUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <soap12:operation soapAction="urn:setUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <soap12:operation soapAction="urn:getUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <soap12:operation soapAction="urn:getUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap12:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserClaimValues">
      <soap12:operation soapAction="urn:getAllUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserWithUserId">
      <soap12:operation soapAction="urn:addUserWithUserId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <soap12:operation soapAction="urn:getUserId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCredential">
      <soap12:operation soapAction="urn:deleteCredential" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException">
        <soap12:fault use="literal" name="MultipleCredentialsUserAdminMultipleCredentialsUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="MultipleCredentialsUserAdminHttpBinding" type="ns:MultipleCredentialsUserAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateCredential">
      <http:operation location="updateCredential"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <http:operation location="deleteUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <http:operation location="authenticate"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <http:operation location="addUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCredentials">
      <http:operation location="getCredentials"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addCredential">
      <http:operation location="addCredential"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUsers">
      <http:operation location="addUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <http:operation location="setUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <http:operation location="deleteUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <http:operation location="setUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <http:operation location="getUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <http:operation location="getUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <http:operation location="deleteUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllUserClaimValues">
      <http:operation location="getAllUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserWithUserId">
      <http:operation location="addUserWithUserId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <http:operation location="getUserId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteCredential">
      <http:operation location="deleteCredential"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MultipleCredentialsUserAdmin">
    <wsdl:port name="MultipleCredentialsUserAdminHttpsSoap11Endpoint" binding="ns:MultipleCredentialsUserAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="MultipleCredentialsUserAdminHttpsSoap12Endpoint" binding="ns:MultipleCredentialsUserAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="MultipleCredentialsUserAdminHttpsEndpoint" binding="ns:MultipleCredentialsUserAdminHttpBinding">
      <http:address location="https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/MultipleCredentialsUserAdmin.MultipleCredentialsUserAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="53034e53-5e47-438b-b59a-a0ead58ccf83" isOneWay="false" action="urn:addCredential" name="addCredential" bindingOperationName="addCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="edc012ea-0df8-47d3-8465-99c0e42df148" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="28cd536a-f1b9-48d6-ba69-667fc531df59" isOneWay="false" action="urn:addUsers" name="addUsers" bindingOperationName="addUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="59e89cbd-9638-4e00-94d9-1e73dc3c3078" isOneWay="false" action="urn:addUserWithUserId" name="addUserWithUserId" bindingOperationName="addUserWithUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c7b8cd2-6268-4ed7-a1d9-8372cbd2a3fa" isOneWay="false" action="urn:authenticate" name="authenticate" bindingOperationName="authenticate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e9872a46-442a-4f4c-bd19-ce125d2d51f1" isOneWay="false" action="urn:deleteCredential" name="deleteCredential" bindingOperationName="deleteCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f52b733-9762-4659-8aa3-6142b8435531" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8319eb73-4ee6-4ac8-8099-5deafc5e6fe0" isOneWay="false" action="urn:deleteUserClaimValue" name="deleteUserClaimValue" bindingOperationName="deleteUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f4f1efdd-40ae-4648-8f6c-4a80cf4720ad" isOneWay="false" action="urn:deleteUserClaimValues" name="deleteUserClaimValues" bindingOperationName="deleteUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="64b071bc-43f8-4ec0-8e38-62a43779ea6d" isOneWay="false" action="urn:getAllUserClaimValues" name="getAllUserClaimValues" bindingOperationName="getAllUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="00840d05-3fee-41e2-b8d9-553d204ee155" isOneWay="false" action="urn:getCredentials" name="getCredentials" bindingOperationName="getCredentials" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b36f2b29-4933-489d-98a7-45f1b6c3912e" isOneWay="false" action="urn:getUserClaimValue" name="getUserClaimValue" bindingOperationName="getUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="27685e31-fc26-4737-9cf8-e16f2735b104" isOneWay="false" action="urn:getUserClaimValues" name="getUserClaimValues" bindingOperationName="getUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6c706cc-03c5-4872-be73-cdcd9266bb97" isOneWay="false" action="urn:getUserId" name="getUserId" bindingOperationName="getUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="27e155ce-b1b9-42b4-9f2f-9628a6154d0f" isOneWay="false" action="urn:setUserClaimValue" name="setUserClaimValue" bindingOperationName="setUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a6516145-edd9-4e48-8814-1175974ffcb9" isOneWay="false" action="urn:setUserClaimValues" name="setUserClaimValues" bindingOperationName="setUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="681bbfcf-239d-489c-8075-2f77ddaa54b5" isOneWay="false" action="urn:updateCredential" name="updateCredential" bindingOperationName="updateCredential" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9f14892a-e358-4e07-8cdc-49604835ce33" wsaVersion="NONE" name="NDataSourceAdminSoap12Binding" type="wsdl" bindingName="{http://services.core.ndatasource.carbon.wso2.org}NDataSourceAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/NDataSourceAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="6595fb51-303a-4f9c-8add-fe130f176aaf" isOneWay="false" action="urn:addDataSource" name="addDataSource" bindingOperationName="addDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a3725699-f6dd-4257-820f-254854d2b965" isOneWay="false" action="urn:deleteDataSource" name="deleteDataSource" bindingOperationName="deleteDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="61116c84-ab15-407a-9324-7e2af5ab8d70" isOneWay="false" action="urn:getAllDataSources" name="getAllDataSources" bindingOperationName="getAllDataSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7531881-49e1-42b3-a314-66b53ea7ac36" isOneWay="false" action="urn:getAllDataSourcesForType" name="getAllDataSourcesForType" bindingOperationName="getAllDataSourcesForType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b0cecba5-7f69-4624-b5ee-75599e1e6315" isOneWay="false" action="urn:getDataSource" name="getDataSource" bindingOperationName="getDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c2891380-e0e3-44d8-a9b2-374320f3c228" isOneWay="false" action="urn:getDataSourceTypes" name="getDataSourceTypes" bindingOperationName="getDataSourceTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9f4af071-1c34-47ed-b711-d9b9b365ce2f" isOneWay="false" action="urn:reloadAllDataSources" name="reloadAllDataSources" bindingOperationName="reloadAllDataSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d6aa2dc3-9f54-40d7-afbf-3eea374eb9b2" isOneWay="false" action="urn:reloadDataSource" name="reloadDataSource" bindingOperationName="reloadDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0a89e32c-4c1f-43d2-bfb7-347b39dd660d" isOneWay="false" action="urn:testDataSourceConnection" name="testDataSourceConnection" bindingOperationName="testDataSourceConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="0d219c16-2757-4f97-a331-ae8dba660f59" wsaVersion="NONE" name="NDataSourceAdminSoap11Binding" type="wsdl" bindingName="{http://services.core.ndatasource.carbon.wso2.org}NDataSourceAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/NDataSourceAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/NDataSourceAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/NDataSourceAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.core.ndatasource.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2454="http://common.ndatasource.carbon.wso2.org/xsd" xmlns:ax2456="http://services.core.ndatasource.carbon.wso2.org/xsd" xmlns:ax2457="http://core.ndatasource.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://services.core.ndatasource.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>NDataSourceAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.core.ndatasource.carbon.wso2.org/xsd" xmlns:ax2458="http://core.ndatasource.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.ndatasource.carbon.wso2.org/xsd"/>
      <xs:complexType name="WSDataSourceInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="dsMetaInfo" nillable="true" type="ax2456:WSDataSourceMetaInfo"/>
          <xs:element minOccurs="0" name="dsStatus" nillable="true" type="ax2457:DataSourceStatus"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDataSourceMetaInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="definition" nillable="true" type="ax2456:WSDataSourceMetaInfo_WSDataSourceDefinition"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="jndiConfig" nillable="true" type="ax2457:JNDIConfig"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="system" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSDataSourceMetaInfo_WSDataSourceDefinition">
        <xs:sequence>
          <xs:element minOccurs="0" name="dsXMLConfiguration" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2455="http://common.ndatasource.carbon.wso2.org/xsd" xmlns:ax2459="http://services.core.ndatasource.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://common.ndatasource.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://services.core.ndatasource.carbon.wso2.org/xsd"/>
      <xs:element name="NDataSourceAdminDataSourceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DataSourceException" nillable="true" type="ax2454:DataSourceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllDataSources">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllDataSourcesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2456:WSDataSourceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsmInfo" nillable="true" type="ax2456:WSDataSourceMetaInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="testDataSourceConnection">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsmInfo" nillable="true" type="ax2456:WSDataSourceMetaInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="testDataSourceConnectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2456:WSDataSourceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllDataSourcesForType">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllDataSourcesForTypeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2456:WSDataSourceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDataSourceTypes">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDataSourceTypesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadAllDataSources">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadAllDataSourcesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadDataSource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dsName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadDataSourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.ndatasource.carbon.wso2.org/xsd">
      <xs:complexType name="JNDIConfig">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="environment" nillable="true" type="ax2457:JNDIConfig_EnvEntry"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="useDataSourceFactory" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="JNDIConfig_EnvEntry">
        <xs:sequence>
          <xs:element minOccurs="0" name="encrypted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DataSourceStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="details" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mode" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.ndatasource.carbon.wso2.org/xsd">
      <xs:complexType name="DataSourceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="deleteDataSourceRequest">
    <wsdl:part name="parameters" element="ns1:deleteDataSource"/>
  </wsdl:message>
  <wsdl:message name="deleteDataSourceResponse">
    <wsdl:part name="parameters" element="ns1:deleteDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="NDataSourceAdminDataSourceException">
    <wsdl:part name="parameters" element="ns1:NDataSourceAdminDataSourceException"/>
  </wsdl:message>
  <wsdl:message name="getDataSourceRequest">
    <wsdl:part name="parameters" element="ns1:getDataSource"/>
  </wsdl:message>
  <wsdl:message name="getDataSourceResponse">
    <wsdl:part name="parameters" element="ns1:getDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllDataSourcesRequest">
    <wsdl:part name="parameters" element="ns1:getAllDataSources"/>
  </wsdl:message>
  <wsdl:message name="getAllDataSourcesResponse">
    <wsdl:part name="parameters" element="ns1:getAllDataSourcesResponse"/>
  </wsdl:message>
  <wsdl:message name="testDataSourceConnectionRequest">
    <wsdl:part name="parameters" element="ns1:testDataSourceConnection"/>
  </wsdl:message>
  <wsdl:message name="testDataSourceConnectionResponse">
    <wsdl:part name="parameters" element="ns1:testDataSourceConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="reloadDataSourceRequest">
    <wsdl:part name="parameters" element="ns1:reloadDataSource"/>
  </wsdl:message>
  <wsdl:message name="reloadDataSourceResponse">
    <wsdl:part name="parameters" element="ns1:reloadDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="getDataSourceTypesRequest">
    <wsdl:part name="parameters" element="ns1:getDataSourceTypes"/>
  </wsdl:message>
  <wsdl:message name="getDataSourceTypesResponse">
    <wsdl:part name="parameters" element="ns1:getDataSourceTypesResponse"/>
  </wsdl:message>
  <wsdl:message name="reloadAllDataSourcesRequest">
    <wsdl:part name="parameters" element="ns1:reloadAllDataSources"/>
  </wsdl:message>
  <wsdl:message name="reloadAllDataSourcesResponse">
    <wsdl:part name="parameters" element="ns1:reloadAllDataSourcesResponse"/>
  </wsdl:message>
  <wsdl:message name="addDataSourceRequest">
    <wsdl:part name="parameters" element="ns1:addDataSource"/>
  </wsdl:message>
  <wsdl:message name="addDataSourceResponse">
    <wsdl:part name="parameters" element="ns1:addDataSourceResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllDataSourcesForTypeRequest">
    <wsdl:part name="parameters" element="ns1:getAllDataSourcesForType"/>
  </wsdl:message>
  <wsdl:message name="getAllDataSourcesForTypeResponse">
    <wsdl:part name="parameters" element="ns1:getAllDataSourcesForTypeResponse"/>
  </wsdl:message>
  <wsdl:portType name="NDataSourceAdminPortType">
    <wsdl:operation name="deleteDataSource">
      <wsdl:input message="tns:deleteDataSourceRequest" wsaw:Action="urn:deleteDataSource"/>
      <wsdl:output message="tns:deleteDataSourceResponse" wsaw:Action="urn:deleteDataSourceResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:deleteDataSourceNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <wsdl:input message="tns:getDataSourceRequest" wsaw:Action="urn:getDataSource"/>
      <wsdl:output message="tns:getDataSourceResponse" wsaw:Action="urn:getDataSourceResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:getDataSourceNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSources">
      <wsdl:input message="tns:getAllDataSourcesRequest" wsaw:Action="urn:getAllDataSources"/>
      <wsdl:output message="tns:getAllDataSourcesResponse" wsaw:Action="urn:getAllDataSourcesResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:getAllDataSourcesNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="testDataSourceConnection">
      <wsdl:input message="tns:testDataSourceConnectionRequest" wsaw:Action="urn:testDataSourceConnection"/>
      <wsdl:output message="tns:testDataSourceConnectionResponse" wsaw:Action="urn:testDataSourceConnectionResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:testDataSourceConnectionNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="reloadDataSource">
      <wsdl:input message="tns:reloadDataSourceRequest" wsaw:Action="urn:reloadDataSource"/>
      <wsdl:output message="tns:reloadDataSourceResponse" wsaw:Action="urn:reloadDataSourceResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:reloadDataSourceNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="getDataSourceTypes">
      <wsdl:input message="tns:getDataSourceTypesRequest" wsaw:Action="urn:getDataSourceTypes"/>
      <wsdl:output message="tns:getDataSourceTypesResponse" wsaw:Action="urn:getDataSourceTypesResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:getDataSourceTypesNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="reloadAllDataSources">
      <wsdl:input message="tns:reloadAllDataSourcesRequest" wsaw:Action="urn:reloadAllDataSources"/>
      <wsdl:output message="tns:reloadAllDataSourcesResponse" wsaw:Action="urn:reloadAllDataSourcesResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:reloadAllDataSourcesNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="addDataSource">
      <wsdl:input message="tns:addDataSourceRequest" wsaw:Action="urn:addDataSource"/>
      <wsdl:output message="tns:addDataSourceResponse" wsaw:Action="urn:addDataSourceResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:addDataSourceNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSourcesForType">
      <wsdl:input message="tns:getAllDataSourcesForTypeRequest" wsaw:Action="urn:getAllDataSourcesForType"/>
      <wsdl:output message="tns:getAllDataSourcesForTypeResponse" wsaw:Action="urn:getAllDataSourcesForTypeResponse"/>
      <wsdl:fault message="tns:NDataSourceAdminDataSourceException" name="NDataSourceAdminDataSourceException" wsaw:Action="urn:getAllDataSourcesForTypeNDataSourceAdminDataSourceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="NDataSourceAdminSoap11Binding" type="tns:NDataSourceAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="deleteDataSource">
      <soap:operation soapAction="urn:deleteDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <soap:operation soapAction="urn:getDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSources">
      <soap:operation soapAction="urn:getAllDataSources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testDataSourceConnection">
      <soap:operation soapAction="urn:testDataSourceConnection" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadDataSource">
      <soap:operation soapAction="urn:reloadDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSourceTypes">
      <soap:operation soapAction="urn:getDataSourceTypes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadAllDataSources">
      <soap:operation soapAction="urn:reloadAllDataSources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDataSource">
      <soap:operation soapAction="urn:addDataSource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSourcesForType">
      <soap:operation soapAction="urn:getAllDataSourcesForType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="NDataSourceAdminSoap12Binding" type="tns:NDataSourceAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="deleteDataSource">
      <soap12:operation soapAction="urn:deleteDataSource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <soap12:operation soapAction="urn:getDataSource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSources">
      <soap12:operation soapAction="urn:getAllDataSources" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testDataSourceConnection">
      <soap12:operation soapAction="urn:testDataSourceConnection" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadDataSource">
      <soap12:operation soapAction="urn:reloadDataSource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataSourceTypes">
      <soap12:operation soapAction="urn:getDataSourceTypes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reloadAllDataSources">
      <soap12:operation soapAction="urn:reloadAllDataSources" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDataSource">
      <soap12:operation soapAction="urn:addDataSource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSourcesForType">
      <soap12:operation soapAction="urn:getAllDataSourcesForType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NDataSourceAdminDataSourceException">
        <soap12:fault use="literal" name="NDataSourceAdminDataSourceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="NDataSourceAdminHttpBinding" type="tns:NDataSourceAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="deleteDataSource">
      <http:operation location="deleteDataSource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDataSource">
      <http:operation location="getDataSource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSources">
      <http:operation location="getAllDataSources"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="testDataSourceConnection">
      <http:operation location="testDataSourceConnection"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reloadDataSource">
      <http:operation location="reloadDataSource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDataSourceTypes">
      <http:operation location="getDataSourceTypes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reloadAllDataSources">
      <http:operation location="reloadAllDataSources"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addDataSource">
      <http:operation location="addDataSource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllDataSourcesForType">
      <http:operation location="getAllDataSourcesForType"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="NDataSourceAdmin">
    <wsdl:port name="NDataSourceAdminHttpsSoap11Endpoint" binding="tns:NDataSourceAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="NDataSourceAdminHttpsSoap12Endpoint" binding="tns:NDataSourceAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="NDataSourceAdminHttpsEndpoint" binding="tns:NDataSourceAdminHttpBinding">
      <http:address location="https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/NDataSourceAdmin.NDataSourceAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c8b3a8aa-2ec1-4e33-bd8b-d4909ac19163" isOneWay="false" action="urn:addDataSource" name="addDataSource" bindingOperationName="addDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="995ed2c2-475f-457e-ba5a-f4dbac4a52f6" isOneWay="false" action="urn:deleteDataSource" name="deleteDataSource" bindingOperationName="deleteDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9ab7739e-452d-4ab3-8c97-56f688880006" isOneWay="false" action="urn:getAllDataSources" name="getAllDataSources" bindingOperationName="getAllDataSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b185f0fd-0d56-4b4d-a9d9-35dacc33089d" isOneWay="false" action="urn:getAllDataSourcesForType" name="getAllDataSourcesForType" bindingOperationName="getAllDataSourcesForType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e76aa771-11ad-470b-bb48-6d5e50d74d64" isOneWay="false" action="urn:getDataSource" name="getDataSource" bindingOperationName="getDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dc225eb7-8908-4362-a89c-fb1576d60d22" isOneWay="false" action="urn:getDataSourceTypes" name="getDataSourceTypes" bindingOperationName="getDataSourceTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5b92634f-d8cb-4442-baae-a84e61804cb4" isOneWay="false" action="urn:reloadAllDataSources" name="reloadAllDataSources" bindingOperationName="reloadAllDataSources" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2108ef94-d390-470d-ab3b-a05800ce55bb" isOneWay="false" action="urn:reloadDataSource" name="reloadDataSource" bindingOperationName="reloadDataSource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f33e8908-05ff-4c1e-b060-e92bf79a731b" isOneWay="false" action="urn:testDataSourceConnection" name="testDataSourceConnection" bindingOperationName="testDataSourceConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ad6b8d69-3390-4b0c-a275-0d5cfd688c8d" wsaVersion="NONE" name="OAuth2TokenValidationServiceSoap11Binding" type="wsdl" bindingName="{http://oauth2.identity.carbon.wso2.org}OAuth2TokenValidationServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OAuth2TokenValidationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="a7d4ef52-f903-4008-988a-7f5f95e6fe3e" isOneWay="false" action="urn:buildIntrospectionResponse" name="buildIntrospectionResponse" bindingOperationName="buildIntrospectionResponse" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3e5d310d-f4f0-4f17-a1e9-4c4a9eb80758" isOneWay="false" action="urn:findOAuthConsumerIfTokenIsValid" name="findOAuthConsumerIfTokenIsValid" bindingOperationName="findOAuthConsumerIfTokenIsValid" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3be8f1a6-8bc8-4bb3-8b8d-ffda48033a77" isOneWay="false" action="urn:validate" name="validate" bindingOperationName="validate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="520f2ef9-6001-44c6-954e-d6fa93dfcf16" wsaVersion="NONE" name="OAuth2TokenValidationServiceSoap12Binding" type="wsdl" bindingName="{http://oauth2.identity.carbon.wso2.org}OAuth2TokenValidationServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OAuth2TokenValidationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OAuth2TokenValidationService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OAuth2TokenValidationService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://oauth2.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://oauth2.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2350="http://dto.oauth2.identity.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>OAuth2TokenValidationService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2351="http://dto.oauth2.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://dto.oauth2.identity.carbon.wso2.org/xsd"/>
      <xs:element name="validate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="validationReqDTO" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="validateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2350:OAuth2TokenValidationResponseDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findOAuthConsumerIfTokenIsValid">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="validationReqDTO" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="findOAuthConsumerIfTokenIsValidResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2350:OAuth2ClientApplicationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="buildIntrospectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="validationReq" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="buildIntrospectionResponseResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2350:OAuth2IntrospectionResponseDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.oauth2.identity.carbon.wso2.org/xsd">
      <xs:complexType name="OAuth2TokenValidationRequestDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="accessToken" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO_OAuth2AccessToken"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="context" nillable="true" type="ax2350:OAuth2TokenValidationRequestDTO_TokenValidationContextParam"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredClaimURIs" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2TokenValidationRequestDTO_OAuth2AccessToken">
        <xs:sequence>
          <xs:element minOccurs="0" name="identifier" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tokenType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2TokenValidationRequestDTO_TokenValidationContextParam">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2TokenValidationResponseDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="authorizationContextToken" nillable="true" type="ax2350:OAuth2TokenValidationResponseDTO_AuthorizationContextToken"/>
          <xs:element minOccurs="0" name="authorizedUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorMsg" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="expiryTime" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="valid" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2TokenValidationResponseDTO_AuthorizationContextToken">
        <xs:sequence>
          <xs:element minOccurs="0" name="tokenString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tokenType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2ClientApplicationDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="accessTokenValidationResponse" nillable="true" type="ax2350:OAuth2TokenValidationResponseDTO"/>
          <xs:element minOccurs="0" name="consumerKey" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuth2IntrospectionResponseDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="aud" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="clientId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="exp" type="xs:long"/>
          <xs:element minOccurs="0" name="iat" type="xs:long"/>
          <xs:element minOccurs="0" name="iss" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="jti" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nbf" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="sub" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tokenType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userContext" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="buildIntrospectionResponseRequest">
    <wsdl:part name="parameters" element="ns1:buildIntrospectionResponse"/>
  </wsdl:message>
  <wsdl:message name="buildIntrospectionResponseResponse">
    <wsdl:part name="parameters" element="ns1:buildIntrospectionResponseResponse"/>
  </wsdl:message>
  <wsdl:message name="findOAuthConsumerIfTokenIsValidRequest">
    <wsdl:part name="parameters" element="ns1:findOAuthConsumerIfTokenIsValid"/>
  </wsdl:message>
  <wsdl:message name="findOAuthConsumerIfTokenIsValidResponse">
    <wsdl:part name="parameters" element="ns1:findOAuthConsumerIfTokenIsValidResponse"/>
  </wsdl:message>
  <wsdl:message name="validateRequest">
    <wsdl:part name="parameters" element="ns1:validate"/>
  </wsdl:message>
  <wsdl:message name="validateResponse">
    <wsdl:part name="parameters" element="ns1:validateResponse"/>
  </wsdl:message>
  <wsdl:portType name="OAuth2TokenValidationServicePortType">
    <wsdl:operation name="buildIntrospectionResponse">
      <wsdl:input message="tns:buildIntrospectionResponseRequest" wsaw:Action="urn:buildIntrospectionResponse"/>
      <wsdl:output message="tns:buildIntrospectionResponseResponse" wsaw:Action="urn:buildIntrospectionResponseResponse"/>
    </wsdl:operation>
    <wsdl:operation name="findOAuthConsumerIfTokenIsValid">
      <wsdl:input message="tns:findOAuthConsumerIfTokenIsValidRequest" wsaw:Action="urn:findOAuthConsumerIfTokenIsValid"/>
      <wsdl:output message="tns:findOAuthConsumerIfTokenIsValidResponse" wsaw:Action="urn:findOAuthConsumerIfTokenIsValidResponse"/>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <wsdl:input message="tns:validateRequest" wsaw:Action="urn:validate"/>
      <wsdl:output message="tns:validateResponse" wsaw:Action="urn:validateResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OAuth2TokenValidationServiceSoap11Binding" type="tns:OAuth2TokenValidationServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="buildIntrospectionResponse">
      <soap:operation soapAction="urn:buildIntrospectionResponse" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOAuthConsumerIfTokenIsValid">
      <soap:operation soapAction="urn:findOAuthConsumerIfTokenIsValid" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <soap:operation soapAction="urn:validate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuth2TokenValidationServiceSoap12Binding" type="tns:OAuth2TokenValidationServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="buildIntrospectionResponse">
      <soap12:operation soapAction="urn:buildIntrospectionResponse" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOAuthConsumerIfTokenIsValid">
      <soap12:operation soapAction="urn:findOAuthConsumerIfTokenIsValid" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <soap12:operation soapAction="urn:validate" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuth2TokenValidationServiceHttpBinding" type="tns:OAuth2TokenValidationServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="buildIntrospectionResponse">
      <http:operation location="buildIntrospectionResponse"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findOAuthConsumerIfTokenIsValid">
      <http:operation location="findOAuthConsumerIfTokenIsValid"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validate">
      <http:operation location="validate"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OAuth2TokenValidationService">
    <wsdl:port name="OAuth2TokenValidationServiceHttpsSoap11Endpoint" binding="tns:OAuth2TokenValidationServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuth2TokenValidationServiceHttpsSoap12Endpoint" binding="tns:OAuth2TokenValidationServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuth2TokenValidationServiceHttpsEndpoint" binding="tns:OAuth2TokenValidationServiceHttpBinding">
      <http:address location="https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/OAuth2TokenValidationService.OAuth2TokenValidationServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="b55c3659-e2ec-4690-8f46-25cc03455f42" isOneWay="false" action="urn:buildIntrospectionResponse" name="buildIntrospectionResponse" bindingOperationName="buildIntrospectionResponse" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2611150e-defd-43ad-aed8-ab1d5397f608" isOneWay="false" action="urn:findOAuthConsumerIfTokenIsValid" name="findOAuthConsumerIfTokenIsValid" bindingOperationName="findOAuthConsumerIfTokenIsValid" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f22db858-7b3b-4db5-92d8-c576f74d02eb" isOneWay="false" action="urn:validate" name="validate" bindingOperationName="validate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="74954ae8-49d2-43f6-8698-cdab942906aa" wsaVersion="NONE" name="OAuthAdminServiceSoap12Binding" type="wsdl" bindingName="{http://oauth.identity.carbon.wso2.org}OAuthAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OAuthAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="ebe447ad-8778-42ac-92b1-d0a0fe816211" isOneWay="false" action="urn:getAllOAuthApplicationData" name="getAllOAuthApplicationData" bindingOperationName="getAllOAuthApplicationData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="30fb6276-feb0-43f8-88fc-426a4ede5267" isOneWay="false" action="urn:getAllowedGrantTypes" name="getAllowedGrantTypes" bindingOperationName="getAllowedGrantTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f0868d8-e19a-4b8f-af1e-d8885c58c5ee" isOneWay="false" action="urn:getAppsAuthorizedByUser" name="getAppsAuthorizedByUser" bindingOperationName="getAppsAuthorizedByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c0fbf438-e43f-42de-addd-e6b52dcd265a" isOneWay="false" action="urn:getOAuthApplicationData" name="getOAuthApplicationData" bindingOperationName="getOAuthApplicationData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="511b5414-0885-4cd6-961c-ca2b2126d679" isOneWay="false" action="urn:getOAuthApplicationDataByAppName" name="getOAuthApplicationDataByAppName" bindingOperationName="getOAuthApplicationDataByAppName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1763a73b-cd06-49f9-9576-4506d4bc5924" isOneWay="false" action="urn:registerOAuthApplicationData" name="registerOAuthApplicationData" bindingOperationName="registerOAuthApplicationData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="502bc635-49f0-45a0-ab55-1326af5d8aab" isOneWay="false" action="urn:registerOAuthConsumer" name="registerOAuthConsumer" bindingOperationName="registerOAuthConsumer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d155a978-a65f-43dd-986a-d5868e2c6e99" isOneWay="false" action="urn:removeOAuthApplicationData" name="removeOAuthApplicationData" bindingOperationName="removeOAuthApplicationData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0ea51e8b-8dc4-4045-b0b3-2b2c74f44a13" isOneWay="false" action="urn:revokeAuthzForAppsByResoureOwner" name="revokeAuthzForAppsByResoureOwner" bindingOperationName="revokeAuthzForAppsByResoureOwner" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="19eff89a-7aee-40b5-a921-8773971e2817" isOneWay="false" action="urn:updateConsumerApplication" name="updateConsumerApplication" bindingOperationName="updateConsumerApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="fdd5cb4c-b4c3-4218-80b3-0d156895e3f2" wsaVersion="NONE" name="OAuthAdminServiceSoap11Binding" type="wsdl" bindingName="{http://oauth.identity.carbon.wso2.org}OAuthAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OAuthAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OAuthAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OAuthAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://oauth.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2344="http://oauth.identity.carbon.wso2.org/xsd" xmlns:ax2345="http://base.identity.carbon.wso2.org/xsd" xmlns:ax2348="http://dto.oauth.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://oauth.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>OAuthAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2347="http://oauth.identity.carbon.wso2.org/xsd" xmlns:ax2349="http://dto.oauth.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://oauth.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.oauth.identity.carbon.wso2.org/xsd"/>
      <xs:element name="OAuthAdminServiceIdentityOAuthAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityOAuthAdminException" nillable="true" type="ax2344:IdentityOAuthAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOAuthApplicationData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="consumerKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOAuthApplicationDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOAuthApplicationDataByAppName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOAuthApplicationDataByAppNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerOAuthConsumer">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerOAuthConsumerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerOAuthApplicationData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="application" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateConsumerApplication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="consumerAppDTO" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeOAuthApplicationData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="consumerKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppsAuthorizedByUser">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAppsAuthorizedByUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllOAuthApplicationData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllOAuthApplicationDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2348:OAuthConsumerAppDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="revokeAuthzForAppsByResoureOwner">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="revokeRequestDTO" nillable="true" type="ax2348:OAuthRevocationRequestDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="revokeAuthzForAppsByResoureOwnerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2348:OAuthRevocationResponseDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedGrantTypes">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedGrantTypesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://oauth.identity.carbon.wso2.org/xsd" xmlns:ax2346="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityOAuthAdminException">
        <xs:complexContent>
          <xs:extension base="ax2345:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.oauth.identity.carbon.wso2.org/xsd">
      <xs:complexType name="OAuthConsumerAppDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="OAuthVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="callbackUrl" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="grantTypes" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthConsumerKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="oauthConsumerSecret" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuthRevocationRequestDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="apps" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authzUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="consumerKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="consumerSecret" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OAuthRevocationResponseDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="error" type="xs:boolean"/>
          <xs:element minOccurs="0" name="errorCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorMsg" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAppsAuthorizedByUserRequest">
    <wsdl:part name="parameters" element="ns1:getAppsAuthorizedByUser"/>
  </wsdl:message>
  <wsdl:message name="getAppsAuthorizedByUserResponse">
    <wsdl:part name="parameters" element="ns1:getAppsAuthorizedByUserResponse"/>
  </wsdl:message>
  <wsdl:message name="OAuthAdminServiceIdentityOAuthAdminException">
    <wsdl:part name="parameters" element="ns1:OAuthAdminServiceIdentityOAuthAdminException"/>
  </wsdl:message>
  <wsdl:message name="getAllOAuthApplicationDataRequest">
    <wsdl:part name="parameters" element="ns1:getAllOAuthApplicationData"/>
  </wsdl:message>
  <wsdl:message name="getAllOAuthApplicationDataResponse">
    <wsdl:part name="parameters" element="ns1:getAllOAuthApplicationDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getOAuthApplicationDataByAppNameRequest">
    <wsdl:part name="parameters" element="ns1:getOAuthApplicationDataByAppName"/>
  </wsdl:message>
  <wsdl:message name="getOAuthApplicationDataByAppNameResponse">
    <wsdl:part name="parameters" element="ns1:getOAuthApplicationDataByAppNameResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllowedGrantTypesRequest">
    <wsdl:part name="parameters" element="ns1:getAllowedGrantTypes"/>
  </wsdl:message>
  <wsdl:message name="getAllowedGrantTypesResponse">
    <wsdl:part name="parameters" element="ns1:getAllowedGrantTypesResponse"/>
  </wsdl:message>
  <wsdl:message name="updateConsumerApplicationRequest">
    <wsdl:part name="parameters" element="ns1:updateConsumerApplication"/>
  </wsdl:message>
  <wsdl:message name="registerOAuthConsumerRequest">
    <wsdl:part name="parameters" element="ns1:registerOAuthConsumer"/>
  </wsdl:message>
  <wsdl:message name="registerOAuthConsumerResponse">
    <wsdl:part name="parameters" element="ns1:registerOAuthConsumerResponse"/>
  </wsdl:message>
  <wsdl:message name="registerOAuthApplicationDataRequest">
    <wsdl:part name="parameters" element="ns1:registerOAuthApplicationData"/>
  </wsdl:message>
  <wsdl:message name="removeOAuthApplicationDataRequest">
    <wsdl:part name="parameters" element="ns1:removeOAuthApplicationData"/>
  </wsdl:message>
  <wsdl:message name="getOAuthApplicationDataRequest">
    <wsdl:part name="parameters" element="ns1:getOAuthApplicationData"/>
  </wsdl:message>
  <wsdl:message name="getOAuthApplicationDataResponse">
    <wsdl:part name="parameters" element="ns1:getOAuthApplicationDataResponse"/>
  </wsdl:message>
  <wsdl:message name="revokeAuthzForAppsByResoureOwnerRequest">
    <wsdl:part name="parameters" element="ns1:revokeAuthzForAppsByResoureOwner"/>
  </wsdl:message>
  <wsdl:message name="revokeAuthzForAppsByResoureOwnerResponse">
    <wsdl:part name="parameters" element="ns1:revokeAuthzForAppsByResoureOwnerResponse"/>
  </wsdl:message>
  <wsdl:portType name="OAuthAdminServicePortType">
    <wsdl:operation name="getAppsAuthorizedByUser">
      <wsdl:input message="tns:getAppsAuthorizedByUserRequest" wsaw:Action="urn:getAppsAuthorizedByUser"/>
      <wsdl:output message="tns:getAppsAuthorizedByUserResponse" wsaw:Action="urn:getAppsAuthorizedByUserResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:getAppsAuthorizedByUserOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllOAuthApplicationData">
      <wsdl:input message="tns:getAllOAuthApplicationDataRequest" wsaw:Action="urn:getAllOAuthApplicationData"/>
      <wsdl:output message="tns:getAllOAuthApplicationDataResponse" wsaw:Action="urn:getAllOAuthApplicationDataResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:getAllOAuthApplicationDataOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationDataByAppName">
      <wsdl:input message="tns:getOAuthApplicationDataByAppNameRequest" wsaw:Action="urn:getOAuthApplicationDataByAppName"/>
      <wsdl:output message="tns:getOAuthApplicationDataByAppNameResponse" wsaw:Action="urn:getOAuthApplicationDataByAppNameResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:getOAuthApplicationDataByAppNameOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllowedGrantTypes">
      <wsdl:input message="tns:getAllowedGrantTypesRequest" wsaw:Action="urn:getAllowedGrantTypes"/>
      <wsdl:output message="tns:getAllowedGrantTypesResponse" wsaw:Action="urn:getAllowedGrantTypesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="updateConsumerApplication">
      <wsdl:input message="tns:updateConsumerApplicationRequest" wsaw:Action="urn:updateConsumerApplication"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:updateConsumerApplicationOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthConsumer">
      <wsdl:input message="tns:registerOAuthConsumerRequest" wsaw:Action="urn:registerOAuthConsumer"/>
      <wsdl:output message="tns:registerOAuthConsumerResponse" wsaw:Action="urn:registerOAuthConsumerResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:registerOAuthConsumerOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthApplicationData">
      <wsdl:input message="tns:registerOAuthApplicationDataRequest" wsaw:Action="urn:registerOAuthApplicationData"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:registerOAuthApplicationDataOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="removeOAuthApplicationData">
      <wsdl:input message="tns:removeOAuthApplicationDataRequest" wsaw:Action="urn:removeOAuthApplicationData"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:removeOAuthApplicationDataOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationData">
      <wsdl:input message="tns:getOAuthApplicationDataRequest" wsaw:Action="urn:getOAuthApplicationData"/>
      <wsdl:output message="tns:getOAuthApplicationDataResponse" wsaw:Action="urn:getOAuthApplicationDataResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:getOAuthApplicationDataOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="revokeAuthzForAppsByResoureOwner">
      <wsdl:input message="tns:revokeAuthzForAppsByResoureOwnerRequest" wsaw:Action="urn:revokeAuthzForAppsByResoureOwner"/>
      <wsdl:output message="tns:revokeAuthzForAppsByResoureOwnerResponse" wsaw:Action="urn:revokeAuthzForAppsByResoureOwnerResponse"/>
      <wsdl:fault message="tns:OAuthAdminServiceIdentityOAuthAdminException" name="OAuthAdminServiceIdentityOAuthAdminException" wsaw:Action="urn:revokeAuthzForAppsByResoureOwnerOAuthAdminServiceIdentityOAuthAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OAuthAdminServiceSoap11Binding" type="tns:OAuthAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAppsAuthorizedByUser">
      <soap:operation soapAction="urn:getAppsAuthorizedByUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOAuthApplicationData">
      <soap:operation soapAction="urn:getAllOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationDataByAppName">
      <soap:operation soapAction="urn:getOAuthApplicationDataByAppName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedGrantTypes">
      <soap:operation soapAction="urn:getAllowedGrantTypes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateConsumerApplication">
      <soap:operation soapAction="urn:updateConsumerApplication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthConsumer">
      <soap:operation soapAction="urn:registerOAuthConsumer" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthApplicationData">
      <soap:operation soapAction="urn:registerOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOAuthApplicationData">
      <soap:operation soapAction="urn:removeOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationData">
      <soap:operation soapAction="urn:getOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeAuthzForAppsByResoureOwner">
      <soap:operation soapAction="urn:revokeAuthzForAppsByResoureOwner" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuthAdminServiceSoap12Binding" type="tns:OAuthAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAppsAuthorizedByUser">
      <soap12:operation soapAction="urn:getAppsAuthorizedByUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOAuthApplicationData">
      <soap12:operation soapAction="urn:getAllOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationDataByAppName">
      <soap12:operation soapAction="urn:getOAuthApplicationDataByAppName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedGrantTypes">
      <soap12:operation soapAction="urn:getAllowedGrantTypes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateConsumerApplication">
      <soap12:operation soapAction="urn:updateConsumerApplication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthConsumer">
      <soap12:operation soapAction="urn:registerOAuthConsumer" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthApplicationData">
      <soap12:operation soapAction="urn:registerOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOAuthApplicationData">
      <soap12:operation soapAction="urn:removeOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationData">
      <soap12:operation soapAction="urn:getOAuthApplicationData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeAuthzForAppsByResoureOwner">
      <soap12:operation soapAction="urn:revokeAuthzForAppsByResoureOwner" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OAuthAdminServiceIdentityOAuthAdminException">
        <soap12:fault use="literal" name="OAuthAdminServiceIdentityOAuthAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OAuthAdminServiceHttpBinding" type="tns:OAuthAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAppsAuthorizedByUser">
      <http:operation location="getAppsAuthorizedByUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllOAuthApplicationData">
      <http:operation location="getAllOAuthApplicationData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationDataByAppName">
      <http:operation location="getOAuthApplicationDataByAppName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllowedGrantTypes">
      <http:operation location="getAllowedGrantTypes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateConsumerApplication">
      <http:operation location="updateConsumerApplication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthConsumer">
      <http:operation location="registerOAuthConsumer"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerOAuthApplicationData">
      <http:operation location="registerOAuthApplicationData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeOAuthApplicationData">
      <http:operation location="removeOAuthApplicationData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getOAuthApplicationData">
      <http:operation location="getOAuthApplicationData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="revokeAuthzForAppsByResoureOwner">
      <http:operation location="revokeAuthzForAppsByResoureOwner"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OAuthAdminService">
    <wsdl:port name="OAuthAdminServiceHttpsSoap11Endpoint" binding="tns:OAuthAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuthAdminServiceHttpsSoap12Endpoint" binding="tns:OAuthAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OAuthAdminServiceHttpsEndpoint" binding="tns:OAuthAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/OAuthAdminService.OAuthAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="01ab1885-a013-4c6f-b6e6-7b547d6d6a5b" isOneWay="false" action="urn:getAllOAuthApplicationData" name="getAllOAuthApplicationData" bindingOperationName="getAllOAuthApplicationData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8b17083b-59f5-4c7e-9b87-b4a89f213001" isOneWay="false" action="urn:getAllowedGrantTypes" name="getAllowedGrantTypes" bindingOperationName="getAllowedGrantTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="83e5106b-26a0-4561-8008-0226254da40e" isOneWay="false" action="urn:getAppsAuthorizedByUser" name="getAppsAuthorizedByUser" bindingOperationName="getAppsAuthorizedByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1d7ea44a-925b-40c9-a7ea-bc16e453d444" isOneWay="false" action="urn:getOAuthApplicationData" name="getOAuthApplicationData" bindingOperationName="getOAuthApplicationData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="53ec211e-5851-4e98-a200-ba4a809635bd" isOneWay="false" action="urn:getOAuthApplicationDataByAppName" name="getOAuthApplicationDataByAppName" bindingOperationName="getOAuthApplicationDataByAppName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6f8ef68c-9b50-4951-b3b1-a6f3f6af6489" isOneWay="false" action="urn:registerOAuthApplicationData" name="registerOAuthApplicationData" bindingOperationName="registerOAuthApplicationData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="59f2835f-c30f-46ee-b5c7-513c06b57fce" isOneWay="false" action="urn:registerOAuthConsumer" name="registerOAuthConsumer" bindingOperationName="registerOAuthConsumer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ded9180c-0a6d-4f8f-b9af-d3746493b514" isOneWay="false" action="urn:removeOAuthApplicationData" name="removeOAuthApplicationData" bindingOperationName="removeOAuthApplicationData" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79e48d94-5ca7-409c-b2e7-f08038bb35b5" isOneWay="false" action="urn:revokeAuthzForAppsByResoureOwner" name="revokeAuthzForAppsByResoureOwner" bindingOperationName="revokeAuthzForAppsByResoureOwner" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1273def6-db13-4326-9a5e-8d0214d20320" isOneWay="false" action="urn:updateConsumerApplication" name="updateConsumerApplication" bindingOperationName="updateConsumerApplication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="032709d5-c012-4a62-b9f7-edc96dd24546" wsaVersion="NONE" name="OperationAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.operation.carbon.wso2.org}OperationAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OperationAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/OperationAdmin.OperationAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="b59d292d-865e-41cd-b8a1-445b6164710b" isOneWay="false" action="urn:configureMTOM" name="configureMTOM" bindingOperationName="configureMTOM" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ee3039cb-1822-4964-9b18-05359b052598" isOneWay="false" action="urn:getDeclaredOperationParameters" name="getDeclaredOperationParameters" bindingOperationName="getDeclaredOperationParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="abc70da1-66c1-4d1a-bb2c-8edd9231383c" isOneWay="false" action="urn:getOperationMetaData" name="getOperationMetaData" bindingOperationName="getOperationMetaData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="22bd1136-0619-4377-8694-4b1518dd557a" isOneWay="false" action="urn:getOperationParameters" name="getOperationParameters" bindingOperationName="getOperationParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6ff28691-27f1-4d5d-82fb-6c792dad8deb" isOneWay="false" action="urn:getOperationStatistics" name="getOperationStatistics" bindingOperationName="getOperationStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8faf4893-ce82-4a96-9308-8278a521b777" isOneWay="false" action="urn:listAllOperations" name="listAllOperations" bindingOperationName="listAllOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8890e1ec-5a43-4aa1-a1a0-ce503725ed8a" isOneWay="false" action="urn:listControlOperations" name="listControlOperations" bindingOperationName="listControlOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa1820ff-f20d-43f3-989a-3f35aa116881" isOneWay="false" action="urn:listOperationPhaseHandlers" name="listOperationPhaseHandlers" bindingOperationName="listOperationPhaseHandlers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="74a637bd-29c2-4b0f-9969-997c2e3ee191" isOneWay="false" action="urn:listOperationPhases" name="listOperationPhases" bindingOperationName="listOperationPhases" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="01beba86-107b-4d7a-85cd-ae8d77ddd8f9" isOneWay="false" action="urn:listPublishedOperations" name="listPublishedOperations" bindingOperationName="listPublishedOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a259eb70-7d93-4a86-b7ef-597749c2ddde" isOneWay="false" action="urn:removeOperationParameter" name="removeOperationParameter" bindingOperationName="removeOperationParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5ce87a79-48c8-4f4f-815e-b466931eb31b" isOneWay="false" action="urn:setOperationParameters" name="setOperationParameters" bindingOperationName="setOperationParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a9a0509d-fe07-47b2-a4aa-3d4c2df93ced" wsaVersion="NONE" name="OperationAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.operation.carbon.wso2.org}OperationAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OperationAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OperationAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/OperationAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.operation.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.operation.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2460="http://mgt.operation.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>OperationAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2461="http://mgt.operation.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://mgt.operation.carbon.wso2.org/xsd"/>
      <xs:element name="listAllOperations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllOperationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaDataWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listControlOperations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listControlOperationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listPublishedOperations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listPublishedOperationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationStatistics">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationStatisticsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="configureMTOM">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="flag" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationParametersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeclaredOperationParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeclaredOperationParametersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setOperationParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationId" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="parameters" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeOperationParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listOperationPhases">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="flow" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listOperationPhasesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listOperationPhaseHandlers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="flow" type="xs:int"/>
            <xs:element minOccurs="0" name="phaseName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listOperationPhaseHandlersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationMetaData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationMetaDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2460:OperationMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.operation.carbon.wso2.org/xsd">
      <xs:complexType name="OperationMetaDataWrapper">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="controlOperations" nillable="true" type="ax2460:OperationMetaData"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="publishedOperations" nillable="true" type="ax2460:OperationMetaData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OperationMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="controlOperation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableMTOM" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getOperationStatisticsRequest">
    <wsdl:part name="parameters" element="ns1:getOperationStatistics"/>
  </wsdl:message>
  <wsdl:message name="getOperationStatisticsResponse">
    <wsdl:part name="parameters" element="ns1:getOperationStatisticsResponse"/>
  </wsdl:message>
  <wsdl:message name="listOperationPhasesRequest">
    <wsdl:part name="parameters" element="ns1:listOperationPhases"/>
  </wsdl:message>
  <wsdl:message name="listOperationPhasesResponse">
    <wsdl:part name="parameters" element="ns1:listOperationPhasesResponse"/>
  </wsdl:message>
  <wsdl:message name="listOperationPhaseHandlersRequest">
    <wsdl:part name="parameters" element="ns1:listOperationPhaseHandlers"/>
  </wsdl:message>
  <wsdl:message name="listOperationPhaseHandlersResponse">
    <wsdl:part name="parameters" element="ns1:listOperationPhaseHandlersResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationParametersRequest">
    <wsdl:part name="parameters" element="ns1:getOperationParameters"/>
  </wsdl:message>
  <wsdl:message name="getOperationParametersResponse">
    <wsdl:part name="parameters" element="ns1:getOperationParametersResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationMetaDataRequest">
    <wsdl:part name="parameters" element="ns1:getOperationMetaData"/>
  </wsdl:message>
  <wsdl:message name="getOperationMetaDataResponse">
    <wsdl:part name="parameters" element="ns1:getOperationMetaDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getDeclaredOperationParametersRequest">
    <wsdl:part name="parameters" element="ns1:getDeclaredOperationParameters"/>
  </wsdl:message>
  <wsdl:message name="getDeclaredOperationParametersResponse">
    <wsdl:part name="parameters" element="ns1:getDeclaredOperationParametersResponse"/>
  </wsdl:message>
  <wsdl:message name="configureMTOMRequest">
    <wsdl:part name="parameters" element="ns1:configureMTOM"/>
  </wsdl:message>
  <wsdl:message name="listPublishedOperationsRequest">
    <wsdl:part name="parameters" element="ns1:listPublishedOperations"/>
  </wsdl:message>
  <wsdl:message name="listPublishedOperationsResponse">
    <wsdl:part name="parameters" element="ns1:listPublishedOperationsResponse"/>
  </wsdl:message>
  <wsdl:message name="setOperationParametersRequest">
    <wsdl:part name="parameters" element="ns1:setOperationParameters"/>
  </wsdl:message>
  <wsdl:message name="removeOperationParameterRequest">
    <wsdl:part name="parameters" element="ns1:removeOperationParameter"/>
  </wsdl:message>
  <wsdl:message name="listAllOperationsRequest">
    <wsdl:part name="parameters" element="ns1:listAllOperations"/>
  </wsdl:message>
  <wsdl:message name="listAllOperationsResponse">
    <wsdl:part name="parameters" element="ns1:listAllOperationsResponse"/>
  </wsdl:message>
  <wsdl:message name="listControlOperationsRequest">
    <wsdl:part name="parameters" element="ns1:listControlOperations"/>
  </wsdl:message>
  <wsdl:message name="listControlOperationsResponse">
    <wsdl:part name="parameters" element="ns1:listControlOperationsResponse"/>
  </wsdl:message>
  <wsdl:portType name="OperationAdminPortType">
    <wsdl:operation name="getOperationStatistics">
      <wsdl:input message="tns:getOperationStatisticsRequest" wsaw:Action="urn:getOperationStatistics"/>
      <wsdl:output message="tns:getOperationStatisticsResponse" wsaw:Action="urn:getOperationStatisticsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhases">
      <wsdl:input message="tns:listOperationPhasesRequest" wsaw:Action="urn:listOperationPhases"/>
      <wsdl:output message="tns:listOperationPhasesResponse" wsaw:Action="urn:listOperationPhasesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhaseHandlers">
      <wsdl:input message="tns:listOperationPhaseHandlersRequest" wsaw:Action="urn:listOperationPhaseHandlers"/>
      <wsdl:output message="tns:listOperationPhaseHandlersResponse" wsaw:Action="urn:listOperationPhaseHandlersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationParameters">
      <wsdl:input message="tns:getOperationParametersRequest" wsaw:Action="urn:getOperationParameters"/>
      <wsdl:output message="tns:getOperationParametersResponse" wsaw:Action="urn:getOperationParametersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationMetaData">
      <wsdl:input message="tns:getOperationMetaDataRequest" wsaw:Action="urn:getOperationMetaData"/>
      <wsdl:output message="tns:getOperationMetaDataResponse" wsaw:Action="urn:getOperationMetaDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getDeclaredOperationParameters">
      <wsdl:input message="tns:getDeclaredOperationParametersRequest" wsaw:Action="urn:getDeclaredOperationParameters"/>
      <wsdl:output message="tns:getDeclaredOperationParametersResponse" wsaw:Action="urn:getDeclaredOperationParametersResponse"/>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <wsdl:input message="tns:configureMTOMRequest" wsaw:Action="urn:configureMTOM"/>
    </wsdl:operation>
    <wsdl:operation name="listPublishedOperations">
      <wsdl:input message="tns:listPublishedOperationsRequest" wsaw:Action="urn:listPublishedOperations"/>
      <wsdl:output message="tns:listPublishedOperationsResponse" wsaw:Action="urn:listPublishedOperationsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setOperationParameters">
      <wsdl:input message="tns:setOperationParametersRequest" wsaw:Action="urn:setOperationParameters"/>
    </wsdl:operation>
    <wsdl:operation name="removeOperationParameter">
      <wsdl:input message="tns:removeOperationParameterRequest" wsaw:Action="urn:removeOperationParameter"/>
    </wsdl:operation>
    <wsdl:operation name="listAllOperations">
      <wsdl:input message="tns:listAllOperationsRequest" wsaw:Action="urn:listAllOperations"/>
      <wsdl:output message="tns:listAllOperationsResponse" wsaw:Action="urn:listAllOperationsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listControlOperations">
      <wsdl:input message="tns:listControlOperationsRequest" wsaw:Action="urn:listControlOperations"/>
      <wsdl:output message="tns:listControlOperationsResponse" wsaw:Action="urn:listControlOperationsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OperationAdminSoap11Binding" type="tns:OperationAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getOperationStatistics">
      <soap:operation soapAction="urn:getOperationStatistics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhases">
      <soap:operation soapAction="urn:listOperationPhases" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhaseHandlers">
      <soap:operation soapAction="urn:listOperationPhaseHandlers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationParameters">
      <soap:operation soapAction="urn:getOperationParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationMetaData">
      <soap:operation soapAction="urn:getOperationMetaData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDeclaredOperationParameters">
      <soap:operation soapAction="urn:getDeclaredOperationParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <soap:operation soapAction="urn:configureMTOM" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listPublishedOperations">
      <soap:operation soapAction="urn:listPublishedOperations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setOperationParameters">
      <soap:operation soapAction="urn:setOperationParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeOperationParameter">
      <soap:operation soapAction="urn:removeOperationParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listAllOperations">
      <soap:operation soapAction="urn:listAllOperations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listControlOperations">
      <soap:operation soapAction="urn:listControlOperations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OperationAdminSoap12Binding" type="tns:OperationAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getOperationStatistics">
      <soap12:operation soapAction="urn:getOperationStatistics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhases">
      <soap12:operation soapAction="urn:listOperationPhases" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhaseHandlers">
      <soap12:operation soapAction="urn:listOperationPhaseHandlers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationParameters">
      <soap12:operation soapAction="urn:getOperationParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationMetaData">
      <soap12:operation soapAction="urn:getOperationMetaData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDeclaredOperationParameters">
      <soap12:operation soapAction="urn:getDeclaredOperationParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <soap12:operation soapAction="urn:configureMTOM" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listPublishedOperations">
      <soap12:operation soapAction="urn:listPublishedOperations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setOperationParameters">
      <soap12:operation soapAction="urn:setOperationParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeOperationParameter">
      <soap12:operation soapAction="urn:removeOperationParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listAllOperations">
      <soap12:operation soapAction="urn:listAllOperations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listControlOperations">
      <soap12:operation soapAction="urn:listControlOperations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="OperationAdminHttpBinding" type="tns:OperationAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getOperationStatistics">
      <http:operation location="getOperationStatistics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhases">
      <http:operation location="listOperationPhases"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listOperationPhaseHandlers">
      <http:operation location="listOperationPhaseHandlers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationParameters">
      <http:operation location="getOperationParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationMetaData">
      <http:operation location="getOperationMetaData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDeclaredOperationParameters">
      <http:operation location="getDeclaredOperationParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <http:operation location="configureMTOM"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listPublishedOperations">
      <http:operation location="listPublishedOperations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setOperationParameters">
      <http:operation location="setOperationParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeOperationParameter">
      <http:operation location="removeOperationParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listAllOperations">
      <http:operation location="listAllOperations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listControlOperations">
      <http:operation location="listControlOperations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OperationAdmin">
    <wsdl:port name="OperationAdminHttpsSoap11Endpoint" binding="tns:OperationAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/OperationAdmin.OperationAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OperationAdminHttpsSoap12Endpoint" binding="tns:OperationAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/OperationAdmin.OperationAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="OperationAdminHttpsEndpoint" binding="tns:OperationAdminHttpBinding">
      <http:address location="https://localhost:9443/services/OperationAdmin.OperationAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/OperationAdmin.OperationAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="9c234925-5950-47a7-9d97-1cec7dc03196" isOneWay="false" action="urn:configureMTOM" name="configureMTOM" bindingOperationName="configureMTOM" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="26356b63-cbc3-487f-af31-cfdd711fe388" isOneWay="false" action="urn:getDeclaredOperationParameters" name="getDeclaredOperationParameters" bindingOperationName="getDeclaredOperationParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d45c4fcf-f778-4d1a-befa-218dad6c5b25" isOneWay="false" action="urn:getOperationMetaData" name="getOperationMetaData" bindingOperationName="getOperationMetaData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d5f49ae-1479-4a78-87ef-3321e199d40e" isOneWay="false" action="urn:getOperationParameters" name="getOperationParameters" bindingOperationName="getOperationParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5fc65e89-2128-4941-a830-a0733daa8ae3" isOneWay="false" action="urn:getOperationStatistics" name="getOperationStatistics" bindingOperationName="getOperationStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ea250e9f-c50e-4acd-83a2-66b0527c6aa7" isOneWay="false" action="urn:listAllOperations" name="listAllOperations" bindingOperationName="listAllOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="255175e0-cdac-4d59-9464-3ba267a9a886" isOneWay="false" action="urn:listControlOperations" name="listControlOperations" bindingOperationName="listControlOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="11266d27-12d7-4622-9630-eebae01681a3" isOneWay="false" action="urn:listOperationPhaseHandlers" name="listOperationPhaseHandlers" bindingOperationName="listOperationPhaseHandlers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ad5158a7-ca7d-4c9d-a88d-43539e661e73" isOneWay="false" action="urn:listOperationPhases" name="listOperationPhases" bindingOperationName="listOperationPhases" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d43a1d3-496a-416e-bcb5-5829472229e8" isOneWay="false" action="urn:listPublishedOperations" name="listPublishedOperations" bindingOperationName="listPublishedOperations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="61048f29-6207-44b2-a626-2babb25479d0" isOneWay="false" action="urn:removeOperationParameter" name="removeOperationParameter" bindingOperationName="removeOperationParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="846e332d-5908-4aec-8413-1b328c5becf9" isOneWay="false" action="urn:setOperationParameters" name="setOperationParameters" bindingOperationName="setOperationParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="38e489cc-2f36-42f8-b63f-ffbe79244bfa" wsaVersion="NONE" name="ProfilesAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.profiles.registry.carbon.wso2.org}ProfilesAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ProfilesAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="28d6b90a-678b-4419-806e-cc1a383e6059" isOneWay="false" action="urn:getUserProfile" name="getUserProfile" bindingOperationName="getUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58cbeef9-b5d8-4fbb-8d10-081d797704af" isOneWay="false" action="urn:putUserProfile" name="putUserProfile" bindingOperationName="putUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="01d1e37f-48be-44d1-9856-fecfcae7aa74" wsaVersion="NONE" name="ProfilesAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.profiles.registry.carbon.wso2.org}ProfilesAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ProfilesAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ProfilesAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ProfilesAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.profiles.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2522="http://beans.profiles.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.profiles.registry.carbon.wso2.org" xmlns:ax2514="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2515="http://api.registry.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2518="http://core.user.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax2519="http://api.user.carbon.wso2.org/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ProfilesAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.profiles.registry.carbon.wso2.org" xmlns:ax2517="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2521="http://core.user.carbon.wso2.org/xsd" xmlns:ax2523="http://beans.profiles.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://exceptions.core.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.profiles.registry.carbon.wso2.org/xsd"/>
      <xs:element name="ProfilesAdminServiceRegistryException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RegistryException" nillable="true" type="ax2514:RegistryException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ProfilesAdminServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2521:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="putUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="putUserProfileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2522:ProfilesBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2516="http://api.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="RegistryException">
        <xs:complexContent>
          <xs:extension base="ax2515:RegistryException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.profiles.registry.carbon.wso2.org/xsd">
      <xs:complexType name="ProfilesBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="mainDataString" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="profileNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2520="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2520:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.registry.carbon.wso2.org/xsd">
      <xs:complexType name="RegistryException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="putUserProfileRequest">
    <wsdl:part name="parameters" element="ns:putUserProfile"/>
  </wsdl:message>
  <wsdl:message name="putUserProfileResponse">
    <wsdl:part name="parameters" element="ns:putUserProfileResponse"/>
  </wsdl:message>
  <wsdl:message name="ProfilesAdminServiceRegistryException">
    <wsdl:part name="parameters" element="ns:ProfilesAdminServiceRegistryException"/>
  </wsdl:message>
  <wsdl:message name="ProfilesAdminServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:ProfilesAdminServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="getUserProfileRequest">
    <wsdl:part name="parameters" element="ns:getUserProfile"/>
  </wsdl:message>
  <wsdl:message name="getUserProfileResponse">
    <wsdl:part name="parameters" element="ns:getUserProfileResponse"/>
  </wsdl:message>
  <wsdl:portType name="ProfilesAdminServicePortType">
    <wsdl:operation name="putUserProfile">
      <wsdl:input message="ns:putUserProfileRequest" wsaw:Action="urn:putUserProfile"/>
      <wsdl:output message="ns:putUserProfileResponse" wsaw:Action="urn:putUserProfileResponse"/>
      <wsdl:fault message="ns:ProfilesAdminServiceRegistryException" name="ProfilesAdminServiceRegistryException" wsaw:Action="urn:putUserProfileProfilesAdminServiceRegistryException"/>
      <wsdl:fault message="ns:ProfilesAdminServiceUserStoreException" name="ProfilesAdminServiceUserStoreException" wsaw:Action="urn:putUserProfileProfilesAdminServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <wsdl:input message="ns:getUserProfileRequest" wsaw:Action="urn:getUserProfile"/>
      <wsdl:output message="ns:getUserProfileResponse" wsaw:Action="urn:getUserProfileResponse"/>
      <wsdl:fault message="ns:ProfilesAdminServiceRegistryException" name="ProfilesAdminServiceRegistryException" wsaw:Action="urn:getUserProfileProfilesAdminServiceRegistryException"/>
      <wsdl:fault message="ns:ProfilesAdminServiceUserStoreException" name="ProfilesAdminServiceUserStoreException" wsaw:Action="urn:getUserProfileProfilesAdminServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ProfilesAdminServiceSoap11Binding" type="ns:ProfilesAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="putUserProfile">
      <soap:operation soapAction="urn:putUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ProfilesAdminServiceRegistryException">
        <soap:fault use="literal" name="ProfilesAdminServiceRegistryException"/>
      </wsdl:fault>
      <wsdl:fault name="ProfilesAdminServiceUserStoreException">
        <soap:fault use="literal" name="ProfilesAdminServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <soap:operation soapAction="urn:getUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ProfilesAdminServiceRegistryException">
        <soap:fault use="literal" name="ProfilesAdminServiceRegistryException"/>
      </wsdl:fault>
      <wsdl:fault name="ProfilesAdminServiceUserStoreException">
        <soap:fault use="literal" name="ProfilesAdminServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ProfilesAdminServiceSoap12Binding" type="ns:ProfilesAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="putUserProfile">
      <soap12:operation soapAction="urn:putUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ProfilesAdminServiceRegistryException">
        <soap12:fault use="literal" name="ProfilesAdminServiceRegistryException"/>
      </wsdl:fault>
      <wsdl:fault name="ProfilesAdminServiceUserStoreException">
        <soap12:fault use="literal" name="ProfilesAdminServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <soap12:operation soapAction="urn:getUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ProfilesAdminServiceRegistryException">
        <soap12:fault use="literal" name="ProfilesAdminServiceRegistryException"/>
      </wsdl:fault>
      <wsdl:fault name="ProfilesAdminServiceUserStoreException">
        <soap12:fault use="literal" name="ProfilesAdminServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ProfilesAdminServiceHttpBinding" type="ns:ProfilesAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="putUserProfile">
      <http:operation location="putUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <http:operation location="getUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ProfilesAdminService">
    <wsdl:port name="ProfilesAdminServiceHttpsSoap11Endpoint" binding="ns:ProfilesAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ProfilesAdminServiceHttpsSoap12Endpoint" binding="ns:ProfilesAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ProfilesAdminServiceHttpsEndpoint" binding="ns:ProfilesAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ProfilesAdminService.ProfilesAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="40c4d01d-8d24-458e-8c9a-45c4579a0071" isOneWay="false" action="urn:getUserProfile" name="getUserProfile" bindingOperationName="getUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8a510e7a-abe3-407e-b1bc-520cc7f149ef" isOneWay="false" action="urn:putUserProfile" name="putUserProfile" bindingOperationName="putUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8eebacd8-8f06-4919-bc97-ea98af9d399f" wsaVersion="NONE" name="PropertiesAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.properties.registry.carbon.wso2.org}PropertiesAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/PropertiesAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="2ea96a2b-e278-4580-9d69-0a107946b38e" isOneWay="false" action="urn:getProperties" name="getProperties" bindingOperationName="getProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="17e27b12-b45d-41be-a5a7-3f268911dd45" isOneWay="false" action="urn:getRetentionProperties" name="getRetentionProperties" bindingOperationName="getRetentionProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cf3a4b37-7866-4879-ab97-6c3f832f30f4" isOneWay="false" action="urn:removeProperty" name="removeProperty" bindingOperationName="removeProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0a3011b3-6f47-40a7-b1fe-bc3967a4cdfd" isOneWay="false" action="urn:setProperty" name="setProperty" bindingOperationName="setProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4d310384-0fdf-4d22-ad89-4eec0429f9f6" isOneWay="false" action="urn:setRetentionProperties" name="setRetentionProperties" bindingOperationName="setRetentionProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bac408b7-6f12-46bc-88d7-538160ea6e9d" isOneWay="false" action="urn:updateProperty" name="updateProperty" bindingOperationName="updateProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="23ed1290-bfbe-4226-9b37-175c1247e234" wsaVersion="NONE" name="PropertiesAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.properties.registry.carbon.wso2.org}PropertiesAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/PropertiesAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/PropertiesAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/PropertiesAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.properties.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2524="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.properties.registry.carbon.wso2.org" xmlns:ax2525="http://api.registry.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2528="http://beans.properties.registry.carbon.wso2.org/xsd" xmlns:ax2529="http://utils.properties.registry.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>PropertiesAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.properties.registry.carbon.wso2.org/xsd">
      <xs:complexType name="Property">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.properties.registry.carbon.wso2.org/xsd" xmlns:ax2530="http://utils.properties.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://utils.properties.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="PropertiesBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="deleteLocked" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lifecycleProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2529:Property"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sysProperties" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="validationProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
          <xs:element minOccurs="0" name="writeLocked" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RetentionBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="deleteLocked" type="xs:boolean"/>
          <xs:element minOccurs="0" name="fromDate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="toDate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="writeLocked" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2526="http://api.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="RegistryException">
        <xs:complexContent>
          <xs:extension base="ax2525:RegistryException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.properties.registry.carbon.wso2.org" xmlns:ax2531="http://beans.properties.registry.carbon.wso2.org/xsd" xmlns:ax2527="http://exceptions.core.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://exceptions.core.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.properties.registry.carbon.wso2.org/xsd"/>
      <xs:element name="PropertiesAdminServiceRegistryException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RegistryException" nillable="true" type="ax2524:RegistryException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="viewProps" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2531:PropertiesBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setRetentionProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="bean" nillable="true" type="ax2531:RetentionBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setRetentionPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRetentionProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRetentionPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2531:RetentionBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.registry.carbon.wso2.org/xsd">
      <xs:complexType name="RegistryException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updatePropertyRequest">
    <wsdl:part name="parameters" element="ns:updateProperty"/>
  </wsdl:message>
  <wsdl:message name="PropertiesAdminServiceRegistryException">
    <wsdl:part name="parameters" element="ns:PropertiesAdminServiceRegistryException"/>
  </wsdl:message>
  <wsdl:message name="setPropertyRequest">
    <wsdl:part name="parameters" element="ns:setProperty"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesRequest">
    <wsdl:part name="parameters" element="ns:getProperties"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesResponse">
    <wsdl:part name="parameters" element="ns:getPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="setRetentionPropertiesRequest">
    <wsdl:part name="parameters" element="ns:setRetentionProperties"/>
  </wsdl:message>
  <wsdl:message name="setRetentionPropertiesResponse">
    <wsdl:part name="parameters" element="ns:setRetentionPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="getRetentionPropertiesRequest">
    <wsdl:part name="parameters" element="ns:getRetentionProperties"/>
  </wsdl:message>
  <wsdl:message name="getRetentionPropertiesResponse">
    <wsdl:part name="parameters" element="ns:getRetentionPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="removePropertyRequest">
    <wsdl:part name="parameters" element="ns:removeProperty"/>
  </wsdl:message>
  <wsdl:portType name="PropertiesAdminServicePortType">
    <wsdl:operation name="updateProperty">
      <wsdl:input message="ns:updatePropertyRequest" wsaw:Action="urn:updateProperty"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:updatePropertyPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <wsdl:input message="ns:setPropertyRequest" wsaw:Action="urn:setProperty"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:setPropertyPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <wsdl:input message="ns:getPropertiesRequest" wsaw:Action="urn:getProperties"/>
      <wsdl:output message="ns:getPropertiesResponse" wsaw:Action="urn:getPropertiesResponse"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:getPropertiesPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="setRetentionProperties">
      <wsdl:input message="ns:setRetentionPropertiesRequest" wsaw:Action="urn:setRetentionProperties"/>
      <wsdl:output message="ns:setRetentionPropertiesResponse" wsaw:Action="urn:setRetentionPropertiesResponse"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:setRetentionPropertiesPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getRetentionProperties">
      <wsdl:input message="ns:getRetentionPropertiesRequest" wsaw:Action="urn:getRetentionProperties"/>
      <wsdl:output message="ns:getRetentionPropertiesResponse" wsaw:Action="urn:getRetentionPropertiesResponse"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:getRetentionPropertiesPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
      <wsdl:input message="ns:removePropertyRequest" wsaw:Action="urn:removeProperty"/>
      <wsdl:fault message="ns:PropertiesAdminServiceRegistryException" name="PropertiesAdminServiceRegistryException" wsaw:Action="urn:removePropertyPropertiesAdminServiceRegistryException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PropertiesAdminServiceSoap11Binding" type="ns:PropertiesAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateProperty">
      <soap:operation soapAction="urn:updateProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <soap:operation soapAction="urn:setProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap:operation soapAction="urn:getProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRetentionProperties">
      <soap:operation soapAction="urn:setRetentionProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRetentionProperties">
      <soap:operation soapAction="urn:getRetentionProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
      <soap:operation soapAction="urn:removeProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PropertiesAdminServiceSoap12Binding" type="ns:PropertiesAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateProperty">
      <soap12:operation soapAction="urn:updateProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <soap12:operation soapAction="urn:setProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap12:operation soapAction="urn:getProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRetentionProperties">
      <soap12:operation soapAction="urn:setRetentionProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRetentionProperties">
      <soap12:operation soapAction="urn:getRetentionProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
      <soap12:operation soapAction="urn:removeProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="PropertiesAdminServiceRegistryException">
        <soap12:fault use="literal" name="PropertiesAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="PropertiesAdminServiceHttpBinding" type="ns:PropertiesAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateProperty">
      <http:operation location="updateProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <http:operation location="setProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <http:operation location="getProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setRetentionProperties">
      <http:operation location="setRetentionProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRetentionProperties">
      <http:operation location="getRetentionProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeProperty">
      <http:operation location="removeProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PropertiesAdminService">
    <wsdl:port name="PropertiesAdminServiceHttpsSoap11Endpoint" binding="ns:PropertiesAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="PropertiesAdminServiceHttpsSoap12Endpoint" binding="ns:PropertiesAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="PropertiesAdminServiceHttpsEndpoint" binding="ns:PropertiesAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/PropertiesAdminService.PropertiesAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="4caa4f75-762f-43be-be54-b44b61904ea3" isOneWay="false" action="urn:getProperties" name="getProperties" bindingOperationName="getProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3a98d54b-b709-4498-8c35-ee98d8a33827" isOneWay="false" action="urn:getRetentionProperties" name="getRetentionProperties" bindingOperationName="getRetentionProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1a62a6ac-cfa9-49f9-ad88-89806a037cb3" isOneWay="false" action="urn:removeProperty" name="removeProperty" bindingOperationName="removeProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c14a75ac-b169-49c2-8ff9-ef11ee100dd5" isOneWay="false" action="urn:setProperty" name="setProperty" bindingOperationName="setProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8a60a080-6fad-4bb5-8570-1c4c5efa15ff" isOneWay="false" action="urn:setRetentionProperties" name="setRetentionProperties" bindingOperationName="setRetentionProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5c7958e9-cbe1-4039-9a0f-c2b007b39413" isOneWay="false" action="urn:updateProperty" name="updateProperty" bindingOperationName="updateProperty" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7dd0e052-998f-4d60-a021-688565f91047" wsaVersion="NONE" name="ProvisioningAdminServiceSoap11Binding" type="wsdl" bindingName="{http://prov.services.mgt.feature.carbon.wso2.org}ProvisioningAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ProvisioningAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="5853202c-0c1b-4cec-85a6-8cfe0f70d4ca" isOneWay="false" action="urn:getAllInstalledFeatures" name="getAllInstalledFeatures" bindingOperationName="getAllInstalledFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1a0ce943-284c-4f76-94ae-d4ab93d42821" isOneWay="false" action="urn:getFeatureLicenseInfo" name="getFeatureLicenseInfo" bindingOperationName="getFeatureLicenseInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="03acb303-6c29-4f6d-b2e7-7c3e09723b74" isOneWay="false" action="urn:getInstalledFeatureInfo" name="getInstalledFeatureInfo" bindingOperationName="getInstalledFeatureInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0876901e-ce2e-4779-9155-ddbe0d56571b" isOneWay="false" action="urn:getInstalledFeaturesWithProperty" name="getInstalledFeaturesWithProperty" bindingOperationName="getInstalledFeaturesWithProperty" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69c4e851-fd0c-4054-9725-4af021ded530" isOneWay="false" action="urn:getLicensingInformation" name="getLicensingInformation" bindingOperationName="getLicensingInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="af0f37c0-64b1-4d68-86ba-bde596b1b427" isOneWay="false" action="urn:getProfileHistory" name="getProfileHistory" bindingOperationName="getProfileHistory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bbbee54d-13ae-4397-bb6f-5dc793df782b" isOneWay="false" action="urn:performProvisioningAction" name="performProvisioningAction" bindingOperationName="performProvisioningAction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d8c7efdb-e745-4613-b39d-779a6a0791b8" isOneWay="false" action="urn:removeAllConsoleFeatures" name="removeAllConsoleFeatures" bindingOperationName="removeAllConsoleFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2886fad4-7d6c-43b3-9c52-94f4378af982" isOneWay="false" action="urn:removeAllServerFeatures" name="removeAllServerFeatures" bindingOperationName="removeAllServerFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e75b2ffd-0276-4c49-89f7-36b8d8f984ab" isOneWay="false" action="urn:reviewProvisioningAction" name="reviewProvisioningAction" bindingOperationName="reviewProvisioningAction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9093920b-05e0-4ed5-a6ce-47bada27b415" wsaVersion="NONE" name="ProvisioningAdminServiceSoap12Binding" type="wsdl" bindingName="{http://prov.services.mgt.feature.carbon.wso2.org}ProvisioningAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ProvisioningAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ProvisioningAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ProvisioningAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://prov.services.mgt.feature.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2118="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://prov.services.mgt.feature.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ProvisioningAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2119="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd">
      <xs:import namespace="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd"/>
      <xs:element name="getAllInstalledFeatures">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllInstalledFeaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:Feature"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllServerFeatures">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllServerFeaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllConsoleFeatures">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAllConsoleFeaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstalledFeaturesWithProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstalledFeaturesWithPropertyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:FeatureInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstalledFeatureInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstalledFeatureInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2118:FeatureInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reviewProvisioningAction">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="provActionInfo" nillable="true" type="ax2118:ProvisioningActionInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reviewProvisioningActionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2118:ProvisioningActionResultInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLicensingInformation">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getLicensingInformationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:LicenseInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFeatureLicenseInfo">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFeatureLicenseInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:LicenseFeatureHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="performProvisioningAction">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="actionType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="performProvisioningActionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileHistory">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileHistoryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2118:ProfileHistory"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd">
      <xs:complexType name="Feature">
        <xs:sequence>
          <xs:element minOccurs="0" name="featureDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="installed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredFeatures" nillable="true" type="ax2118:Feature"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="copyrightInfo" nillable="true" type="ax2118:CopyrightInfo"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="licenseInfo" nillable="true" type="ax2118:LicenseInfo"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CopyrightInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="URL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LicenseInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="URL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProvisioningActionInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="actionType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="featuresToInstall" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="featuresToUninstall" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element minOccurs="0" name="timestamp" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProvisioningActionResultInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="detailedDescription" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="failedUninstallableFeatures" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="failedinstallableFeatures" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element minOccurs="0" name="proceedWithInstallation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provActionID" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="reviewedInstallableFeatures" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="reviewedUninstallableFeatures" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element minOccurs="0" name="size" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LicenseFeatureHolder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="featureInfo" nillable="true" type="ax2118:FeatureInfo"/>
          <xs:element minOccurs="0" name="licenseInfo" nillable="true" type="ax2118:LicenseInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProfileHistory">
        <xs:sequence>
          <xs:element minOccurs="0" name="summary" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="timestamp" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getInstalledFeaturesWithPropertyRequest">
    <wsdl:part name="parameters" element="ns1:getInstalledFeaturesWithProperty"/>
  </wsdl:message>
  <wsdl:message name="getInstalledFeaturesWithPropertyResponse">
    <wsdl:part name="parameters" element="ns1:getInstalledFeaturesWithPropertyResponse"/>
  </wsdl:message>
  <wsdl:message name="getFeatureLicenseInfoRequest">
    <wsdl:part name="parameters" element="ns1:getFeatureLicenseInfo"/>
  </wsdl:message>
  <wsdl:message name="getFeatureLicenseInfoResponse">
    <wsdl:part name="parameters" element="ns1:getFeatureLicenseInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="removeAllConsoleFeaturesRequest">
    <wsdl:part name="parameters" element="ns1:removeAllConsoleFeatures"/>
  </wsdl:message>
  <wsdl:message name="removeAllConsoleFeaturesResponse">
    <wsdl:part name="parameters" element="ns1:removeAllConsoleFeaturesResponse"/>
  </wsdl:message>
  <wsdl:message name="performProvisioningActionRequest">
    <wsdl:part name="parameters" element="ns1:performProvisioningAction"/>
  </wsdl:message>
  <wsdl:message name="performProvisioningActionResponse">
    <wsdl:part name="parameters" element="ns1:performProvisioningActionResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllInstalledFeaturesRequest">
    <wsdl:part name="parameters" element="ns1:getAllInstalledFeatures"/>
  </wsdl:message>
  <wsdl:message name="getAllInstalledFeaturesResponse">
    <wsdl:part name="parameters" element="ns1:getAllInstalledFeaturesResponse"/>
  </wsdl:message>
  <wsdl:message name="reviewProvisioningActionRequest">
    <wsdl:part name="parameters" element="ns1:reviewProvisioningAction"/>
  </wsdl:message>
  <wsdl:message name="reviewProvisioningActionResponse">
    <wsdl:part name="parameters" element="ns1:reviewProvisioningActionResponse"/>
  </wsdl:message>
  <wsdl:message name="getLicensingInformationRequest">
    <wsdl:part name="parameters" element="ns1:getLicensingInformation"/>
  </wsdl:message>
  <wsdl:message name="getLicensingInformationResponse">
    <wsdl:part name="parameters" element="ns1:getLicensingInformationResponse"/>
  </wsdl:message>
  <wsdl:message name="getInstalledFeatureInfoRequest">
    <wsdl:part name="parameters" element="ns1:getInstalledFeatureInfo"/>
  </wsdl:message>
  <wsdl:message name="getInstalledFeatureInfoResponse">
    <wsdl:part name="parameters" element="ns1:getInstalledFeatureInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getProfileHistoryRequest">
    <wsdl:part name="parameters" element="ns1:getProfileHistory"/>
  </wsdl:message>
  <wsdl:message name="getProfileHistoryResponse">
    <wsdl:part name="parameters" element="ns1:getProfileHistoryResponse"/>
  </wsdl:message>
  <wsdl:message name="removeAllServerFeaturesRequest">
    <wsdl:part name="parameters" element="ns1:removeAllServerFeatures"/>
  </wsdl:message>
  <wsdl:message name="removeAllServerFeaturesResponse">
    <wsdl:part name="parameters" element="ns1:removeAllServerFeaturesResponse"/>
  </wsdl:message>
  <wsdl:portType name="ProvisioningAdminServicePortType">
    <wsdl:operation name="getInstalledFeaturesWithProperty">
      <wsdl:input message="tns:getInstalledFeaturesWithPropertyRequest" wsaw:Action="urn:getInstalledFeaturesWithProperty"/>
      <wsdl:output message="tns:getInstalledFeaturesWithPropertyResponse" wsaw:Action="urn:getInstalledFeaturesWithPropertyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getFeatureLicenseInfo">
      <wsdl:input message="tns:getFeatureLicenseInfoRequest" wsaw:Action="urn:getFeatureLicenseInfo"/>
      <wsdl:output message="tns:getFeatureLicenseInfoResponse" wsaw:Action="urn:getFeatureLicenseInfoResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeAllConsoleFeatures">
      <wsdl:input message="tns:removeAllConsoleFeaturesRequest" wsaw:Action="urn:removeAllConsoleFeatures"/>
      <wsdl:output message="tns:removeAllConsoleFeaturesResponse" wsaw:Action="urn:removeAllConsoleFeaturesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="performProvisioningAction">
      <wsdl:input message="tns:performProvisioningActionRequest" wsaw:Action="urn:performProvisioningAction"/>
      <wsdl:output message="tns:performProvisioningActionResponse" wsaw:Action="urn:performProvisioningActionResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAllInstalledFeatures">
      <wsdl:input message="tns:getAllInstalledFeaturesRequest" wsaw:Action="urn:getAllInstalledFeatures"/>
      <wsdl:output message="tns:getAllInstalledFeaturesResponse" wsaw:Action="urn:getAllInstalledFeaturesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="reviewProvisioningAction">
      <wsdl:input message="tns:reviewProvisioningActionRequest" wsaw:Action="urn:reviewProvisioningAction"/>
      <wsdl:output message="tns:reviewProvisioningActionResponse" wsaw:Action="urn:reviewProvisioningActionResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getLicensingInformation">
      <wsdl:input message="tns:getLicensingInformationRequest" wsaw:Action="urn:getLicensingInformation"/>
      <wsdl:output message="tns:getLicensingInformationResponse" wsaw:Action="urn:getLicensingInformationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatureInfo">
      <wsdl:input message="tns:getInstalledFeatureInfoRequest" wsaw:Action="urn:getInstalledFeatureInfo"/>
      <wsdl:output message="tns:getInstalledFeatureInfoResponse" wsaw:Action="urn:getInstalledFeatureInfoResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getProfileHistory">
      <wsdl:input message="tns:getProfileHistoryRequest" wsaw:Action="urn:getProfileHistory"/>
      <wsdl:output message="tns:getProfileHistoryResponse" wsaw:Action="urn:getProfileHistoryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeAllServerFeatures">
      <wsdl:input message="tns:removeAllServerFeaturesRequest" wsaw:Action="urn:removeAllServerFeatures"/>
      <wsdl:output message="tns:removeAllServerFeaturesResponse" wsaw:Action="urn:removeAllServerFeaturesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ProvisioningAdminServiceSoap11Binding" type="tns:ProvisioningAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getInstalledFeaturesWithProperty">
      <soap:operation soapAction="urn:getInstalledFeaturesWithProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFeatureLicenseInfo">
      <soap:operation soapAction="urn:getFeatureLicenseInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllConsoleFeatures">
      <soap:operation soapAction="urn:removeAllConsoleFeatures" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="performProvisioningAction">
      <soap:operation soapAction="urn:performProvisioningAction" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllInstalledFeatures">
      <soap:operation soapAction="urn:getAllInstalledFeatures" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reviewProvisioningAction">
      <soap:operation soapAction="urn:reviewProvisioningAction" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLicensingInformation">
      <soap:operation soapAction="urn:getLicensingInformation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatureInfo">
      <soap:operation soapAction="urn:getInstalledFeatureInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProfileHistory">
      <soap:operation soapAction="urn:getProfileHistory" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllServerFeatures">
      <soap:operation soapAction="urn:removeAllServerFeatures" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ProvisioningAdminServiceSoap12Binding" type="tns:ProvisioningAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getInstalledFeaturesWithProperty">
      <soap12:operation soapAction="urn:getInstalledFeaturesWithProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFeatureLicenseInfo">
      <soap12:operation soapAction="urn:getFeatureLicenseInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllConsoleFeatures">
      <soap12:operation soapAction="urn:removeAllConsoleFeatures" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="performProvisioningAction">
      <soap12:operation soapAction="urn:performProvisioningAction" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllInstalledFeatures">
      <soap12:operation soapAction="urn:getAllInstalledFeatures" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reviewProvisioningAction">
      <soap12:operation soapAction="urn:reviewProvisioningAction" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLicensingInformation">
      <soap12:operation soapAction="urn:getLicensingInformation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatureInfo">
      <soap12:operation soapAction="urn:getInstalledFeatureInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProfileHistory">
      <soap12:operation soapAction="urn:getProfileHistory" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllServerFeatures">
      <soap12:operation soapAction="urn:removeAllServerFeatures" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ProvisioningAdminServiceHttpBinding" type="tns:ProvisioningAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getInstalledFeaturesWithProperty">
      <http:operation location="getInstalledFeaturesWithProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFeatureLicenseInfo">
      <http:operation location="getFeatureLicenseInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllConsoleFeatures">
      <http:operation location="removeAllConsoleFeatures"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="performProvisioningAction">
      <http:operation location="performProvisioningAction"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllInstalledFeatures">
      <http:operation location="getAllInstalledFeatures"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reviewProvisioningAction">
      <http:operation location="reviewProvisioningAction"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLicensingInformation">
      <http:operation location="getLicensingInformation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstalledFeatureInfo">
      <http:operation location="getInstalledFeatureInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProfileHistory">
      <http:operation location="getProfileHistory"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllServerFeatures">
      <http:operation location="removeAllServerFeatures"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ProvisioningAdminService">
    <wsdl:port name="ProvisioningAdminServiceHttpsSoap11Endpoint" binding="tns:ProvisioningAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ProvisioningAdminServiceHttpsSoap12Endpoint" binding="tns:ProvisioningAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ProvisioningAdminServiceHttpsEndpoint" binding="tns:ProvisioningAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ProvisioningAdminService.ProvisioningAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="24951f12-2b9f-4eb5-8139-1fee6ad96751" isOneWay="false" action="urn:getAllInstalledFeatures" name="getAllInstalledFeatures" bindingOperationName="getAllInstalledFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f053d9c8-4cad-4574-af35-bbc41ddc1dc7" isOneWay="false" action="urn:getFeatureLicenseInfo" name="getFeatureLicenseInfo" bindingOperationName="getFeatureLicenseInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="37669b07-f743-45ed-b941-94b16f3a7048" isOneWay="false" action="urn:getInstalledFeatureInfo" name="getInstalledFeatureInfo" bindingOperationName="getInstalledFeatureInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e2f1694-cd3e-4d46-8b2a-8de69d394e7d" isOneWay="false" action="urn:getInstalledFeaturesWithProperty" name="getInstalledFeaturesWithProperty" bindingOperationName="getInstalledFeaturesWithProperty" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a77edcf4-aaac-4113-b7e3-574675c817b5" isOneWay="false" action="urn:getLicensingInformation" name="getLicensingInformation" bindingOperationName="getLicensingInformation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff25e389-36dc-4b4c-8e46-a56348e1893f" isOneWay="false" action="urn:getProfileHistory" name="getProfileHistory" bindingOperationName="getProfileHistory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="207dacc9-2ee9-4c47-b5a0-aa5530501b6b" isOneWay="false" action="urn:performProvisioningAction" name="performProvisioningAction" bindingOperationName="performProvisioningAction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b8642a29-e2e4-478f-885c-0f7372a6c43a" isOneWay="false" action="urn:removeAllConsoleFeatures" name="removeAllConsoleFeatures" bindingOperationName="removeAllConsoleFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c314ed75-e17b-4dad-ac12-a7d02162bad4" isOneWay="false" action="urn:removeAllServerFeatures" name="removeAllServerFeatures" bindingOperationName="removeAllServerFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3daacf6-d1ad-415b-a960-dd7754e492b0" isOneWay="false" action="urn:reviewProvisioningAction" name="reviewProvisioningAction" bindingOperationName="reviewProvisioningAction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="528e4759-9e78-4518-b5ae-1e1db2ad37b1" wsaVersion="NONE" name="RegistryAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.server.registry.carbon.wso2.org}RegistryAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RegistryAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="79fcfc88-df75-4cb2-94ac-6a75243856ee" isOneWay="false" action="urn:getHTTPPermalink" name="getHTTPPermalink" bindingOperationName="getHTTPPermalink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e96f7d18-f6a9-4b38-8b8b-13869b1de52b" isOneWay="false" action="urn:getHTTPSPermalink" name="getHTTPSPermalink" bindingOperationName="getHTTPSPermalink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7fa05001-2858-4216-a8bd-e01188a39095" isOneWay="false" action="urn:isRegistryReadOnly" name="isRegistryReadOnly" bindingOperationName="isRegistryReadOnly" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="99bf68fd-1015-47fb-81d1-c398be33fc64" wsaVersion="NONE" name="RegistryAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.server.registry.carbon.wso2.org}RegistryAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RegistryAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RegistryAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RegistryAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.server.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://service.server.registry.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RegistryAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.server.registry.carbon.wso2.org">
      <xs:element name="isRegistryReadOnly">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isRegistryReadOnlyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHTTPSPermalink">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHTTPSPermalinkResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHTTPPermalink">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHTTPPermalinkResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getHTTPPermalinkRequest">
    <wsdl:part name="parameters" element="ns:getHTTPPermalink"/>
  </wsdl:message>
  <wsdl:message name="getHTTPPermalinkResponse">
    <wsdl:part name="parameters" element="ns:getHTTPPermalinkResponse"/>
  </wsdl:message>
  <wsdl:message name="isRegistryReadOnlyRequest">
    <wsdl:part name="parameters" element="ns:isRegistryReadOnly"/>
  </wsdl:message>
  <wsdl:message name="isRegistryReadOnlyResponse">
    <wsdl:part name="parameters" element="ns:isRegistryReadOnlyResponse"/>
  </wsdl:message>
  <wsdl:message name="getHTTPSPermalinkRequest">
    <wsdl:part name="parameters" element="ns:getHTTPSPermalink"/>
  </wsdl:message>
  <wsdl:message name="getHTTPSPermalinkResponse">
    <wsdl:part name="parameters" element="ns:getHTTPSPermalinkResponse"/>
  </wsdl:message>
  <wsdl:portType name="RegistryAdminServicePortType">
    <wsdl:operation name="getHTTPPermalink">
      <wsdl:input message="ns:getHTTPPermalinkRequest" wsaw:Action="urn:getHTTPPermalink"/>
      <wsdl:output message="ns:getHTTPPermalinkResponse" wsaw:Action="urn:getHTTPPermalinkResponse"/>
    </wsdl:operation>
    <wsdl:operation name="isRegistryReadOnly">
      <wsdl:input message="ns:isRegistryReadOnlyRequest" wsaw:Action="urn:isRegistryReadOnly"/>
      <wsdl:output message="ns:isRegistryReadOnlyResponse" wsaw:Action="urn:isRegistryReadOnlyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getHTTPSPermalink">
      <wsdl:input message="ns:getHTTPSPermalinkRequest" wsaw:Action="urn:getHTTPSPermalink"/>
      <wsdl:output message="ns:getHTTPSPermalinkResponse" wsaw:Action="urn:getHTTPSPermalinkResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RegistryAdminServiceSoap11Binding" type="ns:RegistryAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getHTTPPermalink">
      <soap:operation soapAction="urn:getHTTPPermalink" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isRegistryReadOnly">
      <soap:operation soapAction="urn:isRegistryReadOnly" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getHTTPSPermalink">
      <soap:operation soapAction="urn:getHTTPSPermalink" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RegistryAdminServiceSoap12Binding" type="ns:RegistryAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getHTTPPermalink">
      <soap12:operation soapAction="urn:getHTTPPermalink" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isRegistryReadOnly">
      <soap12:operation soapAction="urn:isRegistryReadOnly" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getHTTPSPermalink">
      <soap12:operation soapAction="urn:getHTTPSPermalink" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RegistryAdminServiceHttpBinding" type="ns:RegistryAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getHTTPPermalink">
      <http:operation location="getHTTPPermalink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isRegistryReadOnly">
      <http:operation location="isRegistryReadOnly"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getHTTPSPermalink">
      <http:operation location="getHTTPSPermalink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RegistryAdminService">
    <wsdl:port name="RegistryAdminServiceHttpsSoap11Endpoint" binding="ns:RegistryAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RegistryAdminServiceHttpsSoap12Endpoint" binding="ns:RegistryAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RegistryAdminServiceHttpsEndpoint" binding="ns:RegistryAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RegistryAdminService.RegistryAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="6199efe7-405e-42f5-8314-94971c73eaaa" isOneWay="false" action="urn:getHTTPPermalink" name="getHTTPPermalink" bindingOperationName="getHTTPPermalink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="045e1f76-2874-4c37-a953-38b39e9fe8af" isOneWay="false" action="urn:getHTTPSPermalink" name="getHTTPSPermalink" bindingOperationName="getHTTPSPermalink" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e84a741b-9152-4ac1-8100-383313cf1e17" isOneWay="false" action="urn:isRegistryReadOnly" name="isRegistryReadOnly" bindingOperationName="isRegistryReadOnly" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="41a6b512-9d1e-49f8-9f4f-57170815e635" wsaVersion="NONE" name="RemoteAuthorizationManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteAuthorizationManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteAuthorizationManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="7e0581f9-01cc-4aa4-b302-f4b39adfd7b9" isOneWay="false" action="urn:authorizeRole" name="authorizeRole" bindingOperationName="authorizeRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="da91b638-dca4-4700-a5f4-62b2f235cb1d" isOneWay="false" action="urn:authorizeUser" name="authorizeUser" bindingOperationName="authorizeUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ca454a47-d35a-47a5-b357-e9982b03ca44" isOneWay="false" action="urn:clearAllRoleAuthorization" name="clearAllRoleAuthorization" bindingOperationName="clearAllRoleAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="82831c0c-e1b1-4833-a41e-4ba230005a9f" isOneWay="false" action="urn:clearAllUserAuthorization" name="clearAllUserAuthorization" bindingOperationName="clearAllUserAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="01f7ce96-fc6a-4afb-8213-df3ad6bb4f94" isOneWay="false" action="urn:clearResourceAuthorizations" name="clearResourceAuthorizations" bindingOperationName="clearResourceAuthorizations" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7005f6bc-428a-41ef-8e32-79b48fe30349" isOneWay="false" action="urn:clearRoleActionOnAllResources" name="clearRoleActionOnAllResources" bindingOperationName="clearRoleActionOnAllResources" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="44e010e6-211f-4ca8-859a-862e6b3988a2" isOneWay="false" action="urn:clearRoleAuthorization" name="clearRoleAuthorization" bindingOperationName="clearRoleAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="87b51d4a-3376-4d26-8c61-39af7fb8f4fb" isOneWay="false" action="urn:clearUserAuthorization" name="clearUserAuthorization" bindingOperationName="clearUserAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6212d49f-71e4-4b34-93d5-f33c9dea106b" isOneWay="false" action="urn:denyRole" name="denyRole" bindingOperationName="denyRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="33180f4f-91c4-447a-9c89-7b568b160cce" isOneWay="false" action="urn:denyUser" name="denyUser" bindingOperationName="denyUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="09fdc56b-d801-4968-8153-82db62f7ba84" isOneWay="false" action="urn:getAllowedRolesForResource" name="getAllowedRolesForResource" bindingOperationName="getAllowedRolesForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="99b2d439-fcfa-4792-80b7-e4d38f8ffb10" isOneWay="false" action="urn:getAllowedUIResourcesForUser" name="getAllowedUIResourcesForUser" bindingOperationName="getAllowedUIResourcesForUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="78edc2f4-9380-41bd-8eef-96afa1c7ccfc" isOneWay="false" action="urn:getDeniedRolesForResource" name="getDeniedRolesForResource" bindingOperationName="getDeniedRolesForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="12790b36-e099-4b5d-8812-e691059f2cda" isOneWay="false" action="urn:getExplicitlyAllowedUsersForResource" name="getExplicitlyAllowedUsersForResource" bindingOperationName="getExplicitlyAllowedUsersForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d9235391-ab33-4862-b037-24626c64529d" isOneWay="false" action="urn:getExplicitlyDeniedUsersForResource" name="getExplicitlyDeniedUsersForResource" bindingOperationName="getExplicitlyDeniedUsersForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1fb10a28-ae6e-4b4a-9c47-22ff7a7a83c5" isOneWay="false" action="urn:isRoleAuthorized" name="isRoleAuthorized" bindingOperationName="isRoleAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="42a58f69-494b-4d50-9220-7fe2ee2e2fb6" isOneWay="false" action="urn:isUserAuthorized" name="isUserAuthorized" bindingOperationName="isUserAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="db0ab671-c7c9-4705-bb42-c187103bccba" isOneWay="false" action="urn:resetPermissionOnUpdateRole" name="resetPermissionOnUpdateRole" bindingOperationName="resetPermissionOnUpdateRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="5d8630eb-6951-4ca0-9477-2b885149f448" wsaVersion="NONE" name="RemoteAuthorizationManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteAuthorizationManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteAuthorizationManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteAuthorizationManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteAuthorizationManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2652="http://core.user.carbon.wso2.org/xsd" xmlns:ax2653="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteAuthorizationManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2655="http://core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteAuthorizationManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2652:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isUserAuthorized">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isUserAuthorizedResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="denyRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isRoleAuthorized">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isRoleAuthorizedResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="denyUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExplicitlyAllowedUsersForResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExplicitlyAllowedUsersForResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedRolesForResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedRolesForResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeniedRolesForResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDeniedRolesForResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExplicitlyDeniedUsersForResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExplicitlyDeniedUsersForResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authorizeUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authorizeRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearUserAuthorization">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearRoleAuthorization">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearRoleActionOnAllResources">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearResourceAuthorizations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedUIResourcesForUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionRootPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllowedUIResourcesForUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resetPermissionOnUpdateRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newRoleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllUserAuthorization">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllRoleAuthorization">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2654="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2653:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="authorizeUserRequest">
    <wsdl:part name="parameters" element="ns:authorizeUser"/>
  </wsdl:message>
  <wsdl:message name="RemoteAuthorizationManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteAuthorizationManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="isUserAuthorizedRequest">
    <wsdl:part name="parameters" element="ns:isUserAuthorized"/>
  </wsdl:message>
  <wsdl:message name="isUserAuthorizedResponse">
    <wsdl:part name="parameters" element="ns:isUserAuthorizedResponse"/>
  </wsdl:message>
  <wsdl:message name="clearAllUserAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearAllUserAuthorization"/>
  </wsdl:message>
  <wsdl:message name="denyUserRequest">
    <wsdl:part name="parameters" element="ns:denyUser"/>
  </wsdl:message>
  <wsdl:message name="clearUserAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearUserAuthorization"/>
  </wsdl:message>
  <wsdl:message name="getExplicitlyDeniedUsersForResourceRequest">
    <wsdl:part name="parameters" element="ns:getExplicitlyDeniedUsersForResource"/>
  </wsdl:message>
  <wsdl:message name="getExplicitlyDeniedUsersForResourceResponse">
    <wsdl:part name="parameters" element="ns:getExplicitlyDeniedUsersForResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="authorizeRoleRequest">
    <wsdl:part name="parameters" element="ns:authorizeRole"/>
  </wsdl:message>
  <wsdl:message name="getDeniedRolesForResourceRequest">
    <wsdl:part name="parameters" element="ns:getDeniedRolesForResource"/>
  </wsdl:message>
  <wsdl:message name="getDeniedRolesForResourceResponse">
    <wsdl:part name="parameters" element="ns:getDeniedRolesForResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="isRoleAuthorizedRequest">
    <wsdl:part name="parameters" element="ns:isRoleAuthorized"/>
  </wsdl:message>
  <wsdl:message name="isRoleAuthorizedResponse">
    <wsdl:part name="parameters" element="ns:isRoleAuthorizedResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllowedUIResourcesForUserRequest">
    <wsdl:part name="parameters" element="ns:getAllowedUIResourcesForUser"/>
  </wsdl:message>
  <wsdl:message name="getAllowedUIResourcesForUserResponse">
    <wsdl:part name="parameters" element="ns:getAllowedUIResourcesForUserResponse"/>
  </wsdl:message>
  <wsdl:message name="denyRoleRequest">
    <wsdl:part name="parameters" element="ns:denyRole"/>
  </wsdl:message>
  <wsdl:message name="getExplicitlyAllowedUsersForResourceRequest">
    <wsdl:part name="parameters" element="ns:getExplicitlyAllowedUsersForResource"/>
  </wsdl:message>
  <wsdl:message name="getExplicitlyAllowedUsersForResourceResponse">
    <wsdl:part name="parameters" element="ns:getExplicitlyAllowedUsersForResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="clearRoleAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearRoleAuthorization"/>
  </wsdl:message>
  <wsdl:message name="clearAllRoleAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearAllRoleAuthorization"/>
  </wsdl:message>
  <wsdl:message name="resetPermissionOnUpdateRoleRequest">
    <wsdl:part name="parameters" element="ns:resetPermissionOnUpdateRole"/>
  </wsdl:message>
  <wsdl:message name="clearRoleActionOnAllResourcesRequest">
    <wsdl:part name="parameters" element="ns:clearRoleActionOnAllResources"/>
  </wsdl:message>
  <wsdl:message name="getAllowedRolesForResourceRequest">
    <wsdl:part name="parameters" element="ns:getAllowedRolesForResource"/>
  </wsdl:message>
  <wsdl:message name="getAllowedRolesForResourceResponse">
    <wsdl:part name="parameters" element="ns:getAllowedRolesForResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="clearResourceAuthorizationsRequest">
    <wsdl:part name="parameters" element="ns:clearResourceAuthorizations"/>
  </wsdl:message>
  <wsdl:portType name="RemoteAuthorizationManagerServicePortType">
    <wsdl:operation name="authorizeUser">
      <wsdl:input message="ns:authorizeUserRequest" wsaw:Action="urn:authorizeUser"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:authorizeUserRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <wsdl:input message="ns:isUserAuthorizedRequest" wsaw:Action="urn:isUserAuthorized"/>
      <wsdl:output message="ns:isUserAuthorizedResponse" wsaw:Action="urn:isUserAuthorizedResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:isUserAuthorizedRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <wsdl:input message="ns:clearAllUserAuthorizationRequest" wsaw:Action="urn:clearAllUserAuthorization"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearAllUserAuthorizationRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="denyUser">
      <wsdl:input message="ns:denyUserRequest" wsaw:Action="urn:denyUser"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:denyUserRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <wsdl:input message="ns:clearUserAuthorizationRequest" wsaw:Action="urn:clearUserAuthorization"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearUserAuthorizationRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <wsdl:input message="ns:getExplicitlyDeniedUsersForResourceRequest" wsaw:Action="urn:getExplicitlyDeniedUsersForResource"/>
      <wsdl:output message="ns:getExplicitlyDeniedUsersForResourceResponse" wsaw:Action="urn:getExplicitlyDeniedUsersForResourceResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getExplicitlyDeniedUsersForResourceRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <wsdl:input message="ns:authorizeRoleRequest" wsaw:Action="urn:authorizeRole"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:authorizeRoleRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <wsdl:input message="ns:getDeniedRolesForResourceRequest" wsaw:Action="urn:getDeniedRolesForResource"/>
      <wsdl:output message="ns:getDeniedRolesForResourceResponse" wsaw:Action="urn:getDeniedRolesForResourceResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getDeniedRolesForResourceRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <wsdl:input message="ns:isRoleAuthorizedRequest" wsaw:Action="urn:isRoleAuthorized"/>
      <wsdl:output message="ns:isRoleAuthorizedResponse" wsaw:Action="urn:isRoleAuthorizedResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:isRoleAuthorizedRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <wsdl:input message="ns:getAllowedUIResourcesForUserRequest" wsaw:Action="urn:getAllowedUIResourcesForUser"/>
      <wsdl:output message="ns:getAllowedUIResourcesForUserResponse" wsaw:Action="urn:getAllowedUIResourcesForUserResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getAllowedUIResourcesForUserRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <wsdl:input message="ns:denyRoleRequest" wsaw:Action="urn:denyRole"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:denyRoleRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <wsdl:input message="ns:getExplicitlyAllowedUsersForResourceRequest" wsaw:Action="urn:getExplicitlyAllowedUsersForResource"/>
      <wsdl:output message="ns:getExplicitlyAllowedUsersForResourceResponse" wsaw:Action="urn:getExplicitlyAllowedUsersForResourceResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getExplicitlyAllowedUsersForResourceRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <wsdl:input message="ns:clearRoleAuthorizationRequest" wsaw:Action="urn:clearRoleAuthorization"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearRoleAuthorizationRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <wsdl:input message="ns:clearAllRoleAuthorizationRequest" wsaw:Action="urn:clearAllRoleAuthorization"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearAllRoleAuthorizationRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <wsdl:input message="ns:resetPermissionOnUpdateRoleRequest" wsaw:Action="urn:resetPermissionOnUpdateRole"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:resetPermissionOnUpdateRoleRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <wsdl:input message="ns:clearRoleActionOnAllResourcesRequest" wsaw:Action="urn:clearRoleActionOnAllResources"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearRoleActionOnAllResourcesRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <wsdl:input message="ns:getAllowedRolesForResourceRequest" wsaw:Action="urn:getAllowedRolesForResource"/>
      <wsdl:output message="ns:getAllowedRolesForResourceResponse" wsaw:Action="urn:getAllowedRolesForResourceResponse"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getAllowedRolesForResourceRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <wsdl:input message="ns:clearResourceAuthorizationsRequest" wsaw:Action="urn:clearResourceAuthorizations"/>
      <wsdl:fault message="ns:RemoteAuthorizationManagerServiceUserStoreException" name="RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearResourceAuthorizationsRemoteAuthorizationManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteAuthorizationManagerServiceSoap11Binding" type="ns:RemoteAuthorizationManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="authorizeUser">
      <soap:operation soapAction="urn:authorizeUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <soap:operation soapAction="urn:isUserAuthorized" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <soap:operation soapAction="urn:clearAllUserAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyUser">
      <soap:operation soapAction="urn:denyUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <soap:operation soapAction="urn:clearUserAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <soap:operation soapAction="urn:getExplicitlyDeniedUsersForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <soap:operation soapAction="urn:authorizeRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <soap:operation soapAction="urn:getDeniedRolesForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <soap:operation soapAction="urn:isRoleAuthorized" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <soap:operation soapAction="urn:getAllowedUIResourcesForUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <soap:operation soapAction="urn:denyRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <soap:operation soapAction="urn:getExplicitlyAllowedUsersForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <soap:operation soapAction="urn:clearRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <soap:operation soapAction="urn:clearAllRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <soap:operation soapAction="urn:resetPermissionOnUpdateRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <soap:operation soapAction="urn:clearRoleActionOnAllResources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <soap:operation soapAction="urn:getAllowedRolesForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <soap:operation soapAction="urn:clearResourceAuthorizations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteAuthorizationManagerServiceSoap12Binding" type="ns:RemoteAuthorizationManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="authorizeUser">
      <soap12:operation soapAction="urn:authorizeUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <soap12:operation soapAction="urn:isUserAuthorized" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <soap12:operation soapAction="urn:clearAllUserAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyUser">
      <soap12:operation soapAction="urn:denyUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <soap12:operation soapAction="urn:clearUserAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <soap12:operation soapAction="urn:getExplicitlyDeniedUsersForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <soap12:operation soapAction="urn:authorizeRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <soap12:operation soapAction="urn:getDeniedRolesForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <soap12:operation soapAction="urn:isRoleAuthorized" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <soap12:operation soapAction="urn:getAllowedUIResourcesForUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <soap12:operation soapAction="urn:denyRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <soap12:operation soapAction="urn:getExplicitlyAllowedUsersForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <soap12:operation soapAction="urn:clearRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <soap12:operation soapAction="urn:clearAllRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <soap12:operation soapAction="urn:resetPermissionOnUpdateRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <soap12:operation soapAction="urn:clearRoleActionOnAllResources" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <soap12:operation soapAction="urn:getAllowedRolesForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <soap12:operation soapAction="urn:clearResourceAuthorizations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteAuthorizationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteAuthorizationManagerServiceHttpBinding" type="ns:RemoteAuthorizationManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="authorizeUser">
      <http:operation location="authorizeUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <http:operation location="isUserAuthorized"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <http:operation location="clearAllUserAuthorization"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="denyUser">
      <http:operation location="denyUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <http:operation location="clearUserAuthorization"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <http:operation location="getExplicitlyDeniedUsersForResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <http:operation location="authorizeRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <http:operation location="getDeniedRolesForResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <http:operation location="isRoleAuthorized"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <http:operation location="getAllowedUIResourcesForUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <http:operation location="denyRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <http:operation location="getExplicitlyAllowedUsersForResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <http:operation location="clearRoleAuthorization"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <http:operation location="clearAllRoleAuthorization"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <http:operation location="resetPermissionOnUpdateRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <http:operation location="clearRoleActionOnAllResources"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <http:operation location="getAllowedRolesForResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <http:operation location="clearResourceAuthorizations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteAuthorizationManagerService">
    <wsdl:port name="RemoteAuthorizationManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteAuthorizationManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteAuthorizationManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteAuthorizationManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteAuthorizationManagerServiceHttpsEndpoint" binding="ns:RemoteAuthorizationManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="e3e7e10b-33ab-410b-a753-f6851e448629" isOneWay="false" action="urn:authorizeRole" name="authorizeRole" bindingOperationName="authorizeRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5ff436ec-a0e1-4f46-bd54-7303ea0317e9" isOneWay="false" action="urn:authorizeUser" name="authorizeUser" bindingOperationName="authorizeUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="73407313-9fa1-4df4-879b-104953329e99" isOneWay="false" action="urn:clearAllRoleAuthorization" name="clearAllRoleAuthorization" bindingOperationName="clearAllRoleAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="633bb596-71b6-4d87-922f-5ad348ce5b2c" isOneWay="false" action="urn:clearAllUserAuthorization" name="clearAllUserAuthorization" bindingOperationName="clearAllUserAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79a610bf-c37b-4d46-a35d-d68a907ba30a" isOneWay="false" action="urn:clearResourceAuthorizations" name="clearResourceAuthorizations" bindingOperationName="clearResourceAuthorizations" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="84d3ef18-4d81-40ac-8465-5b16470687b7" isOneWay="false" action="urn:clearRoleActionOnAllResources" name="clearRoleActionOnAllResources" bindingOperationName="clearRoleActionOnAllResources" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c307e1a-8391-4587-8eba-f7fa191bf642" isOneWay="false" action="urn:clearRoleAuthorization" name="clearRoleAuthorization" bindingOperationName="clearRoleAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79d6f327-0ab3-4649-9abc-4c8b7122eb0e" isOneWay="false" action="urn:clearUserAuthorization" name="clearUserAuthorization" bindingOperationName="clearUserAuthorization" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0246fbf7-84be-4007-baa7-fbda78e2ea0f" isOneWay="false" action="urn:denyRole" name="denyRole" bindingOperationName="denyRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ebe1067b-0fa8-4e2a-87e2-f8c4d2ecfafe" isOneWay="false" action="urn:denyUser" name="denyUser" bindingOperationName="denyUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="75bfcf81-a6f0-43e4-aa92-bb8673e77c91" isOneWay="false" action="urn:getAllowedRolesForResource" name="getAllowedRolesForResource" bindingOperationName="getAllowedRolesForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3d091dc-ad71-4d30-a6e4-a081a464ad57" isOneWay="false" action="urn:getAllowedUIResourcesForUser" name="getAllowedUIResourcesForUser" bindingOperationName="getAllowedUIResourcesForUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="994923b9-9967-4fb5-a001-5bfdee866a03" isOneWay="false" action="urn:getDeniedRolesForResource" name="getDeniedRolesForResource" bindingOperationName="getDeniedRolesForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff84fdc2-d178-4090-8f20-2457b8989042" isOneWay="false" action="urn:getExplicitlyAllowedUsersForResource" name="getExplicitlyAllowedUsersForResource" bindingOperationName="getExplicitlyAllowedUsersForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="278ecfd8-7f24-4616-bc94-bdcf94a4af93" isOneWay="false" action="urn:getExplicitlyDeniedUsersForResource" name="getExplicitlyDeniedUsersForResource" bindingOperationName="getExplicitlyDeniedUsersForResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fbf314cb-9dfb-4202-9221-195b0723bf59" isOneWay="false" action="urn:isRoleAuthorized" name="isRoleAuthorized" bindingOperationName="isRoleAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f0ea7916-9813-4192-88ac-8461e1286360" isOneWay="false" action="urn:isUserAuthorized" name="isUserAuthorized" bindingOperationName="isUserAuthorized" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="60677ce0-b98b-4173-af52-b333bf0a585f" isOneWay="false" action="urn:resetPermissionOnUpdateRole" name="resetPermissionOnUpdateRole" bindingOperationName="resetPermissionOnUpdateRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d868f05b-8947-463e-9f2e-c965da4c9b67" wsaVersion="NONE" name="RemoteClaimManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteClaimManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteClaimManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="b591c639-3e72-4dee-8ff0-e5fe12fcebd8" isOneWay="false" action="urn:addNewClaimMapping" name="addNewClaimMapping" bindingOperationName="addNewClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dae843e1-cf98-452b-af7c-3c9d38e73882" isOneWay="false" action="urn:deleteClaimMapping" name="deleteClaimMapping" bindingOperationName="deleteClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a2917c1-9c18-423b-8501-3d55316efa9f" isOneWay="false" action="urn:getAllClaimMappings" name="getAllClaimMappings" bindingOperationName="getAllClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab64ffa2-16ec-42d8-9b6e-764722666331" isOneWay="false" action="urn:getAllClaimUris" name="getAllClaimUris" bindingOperationName="getAllClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a74fb611-f291-4615-b196-7f7789029282" isOneWay="false" action="urn:getAllRequiredClaimMappings" name="getAllRequiredClaimMappings" bindingOperationName="getAllRequiredClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5f89edaa-e589-441f-932c-698240b20e27" isOneWay="false" action="urn:getAllSupportClaimMappingsByDefault" name="getAllSupportClaimMappingsByDefault" bindingOperationName="getAllSupportClaimMappingsByDefault" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eaf7ab9f-f8ed-41c7-b89f-9681bbfa1e67" isOneWay="false" action="urn:getAttributeName" name="getAttributeName" bindingOperationName="getAttributeName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3707fc72-05c1-4b96-9e79-dbed74cecdb6" isOneWay="false" action="urn:getAttributeNameFromDomain" name="getAttributeNameFromDomain" bindingOperationName="getAttributeNameFromDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c4872fc4-4a9c-4d14-a700-9211a75b6db8" isOneWay="false" action="urn:getClaim" name="getClaim" bindingOperationName="getClaim" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="640c8aec-464b-4750-b395-cc91034b644e" isOneWay="false" action="urn:getClaimMapping" name="getClaimMapping" bindingOperationName="getClaimMapping" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="488274a7-1a02-4185-aa11-1bb6286d3be3" isOneWay="false" action="urn:updateClaimMapping" name="updateClaimMapping" bindingOperationName="updateClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f843eadc-2eac-42ce-be90-974d5844c6d2" wsaVersion="NONE" name="RemoteClaimManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteClaimManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteClaimManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteClaimManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteClaimManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2674="http://core.user.carbon.wso2.org/xsd" xmlns:ax2675="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteClaimManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Claim">
        <xs:sequence>
          <xs:element minOccurs="0" name="checkedAttribute" type="xs:boolean"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dialectURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="displayTag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="regEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="supportedByDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimMapping">
        <xs:sequence>
          <xs:element minOccurs="0" name="claim" nillable="true" type="ax2675:Claim"/>
          <xs:element minOccurs="0" name="mappedAttribute" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mappedAttributeWithNoDomain" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="mappedAttributes" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2677="http://core.user.carbon.wso2.org/xsd" xmlns:ax2678="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteClaimManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2674:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttributeName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttributeNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaim">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2675:Claim"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getClaimMappingResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSupportClaimMappingsByDefault">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSupportClaimMappingsByDefaultResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllClaimMappings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialectUri" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllClaimMappingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRequiredClaimMappings">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRequiredClaimMappingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllClaimUris">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllClaimUrisResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addNewClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mapping" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mapping" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateClaimMapping">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mapping" nillable="true" type="ax2675:ClaimMapping"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttributeNameFromDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttributeNameFromDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2676="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2675:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAllClaimMappingsRequest">
    <wsdl:part name="parameters" element="ns:getAllClaimMappings"/>
  </wsdl:message>
  <wsdl:message name="getAllClaimMappingsResponse">
    <wsdl:part name="parameters" element="ns:getAllClaimMappingsResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoteClaimManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteClaimManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingRequest">
    <wsdl:part name="parameters" element="ns:getClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="getClaimMappingResponse">
    <wsdl:part name="parameters" element="ns:getClaimMappingResponse"/>
  </wsdl:message>
  <wsdl:message name="addNewClaimMappingRequest">
    <wsdl:part name="parameters" element="ns:addNewClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="getClaimRequest">
    <wsdl:part name="parameters" element="ns:getClaim"/>
  </wsdl:message>
  <wsdl:message name="getClaimResponse">
    <wsdl:part name="parameters" element="ns:getClaimResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllRequiredClaimMappingsRequest">
    <wsdl:part name="parameters" element="ns:getAllRequiredClaimMappings"/>
  </wsdl:message>
  <wsdl:message name="getAllRequiredClaimMappingsResponse">
    <wsdl:part name="parameters" element="ns:getAllRequiredClaimMappingsResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllClaimUrisRequest">
    <wsdl:part name="parameters" element="ns:getAllClaimUris"/>
  </wsdl:message>
  <wsdl:message name="getAllClaimUrisResponse">
    <wsdl:part name="parameters" element="ns:getAllClaimUrisResponse"/>
  </wsdl:message>
  <wsdl:message name="updateClaimMappingRequest">
    <wsdl:part name="parameters" element="ns:updateClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="getAttributeNameRequest">
    <wsdl:part name="parameters" element="ns:getAttributeName"/>
  </wsdl:message>
  <wsdl:message name="getAttributeNameResponse">
    <wsdl:part name="parameters" element="ns:getAttributeNameResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteClaimMappingRequest">
    <wsdl:part name="parameters" element="ns:deleteClaimMapping"/>
  </wsdl:message>
  <wsdl:message name="getAttributeNameFromDomainRequest">
    <wsdl:part name="parameters" element="ns:getAttributeNameFromDomain"/>
  </wsdl:message>
  <wsdl:message name="getAttributeNameFromDomainResponse">
    <wsdl:part name="parameters" element="ns:getAttributeNameFromDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllSupportClaimMappingsByDefaultRequest">
    <wsdl:part name="parameters" element="ns:getAllSupportClaimMappingsByDefault"/>
  </wsdl:message>
  <wsdl:message name="getAllSupportClaimMappingsByDefaultResponse">
    <wsdl:part name="parameters" element="ns:getAllSupportClaimMappingsByDefaultResponse"/>
  </wsdl:message>
  <wsdl:portType name="RemoteClaimManagerServicePortType">
    <wsdl:operation name="getAllClaimMappings">
      <wsdl:input message="ns:getAllClaimMappingsRequest" wsaw:Action="urn:getAllClaimMappings"/>
      <wsdl:output message="ns:getAllClaimMappingsResponse" wsaw:Action="urn:getAllClaimMappingsResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAllClaimMappingsRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaimMapping">
      <wsdl:input message="ns:getClaimMappingRequest" wsaw:Action="urn:getClaimMapping"/>
      <wsdl:output message="ns:getClaimMappingResponse" wsaw:Action="urn:getClaimMappingResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getClaimMappingRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <wsdl:input message="ns:addNewClaimMappingRequest" wsaw:Action="urn:addNewClaimMapping"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:addNewClaimMappingRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getClaim">
      <wsdl:input message="ns:getClaimRequest" wsaw:Action="urn:getClaim"/>
      <wsdl:output message="ns:getClaimResponse" wsaw:Action="urn:getClaimResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getClaimRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllRequiredClaimMappings">
      <wsdl:input message="ns:getAllRequiredClaimMappingsRequest" wsaw:Action="urn:getAllRequiredClaimMappings"/>
      <wsdl:output message="ns:getAllRequiredClaimMappingsResponse" wsaw:Action="urn:getAllRequiredClaimMappingsResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAllRequiredClaimMappingsRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllClaimUris">
      <wsdl:input message="ns:getAllClaimUrisRequest" wsaw:Action="urn:getAllClaimUris"/>
      <wsdl:output message="ns:getAllClaimUrisResponse" wsaw:Action="urn:getAllClaimUrisResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAllClaimUrisRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateClaimMapping">
      <wsdl:input message="ns:updateClaimMappingRequest" wsaw:Action="urn:updateClaimMapping"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:updateClaimMappingRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <wsdl:input message="ns:getAttributeNameRequest" wsaw:Action="urn:getAttributeName"/>
      <wsdl:output message="ns:getAttributeNameResponse" wsaw:Action="urn:getAttributeNameResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAttributeNameRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteClaimMapping">
      <wsdl:input message="ns:deleteClaimMappingRequest" wsaw:Action="urn:deleteClaimMapping"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:deleteClaimMappingRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNameFromDomain">
      <wsdl:input message="ns:getAttributeNameFromDomainRequest" wsaw:Action="urn:getAttributeNameFromDomain"/>
      <wsdl:output message="ns:getAttributeNameFromDomainResponse" wsaw:Action="urn:getAttributeNameFromDomainResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAttributeNameFromDomainRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSupportClaimMappingsByDefault">
      <wsdl:input message="ns:getAllSupportClaimMappingsByDefaultRequest" wsaw:Action="urn:getAllSupportClaimMappingsByDefault"/>
      <wsdl:output message="ns:getAllSupportClaimMappingsByDefaultResponse" wsaw:Action="urn:getAllSupportClaimMappingsByDefaultResponse"/>
      <wsdl:fault message="ns:RemoteClaimManagerServiceUserStoreException" name="RemoteClaimManagerServiceUserStoreException" wsaw:Action="urn:getAllSupportClaimMappingsByDefaultRemoteClaimManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteClaimManagerServiceSoap11Binding" type="ns:RemoteClaimManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllClaimMappings">
      <soap:operation soapAction="urn:getAllClaimMappings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMapping">
      <soap:operation soapAction="urn:getClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <soap:operation soapAction="urn:addNewClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaim">
      <soap:operation soapAction="urn:getClaim" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRequiredClaimMappings">
      <soap:operation soapAction="urn:getAllRequiredClaimMappings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllClaimUris">
      <soap:operation soapAction="urn:getAllClaimUris" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateClaimMapping">
      <soap:operation soapAction="urn:updateClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <soap:operation soapAction="urn:getAttributeName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteClaimMapping">
      <soap:operation soapAction="urn:deleteClaimMapping" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNameFromDomain">
      <soap:operation soapAction="urn:getAttributeNameFromDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSupportClaimMappingsByDefault">
      <soap:operation soapAction="urn:getAllSupportClaimMappingsByDefault" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteClaimManagerServiceSoap12Binding" type="ns:RemoteClaimManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAllClaimMappings">
      <soap12:operation soapAction="urn:getAllClaimMappings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaimMapping">
      <soap12:operation soapAction="urn:getClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <soap12:operation soapAction="urn:addNewClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClaim">
      <soap12:operation soapAction="urn:getClaim" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRequiredClaimMappings">
      <soap12:operation soapAction="urn:getAllRequiredClaimMappings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllClaimUris">
      <soap12:operation soapAction="urn:getAllClaimUris" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateClaimMapping">
      <soap12:operation soapAction="urn:updateClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <soap12:operation soapAction="urn:getAttributeName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteClaimMapping">
      <soap12:operation soapAction="urn:deleteClaimMapping" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNameFromDomain">
      <soap12:operation soapAction="urn:getAttributeNameFromDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSupportClaimMappingsByDefault">
      <soap12:operation soapAction="urn:getAllSupportClaimMappingsByDefault" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteClaimManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteClaimManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteClaimManagerServiceHttpBinding" type="ns:RemoteClaimManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAllClaimMappings">
      <http:operation location="getAllClaimMappings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClaimMapping">
      <http:operation location="getClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addNewClaimMapping">
      <http:operation location="addNewClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getClaim">
      <http:operation location="getClaim"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRequiredClaimMappings">
      <http:operation location="getAllRequiredClaimMappings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllClaimUris">
      <http:operation location="getAllClaimUris"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateClaimMapping">
      <http:operation location="updateClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAttributeName">
      <http:operation location="getAttributeName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteClaimMapping">
      <http:operation location="deleteClaimMapping"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAttributeNameFromDomain">
      <http:operation location="getAttributeNameFromDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllSupportClaimMappingsByDefault">
      <http:operation location="getAllSupportClaimMappingsByDefault"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteClaimManagerService">
    <wsdl:port name="RemoteClaimManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteClaimManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteClaimManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteClaimManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteClaimManagerServiceHttpsEndpoint" binding="ns:RemoteClaimManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteClaimManagerService.RemoteClaimManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="2ceb5729-b50f-4d36-94d0-f0825143ca7b" isOneWay="false" action="urn:addNewClaimMapping" name="addNewClaimMapping" bindingOperationName="addNewClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e1e4a6f0-b257-4959-9a40-ea2564ac7960" isOneWay="false" action="urn:deleteClaimMapping" name="deleteClaimMapping" bindingOperationName="deleteClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3ea7924f-6404-4baf-961e-e54f0e7e5ee0" isOneWay="false" action="urn:getAllClaimMappings" name="getAllClaimMappings" bindingOperationName="getAllClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b0f58af-0643-4b90-ad9f-46db8c757fb2" isOneWay="false" action="urn:getAllClaimUris" name="getAllClaimUris" bindingOperationName="getAllClaimUris" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="43cce528-0efb-4995-9471-ab832c6a9eab" isOneWay="false" action="urn:getAllRequiredClaimMappings" name="getAllRequiredClaimMappings" bindingOperationName="getAllRequiredClaimMappings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="165591f9-8902-4411-b534-64b335c62732" isOneWay="false" action="urn:getAllSupportClaimMappingsByDefault" name="getAllSupportClaimMappingsByDefault" bindingOperationName="getAllSupportClaimMappingsByDefault" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aa9827ab-b993-44e2-9bd6-ed8856901dd8" isOneWay="false" action="urn:getAttributeName" name="getAttributeName" bindingOperationName="getAttributeName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="91f08adc-fe09-4a1e-8bc2-31119fb75cf1" isOneWay="false" action="urn:getAttributeNameFromDomain" name="getAttributeNameFromDomain" bindingOperationName="getAttributeNameFromDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52312a23-163f-4fe6-9a56-816f1225fef9" isOneWay="false" action="urn:getClaim" name="getClaim" bindingOperationName="getClaim" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="28345041-06a6-4bf4-ba12-45aa972a2ed0" isOneWay="false" action="urn:getClaimMapping" name="getClaimMapping" bindingOperationName="getClaimMapping" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="55e3aa3d-51be-415b-91d7-e6cc25fa3788" isOneWay="false" action="urn:updateClaimMapping" name="updateClaimMapping" bindingOperationName="updateClaimMapping" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ad476d6d-c358-425f-abda-263030d0d7fb" wsaVersion="NONE" name="RemoteProfileConfigurationManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteProfileConfigurationManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteProfileConfigurationManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="ab9f48a9-0d00-453f-92a2-e1ebbb049e16" isOneWay="false" action="urn:addProfileConfig" name="addProfileConfig" bindingOperationName="addProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9d5ab4d8-323c-4600-ab49-55941c8215eb" isOneWay="false" action="urn:deleteProfileConfig" name="deleteProfileConfig" bindingOperationName="deleteProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e3a3bad-4eea-45c3-a461-c6860a6ac04e" isOneWay="false" action="urn:getAllProfiles" name="getAllProfiles" bindingOperationName="getAllProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3834d91a-e6a4-433f-9b91-82cbda751f7f" isOneWay="false" action="urn:getProfileConfig" name="getProfileConfig" bindingOperationName="getProfileConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="83e140ba-dffd-4852-9dbd-9e4dd6b7cbe0" isOneWay="false" action="urn:updateProfileConfig" name="updateProfileConfig" bindingOperationName="updateProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="98acac68-0a7e-4f99-ae5e-21a5761bedf7" wsaVersion="NONE" name="RemoteProfileConfigurationManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteProfileConfigurationManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteProfileConfigurationManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteProfileConfigurationManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteProfileConfigurationManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2667="http://core.user.carbon.wso2.org/xsd" xmlns:ax2668="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2671="http://profile.core.user.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteProfileConfigurationManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="ProfileConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="dialectName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="hiddenClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="inheritedClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="overriddenClaims" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2670="http://core.user.carbon.wso2.org/xsd" xmlns:ax2673="http://profile.core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://profile.core.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2667:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileConfigResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addProfileConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileConfig" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateProfileConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileConfig" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteProfileConfig">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileConfig" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProfiles">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProfilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2671:ProfileConfiguration"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2669="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2668:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://profile.core.user.carbon.wso2.org/xsd" xmlns:ax2672="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="ProfileConfiguration">
        <xs:complexContent>
          <xs:extension base="ax2668:ProfileConfiguration">
            <xs:sequence>
              <xs:element minOccurs="0" name="dialectName" nillable="true" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="hiddenClaims" nillable="true" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="inheritedClaims" nillable="true" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="overriddenClaims" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getProfileConfigRequest">
    <wsdl:part name="parameters" element="ns:getProfileConfig"/>
  </wsdl:message>
  <wsdl:message name="getProfileConfigResponse">
    <wsdl:part name="parameters" element="ns:getProfileConfigResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoteProfileConfigurationManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteProfileConfigurationManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="updateProfileConfigRequest">
    <wsdl:part name="parameters" element="ns:updateProfileConfig"/>
  </wsdl:message>
  <wsdl:message name="getAllProfilesRequest">
    <wsdl:part name="parameters" element="ns:getAllProfiles"/>
  </wsdl:message>
  <wsdl:message name="getAllProfilesResponse">
    <wsdl:part name="parameters" element="ns:getAllProfilesResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteProfileConfigRequest">
    <wsdl:part name="parameters" element="ns:deleteProfileConfig"/>
  </wsdl:message>
  <wsdl:message name="addProfileConfigRequest">
    <wsdl:part name="parameters" element="ns:addProfileConfig"/>
  </wsdl:message>
  <wsdl:portType name="RemoteProfileConfigurationManagerServicePortType">
    <wsdl:operation name="getProfileConfig">
      <wsdl:input message="ns:getProfileConfigRequest" wsaw:Action="urn:getProfileConfig"/>
      <wsdl:output message="ns:getProfileConfigResponse" wsaw:Action="urn:getProfileConfigResponse"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:getProfileConfigRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateProfileConfig">
      <wsdl:input message="ns:updateProfileConfigRequest" wsaw:Action="urn:updateProfileConfig"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:updateProfileConfigRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllProfiles">
      <wsdl:input message="ns:getAllProfilesRequest" wsaw:Action="urn:getAllProfiles"/>
      <wsdl:output message="ns:getAllProfilesResponse" wsaw:Action="urn:getAllProfilesResponse"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:getAllProfilesRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteProfileConfig">
      <wsdl:input message="ns:deleteProfileConfigRequest" wsaw:Action="urn:deleteProfileConfig"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:deleteProfileConfigRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addProfileConfig">
      <wsdl:input message="ns:addProfileConfigRequest" wsaw:Action="urn:addProfileConfig"/>
      <wsdl:fault message="ns:RemoteProfileConfigurationManagerServiceUserStoreException" name="RemoteProfileConfigurationManagerServiceUserStoreException" wsaw:Action="urn:addProfileConfigRemoteProfileConfigurationManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteProfileConfigurationManagerServiceSoap11Binding" type="ns:RemoteProfileConfigurationManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getProfileConfig">
      <soap:operation soapAction="urn:getProfileConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProfileConfig">
      <soap:operation soapAction="urn:updateProfileConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProfiles">
      <soap:operation soapAction="urn:getAllProfiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProfileConfig">
      <soap:operation soapAction="urn:deleteProfileConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addProfileConfig">
      <soap:operation soapAction="urn:addProfileConfig" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteProfileConfigurationManagerServiceSoap12Binding" type="ns:RemoteProfileConfigurationManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getProfileConfig">
      <soap12:operation soapAction="urn:getProfileConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProfileConfig">
      <soap12:operation soapAction="urn:updateProfileConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProfiles">
      <soap12:operation soapAction="urn:getAllProfiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProfileConfig">
      <soap12:operation soapAction="urn:deleteProfileConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addProfileConfig">
      <soap12:operation soapAction="urn:addProfileConfig" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteProfileConfigurationManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteProfileConfigurationManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteProfileConfigurationManagerServiceHttpBinding" type="ns:RemoteProfileConfigurationManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getProfileConfig">
      <http:operation location="getProfileConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateProfileConfig">
      <http:operation location="updateProfileConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllProfiles">
      <http:operation location="getAllProfiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteProfileConfig">
      <http:operation location="deleteProfileConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addProfileConfig">
      <http:operation location="addProfileConfig"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteProfileConfigurationManagerService">
    <wsdl:port name="RemoteProfileConfigurationManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteProfileConfigurationManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteProfileConfigurationManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteProfileConfigurationManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteProfileConfigurationManagerServiceHttpsEndpoint" binding="ns:RemoteProfileConfigurationManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteProfileConfigurationManagerService.RemoteProfileConfigurationManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="5405d238-34c8-40b0-a515-2bad540ebf16" isOneWay="false" action="urn:addProfileConfig" name="addProfileConfig" bindingOperationName="addProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79e07b12-6505-42c8-ab4e-a1cac9f2119e" isOneWay="false" action="urn:deleteProfileConfig" name="deleteProfileConfig" bindingOperationName="deleteProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b1ce9f61-59aa-4d1f-bef5-c8597b91da22" isOneWay="false" action="urn:getAllProfiles" name="getAllProfiles" bindingOperationName="getAllProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a2d34627-10c0-40c3-a290-bb4352f8db57" isOneWay="false" action="urn:getProfileConfig" name="getProfileConfig" bindingOperationName="getProfileConfig" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4db96f65-6284-4144-affb-672422530942" isOneWay="false" action="urn:updateProfileConfig" name="updateProfileConfig" bindingOperationName="updateProfileConfig" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="223a840a-a804-4720-9241-990e07dc79a5" wsaVersion="NONE" name="RemoteTenantManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteTenantManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteTenantManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="1b2b9d98-a92b-4d62-b7a3-72c701957d09" isOneWay="false" action="urn:activateTenant" name="activateTenant" bindingOperationName="activateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4c95f02c-8ad0-47b6-956f-ec3daeffe78c" isOneWay="false" action="urn:addTenant" name="addTenant" bindingOperationName="addTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="85a9bc39-a2d7-48f6-a664-cdd85c73fe8a" isOneWay="false" action="urn:deactivateTenant" name="deactivateTenant" bindingOperationName="deactivateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="928dd71a-5815-4aa0-8ec5-feda7bf6554c" isOneWay="false" action="urn:deleteTenant" name="deleteTenant" bindingOperationName="deleteTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ba154d47-dfb4-4ceb-9193-c13f009b26c4" isOneWay="false" action="urn:getAllTenants" name="getAllTenants" bindingOperationName="getAllTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4203bd2c-16fa-4dcb-ac4f-852966f91778" isOneWay="false" action="urn:getDomain" name="getDomain" bindingOperationName="getDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="85b31c59-604b-4ea9-8724-6aab024fbf44" isOneWay="false" action="urn:getSuperTenantDomain" name="getSuperTenantDomain" bindingOperationName="getSuperTenantDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="069de692-5ea5-4d8e-b5e4-252674f0ed54" isOneWay="false" action="urn:getTenant" name="getTenant" bindingOperationName="getTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b18dd95-f534-4d8f-a72c-2ff5435bcc02" isOneWay="false" action="urn:getTenantId" name="getTenantId" bindingOperationName="getTenantId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="358d14eb-b392-4b37-a73b-07a91383c8a1" isOneWay="false" action="urn:isTenantActive" name="isTenantActive" bindingOperationName="isTenantActive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="041f5a64-9493-4813-8a4b-bee8bcfb577f" isOneWay="false" action="urn:updateTenant" name="updateTenant" bindingOperationName="updateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7d8a81cd-d6a8-475a-a0cf-d9fbd82f277c" wsaVersion="NONE" name="RemoteTenantManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteTenantManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteTenantManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteTenantManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteTenantManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2685="http://core.user.carbon.wso2.org/xsd" xmlns:ax2686="http://api.user.carbon.wso2.org/xsd" xmlns:ax2689="http://tenant.core.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteTenantManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Tenant">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="adminFirstName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminFullName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminLastName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdDate" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="email" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="realmConfig" nillable="true" type="ax2686:RealmConfiguration"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RealmConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="addAdmin" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorizationManagerClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="authzProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="everyOneRoleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="multipleCredentialProps" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordsExternallyManaged" type="xs:boolean"/>
          <xs:element minOccurs="0" name="persistedTimestamp" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realmClassName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="realmProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="secondaryRealmConfig" nillable="true" type="ax2686:RealmConfiguration"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="userStoreClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userStoreProperties" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2688="http://core.user.carbon.wso2.org/xsd" xmlns:ax2691="http://tenant.core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://tenant.core.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteTenantManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2685:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenant" nillable="true" type="ax2689:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenant" nillable="true" type="ax2689:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2689:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllTenants">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2689:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="activateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deactivateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isTenantActive">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isTenantActiveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSuperTenantDomain">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSuperTenantDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://tenant.core.user.carbon.wso2.org/xsd" xmlns:ax2690="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="Tenant">
        <xs:complexContent>
          <xs:extension base="ax2686:Tenant">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2687="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2686:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getDomainRequest">
    <wsdl:part name="parameters" element="ns:getDomain"/>
  </wsdl:message>
  <wsdl:message name="getDomainResponse">
    <wsdl:part name="parameters" element="ns:getDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoteTenantManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteTenantManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="getSuperTenantDomainRequest">
    <wsdl:part name="parameters" element="ns:getSuperTenantDomain"/>
  </wsdl:message>
  <wsdl:message name="getSuperTenantDomainResponse">
    <wsdl:part name="parameters" element="ns:getSuperTenantDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="deactivateTenantRequest">
    <wsdl:part name="parameters" element="ns:deactivateTenant"/>
  </wsdl:message>
  <wsdl:message name="deleteTenantRequest">
    <wsdl:part name="parameters" element="ns:deleteTenant"/>
  </wsdl:message>
  <wsdl:message name="addTenantRequest">
    <wsdl:part name="parameters" element="ns:addTenant"/>
  </wsdl:message>
  <wsdl:message name="addTenantResponse">
    <wsdl:part name="parameters" element="ns:addTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="updateTenantRequest">
    <wsdl:part name="parameters" element="ns:updateTenant"/>
  </wsdl:message>
  <wsdl:message name="isTenantActiveRequest">
    <wsdl:part name="parameters" element="ns:isTenantActive"/>
  </wsdl:message>
  <wsdl:message name="isTenantActiveResponse">
    <wsdl:part name="parameters" element="ns:isTenantActiveResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdRequest">
    <wsdl:part name="parameters" element="ns:getTenantId"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdResponse">
    <wsdl:part name="parameters" element="ns:getTenantIdResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantRequest">
    <wsdl:part name="parameters" element="ns:getTenant"/>
  </wsdl:message>
  <wsdl:message name="getTenantResponse">
    <wsdl:part name="parameters" element="ns:getTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllTenantsRequest">
    <wsdl:part name="parameters" element="ns:getAllTenants"/>
  </wsdl:message>
  <wsdl:message name="getAllTenantsResponse">
    <wsdl:part name="parameters" element="ns:getAllTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="activateTenantRequest">
    <wsdl:part name="parameters" element="ns:activateTenant"/>
  </wsdl:message>
  <wsdl:portType name="RemoteTenantManagerServicePortType">
    <wsdl:operation name="getDomain">
      <wsdl:input message="ns:getDomainRequest" wsaw:Action="urn:getDomain"/>
      <wsdl:output message="ns:getDomainResponse" wsaw:Action="urn:getDomainResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getDomainRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getSuperTenantDomain">
      <wsdl:input message="ns:getSuperTenantDomainRequest" wsaw:Action="urn:getSuperTenantDomain"/>
      <wsdl:output message="ns:getSuperTenantDomainResponse" wsaw:Action="urn:getSuperTenantDomainResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getSuperTenantDomainRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deactivateTenant">
      <wsdl:input message="ns:deactivateTenantRequest" wsaw:Action="urn:deactivateTenant"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:deactivateTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <wsdl:input message="ns:deleteTenantRequest" wsaw:Action="urn:deleteTenant"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:deleteTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <wsdl:input message="ns:addTenantRequest" wsaw:Action="urn:addTenant"/>
      <wsdl:output message="ns:addTenantResponse" wsaw:Action="urn:addTenantResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:addTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <wsdl:input message="ns:updateTenantRequest" wsaw:Action="urn:updateTenant"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:updateTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isTenantActive">
      <wsdl:input message="ns:isTenantActiveRequest" wsaw:Action="urn:isTenantActive"/>
      <wsdl:output message="ns:isTenantActiveResponse" wsaw:Action="urn:isTenantActiveResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:isTenantActiveRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <wsdl:input message="ns:getTenantIdRequest" wsaw:Action="urn:getTenantId"/>
      <wsdl:output message="ns:getTenantIdResponse" wsaw:Action="urn:getTenantIdResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getTenantIdRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <wsdl:input message="ns:getTenantRequest" wsaw:Action="urn:getTenant"/>
      <wsdl:output message="ns:getTenantResponse" wsaw:Action="urn:getTenantResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllTenants">
      <wsdl:input message="ns:getAllTenantsRequest" wsaw:Action="urn:getAllTenants"/>
      <wsdl:output message="ns:getAllTenantsResponse" wsaw:Action="urn:getAllTenantsResponse"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:getAllTenantsRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <wsdl:input message="ns:activateTenantRequest" wsaw:Action="urn:activateTenant"/>
      <wsdl:fault message="ns:RemoteTenantManagerServiceUserStoreException" name="RemoteTenantManagerServiceUserStoreException" wsaw:Action="urn:activateTenantRemoteTenantManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteTenantManagerServiceSoap11Binding" type="ns:RemoteTenantManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getDomain">
      <soap:operation soapAction="urn:getDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSuperTenantDomain">
      <soap:operation soapAction="urn:getSuperTenantDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateTenant">
      <soap:operation soapAction="urn:deactivateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <soap:operation soapAction="urn:deleteTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <soap:operation soapAction="urn:addTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <soap:operation soapAction="urn:updateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isTenantActive">
      <soap:operation soapAction="urn:isTenantActive" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <soap:operation soapAction="urn:getTenantId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <soap:operation soapAction="urn:getTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTenants">
      <soap:operation soapAction="urn:getAllTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <soap:operation soapAction="urn:activateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteTenantManagerServiceSoap12Binding" type="ns:RemoteTenantManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getDomain">
      <soap12:operation soapAction="urn:getDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSuperTenantDomain">
      <soap12:operation soapAction="urn:getSuperTenantDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateTenant">
      <soap12:operation soapAction="urn:deactivateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <soap12:operation soapAction="urn:deleteTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <soap12:operation soapAction="urn:addTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <soap12:operation soapAction="urn:updateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isTenantActive">
      <soap12:operation soapAction="urn:isTenantActive" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <soap12:operation soapAction="urn:getTenantId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <soap12:operation soapAction="urn:getTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTenants">
      <soap12:operation soapAction="urn:getAllTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <soap12:operation soapAction="urn:activateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteTenantManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteTenantManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteTenantManagerServiceHttpBinding" type="ns:RemoteTenantManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getDomain">
      <http:operation location="getDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSuperTenantDomain">
      <http:operation location="getSuperTenantDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deactivateTenant">
      <http:operation location="deactivateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <http:operation location="deleteTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <http:operation location="addTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <http:operation location="updateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isTenantActive">
      <http:operation location="isTenantActive"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <http:operation location="getTenantId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <http:operation location="getTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllTenants">
      <http:operation location="getAllTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <http:operation location="activateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteTenantManagerService">
    <wsdl:port name="RemoteTenantManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteTenantManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteTenantManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteTenantManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteTenantManagerServiceHttpsEndpoint" binding="ns:RemoteTenantManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteTenantManagerService.RemoteTenantManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="12aaa866-8558-4b2f-bcfe-d149152814b0" isOneWay="false" action="urn:activateTenant" name="activateTenant" bindingOperationName="activateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="82cd70f1-05c0-417a-87dc-b958c07a0d33" isOneWay="false" action="urn:addTenant" name="addTenant" bindingOperationName="addTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16b34095-4dbf-4874-8a37-c74385500c6c" isOneWay="false" action="urn:deactivateTenant" name="deactivateTenant" bindingOperationName="deactivateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5d56484f-5988-432f-81bb-d5501ef48ea8" isOneWay="false" action="urn:deleteTenant" name="deleteTenant" bindingOperationName="deleteTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="02eb7fed-4e05-46cf-92ad-cd694fb8daf8" isOneWay="false" action="urn:getAllTenants" name="getAllTenants" bindingOperationName="getAllTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="46e785e9-ac96-489c-89ce-82b5af5776c0" isOneWay="false" action="urn:getDomain" name="getDomain" bindingOperationName="getDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a3e7e7af-11e8-43bd-b07d-0195c6bae67e" isOneWay="false" action="urn:getSuperTenantDomain" name="getSuperTenantDomain" bindingOperationName="getSuperTenantDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="28a62921-6ed5-40dc-a51b-b50d9c212cd1" isOneWay="false" action="urn:getTenant" name="getTenant" bindingOperationName="getTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="65535a9a-c268-4095-9701-61d30ea9c582" isOneWay="false" action="urn:getTenantId" name="getTenantId" bindingOperationName="getTenantId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e866be5-b7c0-4c75-9c9b-6042d83c44e8" isOneWay="false" action="urn:isTenantActive" name="isTenantActive" bindingOperationName="isTenantActive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c1ed7bed-955e-4385-9707-638cc3fed622" isOneWay="false" action="urn:updateTenant" name="updateTenant" bindingOperationName="updateTenant" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="376ae505-0e8d-4acb-b1ba-74897464e056" wsaVersion="NONE" name="RemoteUserRealmServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteUserRealmServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteUserRealmService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="44101e0b-8850-44aa-9a4e-98ee0d117a55" isOneWay="false" action="urn:getRealmConfiguration" name="getRealmConfiguration" bindingOperationName="getRealmConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e0df34f0-cadd-4a1f-b8ff-2482cbbd5151" wsaVersion="NONE" name="RemoteUserRealmServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteUserRealmServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteUserRealmService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteUserRealmService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteUserRealmService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:ax2679="http://core.user.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2680="http://api.user.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2683="http://dao.service.ws.um.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteUserRealmService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dao.service.ws.um.carbon.wso2.org/xsd">
      <xs:complexType name="RealmConfigurationDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorizationManagerClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="authzProperties" nillable="true" type="ax2683:RealmPropertyDTO"/>
          <xs:element minOccurs="0" name="everyOneRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="maxUserListLength" type="xs:int"/>
          <xs:element minOccurs="0" name="persistedTimestamp" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realmClassName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="realmProperties" nillable="true" type="ax2683:RealmPropertyDTO"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="userStoreClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userStoreProperties" nillable="true" type="ax2683:RealmPropertyDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RealmPropertyDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2682="http://core.user.carbon.wso2.org/xsd" xmlns:ax2684="http://dao.service.ws.um.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dao.service.ws.um.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteUserRealmServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2679:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRealmConfiguration">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRealmConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2683:RealmConfigurationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2681="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2680:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getRealmConfigurationRequest">
    <wsdl:part name="parameters" element="ns:getRealmConfiguration"/>
  </wsdl:message>
  <wsdl:message name="getRealmConfigurationResponse">
    <wsdl:part name="parameters" element="ns:getRealmConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoteUserRealmServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteUserRealmServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:portType name="RemoteUserRealmServicePortType">
    <wsdl:operation name="getRealmConfiguration">
      <wsdl:input message="ns:getRealmConfigurationRequest" wsaw:Action="urn:getRealmConfiguration"/>
      <wsdl:output message="ns:getRealmConfigurationResponse" wsaw:Action="urn:getRealmConfigurationResponse"/>
      <wsdl:fault message="ns:RemoteUserRealmServiceUserStoreException" name="RemoteUserRealmServiceUserStoreException" wsaw:Action="urn:getRealmConfigurationRemoteUserRealmServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteUserRealmServiceSoap11Binding" type="ns:RemoteUserRealmServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getRealmConfiguration">
      <soap:operation soapAction="urn:getRealmConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserRealmServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserRealmServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteUserRealmServiceSoap12Binding" type="ns:RemoteUserRealmServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getRealmConfiguration">
      <soap12:operation soapAction="urn:getRealmConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserRealmServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserRealmServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteUserRealmServiceHttpBinding" type="ns:RemoteUserRealmServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getRealmConfiguration">
      <http:operation location="getRealmConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteUserRealmService">
    <wsdl:port name="RemoteUserRealmServiceHttpsSoap11Endpoint" binding="ns:RemoteUserRealmServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteUserRealmServiceHttpsSoap12Endpoint" binding="ns:RemoteUserRealmServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteUserRealmServiceHttpsEndpoint" binding="ns:RemoteUserRealmServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteUserRealmService.RemoteUserRealmServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="5fc109f9-5db0-4c58-935e-c6b9e4c4aaee" isOneWay="false" action="urn:getRealmConfiguration" name="getRealmConfiguration" bindingOperationName="getRealmConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="95fa1ef2-4e03-4a4e-9a1d-3fcf8defb534" wsaVersion="NONE" name="RemoteUserStoreManagerServiceSoap12Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteUserStoreManagerServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteUserStoreManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="e03a5fb1-a7fa-4832-bd6e-590af7dc4699" isOneWay="false" action="urn:addRole" name="addRole" bindingOperationName="addRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3ca3677a-536d-4267-a0f2-97f8ecef9c0d" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b9b53244-a155-4e9e-8c66-8eb19bec0fb8" isOneWay="false" action="urn:addUserClaimValue" name="addUserClaimValue" bindingOperationName="addUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="092ed1ab-c71e-46e8-98bd-a6cd4ee1a12f" isOneWay="false" action="urn:addUserClaimValues" name="addUserClaimValues" bindingOperationName="addUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0f6005fe-d90b-4e77-91ee-6bffdc5dc314" isOneWay="false" action="urn:authenticate" name="authenticate" bindingOperationName="authenticate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0dee294d-ecbe-4896-b2d7-b2cd906b40be" isOneWay="false" action="urn:deleteRole" name="deleteRole" bindingOperationName="deleteRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e967626-890a-4e3f-9a00-316e9597ed8e" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e381a28-b038-443e-a00f-09fac3f96064" isOneWay="false" action="urn:deleteUserClaimValue" name="deleteUserClaimValue" bindingOperationName="deleteUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e439f16e-be98-4117-bd54-f0e3e82a953b" isOneWay="false" action="urn:deleteUserClaimValues" name="deleteUserClaimValues" bindingOperationName="deleteUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="01c2eed9-3d0b-4075-9487-e149f9f40ebd" isOneWay="false" action="urn:getAllProfileNames" name="getAllProfileNames" bindingOperationName="getAllProfileNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ccfb2848-89ab-47f3-a809-328310bf4008" isOneWay="false" action="urn:getHybridRoles" name="getHybridRoles" bindingOperationName="getHybridRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c0f4d57b-0375-491d-9900-0753ff128877" isOneWay="false" action="urn:getPasswordExpirationTime" name="getPasswordExpirationTime" bindingOperationName="getPasswordExpirationTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="30ba5451-fb6f-4565-9578-7654b85e018d" isOneWay="false" action="urn:getProfileNames" name="getProfileNames" bindingOperationName="getProfileNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9cdef1e4-2ee1-4405-bc6b-cdc85abaa273" isOneWay="false" action="urn:getProperties" name="getProperties" bindingOperationName="getProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c26c48b0-d2ac-45be-b9e5-e76a8f6afe5f" isOneWay="false" action="urn:getRoleListOfUser" name="getRoleListOfUser" bindingOperationName="getRoleListOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8458f5a0-9357-4269-8a9d-d45959277b28" isOneWay="false" action="urn:getRoleNames" name="getRoleNames" bindingOperationName="getRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="31475326-c140-4379-b080-20fb4896234e" isOneWay="false" action="urn:getTenantId" name="getTenantId" bindingOperationName="getTenantId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b64fda03-23e0-4c99-b1cd-2d192f14be7d" isOneWay="false" action="urn:getTenantIdofUser" name="getTenantIdofUser" bindingOperationName="getTenantIdofUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="864afac7-985f-4aaa-9e18-ba1c0f711c0c" isOneWay="false" action="urn:getUserClaimValue" name="getUserClaimValue" bindingOperationName="getUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="406a74e6-fb47-457b-8897-d894bd2b1724" isOneWay="false" action="urn:getUserClaimValues" name="getUserClaimValues" bindingOperationName="getUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aa5ae1a2-7842-45f5-9b81-7d834fdecd7b" isOneWay="false" action="urn:getUserClaimValuesForClaims" name="getUserClaimValuesForClaims" bindingOperationName="getUserClaimValuesForClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="23895690-028e-4c20-88e7-04c347609f6a" isOneWay="false" action="urn:getUserId" name="getUserId" bindingOperationName="getUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b54acd95-76c7-4c47-a79e-f8fdbeaeedc4" isOneWay="false" action="urn:getUserList" name="getUserList" bindingOperationName="getUserList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="813d64cf-a26a-403e-9b77-2c8e6d2bac7e" isOneWay="false" action="urn:getUserListOfRole" name="getUserListOfRole" bindingOperationName="getUserListOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3721b399-b0de-4612-9da3-7dbb0991ce9b" isOneWay="false" action="urn:isExistingRole" name="isExistingRole" bindingOperationName="isExistingRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c0669546-08d0-4632-ab28-7cf08db85972" isOneWay="false" action="urn:isExistingUser" name="isExistingUser" bindingOperationName="isExistingUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8ca903e9-12ae-47a0-be0e-870a2e3ded24" isOneWay="false" action="urn:isReadOnly" name="isReadOnly" bindingOperationName="isReadOnly" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="17d23c41-8c4b-4bc2-93d2-412b85ca3d5f" isOneWay="false" action="urn:listUsers" name="listUsers" bindingOperationName="listUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e016dbf4-e11a-408c-97e7-c409defefe10" isOneWay="false" action="urn:setUserClaimValue" name="setUserClaimValue" bindingOperationName="setUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0afff100-4d92-42d9-877f-03a2de1ec62b" isOneWay="false" action="urn:setUserClaimValues" name="setUserClaimValues" bindingOperationName="setUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0e3637de-df55-41be-8d03-14c4bef8f8fd" isOneWay="false" action="urn:updateCredential" name="updateCredential" bindingOperationName="updateCredential" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="640f8291-df77-4b88-8768-005bdc7a0324" isOneWay="false" action="urn:updateCredentialByAdmin" name="updateCredentialByAdmin" bindingOperationName="updateCredentialByAdmin" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3750943b-37b6-443b-974d-a6bf6e224cbb" isOneWay="false" action="urn:updateRoleListOfUser" name="updateRoleListOfUser" bindingOperationName="updateRoleListOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="616329fe-8d98-4bc4-b60b-28c32bdc2e99" isOneWay="false" action="urn:updateRoleName" name="updateRoleName" bindingOperationName="updateRoleName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d72765ab-7114-464f-acf2-564291467db3" isOneWay="false" action="urn:updateUserListOfRole" name="updateUserListOfRole" bindingOperationName="updateUserListOfRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d63edec4-72ad-4d88-b2a6-d93d08babbb2" wsaVersion="NONE" name="RemoteUserStoreManagerServiceSoap11Binding" type="wsdl" bindingName="{http://service.ws.um.carbon.wso2.org}RemoteUserStoreManagerServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteUserStoreManagerService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteUserStoreManagerService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RemoteUserStoreManagerService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2663="http://dao.service.ws.um.carbon.wso2.org/xsd" xmlns:ax2665="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ax2656="http://core.user.carbon.wso2.org/xsd" xmlns:ax2657="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2660="http://tenant.core.user.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RemoteUserStoreManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dao.service.ws.um.carbon.wso2.org/xsd">
      <xs:complexType name="PermissionDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dialectURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="displayTag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="regEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element minOccurs="0" name="supportedByDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Tenant">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="adminFirstName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminFullName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminLastName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdDate" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="email" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:int"/>
          <xs:element minOccurs="0" name="realmConfig" nillable="true" type="ax2657:RealmConfiguration"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RealmConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="addAdmin" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminRoleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorizationManagerClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="authzProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="everyOneRoleName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="multipleCredentialProps" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordsExternallyManaged" type="xs:boolean"/>
          <xs:element minOccurs="0" name="persistedTimestamp" nillable="true" type="xs:date"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realmClassName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="realmProperties" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="secondaryRealmConfig" nillable="true" type="ax2657:RealmConfiguration"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="userStoreClass" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userStoreProperties" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.mgt.user.carbon.wso2.org/xsd">
      <xs:complexType name="ClaimValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2664="http://dao.service.ws.um.carbon.wso2.org/xsd" xmlns:ax2666="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ax2659="http://core.user.carbon.wso2.org/xsd" xmlns:ax2662="http://tenant.core.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://tenant.core.user.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dao.service.ws.um.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://common.mgt.user.carbon.wso2.org/xsd"/>
      <xs:element name="RemoteUserStoreManagerServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2656:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenant" nillable="true" type="ax2660:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ns:ArrayOfString"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfString">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="array" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="isReadOnly">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantId">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="ax2663:PermissionDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxItemLimit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRoleName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newRoleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roleList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2665:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="requirePasswordChange" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateCredential">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newCredential" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldCredential" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserList">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profile" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRoleListOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRoleListOfUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingRoleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRoleNames">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRoleNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isExistingUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserListOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserListOfRoleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claim" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValueResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValuesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2663:ClaimDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProfileNames">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllProfileNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateCredentialByAdmin">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newCredential" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateUserListOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="deletedUsers" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newUsers" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRoleListOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="deletedRoles" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newRoles" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2665:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHybridRoles">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHybridRolesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPasswordExpirationTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPasswordExpirationTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserId">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="credential" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="authenticateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantIdofUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantIdofUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserClaimValue">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserClaimValues">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2665:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValuesForClaims">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserClaimValuesForClaimsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2665:ClaimValue"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://tenant.core.user.carbon.wso2.org/xsd" xmlns:ax2661="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="Tenant">
        <xs:complexContent>
          <xs:extension base="ax2657:Tenant">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2658="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserStoreException">
        <xs:complexContent>
          <xs:extension base="ax2657:UserStoreException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateCredentialRequest">
    <wsdl:part name="parameters" element="ns:updateCredential"/>
  </wsdl:message>
  <wsdl:message name="RemoteUserStoreManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteUserStoreManagerServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="getRoleNamesRequest">
    <wsdl:part name="parameters" element="ns:getRoleNames"/>
  </wsdl:message>
  <wsdl:message name="getRoleNamesResponse">
    <wsdl:part name="parameters" element="ns:getRoleNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:deleteUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="authenticateRequest">
    <wsdl:part name="parameters" element="ns:authenticate"/>
  </wsdl:message>
  <wsdl:message name="authenticateResponse">
    <wsdl:part name="parameters" element="ns:authenticateResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:addUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="isExistingUserRequest">
    <wsdl:part name="parameters" element="ns:isExistingUser"/>
  </wsdl:message>
  <wsdl:message name="isExistingUserResponse">
    <wsdl:part name="parameters" element="ns:isExistingUserResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserRequest">
    <wsdl:part name="parameters" element="ns:addUser"/>
  </wsdl:message>
  <wsdl:message name="updateRoleListOfUserRequest">
    <wsdl:part name="parameters" element="ns:updateRoleListOfUser"/>
  </wsdl:message>
  <wsdl:message name="getRoleListOfUserRequest">
    <wsdl:part name="parameters" element="ns:getRoleListOfUser"/>
  </wsdl:message>
  <wsdl:message name="getRoleListOfUserResponse">
    <wsdl:part name="parameters" element="ns:getRoleListOfUserResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllProfileNamesRequest">
    <wsdl:part name="parameters" element="ns:getAllProfileNames"/>
  </wsdl:message>
  <wsdl:message name="getAllProfileNamesResponse">
    <wsdl:part name="parameters" element="ns:getAllProfileNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserListRequest">
    <wsdl:part name="parameters" element="ns:getUserList"/>
  </wsdl:message>
  <wsdl:message name="getUserListResponse">
    <wsdl:part name="parameters" element="ns:getUserListResponse"/>
  </wsdl:message>
  <wsdl:message name="setUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:setUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="deleteUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:deleteUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyRequest">
    <wsdl:part name="parameters" element="ns:isReadOnly"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyResponse">
    <wsdl:part name="parameters" element="ns:isReadOnlyResponse"/>
  </wsdl:message>
  <wsdl:message name="getHybridRolesRequest">
    <wsdl:part name="parameters" element="ns:getHybridRoles"/>
  </wsdl:message>
  <wsdl:message name="getHybridRolesResponse">
    <wsdl:part name="parameters" element="ns:getHybridRolesResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesForClaimsRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValuesForClaims"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesForClaimsResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValuesForClaimsResponse"/>
  </wsdl:message>
  <wsdl:message name="getPasswordExpirationTimeRequest">
    <wsdl:part name="parameters" element="ns:getPasswordExpirationTime"/>
  </wsdl:message>
  <wsdl:message name="getPasswordExpirationTimeResponse">
    <wsdl:part name="parameters" element="ns:getPasswordExpirationTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="updateUserListOfRoleRequest">
    <wsdl:part name="parameters" element="ns:updateUserListOfRole"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesRequest">
    <wsdl:part name="parameters" element="ns:getProperties"/>
  </wsdl:message>
  <wsdl:message name="getPropertiesResponse">
    <wsdl:part name="parameters" element="ns:getPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserListOfRoleRequest">
    <wsdl:part name="parameters" element="ns:getUserListOfRole"/>
  </wsdl:message>
  <wsdl:message name="getUserListOfRoleResponse">
    <wsdl:part name="parameters" element="ns:getUserListOfRoleResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdRequest">
    <wsdl:part name="parameters" element="ns:getTenantId"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdResponse">
    <wsdl:part name="parameters" element="ns:getTenantIdResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteRoleRequest">
    <wsdl:part name="parameters" element="ns:deleteRole"/>
  </wsdl:message>
  <wsdl:message name="isExistingRoleRequest">
    <wsdl:part name="parameters" element="ns:isExistingRole"/>
  </wsdl:message>
  <wsdl:message name="isExistingRoleResponse">
    <wsdl:part name="parameters" element="ns:isExistingRoleResponse"/>
  </wsdl:message>
  <wsdl:message name="updateCredentialByAdminRequest">
    <wsdl:part name="parameters" element="ns:updateCredentialByAdmin"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValues"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValuesResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValuesResponse"/>
  </wsdl:message>
  <wsdl:message name="setUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:setUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="listUsersRequest">
    <wsdl:part name="parameters" element="ns:listUsers"/>
  </wsdl:message>
  <wsdl:message name="listUsersResponse">
    <wsdl:part name="parameters" element="ns:listUsersResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:getUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="getUserClaimValueResponse">
    <wsdl:part name="parameters" element="ns:getUserClaimValueResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdofUserRequest">
    <wsdl:part name="parameters" element="ns:getTenantIdofUser"/>
  </wsdl:message>
  <wsdl:message name="getTenantIdofUserResponse">
    <wsdl:part name="parameters" element="ns:getTenantIdofUserResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserRequest">
    <wsdl:part name="parameters" element="ns:deleteUser"/>
  </wsdl:message>
  <wsdl:message name="getProfileNamesRequest">
    <wsdl:part name="parameters" element="ns:getProfileNames"/>
  </wsdl:message>
  <wsdl:message name="getProfileNamesResponse">
    <wsdl:part name="parameters" element="ns:getProfileNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="updateRoleNameRequest">
    <wsdl:part name="parameters" element="ns:updateRoleName"/>
  </wsdl:message>
  <wsdl:message name="addUserClaimValueRequest">
    <wsdl:part name="parameters" element="ns:addUserClaimValue"/>
  </wsdl:message>
  <wsdl:message name="addRoleRequest">
    <wsdl:part name="parameters" element="ns:addRole"/>
  </wsdl:message>
  <wsdl:message name="getUserIdRequest">
    <wsdl:part name="parameters" element="ns:getUserId"/>
  </wsdl:message>
  <wsdl:message name="getUserIdResponse">
    <wsdl:part name="parameters" element="ns:getUserIdResponse"/>
  </wsdl:message>
  <wsdl:portType name="RemoteUserStoreManagerServicePortType">
    <wsdl:operation name="updateCredential">
      <wsdl:input message="ns:updateCredentialRequest" wsaw:Action="urn:updateCredential"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateCredentialRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getRoleNames">
      <wsdl:input message="ns:getRoleNamesRequest" wsaw:Action="urn:getRoleNames"/>
      <wsdl:output message="ns:getRoleNamesResponse" wsaw:Action="urn:getRoleNamesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getRoleNamesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <wsdl:input message="ns:deleteUserClaimValuesRequest" wsaw:Action="urn:deleteUserClaimValues"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:deleteUserClaimValuesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <wsdl:input message="ns:authenticateRequest" wsaw:Action="urn:authenticate"/>
      <wsdl:output message="ns:authenticateResponse" wsaw:Action="urn:authenticateResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:authenticateRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValues">
      <wsdl:input message="ns:addUserClaimValuesRequest" wsaw:Action="urn:addUserClaimValues"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:addUserClaimValuesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isExistingUser">
      <wsdl:input message="ns:isExistingUserRequest" wsaw:Action="urn:isExistingUser"/>
      <wsdl:output message="ns:isExistingUserResponse" wsaw:Action="urn:isExistingUserResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:isExistingUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdl:input message="ns:addUserRequest" wsaw:Action="urn:addUser"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:addUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateRoleListOfUser">
      <wsdl:input message="ns:updateRoleListOfUserRequest" wsaw:Action="urn:updateRoleListOfUser"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateRoleListOfUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getRoleListOfUser">
      <wsdl:input message="ns:getRoleListOfUserRequest" wsaw:Action="urn:getRoleListOfUser"/>
      <wsdl:output message="ns:getRoleListOfUserResponse" wsaw:Action="urn:getRoleListOfUserResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getRoleListOfUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllProfileNames">
      <wsdl:input message="ns:getAllProfileNamesRequest" wsaw:Action="urn:getAllProfileNames"/>
      <wsdl:output message="ns:getAllProfileNamesResponse" wsaw:Action="urn:getAllProfileNamesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getAllProfileNamesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserList">
      <wsdl:input message="ns:getUserListRequest" wsaw:Action="urn:getUserList"/>
      <wsdl:output message="ns:getUserListResponse" wsaw:Action="urn:getUserListResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserListRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <wsdl:input message="ns:setUserClaimValuesRequest" wsaw:Action="urn:setUserClaimValues"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:setUserClaimValuesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <wsdl:input message="ns:deleteUserClaimValueRequest" wsaw:Action="urn:deleteUserClaimValue"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:deleteUserClaimValueRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <wsdl:input message="ns:isReadOnlyRequest" wsaw:Action="urn:isReadOnly"/>
      <wsdl:output message="ns:isReadOnlyResponse" wsaw:Action="urn:isReadOnlyResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:isReadOnlyRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getHybridRoles">
      <wsdl:input message="ns:getHybridRolesRequest" wsaw:Action="urn:getHybridRoles"/>
      <wsdl:output message="ns:getHybridRolesResponse" wsaw:Action="urn:getHybridRolesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getHybridRolesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValuesForClaims">
      <wsdl:input message="ns:getUserClaimValuesForClaimsRequest" wsaw:Action="urn:getUserClaimValuesForClaims"/>
      <wsdl:output message="ns:getUserClaimValuesForClaimsResponse" wsaw:Action="urn:getUserClaimValuesForClaimsResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserClaimValuesForClaimsRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getPasswordExpirationTime">
      <wsdl:input message="ns:getPasswordExpirationTimeRequest" wsaw:Action="urn:getPasswordExpirationTime"/>
      <wsdl:output message="ns:getPasswordExpirationTimeResponse" wsaw:Action="urn:getPasswordExpirationTimeResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getPasswordExpirationTimeRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateUserListOfRole">
      <wsdl:input message="ns:updateUserListOfRoleRequest" wsaw:Action="urn:updateUserListOfRole"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateUserListOfRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <wsdl:input message="ns:getPropertiesRequest" wsaw:Action="urn:getProperties"/>
      <wsdl:output message="ns:getPropertiesResponse" wsaw:Action="urn:getPropertiesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getPropertiesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserListOfRole">
      <wsdl:input message="ns:getUserListOfRoleRequest" wsaw:Action="urn:getUserListOfRole"/>
      <wsdl:output message="ns:getUserListOfRoleResponse" wsaw:Action="urn:getUserListOfRoleResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserListOfRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <wsdl:input message="ns:getTenantIdRequest" wsaw:Action="urn:getTenantId"/>
      <wsdl:output message="ns:getTenantIdResponse" wsaw:Action="urn:getTenantIdResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getTenantIdRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <wsdl:input message="ns:deleteRoleRequest" wsaw:Action="urn:deleteRole"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:deleteRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="isExistingRole">
      <wsdl:input message="ns:isExistingRoleRequest" wsaw:Action="urn:isExistingRole"/>
      <wsdl:output message="ns:isExistingRoleResponse" wsaw:Action="urn:isExistingRoleResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:isExistingRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateCredentialByAdmin">
      <wsdl:input message="ns:updateCredentialByAdminRequest" wsaw:Action="urn:updateCredentialByAdmin"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateCredentialByAdminRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <wsdl:input message="ns:getUserClaimValuesRequest" wsaw:Action="urn:getUserClaimValues"/>
      <wsdl:output message="ns:getUserClaimValuesResponse" wsaw:Action="urn:getUserClaimValuesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserClaimValuesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <wsdl:input message="ns:setUserClaimValueRequest" wsaw:Action="urn:setUserClaimValue"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:setUserClaimValueRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <wsdl:input message="ns:listUsersRequest" wsaw:Action="urn:listUsers"/>
      <wsdl:output message="ns:listUsersResponse" wsaw:Action="urn:listUsersResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:listUsersRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <wsdl:input message="ns:getUserClaimValueRequest" wsaw:Action="urn:getUserClaimValue"/>
      <wsdl:output message="ns:getUserClaimValueResponse" wsaw:Action="urn:getUserClaimValueResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserClaimValueRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenantIdofUser">
      <wsdl:input message="ns:getTenantIdofUserRequest" wsaw:Action="urn:getTenantIdofUser"/>
      <wsdl:output message="ns:getTenantIdofUserResponse" wsaw:Action="urn:getTenantIdofUserResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getTenantIdofUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="ns:deleteUserRequest" wsaw:Action="urn:deleteUser"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:deleteUserRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getProfileNames">
      <wsdl:input message="ns:getProfileNamesRequest" wsaw:Action="urn:getProfileNames"/>
      <wsdl:output message="ns:getProfileNamesResponse" wsaw:Action="urn:getProfileNamesResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getProfileNamesRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <wsdl:input message="ns:updateRoleNameRequest" wsaw:Action="urn:updateRoleName"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:updateRoleNameRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValue">
      <wsdl:input message="ns:addUserClaimValueRequest" wsaw:Action="urn:addUserClaimValue"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:addUserClaimValueRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <wsdl:input message="ns:addRoleRequest" wsaw:Action="urn:addRole"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:addRoleRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <wsdl:input message="ns:getUserIdRequest" wsaw:Action="urn:getUserId"/>
      <wsdl:output message="ns:getUserIdResponse" wsaw:Action="urn:getUserIdResponse"/>
      <wsdl:fault message="ns:RemoteUserStoreManagerServiceUserStoreException" name="RemoteUserStoreManagerServiceUserStoreException" wsaw:Action="urn:getUserIdRemoteUserStoreManagerServiceUserStoreException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteUserStoreManagerServiceSoap11Binding" type="ns:RemoteUserStoreManagerServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCredential">
      <soap:operation soapAction="urn:updateCredential" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoleNames">
      <soap:operation soapAction="urn:getRoleNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <soap:operation soapAction="urn:deleteUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <soap:operation soapAction="urn:authenticate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValues">
      <soap:operation soapAction="urn:addUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isExistingUser">
      <soap:operation soapAction="urn:isExistingUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleListOfUser">
      <soap:operation soapAction="urn:updateRoleListOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoleListOfUser">
      <soap:operation soapAction="urn:getRoleListOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProfileNames">
      <soap:operation soapAction="urn:getAllProfileNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserList">
      <soap:operation soapAction="urn:getUserList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <soap:operation soapAction="urn:setUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <soap:operation soapAction="urn:deleteUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHybridRoles">
      <soap:operation soapAction="urn:getHybridRoles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <soap:operation soapAction="urn:isReadOnly" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValuesForClaims">
      <soap:operation soapAction="urn:getUserClaimValuesForClaims" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPasswordExpirationTime">
      <soap:operation soapAction="urn:getPasswordExpirationTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserListOfRole">
      <soap:operation soapAction="urn:updateUserListOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap:operation soapAction="urn:getProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserListOfRole">
      <soap:operation soapAction="urn:getUserListOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <soap:operation soapAction="urn:getTenantId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <soap:operation soapAction="urn:deleteRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isExistingRole">
      <soap:operation soapAction="urn:isExistingRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCredentialByAdmin">
      <soap:operation soapAction="urn:updateCredentialByAdmin" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <soap:operation soapAction="urn:getUserClaimValues" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <soap:operation soapAction="urn:setUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap:operation soapAction="urn:listUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <soap:operation soapAction="urn:getUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantIdofUser">
      <soap:operation soapAction="urn:getTenantIdofUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProfileNames">
      <soap:operation soapAction="urn:getProfileNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <soap:operation soapAction="urn:updateRoleName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValue">
      <soap:operation soapAction="urn:addUserClaimValue" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap:operation soapAction="urn:addRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <soap:operation soapAction="urn:getUserId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteUserStoreManagerServiceSoap12Binding" type="ns:RemoteUserStoreManagerServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateCredential">
      <soap12:operation soapAction="urn:updateCredential" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoleNames">
      <soap12:operation soapAction="urn:getRoleNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <soap12:operation soapAction="urn:deleteUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <soap12:operation soapAction="urn:authenticate" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValues">
      <soap12:operation soapAction="urn:addUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isExistingUser">
      <soap12:operation soapAction="urn:isExistingUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap12:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleListOfUser">
      <soap12:operation soapAction="urn:updateRoleListOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoleListOfUser">
      <soap12:operation soapAction="urn:getRoleListOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProfileNames">
      <soap12:operation soapAction="urn:getAllProfileNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserList">
      <soap12:operation soapAction="urn:getUserList" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <soap12:operation soapAction="urn:setUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <soap12:operation soapAction="urn:deleteUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getHybridRoles">
      <soap12:operation soapAction="urn:getHybridRoles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <soap12:operation soapAction="urn:isReadOnly" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValuesForClaims">
      <soap12:operation soapAction="urn:getUserClaimValuesForClaims" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPasswordExpirationTime">
      <soap12:operation soapAction="urn:getPasswordExpirationTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserListOfRole">
      <soap12:operation soapAction="urn:updateUserListOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap12:operation soapAction="urn:getProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserListOfRole">
      <soap12:operation soapAction="urn:getUserListOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <soap12:operation soapAction="urn:getTenantId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <soap12:operation soapAction="urn:deleteRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isExistingRole">
      <soap12:operation soapAction="urn:isExistingRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCredentialByAdmin">
      <soap12:operation soapAction="urn:updateCredentialByAdmin" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <soap12:operation soapAction="urn:getUserClaimValues" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <soap12:operation soapAction="urn:setUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap12:operation soapAction="urn:listUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <soap12:operation soapAction="urn:getUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantIdofUser">
      <soap12:operation soapAction="urn:getTenantIdofUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap12:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProfileNames">
      <soap12:operation soapAction="urn:getProfileNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <soap12:operation soapAction="urn:updateRoleName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValue">
      <soap12:operation soapAction="urn:addUserClaimValue" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap12:operation soapAction="urn:addRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <soap12:operation soapAction="urn:getUserId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteUserStoreManagerServiceUserStoreException">
        <soap12:fault use="literal" name="RemoteUserStoreManagerServiceUserStoreException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteUserStoreManagerServiceHttpBinding" type="ns:RemoteUserStoreManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateCredential">
      <http:operation location="updateCredential"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getRoleNames">
      <http:operation location="getRoleNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValues">
      <http:operation location="deleteUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="authenticate">
      <http:operation location="authenticate"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValues">
      <http:operation location="addUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isExistingUser">
      <http:operation location="isExistingUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <http:operation location="addUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateRoleListOfUser">
      <http:operation location="updateRoleListOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getRoleListOfUser">
      <http:operation location="getRoleListOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllProfileNames">
      <http:operation location="getAllProfileNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserList">
      <http:operation location="getUserList"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValues">
      <http:operation location="setUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteUserClaimValue">
      <http:operation location="deleteUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getHybridRoles">
      <http:operation location="getHybridRoles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <http:operation location="isReadOnly"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValuesForClaims">
      <http:operation location="getUserClaimValuesForClaims"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPasswordExpirationTime">
      <http:operation location="getPasswordExpirationTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateUserListOfRole">
      <http:operation location="updateUserListOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <http:operation location="getProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserListOfRole">
      <http:operation location="getUserListOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenantId">
      <http:operation location="getTenantId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <http:operation location="deleteRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isExistingRole">
      <http:operation location="isExistingRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateCredentialByAdmin">
      <http:operation location="updateCredentialByAdmin"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValues">
      <http:operation location="getUserClaimValues"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserClaimValue">
      <http:operation location="setUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <http:operation location="listUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserClaimValue">
      <http:operation location="getUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenantIdofUser">
      <http:operation location="getTenantIdofUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <http:operation location="deleteUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getProfileNames">
      <http:operation location="getProfileNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <http:operation location="updateRoleName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addUserClaimValue">
      <http:operation location="addUserClaimValue"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <http:operation location="addRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getUserId">
      <http:operation location="getUserId"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteUserStoreManagerService">
    <wsdl:port name="RemoteUserStoreManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteUserStoreManagerServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteUserStoreManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteUserStoreManagerServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteUserStoreManagerServiceHttpsEndpoint" binding="ns:RemoteUserStoreManagerServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="ddbb2e6b-38d5-4cf1-baae-eb8e8201e2c8" isOneWay="false" action="urn:addRole" name="addRole" bindingOperationName="addRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b8815cb2-bba7-4a75-96de-e13fa0ee81d8" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="de4af160-082e-458a-ac89-1f5c6b91fbc4" isOneWay="false" action="urn:addUserClaimValue" name="addUserClaimValue" bindingOperationName="addUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cdeda4b5-885b-45b7-b8d3-151718660bf6" isOneWay="false" action="urn:addUserClaimValues" name="addUserClaimValues" bindingOperationName="addUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f27fc304-7d55-4605-975b-ce355bf446dc" isOneWay="false" action="urn:authenticate" name="authenticate" bindingOperationName="authenticate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="adad033d-1972-4eca-a5ba-44361fd78633" isOneWay="false" action="urn:deleteRole" name="deleteRole" bindingOperationName="deleteRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0e298489-3f18-4a5e-bc92-e6f495fa69ec" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="087d1692-4a7d-455e-b06b-349b66c265a1" isOneWay="false" action="urn:deleteUserClaimValue" name="deleteUserClaimValue" bindingOperationName="deleteUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="693ccbe2-fdae-4fef-8182-7040c14879bf" isOneWay="false" action="urn:deleteUserClaimValues" name="deleteUserClaimValues" bindingOperationName="deleteUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab99d548-16bf-4cf7-9a7a-d0a6b90b2ef1" isOneWay="false" action="urn:getAllProfileNames" name="getAllProfileNames" bindingOperationName="getAllProfileNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f38a3bf-7f75-4b0a-9bbf-f7aa0b203c98" isOneWay="false" action="urn:getHybridRoles" name="getHybridRoles" bindingOperationName="getHybridRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="de7c3f00-8a7a-4fef-9b38-86ca46fc8dba" isOneWay="false" action="urn:getPasswordExpirationTime" name="getPasswordExpirationTime" bindingOperationName="getPasswordExpirationTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b1a23a8f-8d21-4ece-9e15-c82abe80e11a" isOneWay="false" action="urn:getProfileNames" name="getProfileNames" bindingOperationName="getProfileNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed789f23-b045-4082-ab14-3d4b27710cc5" isOneWay="false" action="urn:getProperties" name="getProperties" bindingOperationName="getProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f17fe99-91d4-452e-85fd-716a17d60b85" isOneWay="false" action="urn:getRoleListOfUser" name="getRoleListOfUser" bindingOperationName="getRoleListOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8915d301-69eb-4fe8-9320-9f86b3a30b45" isOneWay="false" action="urn:getRoleNames" name="getRoleNames" bindingOperationName="getRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e17d1acf-e92b-4c44-8ae3-8243beb70e4a" isOneWay="false" action="urn:getTenantId" name="getTenantId" bindingOperationName="getTenantId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9ab983a3-eebb-4a0d-b17e-61dd511fcd33" isOneWay="false" action="urn:getTenantIdofUser" name="getTenantIdofUser" bindingOperationName="getTenantIdofUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="95aa4cad-6c4e-4b6f-ab30-7ef6418bfbdc" isOneWay="false" action="urn:getUserClaimValue" name="getUserClaimValue" bindingOperationName="getUserClaimValue" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="990251a2-868e-4e62-aa31-c0fcdfbcc82d" isOneWay="false" action="urn:getUserClaimValues" name="getUserClaimValues" bindingOperationName="getUserClaimValues" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="615c72f7-4f77-456e-9c59-56bdfd564e1f" isOneWay="false" action="urn:getUserClaimValuesForClaims" name="getUserClaimValuesForClaims" bindingOperationName="getUserClaimValuesForClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="26d8afa6-abfa-44ef-867f-ba026c55180b" isOneWay="false" action="urn:getUserId" name="getUserId" bindingOperationName="getUserId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="032fdc99-de5f-474e-add2-c2714ad5940b" isOneWay="false" action="urn:getUserList" name="getUserList" bindingOperationName="getUserList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d344408-aefb-489a-8fd8-80cca8ca811d" isOneWay="false" action="urn:getUserListOfRole" name="getUserListOfRole" bindingOperationName="getUserListOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="03ecb805-22d6-4428-a0f7-5683344607ab" isOneWay="false" action="urn:isExistingRole" name="isExistingRole" bindingOperationName="isExistingRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6423bae-8285-4a6e-825c-27bf2bf9defc" isOneWay="false" action="urn:isExistingUser" name="isExistingUser" bindingOperationName="isExistingUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a057714c-3932-4727-8185-8d87a4812340" isOneWay="false" action="urn:isReadOnly" name="isReadOnly" bindingOperationName="isReadOnly" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="29173bd7-b4b1-46ee-9285-58f1de6d0281" isOneWay="false" action="urn:listUsers" name="listUsers" bindingOperationName="listUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="befb4db6-ad39-4b66-aeb6-f27d336b99d6" isOneWay="false" action="urn:setUserClaimValue" name="setUserClaimValue" bindingOperationName="setUserClaimValue" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a590e8af-abbe-4bc2-8e44-1dea6d1d28b5" isOneWay="false" action="urn:setUserClaimValues" name="setUserClaimValues" bindingOperationName="setUserClaimValues" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08d18ebc-f0a4-4889-a90e-6e03b70ce210" isOneWay="false" action="urn:updateCredential" name="updateCredential" bindingOperationName="updateCredential" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c086bc44-3896-446e-bf4c-31dfc7692ffc" isOneWay="false" action="urn:updateCredentialByAdmin" name="updateCredentialByAdmin" bindingOperationName="updateCredentialByAdmin" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1d691d17-2724-4b8d-b320-9556a95b94ec" isOneWay="false" action="urn:updateRoleListOfUser" name="updateRoleListOfUser" bindingOperationName="updateRoleListOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7929def6-c99b-4ed4-a2c0-d60e13505ee3" isOneWay="false" action="urn:updateRoleName" name="updateRoleName" bindingOperationName="updateRoleName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="56ad4769-a63b-4fff-b4a3-aed122736b71" isOneWay="false" action="urn:updateUserListOfRole" name="updateUserListOfRole" bindingOperationName="updateUserListOfRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a99cdf9c-edeb-4746-aa6f-645d767ab8bf" wsaVersion="NONE" name="RepositoryAdminServiceSoap12Binding" type="wsdl" bindingName="{http://prov.services.mgt.feature.carbon.wso2.org}RepositoryAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RepositoryAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="c10a34a7-c316-472b-b5ae-86dc38c750df" isOneWay="false" action="urn:addDefaultRepository" name="addDefaultRepository" bindingOperationName="addDefaultRepository" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="585ae753-fbc4-46b3-90b0-a4b7e4035a5b" isOneWay="false" action="urn:addRepository" name="addRepository" bindingOperationName="addRepository" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0bb89c13-a6a5-46fc-8c97-a2957d5aa0fa" isOneWay="false" action="urn:enableRepository" name="enableRepository" bindingOperationName="enableRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ef701099-3f7e-447f-aae4-796bbaf27399" isOneWay="false" action="urn:getAllRepositories" name="getAllRepositories" bindingOperationName="getAllRepositories" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48fdd15b-60ff-4aea-a739-8f673716847e" isOneWay="false" action="urn:getEnabledRepositories" name="getEnabledRepositories" bindingOperationName="getEnabledRepositories" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="67456a1d-9ba2-42d4-bf04-12657094b5d7" isOneWay="false" action="urn:getInstallableFeatureInfo" name="getInstallableFeatureInfo" bindingOperationName="getInstallableFeatureInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1377017a-3518-436b-813a-a96e73ef26f6" isOneWay="false" action="urn:getInstallableFeatures" name="getInstallableFeatures" bindingOperationName="getInstallableFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="25b4318f-7655-446c-8826-7eda8a117052" isOneWay="false" action="urn:removeRepository" name="removeRepository" bindingOperationName="removeRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dda868c6-d296-4645-96b6-c8be8520ad6c" isOneWay="false" action="urn:updateRepository" name="updateRepository" bindingOperationName="updateRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="caf625a3-102a-46c4-8c05-0fe339cafde5" wsaVersion="NONE" name="RepositoryAdminServiceSoap11Binding" type="wsdl" bindingName="{http://prov.services.mgt.feature.carbon.wso2.org}RepositoryAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RepositoryAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RepositoryAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/RepositoryAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://prov.services.mgt.feature.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://prov.services.mgt.feature.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2120="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>RepositoryAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2121="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd"/>
      <xs:element name="addRepository">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="nickName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRepositoryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeRepository">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRepository">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="prevLocation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="prevNickName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="updatedLocation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="updatedNickName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="enableRepository">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEnabledRepositories">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEnabledRepositoriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2120:RepositoryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRepositories">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRepositoriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2120:RepositoryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstallableFeatures">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="groupByCategory" type="xs:boolean"/>
            <xs:element minOccurs="0" name="hideInstalledFeatures" type="xs:boolean"/>
            <xs:element minOccurs="0" name="showOnlyTheLatestFeatures" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstallableFeaturesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2120:Feature"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstallableFeatureInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstallableFeatureInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2120:FeatureInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addDefaultRepository">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="addDefaultRepositoryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.prov.services.mgt.feature.carbon.wso2.org/xsd">
      <xs:complexType name="RepositoryInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="location" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nickName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Feature">
        <xs:sequence>
          <xs:element minOccurs="0" name="featureDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="installed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredFeatures" nillable="true" type="ax2120:Feature"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FeatureInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="copyrightInfo" nillable="true" type="ax2120:CopyrightInfo"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureID" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="featureVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="licenseInfo" nillable="true" type="ax2120:LicenseInfo"/>
          <xs:element minOccurs="0" name="provider" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CopyrightInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="URL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LicenseInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="URL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="body" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:updateRepository"/>
  </wsdl:message>
  <wsdl:message name="getEnabledRepositoriesRequest">
    <wsdl:part name="parameters" element="ns1:getEnabledRepositories"/>
  </wsdl:message>
  <wsdl:message name="getEnabledRepositoriesResponse">
    <wsdl:part name="parameters" element="ns1:getEnabledRepositoriesResponse"/>
  </wsdl:message>
  <wsdl:message name="addDefaultRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:addDefaultRepository"/>
  </wsdl:message>
  <wsdl:message name="addDefaultRepositoryResponse">
    <wsdl:part name="parameters" element="ns1:addDefaultRepositoryResponse"/>
  </wsdl:message>
  <wsdl:message name="getInstallableFeatureInfoRequest">
    <wsdl:part name="parameters" element="ns1:getInstallableFeatureInfo"/>
  </wsdl:message>
  <wsdl:message name="getInstallableFeatureInfoResponse">
    <wsdl:part name="parameters" element="ns1:getInstallableFeatureInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="addRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:addRepository"/>
  </wsdl:message>
  <wsdl:message name="addRepositoryResponse">
    <wsdl:part name="parameters" element="ns1:addRepositoryResponse"/>
  </wsdl:message>
  <wsdl:message name="enableRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:enableRepository"/>
  </wsdl:message>
  <wsdl:message name="getAllRepositoriesRequest">
    <wsdl:part name="parameters" element="ns1:getAllRepositories"/>
  </wsdl:message>
  <wsdl:message name="getAllRepositoriesResponse">
    <wsdl:part name="parameters" element="ns1:getAllRepositoriesResponse"/>
  </wsdl:message>
  <wsdl:message name="removeRepositoryRequest">
    <wsdl:part name="parameters" element="ns1:removeRepository"/>
  </wsdl:message>
  <wsdl:message name="getInstallableFeaturesRequest">
    <wsdl:part name="parameters" element="ns1:getInstallableFeatures"/>
  </wsdl:message>
  <wsdl:message name="getInstallableFeaturesResponse">
    <wsdl:part name="parameters" element="ns1:getInstallableFeaturesResponse"/>
  </wsdl:message>
  <wsdl:portType name="RepositoryAdminServicePortType">
    <wsdl:operation name="updateRepository">
      <wsdl:input message="tns:updateRepositoryRequest" wsaw:Action="urn:updateRepository"/>
    </wsdl:operation>
    <wsdl:operation name="getEnabledRepositories">
      <wsdl:input message="tns:getEnabledRepositoriesRequest" wsaw:Action="urn:getEnabledRepositories"/>
      <wsdl:output message="tns:getEnabledRepositoriesResponse" wsaw:Action="urn:getEnabledRepositoriesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="addDefaultRepository">
      <wsdl:input message="tns:addDefaultRepositoryRequest" wsaw:Action="urn:addDefaultRepository"/>
      <wsdl:output message="tns:addDefaultRepositoryResponse" wsaw:Action="urn:addDefaultRepositoryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatureInfo">
      <wsdl:input message="tns:getInstallableFeatureInfoRequest" wsaw:Action="urn:getInstallableFeatureInfo"/>
      <wsdl:output message="tns:getInstallableFeatureInfoResponse" wsaw:Action="urn:getInstallableFeatureInfoResponse"/>
    </wsdl:operation>
    <wsdl:operation name="addRepository">
      <wsdl:input message="tns:addRepositoryRequest" wsaw:Action="urn:addRepository"/>
      <wsdl:output message="tns:addRepositoryResponse" wsaw:Action="urn:addRepositoryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="enableRepository">
      <wsdl:input message="tns:enableRepositoryRequest" wsaw:Action="urn:enableRepository"/>
    </wsdl:operation>
    <wsdl:operation name="getAllRepositories">
      <wsdl:input message="tns:getAllRepositoriesRequest" wsaw:Action="urn:getAllRepositories"/>
      <wsdl:output message="tns:getAllRepositoriesResponse" wsaw:Action="urn:getAllRepositoriesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeRepository">
      <wsdl:input message="tns:removeRepositoryRequest" wsaw:Action="urn:removeRepository"/>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatures">
      <wsdl:input message="tns:getInstallableFeaturesRequest" wsaw:Action="urn:getInstallableFeatures"/>
      <wsdl:output message="tns:getInstallableFeaturesResponse" wsaw:Action="urn:getInstallableFeaturesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RepositoryAdminServiceSoap11Binding" type="tns:RepositoryAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateRepository">
      <soap:operation soapAction="urn:updateRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getEnabledRepositories">
      <soap:operation soapAction="urn:getEnabledRepositories" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addDefaultRepository">
      <soap:operation soapAction="urn:addDefaultRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatureInfo">
      <soap:operation soapAction="urn:getInstallableFeatureInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRepository">
      <soap:operation soapAction="urn:addRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enableRepository">
      <soap:operation soapAction="urn:enableRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllRepositories">
      <soap:operation soapAction="urn:getAllRepositories" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRepository">
      <soap:operation soapAction="urn:removeRepository" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatures">
      <soap:operation soapAction="urn:getInstallableFeatures" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RepositoryAdminServiceSoap12Binding" type="tns:RepositoryAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updateRepository">
      <soap12:operation soapAction="urn:updateRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getEnabledRepositories">
      <soap12:operation soapAction="urn:getEnabledRepositories" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addDefaultRepository">
      <soap12:operation soapAction="urn:addDefaultRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatureInfo">
      <soap12:operation soapAction="urn:getInstallableFeatureInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRepository">
      <soap12:operation soapAction="urn:addRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enableRepository">
      <soap12:operation soapAction="urn:enableRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllRepositories">
      <soap12:operation soapAction="urn:getAllRepositories" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRepository">
      <soap12:operation soapAction="urn:removeRepository" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatures">
      <soap12:operation soapAction="urn:getInstallableFeatures" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RepositoryAdminServiceHttpBinding" type="tns:RepositoryAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updateRepository">
      <http:operation location="updateRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getEnabledRepositories">
      <http:operation location="getEnabledRepositories"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addDefaultRepository">
      <http:operation location="addDefaultRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatureInfo">
      <http:operation location="getInstallableFeatureInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRepository">
      <http:operation location="addRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enableRepository">
      <http:operation location="enableRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllRepositories">
      <http:operation location="getAllRepositories"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRepository">
      <http:operation location="removeRepository"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getInstallableFeatures">
      <http:operation location="getInstallableFeatures"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RepositoryAdminService">
    <wsdl:port name="RepositoryAdminServiceHttpsSoap11Endpoint" binding="tns:RepositoryAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RepositoryAdminServiceHttpsSoap12Endpoint" binding="tns:RepositoryAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RepositoryAdminServiceHttpsEndpoint" binding="tns:RepositoryAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/RepositoryAdminService.RepositoryAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="bb7ab146-be5a-44cc-8f89-81783d33bd0c" isOneWay="false" action="urn:addDefaultRepository" name="addDefaultRepository" bindingOperationName="addDefaultRepository" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3a1ac4fa-ee44-4477-b652-c4c1cf13b6df" isOneWay="false" action="urn:addRepository" name="addRepository" bindingOperationName="addRepository" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dd952b61-cb44-4c7a-b75a-5e10ea82357f" isOneWay="false" action="urn:enableRepository" name="enableRepository" bindingOperationName="enableRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c8c918ea-6a41-45e4-9c75-c675f421255d" isOneWay="false" action="urn:getAllRepositories" name="getAllRepositories" bindingOperationName="getAllRepositories" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1defcb82-8a36-4809-992c-7318a45d94a0" isOneWay="false" action="urn:getEnabledRepositories" name="getEnabledRepositories" bindingOperationName="getEnabledRepositories" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="40f5055d-fe7a-422e-bf37-3507a6a5797e" isOneWay="false" action="urn:getInstallableFeatureInfo" name="getInstallableFeatureInfo" bindingOperationName="getInstallableFeatureInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f154df09-2098-4b04-97c9-5ec5285a4ff1" isOneWay="false" action="urn:getInstallableFeatures" name="getInstallableFeatures" bindingOperationName="getInstallableFeatures" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cba867ab-9df7-4a5e-85b1-f0c93b56ba57" isOneWay="false" action="urn:removeRepository" name="removeRepository" bindingOperationName="removeRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f837eb96-10c3-4c54-93aa-e19678544dc9" isOneWay="false" action="urn:updateRepository" name="updateRepository" bindingOperationName="updateRepository" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1aee48a3-812a-4281-9f08-8e5fb4592c4c" wsaVersion="NONE" name="ResourceAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.resource.registry.carbon.wso2.org}ResourceAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ResourceAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="4ebbd74c-916a-4d2a-be62-3d982cb92938" isOneWay="false" action="urn:addCollection" name="addCollection" bindingOperationName="addCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dcf4807c-4748-4b7c-adcc-25172bbf5dfb" isOneWay="false" action="urn:addExtension" name="addExtension" bindingOperationName="addExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="defe8a79-120e-47c9-946b-6af64fd92e0c" isOneWay="false" action="urn:addRemoteLink" name="addRemoteLink" bindingOperationName="addRemoteLink" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2f1a4abc-6309-463c-8819-e7ea7e00373d" isOneWay="false" action="urn:addResource" name="addResource" bindingOperationName="addResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7e51711b-d6b4-4ae8-94de-a6759ef883d3" isOneWay="false" action="urn:addRolePermission" name="addRolePermission" bindingOperationName="addRolePermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bbd34cda-f0e0-4751-ac2c-d54d84999b59" isOneWay="false" action="urn:addSymbolicLink" name="addSymbolicLink" bindingOperationName="addSymbolicLink" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f55e2d87-0a3b-4a16-9dab-bcd8608d1024" isOneWay="false" action="urn:addTextContent" name="addTextContent" bindingOperationName="addTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d5bdb05e-ae01-455c-8e64-21908d3aecb1" isOneWay="false" action="urn:addTextResource" name="addTextResource" bindingOperationName="addTextResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6dd77a0-dd53-4bde-a921-c70465277ffd" isOneWay="false" action="urn:addUserPermission" name="addUserPermission" bindingOperationName="addUserPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="24338ca6-6dc4-4652-bf05-640071cc5acc" isOneWay="false" action="urn:changeRolePermissions" name="changeRolePermissions" bindingOperationName="changeRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e63731be-c1c6-4d51-956c-1e372a9f60af" isOneWay="false" action="urn:changeUserPermissions" name="changeUserPermissions" bindingOperationName="changeUserPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="44635ddf-b950-44e5-9093-39c189ca71a4" isOneWay="false" action="urn:copyResource" name="copyResource" bindingOperationName="copyResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cdd1e4be-22f9-4336-b1ad-a9f9f0757333" isOneWay="false" action="urn:createVersion" name="createVersion" bindingOperationName="createVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f3c2708a-421c-411b-8fe1-e4f32250c865" isOneWay="false" action="urn:delete" name="delete" bindingOperationName="delete" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cbe6d05f-094a-4257-8f18-7cfa8096992f" isOneWay="false" action="urn:deleteVersionHistory" name="deleteVersionHistory" bindingOperationName="deleteVersionHistory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="31982f7e-8f1a-45c1-b897-56f23eb01d48" isOneWay="false" action="urn:getCollectionContent" name="getCollectionContent" bindingOperationName="getCollectionContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="41fd1415-131e-4c36-b4cf-ee9752938465" isOneWay="false" action="urn:getCollectionMediatypeDefinitions" name="getCollectionMediatypeDefinitions" bindingOperationName="getCollectionMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d531ab0-fa42-4ada-9afd-6154d512e1ca" isOneWay="false" action="urn:getContentBean" name="getContentBean" bindingOperationName="getContentBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1fb717b9-6864-42ab-b843-f9bbfd4d33f1" isOneWay="false" action="urn:getContentDownloadBean" name="getContentDownloadBean" bindingOperationName="getContentDownloadBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2f4171cb-b6dc-4388-a2e7-102852bd8110" isOneWay="false" action="urn:getCustomUIMediatypeDefinitions" name="getCustomUIMediatypeDefinitions" bindingOperationName="getCustomUIMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4af67c31-57c1-4e7b-b35e-5fd920aceb28" isOneWay="false" action="urn:getHumanReadableMediaTypes" name="getHumanReadableMediaTypes" bindingOperationName="getHumanReadableMediaTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cbac76ee-1126-47c5-b31a-e9010b62079a" isOneWay="false" action="urn:getMediatypeDefinitions" name="getMediatypeDefinitions" bindingOperationName="getMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7a2dac23-0aec-4f69-a4f4-868c25adfc4c" isOneWay="false" action="urn:getMetadata" name="getMetadata" bindingOperationName="getMetadata" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4ab67753-c4bb-422c-990d-be5cb162a522" isOneWay="false" action="urn:getMimeTypeFromHuman" name="getMimeTypeFromHuman" bindingOperationName="getMimeTypeFromHuman" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="485faf64-0753-4bd5-8084-d2bb0ef80629" isOneWay="false" action="urn:getPermissions" name="getPermissions" bindingOperationName="getPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7809b98a-ece3-451a-97e4-4b311c9ca4f7" isOneWay="false" action="urn:getProperty" name="getProperty" bindingOperationName="getProperty" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a4ca04f5-f501-4553-b46c-d10296888c43" isOneWay="false" action="urn:getResourceData" name="getResourceData" bindingOperationName="getResourceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="134b4b97-a585-49b9-876f-fdf8739c8016" isOneWay="false" action="urn:getResourceTreeEntry" name="getResourceTreeEntry" bindingOperationName="getResourceTreeEntry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="921eb773-00d3-40e3-bfc2-a769251be6e1" isOneWay="false" action="urn:getSessionResourcePath" name="getSessionResourcePath" bindingOperationName="getSessionResourcePath" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ec01d440-4954-48e7-b98d-76b2ec4e804d" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7a1c6425-0c4e-4041-aaee-1c5413736b5d" isOneWay="false" action="urn:getVersionsBean" name="getVersionsBean" bindingOperationName="getVersionsBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="280473cd-c699-4283-b493-592d2c28f60e" isOneWay="false" action="urn:getZipWithDependencies" name="getZipWithDependencies" bindingOperationName="getZipWithDependencies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8f6ca270-496d-40fb-bf19-bf04143b882d" isOneWay="false" action="urn:hasAssociations" name="hasAssociations" bindingOperationName="hasAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ffff0b4c-26ea-4f15-a12c-4dc3c10bc248" isOneWay="false" action="urn:importResource" name="importResource" bindingOperationName="importResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="11ac2edb-f06e-418c-a2c5-af0f548bec3f" isOneWay="false" action="urn:listExtensions" name="listExtensions" bindingOperationName="listExtensions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8f9aebc7-7529-486c-bbdc-5ba4f00a0199" isOneWay="false" action="urn:moveResource" name="moveResource" bindingOperationName="moveResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e824e979-11fd-49c1-8280-5b3f2b8a21b7" isOneWay="false" action="urn:removeExtension" name="removeExtension" bindingOperationName="removeExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="291cb5b0-dee2-4605-83be-3dfe346d5879" isOneWay="false" action="urn:renameResource" name="renameResource" bindingOperationName="renameResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="18804175-be69-48a3-a477-b099c08ea93f" isOneWay="false" action="urn:restoreVersion" name="restoreVersion" bindingOperationName="restoreVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="59c2cd5e-13c0-4af3-acff-dd1441d10ec2" isOneWay="false" action="urn:setDescription" name="setDescription" bindingOperationName="setDescription" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="64bdc20e-df6a-4a31-96ff-db2984a4a644" isOneWay="false" action="urn:setSessionResourcePath" name="setSessionResourcePath" bindingOperationName="setSessionResourcePath" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d5203ab8-bbe0-4771-ba81-502c1204fae3" isOneWay="false" action="urn:updateMediaType" name="updateMediaType" bindingOperationName="updateMediaType" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="580ab136-a772-4036-a3a5-3d9394e4ce0c" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e64f34bc-fdcf-463c-8b9f-2fb6c25fe4a1" wsaVersion="NONE" name="ResourceAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.resource.registry.carbon.wso2.org}ResourceAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ResourceAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ResourceAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ResourceAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.resource.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2532="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2534="http://common.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.resource.registry.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2537="http://utils.services.resource.registry.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ResourceAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2535="http://common.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="PermissionBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="authorizeAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="deleteAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roleNames" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="rolePermissions" nillable="true" type="ax2532:PermissionEntry"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userNames" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userPermissions" nillable="true" type="ax2532:PermissionEntry"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PermissionEntry">
        <xs:sequence>
          <xs:element minOccurs="0" name="authorizeAllow" type="xs:boolean"/>
          <xs:element minOccurs="0" name="authorizeDeny" type="xs:boolean"/>
          <xs:element minOccurs="0" name="deleteAllow" type="xs:boolean"/>
          <xs:element minOccurs="0" name="deleteDeny" type="xs:boolean"/>
          <xs:element minOccurs="0" name="readAllow" type="xs:boolean"/>
          <xs:element minOccurs="0" name="readDeny" type="xs:boolean"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="writeAllow" type="xs:boolean"/>
          <xs:element minOccurs="0" name="writeDeny" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MetadataBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="activeResourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="author" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contentPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteLocked" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="formattedLastModified" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastUpdater" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="navigatablePaths" nillable="true" type="ax2534:WebResourcePath"/>
          <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="permalink" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="resourceVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverBaseURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
          <xs:element minOccurs="0" name="writeLocked" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CollectionContentBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="childCount" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="childPaths" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="collectionTypes" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="remoteInstances" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContentBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contentPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceTreeEntryBean">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="children" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="symlink" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionsBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="deleteLocked" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="deletePermissionAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
          <xs:element minOccurs="0" name="permalink" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="versionPaths" nillable="true" type="ax2532:VersionPath"/>
          <xs:element minOccurs="0" name="writeLocked" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionPath">
        <xs:sequence>
          <xs:element minOccurs="0" name="activeResourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="completeVersionPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="updatedOn" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="updater" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionNumber" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContentDownloadBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="lastUpdatedTime" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="mediatype" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.registry.carbon.wso2.org/xsd">
      <xs:complexType name="WebResourcePath">
        <xs:sequence>
          <xs:element minOccurs="0" name="navigateName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="navigatePath" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceData">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="averageRating" type="xs:float"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="averageStars" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdOn" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="deleteAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="externalLink" type="xs:boolean"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="getAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="link" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mounted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="relativePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tagCounts" nillable="true" type="ax2534:TagCount"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TagCount">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.services.resource.registry.carbon.wso2.org/xsd">
      <xs:complexType name="ResourceServiceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.resource.registry.carbon.wso2.org" xmlns:ax2533="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2536="http://common.registry.carbon.wso2.org/xsd" xmlns:ax2538="http://utils.services.resource.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://beans.resource.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://utils.services.resource.registry.carbon.wso2.org/xsd"/>
      <xs:element name="ResourceAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ResourceAdminServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getProperty">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPropertyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="delete">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pathToDelete" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:PermissionBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addExtension">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addExtensionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeExtension">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeExtensionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCollection">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="collectionName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCollectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setDescription">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="restoreVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="versionPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="restoreVersionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fetchURL" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="symlinkLocation" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ns:ArrayOfString"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfString">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="array" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="importResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createVersionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:MetadataBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
            <xs:element minOccurs="0" name="symlinkLocation" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ns:ArrayOfString"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateMediaType">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:CollectionContentBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceData">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="paths" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2534:ResourceData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:ContentBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addSymbolicLink">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="targetPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRemoteLink">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="instance" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="targetPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ResourceAdminServiceResourceServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ResourceServiceException" nillable="true" type="ax2537:ResourceServiceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserPermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pathToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="actionToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserPermissionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRolePermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pathToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="roleToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="actionToAuthorize" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRolePermissionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeUserPermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionInput" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeUserPermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeRolePermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permissionsInput" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeRolePermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="contentText" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listExtensions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listExtensionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="renameResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldResourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newResourceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="renameResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="copyResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldResourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="destinationPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="copyResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moveResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldResourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="destinationPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moveResourceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSessionResourcePath">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSessionResourcePathResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setSessionResourcePath">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceTreeEntry">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceTreeEntryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:ResourceTreeEntryBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getVersionsBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getVersionsBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:VersionsBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMediatypeDefinitions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMediatypeDefinitionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionMediatypeDefinitions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionMediatypeDefinitionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCustomUIMediatypeDefinitions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCustomUIMediatypeDefinitionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentDownloadBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentDownloadBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:ContentDownloadBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHumanReadableMediaTypes">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getHumanReadableMediaTypesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMimeTypeFromHuman">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMimeTypeFromHumanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteVersionHistory">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteVersionHistoryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getZipWithDependencies">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getZipWithDependenciesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2532:ContentDownloadBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasAssociations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasAssociationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="removeExtensionRequest">
    <wsdl:part name="parameters" element="ns:removeExtension"/>
  </wsdl:message>
  <wsdl:message name="removeExtensionResponse">
    <wsdl:part name="parameters" element="ns:removeExtensionResponse"/>
  </wsdl:message>
  <wsdl:message name="ResourceAdminServiceException">
    <wsdl:part name="parameters" element="ns:ResourceAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="getHumanReadableMediaTypesRequest">
    <wsdl:part name="parameters" element="ns:getHumanReadableMediaTypes"/>
  </wsdl:message>
  <wsdl:message name="getHumanReadableMediaTypesResponse">
    <wsdl:part name="parameters" element="ns:getHumanReadableMediaTypesResponse"/>
  </wsdl:message>
  <wsdl:message name="addTextContentRequest">
    <wsdl:part name="parameters" element="ns:addTextContent"/>
  </wsdl:message>
  <wsdl:message name="addTextContentResponse">
    <wsdl:part name="parameters" element="ns:addTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserPermissionRequest">
    <wsdl:part name="parameters" element="ns:addUserPermission"/>
  </wsdl:message>
  <wsdl:message name="addUserPermissionResponse">
    <wsdl:part name="parameters" element="ns:addUserPermissionResponse"/>
  </wsdl:message>
  <wsdl:message name="ResourceAdminServiceResourceServiceException">
    <wsdl:part name="parameters" element="ns:ResourceAdminServiceResourceServiceException"/>
  </wsdl:message>
  <wsdl:message name="getCustomUIMediatypeDefinitionsRequest">
    <wsdl:part name="parameters" element="ns:getCustomUIMediatypeDefinitions"/>
  </wsdl:message>
  <wsdl:message name="getCustomUIMediatypeDefinitionsResponse">
    <wsdl:part name="parameters" element="ns:getCustomUIMediatypeDefinitionsResponse"/>
  </wsdl:message>
  <wsdl:message name="setDescriptionRequest">
    <wsdl:part name="parameters" element="ns:setDescription"/>
  </wsdl:message>
  <wsdl:message name="changeRolePermissionsRequest">
    <wsdl:part name="parameters" element="ns:changeRolePermissions"/>
  </wsdl:message>
  <wsdl:message name="changeRolePermissionsResponse">
    <wsdl:part name="parameters" element="ns:changeRolePermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="getResourceDataRequest">
    <wsdl:part name="parameters" element="ns:getResourceData"/>
  </wsdl:message>
  <wsdl:message name="getResourceDataResponse">
    <wsdl:part name="parameters" element="ns:getResourceDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getCollectionContentRequest">
    <wsdl:part name="parameters" element="ns:getCollectionContent"/>
  </wsdl:message>
  <wsdl:message name="getCollectionContentResponse">
    <wsdl:part name="parameters" element="ns:getCollectionContentResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteRequest">
    <wsdl:part name="parameters" element="ns:delete"/>
  </wsdl:message>
  <wsdl:message name="deleteResponse">
    <wsdl:part name="parameters" element="ns:deleteResponse"/>
  </wsdl:message>
  <wsdl:message name="getContentBeanRequest">
    <wsdl:part name="parameters" element="ns:getContentBean"/>
  </wsdl:message>
  <wsdl:message name="getContentBeanResponse">
    <wsdl:part name="parameters" element="ns:getContentBeanResponse"/>
  </wsdl:message>
  <wsdl:message name="getCollectionMediatypeDefinitionsRequest">
    <wsdl:part name="parameters" element="ns:getCollectionMediatypeDefinitions"/>
  </wsdl:message>
  <wsdl:message name="getCollectionMediatypeDefinitionsResponse">
    <wsdl:part name="parameters" element="ns:getCollectionMediatypeDefinitionsResponse"/>
  </wsdl:message>
  <wsdl:message name="renameResourceRequest">
    <wsdl:part name="parameters" element="ns:renameResource"/>
  </wsdl:message>
  <wsdl:message name="renameResourceResponse">
    <wsdl:part name="parameters" element="ns:renameResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="moveResourceRequest">
    <wsdl:part name="parameters" element="ns:moveResource"/>
  </wsdl:message>
  <wsdl:message name="moveResourceResponse">
    <wsdl:part name="parameters" element="ns:moveResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="restoreVersionRequest">
    <wsdl:part name="parameters" element="ns:restoreVersion"/>
  </wsdl:message>
  <wsdl:message name="restoreVersionResponse">
    <wsdl:part name="parameters" element="ns:restoreVersionResponse"/>
  </wsdl:message>
  <wsdl:message name="addResourceRequest">
    <wsdl:part name="parameters" element="ns:addResource"/>
  </wsdl:message>
  <wsdl:message name="addResourceResponse">
    <wsdl:part name="parameters" element="ns:addResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="addExtensionRequest">
    <wsdl:part name="parameters" element="ns:addExtension"/>
  </wsdl:message>
  <wsdl:message name="addExtensionResponse">
    <wsdl:part name="parameters" element="ns:addExtensionResponse"/>
  </wsdl:message>
  <wsdl:message name="updateMediaTypeRequest">
    <wsdl:part name="parameters" element="ns:updateMediaType"/>
  </wsdl:message>
  <wsdl:message name="deleteVersionHistoryRequest">
    <wsdl:part name="parameters" element="ns:deleteVersionHistory"/>
  </wsdl:message>
  <wsdl:message name="deleteVersionHistoryResponse">
    <wsdl:part name="parameters" element="ns:deleteVersionHistoryResponse"/>
  </wsdl:message>
  <wsdl:message name="addRemoteLinkRequest">
    <wsdl:part name="parameters" element="ns:addRemoteLink"/>
  </wsdl:message>
  <wsdl:message name="createVersionRequest">
    <wsdl:part name="parameters" element="ns:createVersion"/>
  </wsdl:message>
  <wsdl:message name="createVersionResponse">
    <wsdl:part name="parameters" element="ns:createVersionResponse"/>
  </wsdl:message>
  <wsdl:message name="getSessionResourcePathRequest">
    <wsdl:part name="parameters" element="ns:getSessionResourcePath"/>
  </wsdl:message>
  <wsdl:message name="getSessionResourcePathResponse">
    <wsdl:part name="parameters" element="ns:getSessionResourcePathResponse"/>
  </wsdl:message>
  <wsdl:message name="getMetadataRequest">
    <wsdl:part name="parameters" element="ns:getMetadata"/>
  </wsdl:message>
  <wsdl:message name="getMetadataResponse">
    <wsdl:part name="parameters" element="ns:getMetadataResponse"/>
  </wsdl:message>
  <wsdl:message name="getResourceTreeEntryRequest">
    <wsdl:part name="parameters" element="ns:getResourceTreeEntry"/>
  </wsdl:message>
  <wsdl:message name="getResourceTreeEntryResponse">
    <wsdl:part name="parameters" element="ns:getResourceTreeEntryResponse"/>
  </wsdl:message>
  <wsdl:message name="getPropertyRequest">
    <wsdl:part name="parameters" element="ns:getProperty"/>
  </wsdl:message>
  <wsdl:message name="getPropertyResponse">
    <wsdl:part name="parameters" element="ns:getPropertyResponse"/>
  </wsdl:message>
  <wsdl:message name="getPermissionsRequest">
    <wsdl:part name="parameters" element="ns:getPermissions"/>
  </wsdl:message>
  <wsdl:message name="getPermissionsResponse">
    <wsdl:part name="parameters" element="ns:getPermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="listExtensionsRequest">
    <wsdl:part name="parameters" element="ns:listExtensions"/>
  </wsdl:message>
  <wsdl:message name="listExtensionsResponse">
    <wsdl:part name="parameters" element="ns:listExtensionsResponse"/>
  </wsdl:message>
  <wsdl:message name="changeUserPermissionsRequest">
    <wsdl:part name="parameters" element="ns:changeUserPermissions"/>
  </wsdl:message>
  <wsdl:message name="changeUserPermissionsResponse">
    <wsdl:part name="parameters" element="ns:changeUserPermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="addSymbolicLinkRequest">
    <wsdl:part name="parameters" element="ns:addSymbolicLink"/>
  </wsdl:message>
  <wsdl:message name="hasAssociationsRequest">
    <wsdl:part name="parameters" element="ns:hasAssociations"/>
  </wsdl:message>
  <wsdl:message name="hasAssociationsResponse">
    <wsdl:part name="parameters" element="ns:hasAssociationsResponse"/>
  </wsdl:message>
  <wsdl:message name="getTextContentRequest">
    <wsdl:part name="parameters" element="ns:getTextContent"/>
  </wsdl:message>
  <wsdl:message name="getTextContentResponse">
    <wsdl:part name="parameters" element="ns:getTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="addRolePermissionRequest">
    <wsdl:part name="parameters" element="ns:addRolePermission"/>
  </wsdl:message>
  <wsdl:message name="addRolePermissionResponse">
    <wsdl:part name="parameters" element="ns:addRolePermissionResponse"/>
  </wsdl:message>
  <wsdl:message name="addTextResourceRequest">
    <wsdl:part name="parameters" element="ns:addTextResource"/>
  </wsdl:message>
  <wsdl:message name="addTextResourceResponse">
    <wsdl:part name="parameters" element="ns:addTextResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="getMediatypeDefinitionsRequest">
    <wsdl:part name="parameters" element="ns:getMediatypeDefinitions"/>
  </wsdl:message>
  <wsdl:message name="getMediatypeDefinitionsResponse">
    <wsdl:part name="parameters" element="ns:getMediatypeDefinitionsResponse"/>
  </wsdl:message>
  <wsdl:message name="importResourceRequest">
    <wsdl:part name="parameters" element="ns:importResource"/>
  </wsdl:message>
  <wsdl:message name="importResourceResponse">
    <wsdl:part name="parameters" element="ns:importResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="addCollectionRequest">
    <wsdl:part name="parameters" element="ns:addCollection"/>
  </wsdl:message>
  <wsdl:message name="addCollectionResponse">
    <wsdl:part name="parameters" element="ns:addCollectionResponse"/>
  </wsdl:message>
  <wsdl:message name="getVersionsBeanRequest">
    <wsdl:part name="parameters" element="ns:getVersionsBean"/>
  </wsdl:message>
  <wsdl:message name="getVersionsBeanResponse">
    <wsdl:part name="parameters" element="ns:getVersionsBeanResponse"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentRequest">
    <wsdl:part name="parameters" element="ns:updateTextContent"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentResponse">
    <wsdl:part name="parameters" element="ns:updateTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="getMimeTypeFromHumanRequest">
    <wsdl:part name="parameters" element="ns:getMimeTypeFromHuman"/>
  </wsdl:message>
  <wsdl:message name="getMimeTypeFromHumanResponse">
    <wsdl:part name="parameters" element="ns:getMimeTypeFromHumanResponse"/>
  </wsdl:message>
  <wsdl:message name="getZipWithDependenciesRequest">
    <wsdl:part name="parameters" element="ns:getZipWithDependencies"/>
  </wsdl:message>
  <wsdl:message name="getZipWithDependenciesResponse">
    <wsdl:part name="parameters" element="ns:getZipWithDependenciesResponse"/>
  </wsdl:message>
  <wsdl:message name="getContentDownloadBeanRequest">
    <wsdl:part name="parameters" element="ns:getContentDownloadBean"/>
  </wsdl:message>
  <wsdl:message name="getContentDownloadBeanResponse">
    <wsdl:part name="parameters" element="ns:getContentDownloadBeanResponse"/>
  </wsdl:message>
  <wsdl:message name="copyResourceRequest">
    <wsdl:part name="parameters" element="ns:copyResource"/>
  </wsdl:message>
  <wsdl:message name="copyResourceResponse">
    <wsdl:part name="parameters" element="ns:copyResourceResponse"/>
  </wsdl:message>
  <wsdl:message name="setSessionResourcePathRequest">
    <wsdl:part name="parameters" element="ns:setSessionResourcePath"/>
  </wsdl:message>
  <wsdl:portType name="ResourceAdminServicePortType">
    <wsdl:operation name="removeExtension">
      <wsdl:input message="ns:removeExtensionRequest" wsaw:Action="urn:removeExtension"/>
      <wsdl:output message="ns:removeExtensionResponse" wsaw:Action="urn:removeExtensionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:removeExtensionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getHumanReadableMediaTypes">
      <wsdl:input message="ns:getHumanReadableMediaTypesRequest" wsaw:Action="urn:getHumanReadableMediaTypes"/>
      <wsdl:output message="ns:getHumanReadableMediaTypesResponse" wsaw:Action="urn:getHumanReadableMediaTypesResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getHumanReadableMediaTypesResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <wsdl:input message="ns:addTextContentRequest" wsaw:Action="urn:addTextContent"/>
      <wsdl:output message="ns:addTextContentResponse" wsaw:Action="urn:addTextContentResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addTextContentResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserPermission">
      <wsdl:input message="ns:addUserPermissionRequest" wsaw:Action="urn:addUserPermission"/>
      <wsdl:output message="ns:addUserPermissionResponse" wsaw:Action="urn:addUserPermissionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceResourceServiceException" name="ResourceAdminServiceResourceServiceException" wsaw:Action="urn:addUserPermissionResourceAdminServiceResourceServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCustomUIMediatypeDefinitions">
      <wsdl:input message="ns:getCustomUIMediatypeDefinitionsRequest" wsaw:Action="urn:getCustomUIMediatypeDefinitions"/>
      <wsdl:output message="ns:getCustomUIMediatypeDefinitionsResponse" wsaw:Action="urn:getCustomUIMediatypeDefinitionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getCustomUIMediatypeDefinitionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <wsdl:input message="ns:setDescriptionRequest" wsaw:Action="urn:setDescription"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:setDescriptionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="changeRolePermissions">
      <wsdl:input message="ns:changeRolePermissionsRequest" wsaw:Action="urn:changeRolePermissions"/>
      <wsdl:output message="ns:changeRolePermissionsResponse" wsaw:Action="urn:changeRolePermissionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:changeRolePermissionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <wsdl:input message="ns:getResourceDataRequest" wsaw:Action="urn:getResourceData"/>
      <wsdl:output message="ns:getResourceDataResponse" wsaw:Action="urn:getResourceDataResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getResourceDataResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <wsdl:input message="ns:getCollectionContentRequest" wsaw:Action="urn:getCollectionContent"/>
      <wsdl:output message="ns:getCollectionContentResponse" wsaw:Action="urn:getCollectionContentResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getCollectionContentResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="ns:deleteRequest" wsaw:Action="urn:delete"/>
      <wsdl:output message="ns:deleteResponse" wsaw:Action="urn:deleteResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:deleteResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <wsdl:input message="ns:getContentBeanRequest" wsaw:Action="urn:getContentBean"/>
      <wsdl:output message="ns:getContentBeanResponse" wsaw:Action="urn:getContentBeanResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getContentBeanResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCollectionMediatypeDefinitions">
      <wsdl:input message="ns:getCollectionMediatypeDefinitionsRequest" wsaw:Action="urn:getCollectionMediatypeDefinitions"/>
      <wsdl:output message="ns:getCollectionMediatypeDefinitionsResponse" wsaw:Action="urn:getCollectionMediatypeDefinitionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getCollectionMediatypeDefinitionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <wsdl:input message="ns:renameResourceRequest" wsaw:Action="urn:renameResource"/>
      <wsdl:output message="ns:renameResourceResponse" wsaw:Action="urn:renameResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:renameResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="moveResource">
      <wsdl:input message="ns:moveResourceRequest" wsaw:Action="urn:moveResource"/>
      <wsdl:output message="ns:moveResourceResponse" wsaw:Action="urn:moveResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:moveResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="restoreVersion">
      <wsdl:input message="ns:restoreVersionRequest" wsaw:Action="urn:restoreVersion"/>
      <wsdl:output message="ns:restoreVersionResponse" wsaw:Action="urn:restoreVersionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:restoreVersionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <wsdl:input message="ns:addResourceRequest" wsaw:Action="urn:addResource"/>
      <wsdl:output message="ns:addResourceResponse" wsaw:Action="urn:addResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addExtension">
      <wsdl:input message="ns:addExtensionRequest" wsaw:Action="urn:addExtension"/>
      <wsdl:output message="ns:addExtensionResponse" wsaw:Action="urn:addExtensionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addExtensionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateMediaType">
      <wsdl:input message="ns:updateMediaTypeRequest" wsaw:Action="urn:updateMediaType"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:updateMediaTypeResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteVersionHistory">
      <wsdl:input message="ns:deleteVersionHistoryRequest" wsaw:Action="urn:deleteVersionHistory"/>
      <wsdl:output message="ns:deleteVersionHistoryResponse" wsaw:Action="urn:deleteVersionHistoryResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:deleteVersionHistoryResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addRemoteLink">
      <wsdl:input message="ns:addRemoteLinkRequest" wsaw:Action="urn:addRemoteLink"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addRemoteLinkResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="createVersion">
      <wsdl:input message="ns:createVersionRequest" wsaw:Action="urn:createVersion"/>
      <wsdl:output message="ns:createVersionResponse" wsaw:Action="urn:createVersionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:createVersionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getSessionResourcePath">
      <wsdl:input message="ns:getSessionResourcePathRequest" wsaw:Action="urn:getSessionResourcePath"/>
      <wsdl:output message="ns:getSessionResourcePathResponse" wsaw:Action="urn:getSessionResourcePathResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getSessionResourcePathResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <wsdl:input message="ns:getMetadataRequest" wsaw:Action="urn:getMetadata"/>
      <wsdl:output message="ns:getMetadataResponse" wsaw:Action="urn:getMetadataResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getMetadataResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <wsdl:input message="ns:getResourceTreeEntryRequest" wsaw:Action="urn:getResourceTreeEntry"/>
      <wsdl:output message="ns:getResourceTreeEntryResponse" wsaw:Action="urn:getResourceTreeEntryResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getResourceTreeEntryResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
      <wsdl:input message="ns:getPropertyRequest" wsaw:Action="urn:getProperty"/>
      <wsdl:output message="ns:getPropertyResponse" wsaw:Action="urn:getPropertyResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getPropertyResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getPermissions">
      <wsdl:input message="ns:getPermissionsRequest" wsaw:Action="urn:getPermissions"/>
      <wsdl:output message="ns:getPermissionsResponse" wsaw:Action="urn:getPermissionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getPermissionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="listExtensions">
      <wsdl:input message="ns:listExtensionsRequest" wsaw:Action="urn:listExtensions"/>
      <wsdl:output message="ns:listExtensionsResponse" wsaw:Action="urn:listExtensionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:listExtensionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="changeUserPermissions">
      <wsdl:input message="ns:changeUserPermissionsRequest" wsaw:Action="urn:changeUserPermissions"/>
      <wsdl:output message="ns:changeUserPermissionsResponse" wsaw:Action="urn:changeUserPermissionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:changeUserPermissionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addSymbolicLink">
      <wsdl:input message="ns:addSymbolicLinkRequest" wsaw:Action="urn:addSymbolicLink"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addSymbolicLinkResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="hasAssociations">
      <wsdl:input message="ns:hasAssociationsRequest" wsaw:Action="urn:hasAssociations"/>
      <wsdl:output message="ns:hasAssociationsResponse" wsaw:Action="urn:hasAssociationsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:hasAssociationsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <wsdl:input message="ns:getTextContentRequest" wsaw:Action="urn:getTextContent"/>
      <wsdl:output message="ns:getTextContentResponse" wsaw:Action="urn:getTextContentResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getTextContentResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addRolePermission">
      <wsdl:input message="ns:addRolePermissionRequest" wsaw:Action="urn:addRolePermission"/>
      <wsdl:output message="ns:addRolePermissionResponse" wsaw:Action="urn:addRolePermissionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceResourceServiceException" name="ResourceAdminServiceResourceServiceException" wsaw:Action="urn:addRolePermissionResourceAdminServiceResourceServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <wsdl:input message="ns:addTextResourceRequest" wsaw:Action="urn:addTextResource"/>
      <wsdl:output message="ns:addTextResourceResponse" wsaw:Action="urn:addTextResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addTextResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getMediatypeDefinitions">
      <wsdl:input message="ns:getMediatypeDefinitionsRequest" wsaw:Action="urn:getMediatypeDefinitions"/>
      <wsdl:output message="ns:getMediatypeDefinitionsResponse" wsaw:Action="urn:getMediatypeDefinitionsResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getMediatypeDefinitionsResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <wsdl:input message="ns:importResourceRequest" wsaw:Action="urn:importResource"/>
      <wsdl:output message="ns:importResourceResponse" wsaw:Action="urn:importResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:importResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <wsdl:input message="ns:addCollectionRequest" wsaw:Action="urn:addCollection"/>
      <wsdl:output message="ns:addCollectionResponse" wsaw:Action="urn:addCollectionResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:addCollectionResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getVersionsBean">
      <wsdl:input message="ns:getVersionsBeanRequest" wsaw:Action="urn:getVersionsBean"/>
      <wsdl:output message="ns:getVersionsBeanResponse" wsaw:Action="urn:getVersionsBeanResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getVersionsBeanResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <wsdl:input message="ns:updateTextContentRequest" wsaw:Action="urn:updateTextContent"/>
      <wsdl:output message="ns:updateTextContentResponse" wsaw:Action="urn:updateTextContentResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:updateTextContentResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getMimeTypeFromHuman">
      <wsdl:input message="ns:getMimeTypeFromHumanRequest" wsaw:Action="urn:getMimeTypeFromHuman"/>
      <wsdl:output message="ns:getMimeTypeFromHumanResponse" wsaw:Action="urn:getMimeTypeFromHumanResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getMimeTypeFromHumanResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getZipWithDependencies">
      <wsdl:input message="ns:getZipWithDependenciesRequest" wsaw:Action="urn:getZipWithDependencies"/>
      <wsdl:output message="ns:getZipWithDependenciesResponse" wsaw:Action="urn:getZipWithDependenciesResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getZipWithDependenciesResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <wsdl:input message="ns:getContentDownloadBeanRequest" wsaw:Action="urn:getContentDownloadBean"/>
      <wsdl:output message="ns:getContentDownloadBeanResponse" wsaw:Action="urn:getContentDownloadBeanResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:getContentDownloadBeanResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="copyResource">
      <wsdl:input message="ns:copyResourceRequest" wsaw:Action="urn:copyResource"/>
      <wsdl:output message="ns:copyResourceResponse" wsaw:Action="urn:copyResourceResponse"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:copyResourceResourceAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="setSessionResourcePath">
      <wsdl:input message="ns:setSessionResourcePathRequest" wsaw:Action="urn:setSessionResourcePath"/>
      <wsdl:fault message="ns:ResourceAdminServiceException" name="ResourceAdminServiceException" wsaw:Action="urn:setSessionResourcePathResourceAdminServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ResourceAdminServiceSoap11Binding" type="ns:ResourceAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getHumanReadableMediaTypes">
      <soap:operation soapAction="urn:getHumanReadableMediaTypes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeExtension">
      <soap:operation soapAction="urn:removeExtension" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <soap:operation soapAction="urn:addTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserPermission">
      <soap:operation soapAction="urn:addUserPermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceResourceServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceResourceServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCustomUIMediatypeDefinitions">
      <soap:operation soapAction="urn:getCustomUIMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <soap:operation soapAction="urn:setDescription" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeRolePermissions">
      <soap:operation soapAction="urn:changeRolePermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <soap:operation soapAction="urn:getResourceData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <soap:operation soapAction="urn:getCollectionContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="urn:delete" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <soap:operation soapAction="urn:getContentBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionMediatypeDefinitions">
      <soap:operation soapAction="urn:getCollectionMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <soap:operation soapAction="urn:renameResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="moveResource">
      <soap:operation soapAction="urn:moveResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restoreVersion">
      <soap:operation soapAction="urn:restoreVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <soap:operation soapAction="urn:addResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addExtension">
      <soap:operation soapAction="urn:addExtension" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMediaType">
      <soap:operation soapAction="urn:updateMediaType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteVersionHistory">
      <soap:operation soapAction="urn:deleteVersionHistory" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoteLink">
      <soap:operation soapAction="urn:addRemoteLink" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createVersion">
      <soap:operation soapAction="urn:createVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSessionResourcePath">
      <soap:operation soapAction="urn:getSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <soap:operation soapAction="urn:getMetadata" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <soap:operation soapAction="urn:getResourceTreeEntry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
      <soap:operation soapAction="urn:getProperty" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPermissions">
      <soap:operation soapAction="urn:getPermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listExtensions">
      <soap:operation soapAction="urn:listExtensions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserPermissions">
      <soap:operation soapAction="urn:changeUserPermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSymbolicLink">
      <soap:operation soapAction="urn:addSymbolicLink" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasAssociations">
      <soap:operation soapAction="urn:hasAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRolePermission">
      <soap:operation soapAction="urn:addRolePermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceResourceServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceResourceServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <soap:operation soapAction="urn:addTextResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMediatypeDefinitions">
      <soap:operation soapAction="urn:getMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <soap:operation soapAction="urn:importResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <soap:operation soapAction="urn:addCollection" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersionsBean">
      <soap:operation soapAction="urn:getVersionsBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMimeTypeFromHuman">
      <soap:operation soapAction="urn:getMimeTypeFromHuman" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getZipWithDependencies">
      <soap:operation soapAction="urn:getZipWithDependencies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <soap:operation soapAction="urn:getContentDownloadBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copyResource">
      <soap:operation soapAction="urn:copyResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSessionResourcePath">
      <soap:operation soapAction="urn:setSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ResourceAdminServiceSoap12Binding" type="ns:ResourceAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getHumanReadableMediaTypes">
      <soap12:operation soapAction="urn:getHumanReadableMediaTypes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeExtension">
      <soap12:operation soapAction="urn:removeExtension" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <soap12:operation soapAction="urn:addTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserPermission">
      <soap12:operation soapAction="urn:addUserPermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceResourceServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceResourceServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCustomUIMediatypeDefinitions">
      <soap12:operation soapAction="urn:getCustomUIMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <soap12:operation soapAction="urn:setDescription" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeRolePermissions">
      <soap12:operation soapAction="urn:changeRolePermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <soap12:operation soapAction="urn:getResourceData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <soap12:operation soapAction="urn:getCollectionContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap12:operation soapAction="urn:delete" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <soap12:operation soapAction="urn:getContentBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionMediatypeDefinitions">
      <soap12:operation soapAction="urn:getCollectionMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <soap12:operation soapAction="urn:renameResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="moveResource">
      <soap12:operation soapAction="urn:moveResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="restoreVersion">
      <soap12:operation soapAction="urn:restoreVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <soap12:operation soapAction="urn:addResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addExtension">
      <soap12:operation soapAction="urn:addExtension" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMediaType">
      <soap12:operation soapAction="urn:updateMediaType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteVersionHistory">
      <soap12:operation soapAction="urn:deleteVersionHistory" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoteLink">
      <soap12:operation soapAction="urn:addRemoteLink" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createVersion">
      <soap12:operation soapAction="urn:createVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSessionResourcePath">
      <soap12:operation soapAction="urn:getSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <soap12:operation soapAction="urn:getMetadata" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <soap12:operation soapAction="urn:getResourceTreeEntry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
      <soap12:operation soapAction="urn:getProperty" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPermissions">
      <soap12:operation soapAction="urn:getPermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listExtensions">
      <soap12:operation soapAction="urn:listExtensions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserPermissions">
      <soap12:operation soapAction="urn:changeUserPermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSymbolicLink">
      <soap12:operation soapAction="urn:addSymbolicLink" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasAssociations">
      <soap12:operation soapAction="urn:hasAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap12:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRolePermission">
      <soap12:operation soapAction="urn:addRolePermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceResourceServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceResourceServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <soap12:operation soapAction="urn:addTextResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMediatypeDefinitions">
      <soap12:operation soapAction="urn:getMediatypeDefinitions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <soap12:operation soapAction="urn:importResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <soap12:operation soapAction="urn:addCollection" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getVersionsBean">
      <soap12:operation soapAction="urn:getVersionsBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap12:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMimeTypeFromHuman">
      <soap12:operation soapAction="urn:getMimeTypeFromHuman" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getZipWithDependencies">
      <soap12:operation soapAction="urn:getZipWithDependencies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <soap12:operation soapAction="urn:getContentDownloadBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copyResource">
      <soap12:operation soapAction="urn:copyResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSessionResourcePath">
      <soap12:operation soapAction="urn:setSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ResourceAdminServiceException">
        <soap12:fault use="literal" name="ResourceAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ResourceAdminServiceHttpBinding" type="ns:ResourceAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getHumanReadableMediaTypes">
      <http:operation location="getHumanReadableMediaTypes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeExtension">
      <http:operation location="removeExtension"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextContent">
      <http:operation location="addTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserPermission">
      <http:operation location="addUserPermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCustomUIMediatypeDefinitions">
      <http:operation location="getCustomUIMediatypeDefinitions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setDescription">
      <http:operation location="setDescription"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changeRolePermissions">
      <http:operation location="changeRolePermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <http:operation location="getResourceData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <http:operation location="getCollectionContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <http:operation location="delete"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <http:operation location="getContentBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCollectionMediatypeDefinitions">
      <http:operation location="getCollectionMediatypeDefinitions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <http:operation location="renameResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="moveResource">
      <http:operation location="moveResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restoreVersion">
      <http:operation location="restoreVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <http:operation location="addResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addExtension">
      <http:operation location="addExtension"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateMediaType">
      <http:operation location="updateMediaType"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteVersionHistory">
      <http:operation location="deleteVersionHistory"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRemoteLink">
      <http:operation location="addRemoteLink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="createVersion">
      <http:operation location="createVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSessionResourcePath">
      <http:operation location="getSessionResourcePath"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <http:operation location="getMetadata"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <http:operation location="getResourceTreeEntry"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProperty">
      <http:operation location="getProperty"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPermissions">
      <http:operation location="getPermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listExtensions">
      <http:operation location="listExtensions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeUserPermissions">
      <http:operation location="changeUserPermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addSymbolicLink">
      <http:operation location="addSymbolicLink"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="hasAssociations">
      <http:operation location="hasAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <http:operation location="getTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRolePermission">
      <http:operation location="addRolePermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <http:operation location="addTextResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMediatypeDefinitions">
      <http:operation location="getMediatypeDefinitions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <http:operation location="importResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <http:operation location="addCollection"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getVersionsBean">
      <http:operation location="getVersionsBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <http:operation location="updateTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMimeTypeFromHuman">
      <http:operation location="getMimeTypeFromHuman"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getZipWithDependencies">
      <http:operation location="getZipWithDependencies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <http:operation location="getContentDownloadBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="copyResource">
      <http:operation location="copyResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setSessionResourcePath">
      <http:operation location="setSessionResourcePath"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ResourceAdminService">
    <wsdl:port name="ResourceAdminServiceHttpsSoap11Endpoint" binding="ns:ResourceAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ResourceAdminServiceHttpsSoap12Endpoint" binding="ns:ResourceAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ResourceAdminServiceHttpsEndpoint" binding="ns:ResourceAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ResourceAdminService.ResourceAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="beb09de1-6d85-4965-be05-18753f7e1ab5" isOneWay="false" action="urn:addCollection" name="addCollection" bindingOperationName="addCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f4b6a38f-6777-457a-9f2e-c0bf12d10d8f" isOneWay="false" action="urn:addExtension" name="addExtension" bindingOperationName="addExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="87bc5f5d-7deb-4e92-807f-321a76f9e588" isOneWay="false" action="urn:addRemoteLink" name="addRemoteLink" bindingOperationName="addRemoteLink" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4086e3ea-245d-4da6-9a21-ff8f4948a52c" isOneWay="false" action="urn:addResource" name="addResource" bindingOperationName="addResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5b2e28c3-d5c4-4730-ac17-eb8ac350ede6" isOneWay="false" action="urn:addRolePermission" name="addRolePermission" bindingOperationName="addRolePermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a59ea683-1233-4b3e-be65-b7d1aaf9bf35" isOneWay="false" action="urn:addSymbolicLink" name="addSymbolicLink" bindingOperationName="addSymbolicLink" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eb602ab8-56fd-4ac5-85bd-a300f2293731" isOneWay="false" action="urn:addTextContent" name="addTextContent" bindingOperationName="addTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e73f41e7-4e04-44a9-92e9-bb9e90018951" isOneWay="false" action="urn:addTextResource" name="addTextResource" bindingOperationName="addTextResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ba500cd2-8ce8-40d9-88cc-7fad04e38164" isOneWay="false" action="urn:addUserPermission" name="addUserPermission" bindingOperationName="addUserPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="83a59f00-6df4-493c-a3c2-0ce74f6d6ffa" isOneWay="false" action="urn:changeRolePermissions" name="changeRolePermissions" bindingOperationName="changeRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b9ddf165-ed39-4b28-8c18-3baec78a2da5" isOneWay="false" action="urn:changeUserPermissions" name="changeUserPermissions" bindingOperationName="changeUserPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dcf8d1d6-a7e8-4786-96cc-60123a4f33c1" isOneWay="false" action="urn:copyResource" name="copyResource" bindingOperationName="copyResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="71cade25-9d30-4147-8539-32295bd87ef7" isOneWay="false" action="urn:createVersion" name="createVersion" bindingOperationName="createVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="155066d8-a389-42fa-b4fd-f3f363fdcf04" isOneWay="false" action="urn:delete" name="delete" bindingOperationName="delete" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6cd3f830-ab80-4e2b-8a97-80d9cac89695" isOneWay="false" action="urn:deleteVersionHistory" name="deleteVersionHistory" bindingOperationName="deleteVersionHistory" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="65ede484-7287-4383-bd03-582833de3bf0" isOneWay="false" action="urn:getCollectionContent" name="getCollectionContent" bindingOperationName="getCollectionContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52210746-1dc6-4349-b8a5-e3e92179c342" isOneWay="false" action="urn:getCollectionMediatypeDefinitions" name="getCollectionMediatypeDefinitions" bindingOperationName="getCollectionMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="17b68168-05ee-4752-aae2-abaab201d011" isOneWay="false" action="urn:getContentBean" name="getContentBean" bindingOperationName="getContentBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e56c9ee9-753c-4572-834c-5038ddf100ac" isOneWay="false" action="urn:getContentDownloadBean" name="getContentDownloadBean" bindingOperationName="getContentDownloadBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ff7cbefc-b1cd-48ed-9534-e968ea215529" isOneWay="false" action="urn:getCustomUIMediatypeDefinitions" name="getCustomUIMediatypeDefinitions" bindingOperationName="getCustomUIMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f52cf3a7-9d2f-44d9-a5c2-f6bd15726619" isOneWay="false" action="urn:getHumanReadableMediaTypes" name="getHumanReadableMediaTypes" bindingOperationName="getHumanReadableMediaTypes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66a4d52e-6abf-43cf-ac35-23ca64761302" isOneWay="false" action="urn:getMediatypeDefinitions" name="getMediatypeDefinitions" bindingOperationName="getMediatypeDefinitions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1f1aa438-9e20-449a-9eba-ef7fdfb1cc58" isOneWay="false" action="urn:getMetadata" name="getMetadata" bindingOperationName="getMetadata" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b94d117-cfe4-4d34-9d79-48adda4f5fbc" isOneWay="false" action="urn:getMimeTypeFromHuman" name="getMimeTypeFromHuman" bindingOperationName="getMimeTypeFromHuman" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f9db701a-f1ea-4345-8e4e-60a1e355d3b5" isOneWay="false" action="urn:getPermissions" name="getPermissions" bindingOperationName="getPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2eac9b62-3e06-4043-a6c1-197228f17bcb" isOneWay="false" action="urn:getProperty" name="getProperty" bindingOperationName="getProperty" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e59a0c0f-cafe-4545-ba60-963b0759b56c" isOneWay="false" action="urn:getResourceData" name="getResourceData" bindingOperationName="getResourceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="36acef70-9163-4f8d-9f61-01442d0cb143" isOneWay="false" action="urn:getResourceTreeEntry" name="getResourceTreeEntry" bindingOperationName="getResourceTreeEntry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="752156bb-2963-419a-9bf7-45a416ef8566" isOneWay="false" action="urn:getSessionResourcePath" name="getSessionResourcePath" bindingOperationName="getSessionResourcePath" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48ebbe27-fbf9-44d5-aa01-6d89217f8d09" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dfcc8b6d-fccb-4c04-9a52-ee6dcf507f2c" isOneWay="false" action="urn:getVersionsBean" name="getVersionsBean" bindingOperationName="getVersionsBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bf8a55b5-b411-4eaf-8595-11b1acf61507" isOneWay="false" action="urn:getZipWithDependencies" name="getZipWithDependencies" bindingOperationName="getZipWithDependencies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0c93a15b-0b4b-4d47-b487-8bf03a6c6a74" isOneWay="false" action="urn:hasAssociations" name="hasAssociations" bindingOperationName="hasAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="88e10ff9-5456-4e70-b53c-baeffa81c5b3" isOneWay="false" action="urn:importResource" name="importResource" bindingOperationName="importResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c1598a11-8c7f-40ec-835a-d3e87129d387" isOneWay="false" action="urn:listExtensions" name="listExtensions" bindingOperationName="listExtensions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f82953b-a66b-493e-86a3-83e2bf8b1874" isOneWay="false" action="urn:moveResource" name="moveResource" bindingOperationName="moveResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8a6dc7b6-98da-4079-b86b-0da17a561016" isOneWay="false" action="urn:removeExtension" name="removeExtension" bindingOperationName="removeExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="224c09b2-2839-4bdd-b4bc-fce066e639b6" isOneWay="false" action="urn:renameResource" name="renameResource" bindingOperationName="renameResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="24be8b45-d2ab-466a-ab51-46d3f98389e0" isOneWay="false" action="urn:restoreVersion" name="restoreVersion" bindingOperationName="restoreVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9bc974dc-b9fc-4af9-8886-16bbc6da3d2e" isOneWay="false" action="urn:setDescription" name="setDescription" bindingOperationName="setDescription" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="348a60a4-5e28-4686-a747-0cd5115172d0" isOneWay="false" action="urn:setSessionResourcePath" name="setSessionResourcePath" bindingOperationName="setSessionResourcePath" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2102209f-a56b-49f3-a747-4297326bc322" isOneWay="false" action="urn:updateMediaType" name="updateMediaType" bindingOperationName="updateMediaType" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="332047ed-5a08-4391-9fe8-535685b12d3d" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f63727ca-4ce8-4156-be7f-825b60c7108c" wsaVersion="NONE" name="STSAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.sts.security.carbon.wso2.org}STSAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/STSAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="8056748d-146d-4303-a4b6-f73812fb6d4e" isOneWay="false" action="urn:addTrustedService" name="addTrustedService" bindingOperationName="addTrustedService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="64140a70-c4fd-4ae7-9d47-59e0274b9d41" isOneWay="false" action="urn:getCertAliasOfPrimaryKeyStore" name="getCertAliasOfPrimaryKeyStore" bindingOperationName="getCertAliasOfPrimaryKeyStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="50e497f4-909f-4715-884e-14ec21a3541d" isOneWay="false" action="urn:getProofKeyType" name="getProofKeyType" bindingOperationName="getProofKeyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="65fb97c2-ff65-4b69-ae62-8534e6aea798" isOneWay="false" action="urn:getTrustedServices" name="getTrustedServices" bindingOperationName="getTrustedServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b9d74784-4403-4e59-a88c-5ad861da1165" isOneWay="false" action="urn:removeTrustedService" name="removeTrustedService" bindingOperationName="removeTrustedService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed77ad47-b392-45bd-92b3-572d2eb7baa1" isOneWay="false" action="urn:setProofKeyType" name="setProofKeyType" bindingOperationName="setProofKeyType" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="47bd8c97-d565-4d18-9fd6-5c5a051ec232" wsaVersion="NONE" name="STSAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.sts.security.carbon.wso2.org}STSAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/STSAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/STSAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/STSAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.sts.security.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2565="http://util.service.sts.security.carbon.wso2.org/xsd" xmlns:ns="http://service.sts.security.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2561="http://security.carbon.wso2.org/xsd" xmlns:ax2562="http://base.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>STSAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.service.sts.security.carbon.wso2.org/xsd">
      <xs:complexType name="TrustedServiceData">
        <xs:sequence>
          <xs:element minOccurs="0" name="certAlias" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceAddress" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://security.carbon.wso2.org/xsd" xmlns:ax2563="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="SecurityConfigException">
        <xs:complexContent>
          <xs:extension base="ax2562:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.sts.security.carbon.wso2.org" xmlns:ax2564="http://security.carbon.wso2.org/xsd" xmlns:ax2566="http://util.service.sts.security.carbon.wso2.org/xsd">
      <xs:import namespace="http://security.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://util.service.sts.security.carbon.wso2.org/xsd"/>
      <xs:element name="STSAdminServiceSecurityConfigException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SecurityConfigException" nillable="true" type="ax2564:SecurityConfigException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTrustedServices">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTrustedServicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2565:TrustedServiceData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProofKeyType">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProofKeyTypeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setProofKeyType">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="keyType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTrustedService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceAddress" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="certAlias" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeTrustedService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceAddress" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCertAliasOfPrimaryKeyStore">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCertAliasOfPrimaryKeyStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="setProofKeyTypeRequest">
    <wsdl:part name="parameters" element="ns:setProofKeyType"/>
  </wsdl:message>
  <wsdl:message name="STSAdminServiceSecurityConfigException">
    <wsdl:part name="parameters" element="ns:STSAdminServiceSecurityConfigException"/>
  </wsdl:message>
  <wsdl:message name="removeTrustedServiceRequest">
    <wsdl:part name="parameters" element="ns:removeTrustedService"/>
  </wsdl:message>
  <wsdl:message name="getProofKeyTypeRequest">
    <wsdl:part name="parameters" element="ns:getProofKeyType"/>
  </wsdl:message>
  <wsdl:message name="getProofKeyTypeResponse">
    <wsdl:part name="parameters" element="ns:getProofKeyTypeResponse"/>
  </wsdl:message>
  <wsdl:message name="getTrustedServicesRequest">
    <wsdl:part name="parameters" element="ns:getTrustedServices"/>
  </wsdl:message>
  <wsdl:message name="getTrustedServicesResponse">
    <wsdl:part name="parameters" element="ns:getTrustedServicesResponse"/>
  </wsdl:message>
  <wsdl:message name="getCertAliasOfPrimaryKeyStoreRequest">
    <wsdl:part name="parameters" element="ns:getCertAliasOfPrimaryKeyStore"/>
  </wsdl:message>
  <wsdl:message name="getCertAliasOfPrimaryKeyStoreResponse">
    <wsdl:part name="parameters" element="ns:getCertAliasOfPrimaryKeyStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="addTrustedServiceRequest">
    <wsdl:part name="parameters" element="ns:addTrustedService"/>
  </wsdl:message>
  <wsdl:portType name="STSAdminServicePortType">
    <wsdl:operation name="setProofKeyType">
      <wsdl:input message="ns:setProofKeyTypeRequest" wsaw:Action="urn:setProofKeyType"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:setProofKeyTypeSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="removeTrustedService">
      <wsdl:input message="ns:removeTrustedServiceRequest" wsaw:Action="urn:removeTrustedService"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:removeTrustedServiceSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getProofKeyType">
      <wsdl:input message="ns:getProofKeyTypeRequest" wsaw:Action="urn:getProofKeyType"/>
      <wsdl:output message="ns:getProofKeyTypeResponse" wsaw:Action="urn:getProofKeyTypeResponse"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:getProofKeyTypeSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getTrustedServices">
      <wsdl:input message="ns:getTrustedServicesRequest" wsaw:Action="urn:getTrustedServices"/>
      <wsdl:output message="ns:getTrustedServicesResponse" wsaw:Action="urn:getTrustedServicesResponse"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:getTrustedServicesSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <wsdl:input message="ns:getCertAliasOfPrimaryKeyStoreRequest" wsaw:Action="urn:getCertAliasOfPrimaryKeyStore"/>
      <wsdl:output message="ns:getCertAliasOfPrimaryKeyStoreResponse" wsaw:Action="urn:getCertAliasOfPrimaryKeyStoreResponse"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:getCertAliasOfPrimaryKeyStoreSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="addTrustedService">
      <wsdl:input message="ns:addTrustedServiceRequest" wsaw:Action="urn:addTrustedService"/>
      <wsdl:fault message="ns:STSAdminServiceSecurityConfigException" name="STSAdminServiceSecurityConfigException" wsaw:Action="urn:addTrustedServiceSTSAdminServiceSecurityConfigException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="STSAdminServiceSoap11Binding" type="ns:STSAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="setProofKeyType">
      <soap:operation soapAction="urn:setProofKeyType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTrustedService">
      <soap:operation soapAction="urn:removeTrustedService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProofKeyType">
      <soap:operation soapAction="urn:getProofKeyType" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTrustedServices">
      <soap:operation soapAction="urn:getTrustedServices" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <soap:operation soapAction="urn:getCertAliasOfPrimaryKeyStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTrustedService">
      <soap:operation soapAction="urn:addTrustedService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="STSAdminServiceSoap12Binding" type="ns:STSAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="setProofKeyType">
      <soap12:operation soapAction="urn:setProofKeyType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTrustedService">
      <soap12:operation soapAction="urn:removeTrustedService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProofKeyType">
      <soap12:operation soapAction="urn:getProofKeyType" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTrustedServices">
      <soap12:operation soapAction="urn:getTrustedServices" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <soap12:operation soapAction="urn:getCertAliasOfPrimaryKeyStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTrustedService">
      <soap12:operation soapAction="urn:addTrustedService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="STSAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="STSAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="STSAdminServiceHttpBinding" type="ns:STSAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="setProofKeyType">
      <http:operation location="setProofKeyType"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeTrustedService">
      <http:operation location="removeTrustedService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getProofKeyType">
      <http:operation location="getProofKeyType"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTrustedServices">
      <http:operation location="getTrustedServices"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCertAliasOfPrimaryKeyStore">
      <http:operation location="getCertAliasOfPrimaryKeyStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTrustedService">
      <http:operation location="addTrustedService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="STSAdminService">
    <wsdl:port name="STSAdminServiceHttpsSoap11Endpoint" binding="ns:STSAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="STSAdminServiceHttpsSoap12Endpoint" binding="ns:STSAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="STSAdminServiceHttpsEndpoint" binding="ns:STSAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/STSAdminService.STSAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="6149452c-8b5d-4ec0-aeb3-6c954d454bb7" isOneWay="false" action="urn:addTrustedService" name="addTrustedService" bindingOperationName="addTrustedService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="703237c7-bfdb-4dba-ae0f-84ab7fdbae33" isOneWay="false" action="urn:getCertAliasOfPrimaryKeyStore" name="getCertAliasOfPrimaryKeyStore" bindingOperationName="getCertAliasOfPrimaryKeyStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="75462698-ea50-4c0e-a01b-1d278b572dfc" isOneWay="false" action="urn:getProofKeyType" name="getProofKeyType" bindingOperationName="getProofKeyType" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7ab75036-5608-4100-97a1-cdb6fb8d48ac" isOneWay="false" action="urn:getTrustedServices" name="getTrustedServices" bindingOperationName="getTrustedServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1bec5b58-ed77-44f0-9c5c-cb4051a6362b" isOneWay="false" action="urn:removeTrustedService" name="removeTrustedService" bindingOperationName="removeTrustedService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="98b41632-dca0-4912-9056-fc4f8f852bca" isOneWay="false" action="urn:setProofKeyType" name="setProofKeyType" bindingOperationName="setProofKeyType" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9064e86e-a64c-4c71-8de5-2c79bc045dfb" wsaVersion="NONE" name="SearchAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.search.registry.carbon.wso2.org}SearchAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/SearchAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="4354fc02-33e8-4961-9712-9de0e62a1078" isOneWay="false" action="urn:deleteFilter" name="deleteFilter" bindingOperationName="deleteFilter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6e8cfbde-73c7-4bed-9fad-df33f86e083e" isOneWay="false" action="urn:getAdvancedSearchFilter" name="getAdvancedSearchFilter" bindingOperationName="getAdvancedSearchFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="102a4153-116c-427e-9ace-c42a30ef4801" isOneWay="false" action="urn:getAdvancedSearchResults" name="getAdvancedSearchResults" bindingOperationName="getAdvancedSearchResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d66d53c8-05db-4b43-9516-da3d3ca1499e" isOneWay="false" action="urn:getMediaTypeSearch" name="getMediaTypeSearch" bindingOperationName="getMediaTypeSearch" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b3fc3688-7ea5-4c4d-b78b-b8b831cfabd9" isOneWay="false" action="urn:getSavedFilters" name="getSavedFilters" bindingOperationName="getSavedFilters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d625cacf-1941-48af-963c-a2f2bed1f47a" isOneWay="false" action="urn:getSearchResults" name="getSearchResults" bindingOperationName="getSearchResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="881ebea0-b149-41ad-ab46-0aa253df86f0" isOneWay="false" action="urn:saveAdvancedSearchFilter" name="saveAdvancedSearchFilter" bindingOperationName="saveAdvancedSearchFilter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="188fd03c-d12b-440a-b9da-6c824c5c063c" wsaVersion="NONE" name="SearchAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.search.registry.carbon.wso2.org}SearchAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/SearchAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/SearchAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/SearchAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.search.registry.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2543="http://beans.search.registry.carbon.wso2.org/xsd" xmlns:ax2545="http://common.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.search.registry.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2540="http://api.registry.carbon.wso2.org/xsd" xmlns:ax2539="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>SearchAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.registry.carbon.wso2.org/xsd">
      <xs:complexType name="ResourceData">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="averageRating" type="xs:float"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="averageStars" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdOn" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="deleteAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="externalLink" type="xs:boolean"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="getAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="link" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mounted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="relativePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tagCounts" nillable="true" type="ax2545:TagCount"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TagCount">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2541="http://api.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://api.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="RegistryException">
        <xs:complexContent>
          <xs:extension base="ax2540:RegistryException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.search.registry.carbon.wso2.org" xmlns:ax2542="http://exceptions.core.registry.carbon.wso2.org/xsd" xmlns:ax2544="http://beans.search.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://exceptions.core.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.search.registry.carbon.wso2.org/xsd"/>
      <xs:element name="SearchAdminServiceRegistryException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RegistryException" nillable="true" type="ax2542:RegistryException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAdvancedSearchResults">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parameters" nillable="true" type="ax2543:CustomSearchParameterBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAdvancedSearchResultsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2543:AdvancedSearchResultsBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSearchResults">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="searchType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="criteria" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSearchResultsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2543:SearchResultsBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMediaTypeSearch">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMediaTypeSearchResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2543:MediaTypeValueList"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="saveAdvancedSearchFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="queryBean" nillable="true" type="ax2543:CustomSearchParameterBean"/>
            <xs:element minOccurs="0" name="filterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAdvancedSearchFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAdvancedSearchFilterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2543:CustomSearchParameterBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSavedFilters">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSavedFiltersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.search.registry.carbon.wso2.org/xsd" xmlns:ax2546="http://common.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="CustomSearchParameterBean">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parameterValues" nillable="true" type="ax2543:ArrayOfString"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfString">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="array" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AdvancedSearchResultsBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceDataList" nillable="true" type="ax2545:ResourceData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SearchResultsBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceDataList" nillable="true" type="ax2545:ResourceData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MediaTypeValueList">
        <xs:sequence>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="searchFields" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.registry.carbon.wso2.org/xsd">
      <xs:complexType name="RegistryException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAdvancedSearchFilterRequest">
    <wsdl:part name="parameters" element="ns:getAdvancedSearchFilter"/>
  </wsdl:message>
  <wsdl:message name="getAdvancedSearchFilterResponse">
    <wsdl:part name="parameters" element="ns:getAdvancedSearchFilterResponse"/>
  </wsdl:message>
  <wsdl:message name="SearchAdminServiceRegistryException">
    <wsdl:part name="parameters" element="ns:SearchAdminServiceRegistryException"/>
  </wsdl:message>
  <wsdl:message name="getAdvancedSearchResultsRequest">
    <wsdl:part name="parameters" element="ns:getAdvancedSearchResults"/>
  </wsdl:message>
  <wsdl:message name="getAdvancedSearchResultsResponse">
    <wsdl:part name="parameters" element="ns:getAdvancedSearchResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="saveAdvancedSearchFilterRequest">
    <wsdl:part name="parameters" element="ns:saveAdvancedSearchFilter"/>
  </wsdl:message>
  <wsdl:message name="deleteFilterRequest">
    <wsdl:part name="parameters" element="ns:deleteFilter"/>
  </wsdl:message>
  <wsdl:message name="getSearchResultsRequest">
    <wsdl:part name="parameters" element="ns:getSearchResults"/>
  </wsdl:message>
  <wsdl:message name="getSearchResultsResponse">
    <wsdl:part name="parameters" element="ns:getSearchResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="getSavedFiltersRequest">
    <wsdl:part name="parameters" element="ns:getSavedFilters"/>
  </wsdl:message>
  <wsdl:message name="getSavedFiltersResponse">
    <wsdl:part name="parameters" element="ns:getSavedFiltersResponse"/>
  </wsdl:message>
  <wsdl:message name="getMediaTypeSearchRequest">
    <wsdl:part name="parameters" element="ns:getMediaTypeSearch"/>
  </wsdl:message>
  <wsdl:message name="getMediaTypeSearchResponse">
    <wsdl:part name="parameters" element="ns:getMediaTypeSearchResponse"/>
  </wsdl:message>
  <wsdl:portType name="SearchAdminServicePortType">
    <wsdl:operation name="getAdvancedSearchFilter">
      <wsdl:input message="ns:getAdvancedSearchFilterRequest" wsaw:Action="urn:getAdvancedSearchFilter"/>
      <wsdl:output message="ns:getAdvancedSearchFilterResponse" wsaw:Action="urn:getAdvancedSearchFilterResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getAdvancedSearchFilterSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getAdvancedSearchResults">
      <wsdl:input message="ns:getAdvancedSearchResultsRequest" wsaw:Action="urn:getAdvancedSearchResults"/>
      <wsdl:output message="ns:getAdvancedSearchResultsResponse" wsaw:Action="urn:getAdvancedSearchResultsResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getAdvancedSearchResultsSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="saveAdvancedSearchFilter">
      <wsdl:input message="ns:saveAdvancedSearchFilterRequest" wsaw:Action="urn:saveAdvancedSearchFilter"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:saveAdvancedSearchFilterSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteFilter">
      <wsdl:input message="ns:deleteFilterRequest" wsaw:Action="urn:deleteFilter"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:deleteFilterSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getSearchResults">
      <wsdl:input message="ns:getSearchResultsRequest" wsaw:Action="urn:getSearchResults"/>
      <wsdl:output message="ns:getSearchResultsResponse" wsaw:Action="urn:getSearchResultsResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getSearchResultsSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getSavedFilters">
      <wsdl:input message="ns:getSavedFiltersRequest" wsaw:Action="urn:getSavedFilters"/>
      <wsdl:output message="ns:getSavedFiltersResponse" wsaw:Action="urn:getSavedFiltersResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getSavedFiltersSearchAdminServiceRegistryException"/>
    </wsdl:operation>
    <wsdl:operation name="getMediaTypeSearch">
      <wsdl:input message="ns:getMediaTypeSearchRequest" wsaw:Action="urn:getMediaTypeSearch"/>
      <wsdl:output message="ns:getMediaTypeSearchResponse" wsaw:Action="urn:getMediaTypeSearchResponse"/>
      <wsdl:fault message="ns:SearchAdminServiceRegistryException" name="SearchAdminServiceRegistryException" wsaw:Action="urn:getMediaTypeSearchSearchAdminServiceRegistryException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SearchAdminServiceSoap11Binding" type="ns:SearchAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAdvancedSearchFilter">
      <soap:operation soapAction="urn:getAdvancedSearchFilter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAdvancedSearchResults">
      <soap:operation soapAction="urn:getAdvancedSearchResults" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveAdvancedSearchFilter">
      <soap:operation soapAction="urn:saveAdvancedSearchFilter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFilter">
      <soap:operation soapAction="urn:deleteFilter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResults">
      <soap:operation soapAction="urn:getSearchResults" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSavedFilters">
      <soap:operation soapAction="urn:getSavedFilters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMediaTypeSearch">
      <soap:operation soapAction="urn:getMediaTypeSearch" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SearchAdminServiceSoap12Binding" type="ns:SearchAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAdvancedSearchFilter">
      <soap12:operation soapAction="urn:getAdvancedSearchFilter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAdvancedSearchResults">
      <soap12:operation soapAction="urn:getAdvancedSearchResults" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveAdvancedSearchFilter">
      <soap12:operation soapAction="urn:saveAdvancedSearchFilter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteFilter">
      <soap12:operation soapAction="urn:deleteFilter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResults">
      <soap12:operation soapAction="urn:getSearchResults" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSavedFilters">
      <soap12:operation soapAction="urn:getSavedFilters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMediaTypeSearch">
      <soap12:operation soapAction="urn:getMediaTypeSearch" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SearchAdminServiceRegistryException">
        <soap12:fault use="literal" name="SearchAdminServiceRegistryException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SearchAdminServiceHttpBinding" type="ns:SearchAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAdvancedSearchFilter">
      <http:operation location="getAdvancedSearchFilter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAdvancedSearchResults">
      <http:operation location="getAdvancedSearchResults"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="saveAdvancedSearchFilter">
      <http:operation location="saveAdvancedSearchFilter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFilter">
      <http:operation location="deleteFilter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getSearchResults">
      <http:operation location="getSearchResults"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSavedFilters">
      <http:operation location="getSavedFilters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMediaTypeSearch">
      <http:operation location="getMediaTypeSearch"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SearchAdminService">
    <wsdl:port name="SearchAdminServiceHttpsSoap11Endpoint" binding="ns:SearchAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="SearchAdminServiceHttpsSoap12Endpoint" binding="ns:SearchAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="SearchAdminServiceHttpsEndpoint" binding="ns:SearchAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/SearchAdminService.SearchAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="cb0556be-f09f-4cbd-813f-8861d0b811e3" isOneWay="false" action="urn:deleteFilter" name="deleteFilter" bindingOperationName="deleteFilter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="25bf1888-08c4-479d-b522-5afe5a8512ca" isOneWay="false" action="urn:getAdvancedSearchFilter" name="getAdvancedSearchFilter" bindingOperationName="getAdvancedSearchFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eb662149-9795-4789-86b9-c6ae6930b6c7" isOneWay="false" action="urn:getAdvancedSearchResults" name="getAdvancedSearchResults" bindingOperationName="getAdvancedSearchResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="51199026-b926-4392-961e-9687de09e44c" isOneWay="false" action="urn:getMediaTypeSearch" name="getMediaTypeSearch" bindingOperationName="getMediaTypeSearch" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="963bb5ea-14df-49d8-9fba-ed68b5cd440a" isOneWay="false" action="urn:getSavedFilters" name="getSavedFilters" bindingOperationName="getSavedFilters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b4673aaa-b9b1-40cf-84a8-eef2a13e1bf8" isOneWay="false" action="urn:getSearchResults" name="getSearchResults" bindingOperationName="getSearchResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa6ba3ef-8881-45d0-9365-b10eb4e1f461" isOneWay="false" action="urn:saveAdvancedSearchFilter" name="saveAdvancedSearchFilter" bindingOperationName="saveAdvancedSearchFilter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4d7e5655-c75f-4058-ad04-396fc3ba366d" wsaVersion="NONE" name="SecurityAdminServiceSoap11Binding" type="wsdl" bindingName="{http://service.config.security.carbon.wso2.org}SecurityAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/SecurityAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c5479b1c-002d-4c2a-815f-678566f5c0c6" isOneWay="false" action="urn:activateUsernameTokenAuthentication" name="activateUsernameTokenAuthentication" bindingOperationName="activateUsernameTokenAuthentication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="81f5834c-c06f-4ea7-a563-ca41e7f5db7a" isOneWay="false" action="urn:applyKerberosSecurityPolicy" name="applyKerberosSecurityPolicy" bindingOperationName="applyKerberosSecurityPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58f99bc8-4d90-4232-8a81-662aec3363f9" isOneWay="false" action="urn:applySecurity" name="applySecurity" bindingOperationName="applySecurity" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a5bd1a8-5ef7-482f-9ea1-04c43c62d0b8" isOneWay="false" action="urn:disableSecurityOnService" name="disableSecurityOnService" bindingOperationName="disableSecurityOnService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b4120ac7-49da-45b0-8cb3-56328f6d0dbf" isOneWay="false" action="urn:getScenarios" name="getScenarios" bindingOperationName="getScenarios" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58bde5f6-b999-4510-b939-650c119b12c1" isOneWay="false" action="urn:getSecurityConfigData" name="getSecurityConfigData" bindingOperationName="getSecurityConfigData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="afe5e8db-f2b0-4204-aad9-fb12e1dd6a42" isOneWay="false" action="urn:getSecurityScenario" name="getSecurityScenario" bindingOperationName="getSecurityScenario" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a4c25aa7-f1e4-4ed0-97b9-a07a2909a8e9" wsaVersion="NONE" name="SecurityAdminServiceSoap12Binding" type="wsdl" bindingName="{http://service.config.security.carbon.wso2.org}SecurityAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/SecurityAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/SecurityAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/SecurityAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.config.security.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2555="http://security.carbon.wso2.org/xsd" xmlns:ax2556="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://service.config.security.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2559="http://service.config.security.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>SecurityAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://security.carbon.wso2.org/xsd" xmlns:ax2557="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="SecurityConfigException">
        <xs:complexContent>
          <xs:extension base="ax2556:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.config.security.carbon.wso2.org/xsd">
      <xs:complexType name="SecurityScenarioDataWrapper">
        <xs:sequence>
          <xs:element minOccurs="0" name="currentScenario" nillable="true" type="ax2559:SecurityScenarioData"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="scenarios" nillable="true" type="ax2559:SecurityScenarioData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SecurityScenarioData">
        <xs:sequence>
          <xs:element minOccurs="0" name="category" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="currentScenario" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="policyRegistryPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scenarioId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="summary" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SecurityConfigData">
        <xs:sequence>
          <xs:element minOccurs="0" name="kerberosConfigurations" nillable="true" type="ax2559:KerberosConfigData"/>
          <xs:element minOccurs="0" name="privateStore" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="trustedKeyStores" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userGroups" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="KerberosConfigData">
        <xs:sequence>
          <xs:element minOccurs="0" name="kdcAddress" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="realmName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="servicePrincipleName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="servicePrinciplePassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="useSubjectCredentialsOnly" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.config.security.carbon.wso2.org" xmlns:ax2560="http://service.config.security.carbon.wso2.org/xsd" xmlns:ax2558="http://security.carbon.wso2.org/xsd">
      <xs:import namespace="http://security.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://service.config.security.carbon.wso2.org/xsd"/>
      <xs:element name="SecurityAdminServiceSecurityConfigException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SecurityConfigException" nillable="true" type="ax2555:SecurityConfigException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="activateUsernameTokenAuthentication">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userGroups" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="applySecurity">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyPath" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="trustedStores" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="privateStore" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userGroupNames" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="disableSecurityOnService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="applyKerberosSecurityPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="servicePrincipalName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="servicePrincipalPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getScenarios">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getScenariosResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2559:SecurityScenarioDataWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecurityScenario">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="sceneId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecurityScenarioResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2559:SecurityScenarioData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecurityConfigData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="scenarioId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyPath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecurityConfigDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2559:SecurityConfigData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="disableSecurityOnServiceRequest">
    <wsdl:part name="parameters" element="ns:disableSecurityOnService"/>
  </wsdl:message>
  <wsdl:message name="SecurityAdminServiceSecurityConfigException">
    <wsdl:part name="parameters" element="ns:SecurityAdminServiceSecurityConfigException"/>
  </wsdl:message>
  <wsdl:message name="applySecurityRequest">
    <wsdl:part name="parameters" element="ns:applySecurity"/>
  </wsdl:message>
  <wsdl:message name="getSecurityScenarioRequest">
    <wsdl:part name="parameters" element="ns:getSecurityScenario"/>
  </wsdl:message>
  <wsdl:message name="getSecurityScenarioResponse">
    <wsdl:part name="parameters" element="ns:getSecurityScenarioResponse"/>
  </wsdl:message>
  <wsdl:message name="applyKerberosSecurityPolicyRequest">
    <wsdl:part name="parameters" element="ns:applyKerberosSecurityPolicy"/>
  </wsdl:message>
  <wsdl:message name="getScenariosRequest">
    <wsdl:part name="parameters" element="ns:getScenarios"/>
  </wsdl:message>
  <wsdl:message name="getScenariosResponse">
    <wsdl:part name="parameters" element="ns:getScenariosResponse"/>
  </wsdl:message>
  <wsdl:message name="activateUsernameTokenAuthenticationRequest">
    <wsdl:part name="parameters" element="ns:activateUsernameTokenAuthentication"/>
  </wsdl:message>
  <wsdl:message name="getSecurityConfigDataRequest">
    <wsdl:part name="parameters" element="ns:getSecurityConfigData"/>
  </wsdl:message>
  <wsdl:message name="getSecurityConfigDataResponse">
    <wsdl:part name="parameters" element="ns:getSecurityConfigDataResponse"/>
  </wsdl:message>
  <wsdl:portType name="SecurityAdminServicePortType">
    <wsdl:operation name="disableSecurityOnService">
      <wsdl:input message="ns:disableSecurityOnServiceRequest" wsaw:Action="urn:disableSecurityOnService"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:disableSecurityOnServiceSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="applySecurity">
      <wsdl:input message="ns:applySecurityRequest" wsaw:Action="urn:applySecurity"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:applySecuritySecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getSecurityScenario">
      <wsdl:input message="ns:getSecurityScenarioRequest" wsaw:Action="urn:getSecurityScenario"/>
      <wsdl:output message="ns:getSecurityScenarioResponse" wsaw:Action="urn:getSecurityScenarioResponse"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:getSecurityScenarioSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="applyKerberosSecurityPolicy">
      <wsdl:input message="ns:applyKerberosSecurityPolicyRequest" wsaw:Action="urn:applyKerberosSecurityPolicy"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:applyKerberosSecurityPolicySecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getScenarios">
      <wsdl:input message="ns:getScenariosRequest" wsaw:Action="urn:getScenarios"/>
      <wsdl:output message="ns:getScenariosResponse" wsaw:Action="urn:getScenariosResponse"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:getScenariosSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="activateUsernameTokenAuthentication">
      <wsdl:input message="ns:activateUsernameTokenAuthenticationRequest" wsaw:Action="urn:activateUsernameTokenAuthentication"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:activateUsernameTokenAuthenticationSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
    <wsdl:operation name="getSecurityConfigData">
      <wsdl:input message="ns:getSecurityConfigDataRequest" wsaw:Action="urn:getSecurityConfigData"/>
      <wsdl:output message="ns:getSecurityConfigDataResponse" wsaw:Action="urn:getSecurityConfigDataResponse"/>
      <wsdl:fault message="ns:SecurityAdminServiceSecurityConfigException" name="SecurityAdminServiceSecurityConfigException" wsaw:Action="urn:getSecurityConfigDataSecurityAdminServiceSecurityConfigException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SecurityAdminServiceSoap11Binding" type="ns:SecurityAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="disableSecurityOnService">
      <soap:operation soapAction="urn:disableSecurityOnService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applySecurity">
      <soap:operation soapAction="urn:applySecurity" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecurityScenario">
      <soap:operation soapAction="urn:getSecurityScenario" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyKerberosSecurityPolicy">
      <soap:operation soapAction="urn:applyKerberosSecurityPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getScenarios">
      <soap:operation soapAction="urn:getScenarios" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateUsernameTokenAuthentication">
      <soap:operation soapAction="urn:activateUsernameTokenAuthentication" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecurityConfigData">
      <soap:operation soapAction="urn:getSecurityConfigData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SecurityAdminServiceSoap12Binding" type="ns:SecurityAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="disableSecurityOnService">
      <soap12:operation soapAction="urn:disableSecurityOnService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applySecurity">
      <soap12:operation soapAction="urn:applySecurity" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecurityScenario">
      <soap12:operation soapAction="urn:getSecurityScenario" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyKerberosSecurityPolicy">
      <soap12:operation soapAction="urn:applyKerberosSecurityPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getScenarios">
      <soap12:operation soapAction="urn:getScenarios" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateUsernameTokenAuthentication">
      <soap12:operation soapAction="urn:activateUsernameTokenAuthentication" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecurityConfigData">
      <soap12:operation soapAction="urn:getSecurityConfigData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SecurityAdminServiceSecurityConfigException">
        <soap12:fault use="literal" name="SecurityAdminServiceSecurityConfigException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SecurityAdminServiceHttpBinding" type="ns:SecurityAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="disableSecurityOnService">
      <http:operation location="disableSecurityOnService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="applySecurity">
      <http:operation location="applySecurity"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getSecurityScenario">
      <http:operation location="getSecurityScenario"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="applyKerberosSecurityPolicy">
      <http:operation location="applyKerberosSecurityPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getScenarios">
      <http:operation location="getScenarios"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activateUsernameTokenAuthentication">
      <http:operation location="activateUsernameTokenAuthentication"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getSecurityConfigData">
      <http:operation location="getSecurityConfigData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SecurityAdminService">
    <wsdl:port name="SecurityAdminServiceHttpsSoap11Endpoint" binding="ns:SecurityAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="SecurityAdminServiceHttpsSoap12Endpoint" binding="ns:SecurityAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="SecurityAdminServiceHttpsEndpoint" binding="ns:SecurityAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/SecurityAdminService.SecurityAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="e88f9f09-e3b9-49a1-95b6-9fbe5e3d8f91" isOneWay="false" action="urn:activateUsernameTokenAuthentication" name="activateUsernameTokenAuthentication" bindingOperationName="activateUsernameTokenAuthentication" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="11abbcc9-d2df-4008-a20e-d8454f151643" isOneWay="false" action="urn:applyKerberosSecurityPolicy" name="applyKerberosSecurityPolicy" bindingOperationName="applyKerberosSecurityPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d279232a-2270-4e5b-818b-d3ad701952c1" isOneWay="false" action="urn:applySecurity" name="applySecurity" bindingOperationName="applySecurity" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="68c99b09-7c42-4735-8803-1d9454e02f6e" isOneWay="false" action="urn:disableSecurityOnService" name="disableSecurityOnService" bindingOperationName="disableSecurityOnService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2b9f31eb-3d21-430b-8a13-fb9ac6e10886" isOneWay="false" action="urn:getScenarios" name="getScenarios" bindingOperationName="getScenarios" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="38495a94-2bd1-4a90-a305-f24fc6a95b09" isOneWay="false" action="urn:getSecurityConfigData" name="getSecurityConfigData" bindingOperationName="getSecurityConfigData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="56502548-2cbd-4fb4-89e4-aea68b4f4f1a" isOneWay="false" action="urn:getSecurityScenario" name="getSecurityScenario" bindingOperationName="getSecurityScenario" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="95b5476a-47c3-4ecf-8246-5e5d8ff8b800" wsaVersion="NONE" name="ServerAdminSoap11Binding" type="wsdl" bindingName="{http://service.admin.server.carbon.wso2.org}ServerAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServerAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ServerAdmin.ServerAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="6962cca0-ee83-4761-974a-160b45706d74" isOneWay="false" action="urn:endMaintenance" name="endMaintenance" bindingOperationName="endMaintenance" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="afc19a29-ac7c-4bfc-82a2-175ced5dda4b" isOneWay="false" action="urn:getServerData" name="getServerData" bindingOperationName="getServerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7d779140-e312-4c50-9b79-c719837815d6" isOneWay="false" action="urn:getServerDataAsString" name="getServerDataAsString" bindingOperationName="getServerDataAsString" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2077c48b-2ea1-48ff-936c-408b6ee4b9dc" isOneWay="false" action="urn:getServerStatus" name="getServerStatus" bindingOperationName="getServerStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="71b23834-8fe7-482a-b9cd-6dd617f2b243" isOneWay="false" action="urn:getServerVersion" name="getServerVersion" bindingOperationName="getServerVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7296d0c5-9f52-4809-8e54-f21f8898521c" isOneWay="false" action="urn:isAlive" name="isAlive" bindingOperationName="isAlive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7449d41b-48c9-4df4-bead-353aa286f27f" isOneWay="false" action="urn:restart" name="restart" bindingOperationName="restart" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a33943cd-c157-4ba0-a470-626ea9cf6165" isOneWay="false" action="urn:restartGracefully" name="restartGracefully" bindingOperationName="restartGracefully" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="435af404-9852-482c-a538-c2abb0228cd3" isOneWay="false" action="urn:shutdown" name="shutdown" bindingOperationName="shutdown" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a25c475d-b676-4feb-b544-1d61bbf29a42" isOneWay="false" action="urn:shutdownGracefully" name="shutdownGracefully" bindingOperationName="shutdownGracefully" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b86ac13c-0424-4b22-a234-9e679111a39f" isOneWay="false" action="urn:startMaintenance" name="startMaintenance" bindingOperationName="startMaintenance" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="45b1d746-b118-4a0a-af81-ace6fe873eab" wsaVersion="NONE" name="ServerAdminSoap12Binding" type="wsdl" bindingName="{http://service.admin.server.carbon.wso2.org}ServerAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServerAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServerAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServerAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.admin.server.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2567="http://common.admin.server.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://service.admin.server.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ServerAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2568="http://common.admin.server.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://common.admin.server.carbon.wso2.org/xsd"/>
      <xs:element name="shutdown">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="shutdownResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAlive">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAliveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServerAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ServerAdminException" nillable="true" type="ns1:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="restartGracefully">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="restartGracefullyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="shutdownGracefully">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="shutdownGracefullyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerData">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2567:ServerData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerDataAsString">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerDataAsStringResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerVersion">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerVersionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startMaintenance">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="endMaintenance">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerStatus">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServerStatusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="restart">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="restartResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.admin.server.carbon.wso2.org/xsd">
      <xs:complexType name="ServerData">
        <xs:sequence>
          <xs:element minOccurs="0" name="axis2Location" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="carbonVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbDriverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbDriverVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dbVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaHome" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaRuntimeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaVMVendor" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaVMVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="javaVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="osName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="osVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="registryType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="remoteRegistryChroot" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="remoteRegistryURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="repoLocation" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverIp" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverStartTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverStartUpDuration" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverUpTime" nillable="true" type="ax2567:ServerUpTime"/>
          <xs:element minOccurs="0" name="userCountry" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userHome" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userTimezone" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServerUpTime">
        <xs:sequence>
          <xs:element minOccurs="0" name="days" type="xs:long"/>
          <xs:element minOccurs="0" name="hours" type="xs:int"/>
          <xs:element minOccurs="0" name="minutes" type="xs:int"/>
          <xs:element minOccurs="0" name="seconds" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getServerDataRequest">
    <wsdl:part name="parameters" element="ns1:getServerData"/>
  </wsdl:message>
  <wsdl:message name="getServerDataResponse">
    <wsdl:part name="parameters" element="ns1:getServerDataResponse"/>
  </wsdl:message>
  <wsdl:message name="ServerAdminException">
    <wsdl:part name="parameters" element="ns1:ServerAdminException"/>
  </wsdl:message>
  <wsdl:message name="isAliveRequest">
    <wsdl:part name="parameters" element="ns1:isAlive"/>
  </wsdl:message>
  <wsdl:message name="isAliveResponse">
    <wsdl:part name="parameters" element="ns1:isAliveResponse"/>
  </wsdl:message>
  <wsdl:message name="restartGracefullyRequest">
    <wsdl:part name="parameters" element="ns1:restartGracefully"/>
  </wsdl:message>
  <wsdl:message name="restartGracefullyResponse">
    <wsdl:part name="parameters" element="ns1:restartGracefullyResponse"/>
  </wsdl:message>
  <wsdl:message name="endMaintenanceRequest">
    <wsdl:part name="parameters" element="ns1:endMaintenance"/>
  </wsdl:message>
  <wsdl:message name="getServerStatusRequest">
    <wsdl:part name="parameters" element="ns1:getServerStatus"/>
  </wsdl:message>
  <wsdl:message name="getServerStatusResponse">
    <wsdl:part name="parameters" element="ns1:getServerStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="shutdownGracefullyRequest">
    <wsdl:part name="parameters" element="ns1:shutdownGracefully"/>
  </wsdl:message>
  <wsdl:message name="shutdownGracefullyResponse">
    <wsdl:part name="parameters" element="ns1:shutdownGracefullyResponse"/>
  </wsdl:message>
  <wsdl:message name="restartRequest">
    <wsdl:part name="parameters" element="ns1:restart"/>
  </wsdl:message>
  <wsdl:message name="restartResponse">
    <wsdl:part name="parameters" element="ns1:restartResponse"/>
  </wsdl:message>
  <wsdl:message name="getServerVersionRequest">
    <wsdl:part name="parameters" element="ns1:getServerVersion"/>
  </wsdl:message>
  <wsdl:message name="getServerVersionResponse">
    <wsdl:part name="parameters" element="ns1:getServerVersionResponse"/>
  </wsdl:message>
  <wsdl:message name="getServerDataAsStringRequest">
    <wsdl:part name="parameters" element="ns1:getServerDataAsString"/>
  </wsdl:message>
  <wsdl:message name="getServerDataAsStringResponse">
    <wsdl:part name="parameters" element="ns1:getServerDataAsStringResponse"/>
  </wsdl:message>
  <wsdl:message name="startMaintenanceRequest">
    <wsdl:part name="parameters" element="ns1:startMaintenance"/>
  </wsdl:message>
  <wsdl:message name="shutdownRequest">
    <wsdl:part name="parameters" element="ns1:shutdown"/>
  </wsdl:message>
  <wsdl:message name="shutdownResponse">
    <wsdl:part name="parameters" element="ns1:shutdownResponse"/>
  </wsdl:message>
  <wsdl:portType name="ServerAdminPortType">
    <wsdl:operation name="getServerData">
      <wsdl:input message="tns:getServerDataRequest" wsaw:Action="urn:getServerData"/>
      <wsdl:output message="tns:getServerDataResponse" wsaw:Action="urn:getServerDataResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:getServerDataServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="isAlive">
      <wsdl:input message="tns:isAliveRequest" wsaw:Action="urn:isAlive"/>
      <wsdl:output message="tns:isAliveResponse" wsaw:Action="urn:isAliveResponse"/>
    </wsdl:operation>
    <wsdl:operation name="restartGracefully">
      <wsdl:input message="tns:restartGracefullyRequest" wsaw:Action="urn:restartGracefully"/>
      <wsdl:output message="tns:restartGracefullyResponse" wsaw:Action="urn:restartGracefullyResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:restartGracefullyServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="endMaintenance">
      <wsdl:input message="tns:endMaintenanceRequest" wsaw:Action="urn:endMaintenance"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:endMaintenanceServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getServerStatus">
      <wsdl:input message="tns:getServerStatusRequest" wsaw:Action="urn:getServerStatus"/>
      <wsdl:output message="tns:getServerStatusResponse" wsaw:Action="urn:getServerStatusResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:getServerStatusServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="shutdownGracefully">
      <wsdl:input message="tns:shutdownGracefullyRequest" wsaw:Action="urn:shutdownGracefully"/>
      <wsdl:output message="tns:shutdownGracefullyResponse" wsaw:Action="urn:shutdownGracefullyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="restart">
      <wsdl:input message="tns:restartRequest" wsaw:Action="urn:restart"/>
      <wsdl:output message="tns:restartResponse" wsaw:Action="urn:restartResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:restartServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getServerVersion">
      <wsdl:input message="tns:getServerVersionRequest" wsaw:Action="urn:getServerVersion"/>
      <wsdl:output message="tns:getServerVersionResponse" wsaw:Action="urn:getServerVersionResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServerDataAsString">
      <wsdl:input message="tns:getServerDataAsStringRequest" wsaw:Action="urn:getServerDataAsString"/>
      <wsdl:output message="tns:getServerDataAsStringResponse" wsaw:Action="urn:getServerDataAsStringResponse"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:getServerDataAsStringServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="startMaintenance">
      <wsdl:input message="tns:startMaintenanceRequest" wsaw:Action="urn:startMaintenance"/>
      <wsdl:fault message="tns:ServerAdminException" name="ServerAdminException" wsaw:Action="urn:startMaintenanceServerAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="shutdown">
      <wsdl:input message="tns:shutdownRequest" wsaw:Action="urn:shutdown"/>
      <wsdl:output message="tns:shutdownResponse" wsaw:Action="urn:shutdownResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServerAdminSoap11Binding" type="tns:ServerAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServerData">
      <soap:operation soapAction="urn:getServerData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAlive">
      <soap:operation soapAction="urn:isAlive" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restartGracefully">
      <soap:operation soapAction="urn:restartGracefully" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="endMaintenance">
      <soap:operation soapAction="urn:endMaintenance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerStatus">
      <soap:operation soapAction="urn:getServerStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shutdownGracefully">
      <soap:operation soapAction="urn:shutdownGracefully" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restart">
      <soap:operation soapAction="urn:restart" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerVersion">
      <soap:operation soapAction="urn:getServerVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServerDataAsString">
      <soap:operation soapAction="urn:getServerDataAsString" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startMaintenance">
      <soap:operation soapAction="urn:startMaintenance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServerAdminException">
        <soap:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shutdown">
      <soap:operation soapAction="urn:shutdown" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServerAdminSoap12Binding" type="tns:ServerAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServerData">
      <soap12:operation soapAction="urn:getServerData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAlive">
      <soap12:operation soapAction="urn:isAlive" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restartGracefully">
      <soap12:operation soapAction="urn:restartGracefully" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="endMaintenance">
      <soap12:operation soapAction="urn:endMaintenance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerStatus">
      <soap12:operation soapAction="urn:getServerStatus" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shutdownGracefully">
      <soap12:operation soapAction="urn:shutdownGracefully" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restart">
      <soap12:operation soapAction="urn:restart" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServerVersion">
      <soap12:operation soapAction="urn:getServerVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServerDataAsString">
      <soap12:operation soapAction="urn:getServerDataAsString" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startMaintenance">
      <soap12:operation soapAction="urn:startMaintenance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServerAdminException">
        <soap12:fault use="literal" name="ServerAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shutdown">
      <soap12:operation soapAction="urn:shutdown" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServerAdminHttpBinding" type="tns:ServerAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getServerData">
      <http:operation location="getServerData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAlive">
      <http:operation location="isAlive"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restartGracefully">
      <http:operation location="restartGracefully"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="endMaintenance">
      <http:operation location="endMaintenance"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getServerStatus">
      <http:operation location="getServerStatus"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="shutdownGracefully">
      <http:operation location="shutdownGracefully"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="restart">
      <http:operation location="restart"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServerVersion">
      <http:operation location="getServerVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServerDataAsString">
      <http:operation location="getServerDataAsString"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startMaintenance">
      <http:operation location="startMaintenance"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="shutdown">
      <http:operation location="shutdown"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServerAdmin">
    <wsdl:port name="ServerAdminHttpsSoap11Endpoint" binding="tns:ServerAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/ServerAdmin.ServerAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServerAdminHttpsSoap12Endpoint" binding="tns:ServerAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ServerAdmin.ServerAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServerAdminHttpsEndpoint" binding="tns:ServerAdminHttpBinding">
      <http:address location="https://localhost:9443/services/ServerAdmin.ServerAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ServerAdmin.ServerAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="a82318e2-3d33-4a77-b70e-1467a48c6b7a" isOneWay="false" action="urn:endMaintenance" name="endMaintenance" bindingOperationName="endMaintenance" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f8968e4e-44d8-491c-8595-479d286244bd" isOneWay="false" action="urn:getServerData" name="getServerData" bindingOperationName="getServerData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8073af2d-020c-4df9-8216-ed27afe3a3db" isOneWay="false" action="urn:getServerDataAsString" name="getServerDataAsString" bindingOperationName="getServerDataAsString" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="af6ce4c0-1af4-465d-a705-a0832ff7cf9d" isOneWay="false" action="urn:getServerStatus" name="getServerStatus" bindingOperationName="getServerStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c4e5ec73-2224-4994-8b84-f6c6ff358eac" isOneWay="false" action="urn:getServerVersion" name="getServerVersion" bindingOperationName="getServerVersion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48373963-501d-4403-b02d-368fee92b7ee" isOneWay="false" action="urn:isAlive" name="isAlive" bindingOperationName="isAlive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7e14c2b2-9279-4f56-8e69-2043885c71fe" isOneWay="false" action="urn:restart" name="restart" bindingOperationName="restart" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cc2bec31-c885-4a70-9977-58dd48378ec0" isOneWay="false" action="urn:restartGracefully" name="restartGracefully" bindingOperationName="restartGracefully" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7f04b552-e8d2-4750-9d4c-ed9e3c2025fb" isOneWay="false" action="urn:shutdown" name="shutdown" bindingOperationName="shutdown" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="278aee9b-919f-4995-be00-4da63ad84d7d" isOneWay="false" action="urn:shutdownGracefully" name="shutdownGracefully" bindingOperationName="shutdownGracefully" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="05183884-1c7d-4e53-bbee-542225d97e9b" isOneWay="false" action="urn:startMaintenance" name="startMaintenance" bindingOperationName="startMaintenance" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="5c849e06-12be-440d-b596-b1625ab700a1" wsaVersion="NONE" name="ServerRolesManagerSoap12Binding" type="wsdl" bindingName="{http://mgt.roles.carbon.wso2.org}ServerRolesManagerSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServerRolesManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ServerRolesManager.ServerRolesManagerHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="f76019f8-486d-4e17-8a7b-e78c704c44f1" isOneWay="false" action="urn:addServerRoles" name="addServerRoles" bindingOperationName="addServerRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="05d5a621-b35f-4784-9dfb-aad9d0f05389" isOneWay="false" action="urn:readServerRoles" name="readServerRoles" bindingOperationName="readServerRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4b73837d-d3d6-4680-8aa4-2f25d08cf4ea" isOneWay="false" action="urn:removeServerRoles" name="removeServerRoles" bindingOperationName="removeServerRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4946dd58-b72b-48e1-971c-a8a1fdf03b47" wsaVersion="NONE" name="ServerRolesManagerSoap11Binding" type="wsdl" bindingName="{http://mgt.roles.carbon.wso2.org}ServerRolesManagerSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServerRolesManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServerRolesManager.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServerRolesManager.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.roles.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2547="http://mgt.roles.carbon.wso2.org/xsd" xmlns:ns="http://mgt.roles.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ServerRolesManager</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.roles.carbon.wso2.org/xsd">
      <xs:complexType name="ServerRolesException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.roles.carbon.wso2.org" xmlns:ax2548="http://mgt.roles.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.roles.carbon.wso2.org/xsd"/>
      <xs:element name="ServerRolesManagerServerRolesException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ServerRolesException" nillable="true" type="ax2547:ServerRolesException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="readServerRoles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serverRoleType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="readServerRolesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServerRoles">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="serverRolesArray" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverRoleType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServerRolesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addServerRoles">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="serverRolesArray" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serverRoleType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addServerRolesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="removeServerRolesRequest">
    <wsdl:part name="parameters" element="ns:removeServerRoles"/>
  </wsdl:message>
  <wsdl:message name="removeServerRolesResponse">
    <wsdl:part name="parameters" element="ns:removeServerRolesResponse"/>
  </wsdl:message>
  <wsdl:message name="ServerRolesManagerServerRolesException">
    <wsdl:part name="parameters" element="ns:ServerRolesManagerServerRolesException"/>
  </wsdl:message>
  <wsdl:message name="addServerRolesRequest">
    <wsdl:part name="parameters" element="ns:addServerRoles"/>
  </wsdl:message>
  <wsdl:message name="addServerRolesResponse">
    <wsdl:part name="parameters" element="ns:addServerRolesResponse"/>
  </wsdl:message>
  <wsdl:message name="readServerRolesRequest">
    <wsdl:part name="parameters" element="ns:readServerRoles"/>
  </wsdl:message>
  <wsdl:message name="readServerRolesResponse">
    <wsdl:part name="parameters" element="ns:readServerRolesResponse"/>
  </wsdl:message>
  <wsdl:portType name="ServerRolesManagerPortType">
    <wsdl:operation name="removeServerRoles">
      <wsdl:input message="ns:removeServerRolesRequest" wsaw:Action="urn:removeServerRoles"/>
      <wsdl:output message="ns:removeServerRolesResponse" wsaw:Action="urn:removeServerRolesResponse"/>
      <wsdl:fault message="ns:ServerRolesManagerServerRolesException" name="ServerRolesManagerServerRolesException" wsaw:Action="urn:removeServerRolesServerRolesManagerServerRolesException"/>
    </wsdl:operation>
    <wsdl:operation name="addServerRoles">
      <wsdl:input message="ns:addServerRolesRequest" wsaw:Action="urn:addServerRoles"/>
      <wsdl:output message="ns:addServerRolesResponse" wsaw:Action="urn:addServerRolesResponse"/>
      <wsdl:fault message="ns:ServerRolesManagerServerRolesException" name="ServerRolesManagerServerRolesException" wsaw:Action="urn:addServerRolesServerRolesManagerServerRolesException"/>
    </wsdl:operation>
    <wsdl:operation name="readServerRoles">
      <wsdl:input message="ns:readServerRolesRequest" wsaw:Action="urn:readServerRoles"/>
      <wsdl:output message="ns:readServerRolesResponse" wsaw:Action="urn:readServerRolesResponse"/>
      <wsdl:fault message="ns:ServerRolesManagerServerRolesException" name="ServerRolesManagerServerRolesException" wsaw:Action="urn:readServerRolesServerRolesManagerServerRolesException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServerRolesManagerSoap11Binding" type="ns:ServerRolesManagerPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeServerRoles">
      <soap:operation soapAction="urn:removeServerRoles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerRolesManagerServerRolesException">
        <soap:fault use="literal" name="ServerRolesManagerServerRolesException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addServerRoles">
      <soap:operation soapAction="urn:addServerRoles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerRolesManagerServerRolesException">
        <soap:fault use="literal" name="ServerRolesManagerServerRolesException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readServerRoles">
      <soap:operation soapAction="urn:readServerRoles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerRolesManagerServerRolesException">
        <soap:fault use="literal" name="ServerRolesManagerServerRolesException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServerRolesManagerSoap12Binding" type="ns:ServerRolesManagerPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeServerRoles">
      <soap12:operation soapAction="urn:removeServerRoles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerRolesManagerServerRolesException">
        <soap12:fault use="literal" name="ServerRolesManagerServerRolesException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addServerRoles">
      <soap12:operation soapAction="urn:addServerRoles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerRolesManagerServerRolesException">
        <soap12:fault use="literal" name="ServerRolesManagerServerRolesException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="readServerRoles">
      <soap12:operation soapAction="urn:readServerRoles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerRolesManagerServerRolesException">
        <soap12:fault use="literal" name="ServerRolesManagerServerRolesException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServerRolesManagerHttpBinding" type="ns:ServerRolesManagerPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="removeServerRoles">
      <http:operation location="removeServerRoles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addServerRoles">
      <http:operation location="addServerRoles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="readServerRoles">
      <http:operation location="readServerRoles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServerRolesManager">
    <wsdl:port name="ServerRolesManagerHttpsSoap11Endpoint" binding="ns:ServerRolesManagerSoap11Binding">
      <soap:address location="https://localhost:9443/services/ServerRolesManager.ServerRolesManagerHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServerRolesManagerHttpsSoap12Endpoint" binding="ns:ServerRolesManagerSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ServerRolesManager.ServerRolesManagerHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServerRolesManagerHttpsEndpoint" binding="ns:ServerRolesManagerHttpBinding">
      <http:address location="https://localhost:9443/services/ServerRolesManager.ServerRolesManagerHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ServerRolesManager.ServerRolesManagerHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="274b1104-dac0-408c-a450-190959da6cc5" isOneWay="false" action="urn:addServerRoles" name="addServerRoles" bindingOperationName="addServerRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="65b4c237-41ac-4252-ac15-60fd4dfd6d90" isOneWay="false" action="urn:readServerRoles" name="readServerRoles" bindingOperationName="readServerRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0a194429-e8f4-4b3d-a20a-0adbcb6b3e3f" isOneWay="false" action="urn:removeServerRoles" name="removeServerRoles" bindingOperationName="removeServerRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="17194076-bac2-4bf8-9294-93e1d120b6b6" wsaVersion="NONE" name="ServiceAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.service.carbon.wso2.org}ServiceAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServiceAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ServiceAdmin.ServiceAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="ce468e08-32f5-4344-acec-14c0a5b01579" isOneWay="false" action="urn:addPoliciesToService" name="addPoliciesToService" bindingOperationName="addPoliciesToService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7b76fece-0131-48c5-aac9-c9178df48537" isOneWay="false" action="urn:addTransportBinding" name="addTransportBinding" bindingOperationName="addTransportBinding" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="364f7b53-d432-46fc-8a19-b0076ed2b1db" isOneWay="false" action="urn:changeServiceState" name="changeServiceState" bindingOperationName="changeServiceState" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d824187-2982-4ab9-a7b6-a675baec2638" isOneWay="false" action="urn:checkForGroupedServices" name="checkForGroupedServices" bindingOperationName="checkForGroupedServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="30f98fc9-9f89-4a2b-99b1-aaea6bfd86ea" isOneWay="false" action="urn:configureMTOM" name="configureMTOM" bindingOperationName="configureMTOM" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="65c8e488-abb9-44e3-aa1e-0bad8c372fa5" isOneWay="false" action="urn:deleteAllFaultyServiceGroups" name="deleteAllFaultyServiceGroups" bindingOperationName="deleteAllFaultyServiceGroups" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="88fa83da-4c6d-4e36-a6bb-67e40ae31726" isOneWay="false" action="urn:deleteAllNonAdminServiceGroups" name="deleteAllNonAdminServiceGroups" bindingOperationName="deleteAllNonAdminServiceGroups" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7062b1fb-7f80-4150-83f8-06827f0cc92f" isOneWay="false" action="urn:deleteFaultyServiceGroup" name="deleteFaultyServiceGroup" bindingOperationName="deleteFaultyServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="caccc5a3-84a5-4f24-981a-2ac2df08a465" isOneWay="false" action="urn:deleteFaultyServiceGroups" name="deleteFaultyServiceGroups" bindingOperationName="deleteFaultyServiceGroups" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="15f97bad-ef67-4fd3-b0e0-cbfe090a2a11" isOneWay="false" action="urn:deleteServiceGroups" name="deleteServiceGroups" bindingOperationName="deleteServiceGroups" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b38bada6-7c35-4e0e-9f14-84915b7beb7c" isOneWay="false" action="urn:downloadServiceArchive" name="downloadServiceArchive" bindingOperationName="downloadServiceArchive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aac17cb1-23be-41f7-a998-68dcc12cc3ef" isOneWay="false" action="urn:engageModuleToService" name="engageModuleToService" bindingOperationName="engageModuleToService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0fb7e6dd-93cc-4c91-ace4-94292f7fbb97" isOneWay="false" action="urn:getBindingOperationMessagePolicy" name="getBindingOperationMessagePolicy" bindingOperationName="getBindingOperationMessagePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5fa89032-65b4-4994-9ee8-a3dc6d8137da" isOneWay="false" action="urn:getBindingOperationPolicy" name="getBindingOperationPolicy" bindingOperationName="getBindingOperationPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f189080c-9cd1-42fe-96db-320d1b31d669" isOneWay="false" action="urn:getBindingPolicy" name="getBindingPolicy" bindingOperationName="getBindingPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="42818d5d-3a82-40ad-bb3b-1455cd9f9244" isOneWay="false" action="urn:getExposedTransports" name="getExposedTransports" bindingOperationName="getExposedTransports" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a053619a-a0a7-4019-b39b-e61ce38e3267" isOneWay="false" action="urn:getFaultyServiceArchives" name="getFaultyServiceArchives" bindingOperationName="getFaultyServiceArchives" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d372faf5-dcd5-41c8-9964-9081bf0a787e" isOneWay="false" action="urn:getModulePolicy" name="getModulePolicy" bindingOperationName="getModulePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8be66df4-6973-45b7-b047-2a21406692ee" isOneWay="false" action="urn:getNumberOfActiveServices" name="getNumberOfActiveServices" bindingOperationName="getNumberOfActiveServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="de4f4fae-6098-4958-9b78-be7fba9594fa" isOneWay="false" action="urn:getNumberOfFaultyServices" name="getNumberOfFaultyServices" bindingOperationName="getNumberOfFaultyServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="28c3dd71-7abe-468b-b0b5-a38053ae1eb8" isOneWay="false" action="urn:getNumberOfInactiveServices" name="getNumberOfInactiveServices" bindingOperationName="getNumberOfInactiveServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e5f474cc-c848-46f5-a103-859a0bf0e767" isOneWay="false" action="urn:getNumberOfServiceGroups" name="getNumberOfServiceGroups" bindingOperationName="getNumberOfServiceGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7cec6479-9bf4-460a-aac9-1258feb50d4c" isOneWay="false" action="urn:getOperationMessagePolicy" name="getOperationMessagePolicy" bindingOperationName="getOperationMessagePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a476f1e0-6f78-40a3-b906-f76cf101969c" isOneWay="false" action="urn:getOperationPolicy" name="getOperationPolicy" bindingOperationName="getOperationPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2dc728d5-a4aa-4035-badd-8009bde17a79" isOneWay="false" action="urn:getPolicies" name="getPolicies" bindingOperationName="getPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bb1ab812-997b-422f-a1b3-faf571ee977f" isOneWay="false" action="urn:getPolicy" name="getPolicy" bindingOperationName="getPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="247e4ae0-bd4e-4eee-a50d-656fa6c862aa" isOneWay="false" action="urn:getServiceBindings" name="getServiceBindings" bindingOperationName="getServiceBindings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="179fd28f-6c80-425f-adb1-c1119a4ef81d" isOneWay="false" action="urn:getServiceData" name="getServiceData" bindingOperationName="getServiceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="da1a056f-a44f-408f-8d6b-7c5d6048f9bd" isOneWay="false" action="urn:getServiceParameters" name="getServiceParameters" bindingOperationName="getServiceParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9e384797-6cb4-436a-8642-6c497874e606" isOneWay="false" action="urn:getWSDL" name="getWSDL" bindingOperationName="getWSDL" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3454627b-b2ad-4849-912c-11b9eea1e7b8" isOneWay="false" action="urn:listServiceGroup" name="listServiceGroup" bindingOperationName="listServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4d108187-36b9-4413-99f5-1aefceb1fea6" isOneWay="false" action="urn:listServices" name="listServices" bindingOperationName="listServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4c2b1cc9-0220-4e25-8ab4-63ccfb502c6f" isOneWay="false" action="urn:removeBindingPolicy" name="removeBindingPolicy" bindingOperationName="removeBindingPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2581a6ed-09c4-4819-8e41-2c01c14dfa87" isOneWay="false" action="urn:removeServiceParameter" name="removeServiceParameter" bindingOperationName="removeServiceParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e1351a25-413d-4366-80c9-1f529ca9da2b" isOneWay="false" action="urn:removeServicePoliciesByNamespace" name="removeServicePoliciesByNamespace" bindingOperationName="removeServicePoliciesByNamespace" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bf24f1be-2562-4477-809c-59a5ac6f1e5f" isOneWay="false" action="urn:removeTransportBinding" name="removeTransportBinding" bindingOperationName="removeTransportBinding" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="be06b290-389b-45ec-af05-9a39e2c31276" isOneWay="false" action="urn:setBindingOperationMessagePolicy" name="setBindingOperationMessagePolicy" bindingOperationName="setBindingOperationMessagePolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="24d167a1-9363-4c7c-a907-b93ec9f82696" isOneWay="false" action="urn:setBindingOperationPolicy" name="setBindingOperationPolicy" bindingOperationName="setBindingOperationPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3c49945a-45f8-4844-a193-34c2f20ca86c" isOneWay="false" action="urn:setBindingPolicy" name="setBindingPolicy" bindingOperationName="setBindingPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="64943eb0-5ede-494c-b25c-e123ea813be6" isOneWay="false" action="urn:setModulePolicy" name="setModulePolicy" bindingOperationName="setModulePolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b85ec42f-9f6b-4b6e-a7f6-265bda6ed64a" isOneWay="false" action="urn:setPolicy" name="setPolicy" bindingOperationName="setPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4a14cc45-08ab-48d7-8bd3-09b95b2528df" isOneWay="false" action="urn:setServiceOperationMessagePolicy" name="setServiceOperationMessagePolicy" bindingOperationName="setServiceOperationMessagePolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="91f5d8c6-e092-4a68-9d17-8e293afc9459" isOneWay="false" action="urn:setServiceOperationPolicy" name="setServiceOperationPolicy" bindingOperationName="setServiceOperationPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5659016c-93df-49be-a41e-db497a1512d0" isOneWay="false" action="urn:setServiceParameters" name="setServiceParameters" bindingOperationName="setServiceParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="84307be2-e2cf-45d8-8331-dd0ab2c21117" isOneWay="false" action="urn:setServicePolicy" name="setServicePolicy" bindingOperationName="setServicePolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="337baecb-3c09-4ebe-a124-c8f8ce071447" isOneWay="false" action="urn:startService" name="startService" bindingOperationName="startService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e3c03545-f0d4-4f9a-9932-653269ff6fe9" isOneWay="false" action="urn:stopService" name="stopService" bindingOperationName="stopService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b17eaea5-0f3f-455f-92d5-541f896fc8d6" wsaVersion="NONE" name="ServiceAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.service.carbon.wso2.org}ServiceAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServiceAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServiceAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServiceAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.service.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2575="http://utils.carbon.wso2.org/xsd" xmlns:ax2569="http://neethi.apache.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2570="http://util.java/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2573="http://mgt.service.carbon.wso2.org/xsd" xmlns:tns="http://mgt.service.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ServiceAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.java/xsd">
      <xs:complexType abstract="true" name="Iterator">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="Map">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2576="http://utils.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2572="http://neethi.apache.org/xsd" xmlns:ax2574="http://mgt.service.carbon.wso2.org/xsd">
      <xs:import namespace="http://neethi.apache.org/xsd"/>
      <xs:import namespace="http://mgt.service.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://utils.carbon.wso2.org/xsd"/>
      <xs:element name="ServiceAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ServiceAdminException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="startService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="stopService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWSDL">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWSDLResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExposedTransports">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExposedTransportsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addPoliciesToService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policy" nillable="true" type="ax2569:Policy"/>
            <xs:element minOccurs="0" name="policyType" type="xs:int"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="modulePaths" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="configureMTOM">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="flag" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2573:ServiceGroupMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServices">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceTypeFilter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceSearchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2573:ServiceMetaDataWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNumberOfServiceGroups">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNumberOfServiceGroupsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServicePoliciesByNamespace">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="namesapce" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="engageModuleToService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNumberOfActiveServices">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNumberOfActiveServicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNumberOfInactiveServices">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNumberOfInactiveServicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNumberOfFaultyServices">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNumberOfFaultyServicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFaultyServiceArchives">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getFaultyServiceArchivesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2573:FaultyServicesWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteFaultyServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="archiveName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteFaultyServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllNonAdminServiceGroups">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllFaultyServiceGroups">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="checkForGroupedServices">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceGroupsList" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="checkForGroupedServicesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteServiceGroups">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceGroups" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteFaultyServiceGroups">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="fileNames" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2573:ServiceMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeServiceState">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="isActive" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTransportBinding">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="transportProtocol" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTransportBindingResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeTransportBinding">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="transportProtocol" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeTransportBindingResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServiceAdminServerException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ServerException" nillable="true" type="ax2575:ServerException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeBindingPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyKey" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="moduleNames" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setServiceParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="parameters" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServiceParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceParametersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModulePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getModulePolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setModulePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="moduleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="moduleVersion" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationMessagePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="messageType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationMessagePolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPolicies">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPoliciesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2573:PolicyMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBindingPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBindingPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBindingOperationPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBindingOperationPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBindingOperationMessagePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="messageType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBindingOperationMessagePolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setServicePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setServiceOperationPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setServiceOperationMessagePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="messageType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setBindingPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setBindingOperationPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setBindingOperationMessagePolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="messageType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="policyString" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceBindings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceBindingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadServiceArchive">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadServiceArchiveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2573:ServiceDownloadData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.carbon.wso2.org/xsd">
      <xs:complexType name="ServerException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://neethi.apache.org/xsd" xmlns:ax2571="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType abstract="true" name="AbstractPolicyOperator">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
          <xs:element minOccurs="0" name="firstPolicyComponent" nillable="true" type="ax2569:PolicyComponent"/>
          <xs:element minOccurs="0" name="policyComponents" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="PolicyComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="type" type="xs:short"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="All">
        <xs:complexContent>
          <xs:extension base="ax2569:AbstractPolicyOperator">
            <xs:sequence>
              <xs:element minOccurs="0" name="assertions" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="type" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Policy">
        <xs:complexContent>
          <xs:extension base="ax2569:All">
            <xs:sequence>
              <xs:element minOccurs="0" name="alternatives" nillable="true" type="ax2570:Iterator"/>
              <xs:element minOccurs="0" name="attributes" nillable="true" type="ax2570:Map"/>
              <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="type" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.service.carbon.wso2.org/xsd">
      <xs:complexType name="ServiceGroupMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="disableDeletion" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="engagedModules" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mtomStatus" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceContextPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="services" nillable="true" type="ax2573:ServiceMetaData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="CAppArtifact" type="xs:boolean"/>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="disableDeletion" type="xs:boolean"/>
          <xs:element minOccurs="0" name="disableTryit" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="eprs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="foundWebResources" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mtomStatus" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="operations" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="securityScenarioId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceDeployedTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceUpTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tryitURL" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsdlPortTypes" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsdlPorts" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsdlURLs" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceMetaDataWrapper">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfActiveServices" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfCorrectServiceGroups" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfFaultyServiceGroups" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceTypes" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="services" nillable="true" type="ax2573:ServiceMetaData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FaultyServicesWrapper">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultyServices" nillable="true" type="ax2573:FaultyService"/>
          <xs:element minOccurs="0" name="numberOfFaultyServiceGroups" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FaultyService">
        <xs:sequence>
          <xs:element minOccurs="0" name="artifact" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fault" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PolicyMetaData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="polycies" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="wrapper" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceDownloadData">
        <xs:sequence>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceFileData" nillable="true" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getBindingPolicyRequest">
    <wsdl:part name="parameters" element="ns1:getBindingPolicy"/>
  </wsdl:message>
  <wsdl:message name="getBindingPolicyResponse">
    <wsdl:part name="parameters" element="ns1:getBindingPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="setBindingOperationMessagePolicyRequest">
    <wsdl:part name="parameters" element="ns1:setBindingOperationMessagePolicy"/>
  </wsdl:message>
  <wsdl:message name="ServiceAdminException">
    <wsdl:part name="parameters" element="ns1:ServiceAdminException"/>
  </wsdl:message>
  <wsdl:message name="getExposedTransportsRequest">
    <wsdl:part name="parameters" element="ns1:getExposedTransports"/>
  </wsdl:message>
  <wsdl:message name="getExposedTransportsResponse">
    <wsdl:part name="parameters" element="ns1:getExposedTransportsResponse"/>
  </wsdl:message>
  <wsdl:message name="setPolicyRequest">
    <wsdl:part name="parameters" element="ns1:setPolicy"/>
  </wsdl:message>
  <wsdl:message name="removeServicePoliciesByNamespaceRequest">
    <wsdl:part name="parameters" element="ns1:removeServicePoliciesByNamespace"/>
  </wsdl:message>
  <wsdl:message name="listServicesRequest">
    <wsdl:part name="parameters" element="ns1:listServices"/>
  </wsdl:message>
  <wsdl:message name="listServicesResponse">
    <wsdl:part name="parameters" element="ns1:listServicesResponse"/>
  </wsdl:message>
  <wsdl:message name="changeServiceStateRequest">
    <wsdl:part name="parameters" element="ns1:changeServiceState"/>
  </wsdl:message>
  <wsdl:message name="removeTransportBindingRequest">
    <wsdl:part name="parameters" element="ns1:removeTransportBinding"/>
  </wsdl:message>
  <wsdl:message name="removeTransportBindingResponse">
    <wsdl:part name="parameters" element="ns1:removeTransportBindingResponse"/>
  </wsdl:message>
  <wsdl:message name="addTransportBindingRequest">
    <wsdl:part name="parameters" element="ns1:addTransportBinding"/>
  </wsdl:message>
  <wsdl:message name="addTransportBindingResponse">
    <wsdl:part name="parameters" element="ns1:addTransportBindingResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceDataRequest">
    <wsdl:part name="parameters" element="ns1:getServiceData"/>
  </wsdl:message>
  <wsdl:message name="getServiceDataResponse">
    <wsdl:part name="parameters" element="ns1:getServiceDataResponse"/>
  </wsdl:message>
  <wsdl:message name="setServiceParametersRequest">
    <wsdl:part name="parameters" element="ns1:setServiceParameters"/>
  </wsdl:message>
  <wsdl:message name="deleteFaultyServiceGroupsRequest">
    <wsdl:part name="parameters" element="ns1:deleteFaultyServiceGroups"/>
  </wsdl:message>
  <wsdl:message name="deleteFaultyServiceGroupRequest">
    <wsdl:part name="parameters" element="ns1:deleteFaultyServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="deleteFaultyServiceGroupResponse">
    <wsdl:part name="parameters" element="ns1:deleteFaultyServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="getFaultyServiceArchivesRequest">
    <wsdl:part name="parameters" element="ns1:getFaultyServiceArchives"/>
  </wsdl:message>
  <wsdl:message name="getFaultyServiceArchivesResponse">
    <wsdl:part name="parameters" element="ns1:getFaultyServiceArchivesResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceParametersRequest">
    <wsdl:part name="parameters" element="ns1:getServiceParameters"/>
  </wsdl:message>
  <wsdl:message name="getServiceParametersResponse">
    <wsdl:part name="parameters" element="ns1:getServiceParametersResponse"/>
  </wsdl:message>
  <wsdl:message name="ServiceAdminServerException">
    <wsdl:part name="parameters" element="ns1:ServiceAdminServerException"/>
  </wsdl:message>
  <wsdl:message name="deleteServiceGroupsRequest">
    <wsdl:part name="parameters" element="ns1:deleteServiceGroups"/>
  </wsdl:message>
  <wsdl:message name="setServiceOperationPolicyRequest">
    <wsdl:part name="parameters" element="ns1:setServiceOperationPolicy"/>
  </wsdl:message>
  <wsdl:message name="deleteAllNonAdminServiceGroupsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllNonAdminServiceGroups"/>
  </wsdl:message>
  <wsdl:message name="engageModuleToServiceRequest">
    <wsdl:part name="parameters" element="ns1:engageModuleToService"/>
  </wsdl:message>
  <wsdl:message name="setServicePolicyRequest">
    <wsdl:part name="parameters" element="ns1:setServicePolicy"/>
  </wsdl:message>
  <wsdl:message name="setBindingPolicyRequest">
    <wsdl:part name="parameters" element="ns1:setBindingPolicy"/>
  </wsdl:message>
  <wsdl:message name="checkForGroupedServicesRequest">
    <wsdl:part name="parameters" element="ns1:checkForGroupedServices"/>
  </wsdl:message>
  <wsdl:message name="checkForGroupedServicesResponse">
    <wsdl:part name="parameters" element="ns1:checkForGroupedServicesResponse"/>
  </wsdl:message>
  <wsdl:message name="addPoliciesToServiceRequest">
    <wsdl:part name="parameters" element="ns1:addPoliciesToService"/>
  </wsdl:message>
  <wsdl:message name="setModulePolicyRequest">
    <wsdl:part name="parameters" element="ns1:setModulePolicy"/>
  </wsdl:message>
  <wsdl:message name="getNumberOfInactiveServicesRequest">
    <wsdl:part name="parameters" element="ns1:getNumberOfInactiveServices"/>
  </wsdl:message>
  <wsdl:message name="getNumberOfInactiveServicesResponse">
    <wsdl:part name="parameters" element="ns1:getNumberOfInactiveServicesResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceBindingsRequest">
    <wsdl:part name="parameters" element="ns1:getServiceBindings"/>
  </wsdl:message>
  <wsdl:message name="getServiceBindingsResponse">
    <wsdl:part name="parameters" element="ns1:getServiceBindingsResponse"/>
  </wsdl:message>
  <wsdl:message name="getModulePolicyRequest">
    <wsdl:part name="parameters" element="ns1:getModulePolicy"/>
  </wsdl:message>
  <wsdl:message name="getModulePolicyResponse">
    <wsdl:part name="parameters" element="ns1:getModulePolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="getPolicyRequest">
    <wsdl:part name="parameters" element="ns1:getPolicy"/>
  </wsdl:message>
  <wsdl:message name="getPolicyResponse">
    <wsdl:part name="parameters" element="ns1:getPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="getBindingOperationPolicyRequest">
    <wsdl:part name="parameters" element="ns1:getBindingOperationPolicy"/>
  </wsdl:message>
  <wsdl:message name="getBindingOperationPolicyResponse">
    <wsdl:part name="parameters" element="ns1:getBindingOperationPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="downloadServiceArchiveRequest">
    <wsdl:part name="parameters" element="ns1:downloadServiceArchive"/>
  </wsdl:message>
  <wsdl:message name="downloadServiceArchiveResponse">
    <wsdl:part name="parameters" element="ns1:downloadServiceArchiveResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteAllFaultyServiceGroupsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllFaultyServiceGroups"/>
  </wsdl:message>
  <wsdl:message name="getBindingOperationMessagePolicyRequest">
    <wsdl:part name="parameters" element="ns1:getBindingOperationMessagePolicy"/>
  </wsdl:message>
  <wsdl:message name="getBindingOperationMessagePolicyResponse">
    <wsdl:part name="parameters" element="ns1:getBindingOperationMessagePolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="setServiceOperationMessagePolicyRequest">
    <wsdl:part name="parameters" element="ns1:setServiceOperationMessagePolicy"/>
  </wsdl:message>
  <wsdl:message name="configureMTOMRequest">
    <wsdl:part name="parameters" element="ns1:configureMTOM"/>
  </wsdl:message>
  <wsdl:message name="getOperationMessagePolicyRequest">
    <wsdl:part name="parameters" element="ns1:getOperationMessagePolicy"/>
  </wsdl:message>
  <wsdl:message name="getOperationMessagePolicyResponse">
    <wsdl:part name="parameters" element="ns1:getOperationMessagePolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="startServiceRequest">
    <wsdl:part name="parameters" element="ns1:startService"/>
  </wsdl:message>
  <wsdl:message name="getPoliciesRequest">
    <wsdl:part name="parameters" element="ns1:getPolicies"/>
  </wsdl:message>
  <wsdl:message name="getPoliciesResponse">
    <wsdl:part name="parameters" element="ns1:getPoliciesResponse"/>
  </wsdl:message>
  <wsdl:message name="removeServiceParameterRequest">
    <wsdl:part name="parameters" element="ns1:removeServiceParameter"/>
  </wsdl:message>
  <wsdl:message name="removeBindingPolicyRequest">
    <wsdl:part name="parameters" element="ns1:removeBindingPolicy"/>
  </wsdl:message>
  <wsdl:message name="getNumberOfActiveServicesRequest">
    <wsdl:part name="parameters" element="ns1:getNumberOfActiveServices"/>
  </wsdl:message>
  <wsdl:message name="getNumberOfActiveServicesResponse">
    <wsdl:part name="parameters" element="ns1:getNumberOfActiveServicesResponse"/>
  </wsdl:message>
  <wsdl:message name="getNumberOfFaultyServicesRequest">
    <wsdl:part name="parameters" element="ns1:getNumberOfFaultyServices"/>
  </wsdl:message>
  <wsdl:message name="getNumberOfFaultyServicesResponse">
    <wsdl:part name="parameters" element="ns1:getNumberOfFaultyServicesResponse"/>
  </wsdl:message>
  <wsdl:message name="getWSDLRequest">
    <wsdl:part name="parameters" element="ns1:getWSDL"/>
  </wsdl:message>
  <wsdl:message name="getWSDLResponse">
    <wsdl:part name="parameters" element="ns1:getWSDLResponse"/>
  </wsdl:message>
  <wsdl:message name="stopServiceRequest">
    <wsdl:part name="parameters" element="ns1:stopService"/>
  </wsdl:message>
  <wsdl:message name="getNumberOfServiceGroupsRequest">
    <wsdl:part name="parameters" element="ns1:getNumberOfServiceGroups"/>
  </wsdl:message>
  <wsdl:message name="getNumberOfServiceGroupsResponse">
    <wsdl:part name="parameters" element="ns1:getNumberOfServiceGroupsResponse"/>
  </wsdl:message>
  <wsdl:message name="setBindingOperationPolicyRequest">
    <wsdl:part name="parameters" element="ns1:setBindingOperationPolicy"/>
  </wsdl:message>
  <wsdl:message name="getOperationPolicyRequest">
    <wsdl:part name="parameters" element="ns1:getOperationPolicy"/>
  </wsdl:message>
  <wsdl:message name="getOperationPolicyResponse">
    <wsdl:part name="parameters" element="ns1:getOperationPolicyResponse"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupRequest">
    <wsdl:part name="parameters" element="ns1:listServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupResponse">
    <wsdl:part name="parameters" element="ns1:listServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:portType name="ServiceAdminPortType">
    <wsdl:operation name="getBindingPolicy">
      <wsdl:input message="tns:getBindingPolicyRequest" wsaw:Action="urn:getBindingPolicy"/>
      <wsdl:output message="tns:getBindingPolicyResponse" wsaw:Action="urn:getBindingPolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setBindingOperationMessagePolicy">
      <wsdl:input message="tns:setBindingOperationMessagePolicyRequest" wsaw:Action="urn:setBindingOperationMessagePolicy"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:setBindingOperationMessagePolicyServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getExposedTransports">
      <wsdl:input message="tns:getExposedTransportsRequest" wsaw:Action="urn:getExposedTransports"/>
      <wsdl:output message="tns:getExposedTransportsResponse" wsaw:Action="urn:getExposedTransportsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setPolicy">
      <wsdl:input message="tns:setPolicyRequest" wsaw:Action="urn:setPolicy"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:setPolicyServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="removeServicePoliciesByNamespace">
      <wsdl:input message="tns:removeServicePoliciesByNamespaceRequest" wsaw:Action="urn:removeServicePoliciesByNamespace"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:removeServicePoliciesByNamespaceServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listServices">
      <wsdl:input message="tns:listServicesRequest" wsaw:Action="urn:listServices"/>
      <wsdl:output message="tns:listServicesResponse" wsaw:Action="urn:listServicesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="changeServiceState">
      <wsdl:input message="tns:changeServiceStateRequest" wsaw:Action="urn:changeServiceState"/>
    </wsdl:operation>
    <wsdl:operation name="removeTransportBinding">
      <wsdl:input message="tns:removeTransportBindingRequest" wsaw:Action="urn:removeTransportBinding"/>
      <wsdl:output message="tns:removeTransportBindingResponse" wsaw:Action="urn:removeTransportBindingResponse"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:removeTransportBindingServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addTransportBinding">
      <wsdl:input message="tns:addTransportBindingRequest" wsaw:Action="urn:addTransportBinding"/>
      <wsdl:output message="tns:addTransportBindingResponse" wsaw:Action="urn:addTransportBindingResponse"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:addTransportBindingServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceData">
      <wsdl:input message="tns:getServiceDataRequest" wsaw:Action="urn:getServiceData"/>
      <wsdl:output message="tns:getServiceDataResponse" wsaw:Action="urn:getServiceDataResponse"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:getServiceDataServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setServiceParameters">
      <wsdl:input message="tns:setServiceParametersRequest" wsaw:Action="urn:setServiceParameters"/>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyServiceGroups">
      <wsdl:input message="tns:deleteFaultyServiceGroupsRequest" wsaw:Action="urn:deleteFaultyServiceGroups"/>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyServiceGroup">
      <wsdl:input message="tns:deleteFaultyServiceGroupRequest" wsaw:Action="urn:deleteFaultyServiceGroup"/>
      <wsdl:output message="tns:deleteFaultyServiceGroupResponse" wsaw:Action="urn:deleteFaultyServiceGroupResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getFaultyServiceArchives">
      <wsdl:input message="tns:getFaultyServiceArchivesRequest" wsaw:Action="urn:getFaultyServiceArchives"/>
      <wsdl:output message="tns:getFaultyServiceArchivesResponse" wsaw:Action="urn:getFaultyServiceArchivesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceParameters">
      <wsdl:input message="tns:getServiceParametersRequest" wsaw:Action="urn:getServiceParameters"/>
      <wsdl:output message="tns:getServiceParametersResponse" wsaw:Action="urn:getServiceParametersResponse"/>
      <wsdl:fault message="tns:ServiceAdminServerException" name="ServiceAdminServerException" wsaw:Action="urn:getServiceParametersServiceAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteServiceGroups">
      <wsdl:input message="tns:deleteServiceGroupsRequest" wsaw:Action="urn:deleteServiceGroups"/>
    </wsdl:operation>
    <wsdl:operation name="setServiceOperationPolicy">
      <wsdl:input message="tns:setServiceOperationPolicyRequest" wsaw:Action="urn:setServiceOperationPolicy"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:setServiceOperationPolicyServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllNonAdminServiceGroups">
      <wsdl:input message="tns:deleteAllNonAdminServiceGroupsRequest" wsaw:Action="urn:deleteAllNonAdminServiceGroups"/>
    </wsdl:operation>
    <wsdl:operation name="engageModuleToService">
      <wsdl:input message="tns:engageModuleToServiceRequest" wsaw:Action="urn:engageModuleToService"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:engageModuleToServiceServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setServicePolicy">
      <wsdl:input message="tns:setServicePolicyRequest" wsaw:Action="urn:setServicePolicy"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:setServicePolicyServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setBindingPolicy">
      <wsdl:input message="tns:setBindingPolicyRequest" wsaw:Action="urn:setBindingPolicy"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:setBindingPolicyServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="checkForGroupedServices">
      <wsdl:input message="tns:checkForGroupedServicesRequest" wsaw:Action="urn:checkForGroupedServices"/>
      <wsdl:output message="tns:checkForGroupedServicesResponse" wsaw:Action="urn:checkForGroupedServicesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="addPoliciesToService">
      <wsdl:input message="tns:addPoliciesToServiceRequest" wsaw:Action="urn:addPoliciesToService"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:addPoliciesToServiceServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setModulePolicy">
      <wsdl:input message="tns:setModulePolicyRequest" wsaw:Action="urn:setModulePolicy"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:setModulePolicyServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfInactiveServices">
      <wsdl:input message="tns:getNumberOfInactiveServicesRequest" wsaw:Action="urn:getNumberOfInactiveServices"/>
      <wsdl:output message="tns:getNumberOfInactiveServicesResponse" wsaw:Action="urn:getNumberOfInactiveServicesResponse"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:getNumberOfInactiveServicesServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceBindings">
      <wsdl:input message="tns:getServiceBindingsRequest" wsaw:Action="urn:getServiceBindings"/>
      <wsdl:output message="tns:getServiceBindingsResponse" wsaw:Action="urn:getServiceBindingsResponse"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:getServiceBindingsServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getModulePolicy">
      <wsdl:input message="tns:getModulePolicyRequest" wsaw:Action="urn:getModulePolicy"/>
      <wsdl:output message="tns:getModulePolicyResponse" wsaw:Action="urn:getModulePolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <wsdl:input message="tns:getPolicyRequest" wsaw:Action="urn:getPolicy"/>
      <wsdl:output message="tns:getPolicyResponse" wsaw:Action="urn:getPolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getBindingOperationPolicy">
      <wsdl:input message="tns:getBindingOperationPolicyRequest" wsaw:Action="urn:getBindingOperationPolicy"/>
      <wsdl:output message="tns:getBindingOperationPolicyResponse" wsaw:Action="urn:getBindingOperationPolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadServiceArchive">
      <wsdl:input message="tns:downloadServiceArchiveRequest" wsaw:Action="urn:downloadServiceArchive"/>
      <wsdl:output message="tns:downloadServiceArchiveResponse" wsaw:Action="urn:downloadServiceArchiveResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyServiceGroups">
      <wsdl:input message="tns:deleteAllFaultyServiceGroupsRequest" wsaw:Action="urn:deleteAllFaultyServiceGroups"/>
    </wsdl:operation>
    <wsdl:operation name="getBindingOperationMessagePolicy">
      <wsdl:input message="tns:getBindingOperationMessagePolicyRequest" wsaw:Action="urn:getBindingOperationMessagePolicy"/>
      <wsdl:output message="tns:getBindingOperationMessagePolicyResponse" wsaw:Action="urn:getBindingOperationMessagePolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setServiceOperationMessagePolicy">
      <wsdl:input message="tns:setServiceOperationMessagePolicyRequest" wsaw:Action="urn:setServiceOperationMessagePolicy"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:setServiceOperationMessagePolicyServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <wsdl:input message="tns:configureMTOMRequest" wsaw:Action="urn:configureMTOM"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationMessagePolicy">
      <wsdl:input message="tns:getOperationMessagePolicyRequest" wsaw:Action="urn:getOperationMessagePolicy"/>
      <wsdl:output message="tns:getOperationMessagePolicyResponse" wsaw:Action="urn:getOperationMessagePolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="startService">
      <wsdl:input message="tns:startServiceRequest" wsaw:Action="urn:startService"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:startServiceServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getPolicies">
      <wsdl:input message="tns:getPoliciesRequest" wsaw:Action="urn:getPolicies"/>
      <wsdl:output message="tns:getPoliciesResponse" wsaw:Action="urn:getPoliciesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="removeServiceParameter">
      <wsdl:input message="tns:removeServiceParameterRequest" wsaw:Action="urn:removeServiceParameter"/>
    </wsdl:operation>
    <wsdl:operation name="removeBindingPolicy">
      <wsdl:input message="tns:removeBindingPolicyRequest" wsaw:Action="urn:removeBindingPolicy"/>
      <wsdl:fault message="tns:ServiceAdminServerException" name="ServiceAdminServerException" wsaw:Action="urn:removeBindingPolicyServiceAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfActiveServices">
      <wsdl:input message="tns:getNumberOfActiveServicesRequest" wsaw:Action="urn:getNumberOfActiveServices"/>
      <wsdl:output message="tns:getNumberOfActiveServicesResponse" wsaw:Action="urn:getNumberOfActiveServicesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfFaultyServices">
      <wsdl:input message="tns:getNumberOfFaultyServicesRequest" wsaw:Action="urn:getNumberOfFaultyServices"/>
      <wsdl:output message="tns:getNumberOfFaultyServicesResponse" wsaw:Action="urn:getNumberOfFaultyServicesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getWSDL">
      <wsdl:input message="tns:getWSDLRequest" wsaw:Action="urn:getWSDL"/>
      <wsdl:output message="tns:getWSDLResponse" wsaw:Action="urn:getWSDLResponse"/>
    </wsdl:operation>
    <wsdl:operation name="stopService">
      <wsdl:input message="tns:stopServiceRequest" wsaw:Action="urn:stopService"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:stopServiceServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfServiceGroups">
      <wsdl:input message="tns:getNumberOfServiceGroupsRequest" wsaw:Action="urn:getNumberOfServiceGroups"/>
      <wsdl:output message="tns:getNumberOfServiceGroupsResponse" wsaw:Action="urn:getNumberOfServiceGroupsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setBindingOperationPolicy">
      <wsdl:input message="tns:setBindingOperationPolicyRequest" wsaw:Action="urn:setBindingOperationPolicy"/>
      <wsdl:fault message="tns:ServiceAdminException" name="ServiceAdminException" wsaw:Action="urn:setBindingOperationPolicyServiceAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationPolicy">
      <wsdl:input message="tns:getOperationPolicyRequest" wsaw:Action="urn:getOperationPolicy"/>
      <wsdl:output message="tns:getOperationPolicyResponse" wsaw:Action="urn:getOperationPolicyResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <wsdl:input message="tns:listServiceGroupRequest" wsaw:Action="urn:listServiceGroup"/>
      <wsdl:output message="tns:listServiceGroupResponse" wsaw:Action="urn:listServiceGroupResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceAdminSoap11Binding" type="tns:ServiceAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getBindingPolicy">
      <soap:operation soapAction="urn:getBindingPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBindingOperationMessagePolicy">
      <soap:operation soapAction="urn:setBindingOperationMessagePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExposedTransports">
      <soap:operation soapAction="urn:getExposedTransports" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setPolicy">
      <soap:operation soapAction="urn:setPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServicePoliciesByNamespace">
      <soap:operation soapAction="urn:removeServicePoliciesByNamespace" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listServices">
      <soap:operation soapAction="urn:listServices" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeServiceState">
      <soap:operation soapAction="urn:changeServiceState" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeTransportBinding">
      <soap:operation soapAction="urn:removeTransportBinding" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTransportBinding">
      <soap:operation soapAction="urn:addTransportBinding" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceData">
      <soap:operation soapAction="urn:getServiceData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceParameters">
      <soap:operation soapAction="urn:setServiceParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyServiceGroups">
      <soap:operation soapAction="urn:deleteFaultyServiceGroups" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyServiceGroup">
      <soap:operation soapAction="urn:deleteFaultyServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFaultyServiceArchives">
      <soap:operation soapAction="urn:getFaultyServiceArchives" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceParameters">
      <soap:operation soapAction="urn:getServiceParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminServerException">
        <soap:fault use="literal" name="ServiceAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteServiceGroups">
      <soap:operation soapAction="urn:deleteServiceGroups" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setServiceOperationPolicy">
      <soap:operation soapAction="urn:setServiceOperationPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAllNonAdminServiceGroups">
      <soap:operation soapAction="urn:deleteAllNonAdminServiceGroups" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="engageModuleToService">
      <soap:operation soapAction="urn:engageModuleToService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServicePolicy">
      <soap:operation soapAction="urn:setServicePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setBindingPolicy">
      <soap:operation soapAction="urn:setBindingPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkForGroupedServices">
      <soap:operation soapAction="urn:checkForGroupedServices" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addPoliciesToService">
      <soap:operation soapAction="urn:addPoliciesToService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setModulePolicy">
      <soap:operation soapAction="urn:setModulePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfInactiveServices">
      <soap:operation soapAction="urn:getNumberOfInactiveServices" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceBindings">
      <soap:operation soapAction="urn:getServiceBindings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModulePolicy">
      <soap:operation soapAction="urn:getModulePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <soap:operation soapAction="urn:getPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBindingOperationPolicy">
      <soap:operation soapAction="urn:getBindingOperationPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadServiceArchive">
      <soap:operation soapAction="urn:downloadServiceArchive" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyServiceGroups">
      <soap:operation soapAction="urn:deleteAllFaultyServiceGroups" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getBindingOperationMessagePolicy">
      <soap:operation soapAction="urn:getBindingOperationMessagePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setServiceOperationMessagePolicy">
      <soap:operation soapAction="urn:setServiceOperationMessagePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <soap:operation soapAction="urn:configureMTOM" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getOperationMessagePolicy">
      <soap:operation soapAction="urn:getOperationMessagePolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startService">
      <soap:operation soapAction="urn:startService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicies">
      <soap:operation soapAction="urn:getPolicies" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceParameter">
      <soap:operation soapAction="urn:removeServiceParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeBindingPolicy">
      <soap:operation soapAction="urn:removeBindingPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminServerException">
        <soap:fault use="literal" name="ServiceAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfActiveServices">
      <soap:operation soapAction="urn:getNumberOfActiveServices" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfFaultyServices">
      <soap:operation soapAction="urn:getNumberOfFaultyServices" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWSDL">
      <soap:operation soapAction="urn:getWSDL" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="stopService">
      <soap:operation soapAction="urn:stopService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfServiceGroups">
      <soap:operation soapAction="urn:getNumberOfServiceGroups" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBindingOperationPolicy">
      <soap:operation soapAction="urn:setBindingOperationPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOperationPolicy">
      <soap:operation soapAction="urn:getOperationPolicy" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <soap:operation soapAction="urn:listServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServiceAdminSoap12Binding" type="tns:ServiceAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getBindingPolicy">
      <soap12:operation soapAction="urn:getBindingPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBindingOperationMessagePolicy">
      <soap12:operation soapAction="urn:setBindingOperationMessagePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExposedTransports">
      <soap12:operation soapAction="urn:getExposedTransports" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setPolicy">
      <soap12:operation soapAction="urn:setPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServicePoliciesByNamespace">
      <soap12:operation soapAction="urn:removeServicePoliciesByNamespace" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listServices">
      <soap12:operation soapAction="urn:listServices" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeServiceState">
      <soap12:operation soapAction="urn:changeServiceState" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeTransportBinding">
      <soap12:operation soapAction="urn:removeTransportBinding" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTransportBinding">
      <soap12:operation soapAction="urn:addTransportBinding" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceData">
      <soap12:operation soapAction="urn:getServiceData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceParameters">
      <soap12:operation soapAction="urn:setServiceParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyServiceGroups">
      <soap12:operation soapAction="urn:deleteFaultyServiceGroups" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyServiceGroup">
      <soap12:operation soapAction="urn:deleteFaultyServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFaultyServiceArchives">
      <soap12:operation soapAction="urn:getFaultyServiceArchives" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceParameters">
      <soap12:operation soapAction="urn:getServiceParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminServerException">
        <soap12:fault use="literal" name="ServiceAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteServiceGroups">
      <soap12:operation soapAction="urn:deleteServiceGroups" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setServiceOperationPolicy">
      <soap12:operation soapAction="urn:setServiceOperationPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAllNonAdminServiceGroups">
      <soap12:operation soapAction="urn:deleteAllNonAdminServiceGroups" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="engageModuleToService">
      <soap12:operation soapAction="urn:engageModuleToService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServicePolicy">
      <soap12:operation soapAction="urn:setServicePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setBindingPolicy">
      <soap12:operation soapAction="urn:setBindingPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkForGroupedServices">
      <soap12:operation soapAction="urn:checkForGroupedServices" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addPoliciesToService">
      <soap12:operation soapAction="urn:addPoliciesToService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setModulePolicy">
      <soap12:operation soapAction="urn:setModulePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfInactiveServices">
      <soap12:operation soapAction="urn:getNumberOfInactiveServices" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceBindings">
      <soap12:operation soapAction="urn:getServiceBindings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getModulePolicy">
      <soap12:operation soapAction="urn:getModulePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <soap12:operation soapAction="urn:getPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBindingOperationPolicy">
      <soap12:operation soapAction="urn:getBindingOperationPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadServiceArchive">
      <soap12:operation soapAction="urn:downloadServiceArchive" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyServiceGroups">
      <soap12:operation soapAction="urn:deleteAllFaultyServiceGroups" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getBindingOperationMessagePolicy">
      <soap12:operation soapAction="urn:getBindingOperationMessagePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setServiceOperationMessagePolicy">
      <soap12:operation soapAction="urn:setServiceOperationMessagePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <soap12:operation soapAction="urn:configureMTOM" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getOperationMessagePolicy">
      <soap12:operation soapAction="urn:getOperationMessagePolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startService">
      <soap12:operation soapAction="urn:startService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPolicies">
      <soap12:operation soapAction="urn:getPolicies" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceParameter">
      <soap12:operation soapAction="urn:removeServiceParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeBindingPolicy">
      <soap12:operation soapAction="urn:removeBindingPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminServerException">
        <soap12:fault use="literal" name="ServiceAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfActiveServices">
      <soap12:operation soapAction="urn:getNumberOfActiveServices" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfFaultyServices">
      <soap12:operation soapAction="urn:getNumberOfFaultyServices" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWSDL">
      <soap12:operation soapAction="urn:getWSDL" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="stopService">
      <soap12:operation soapAction="urn:stopService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfServiceGroups">
      <soap12:operation soapAction="urn:getNumberOfServiceGroups" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBindingOperationPolicy">
      <soap12:operation soapAction="urn:setBindingOperationPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceAdminException">
        <soap12:fault use="literal" name="ServiceAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOperationPolicy">
      <soap12:operation soapAction="urn:getOperationPolicy" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <soap12:operation soapAction="urn:listServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServiceAdminHttpBinding" type="tns:ServiceAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getBindingPolicy">
      <http:operation location="getBindingPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBindingOperationMessagePolicy">
      <http:operation location="setBindingOperationMessagePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getExposedTransports">
      <http:operation location="getExposedTransports"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setPolicy">
      <http:operation location="setPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeServicePoliciesByNamespace">
      <http:operation location="removeServicePoliciesByNamespace"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listServices">
      <http:operation location="listServices"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeServiceState">
      <http:operation location="changeServiceState"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeTransportBinding">
      <http:operation location="removeTransportBinding"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTransportBinding">
      <http:operation location="addTransportBinding"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceData">
      <http:operation location="getServiceData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setServiceParameters">
      <http:operation location="setServiceParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyServiceGroups">
      <http:operation location="deleteFaultyServiceGroups"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyServiceGroup">
      <http:operation location="deleteFaultyServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getFaultyServiceArchives">
      <http:operation location="getFaultyServiceArchives"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceParameters">
      <http:operation location="getServiceParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteServiceGroups">
      <http:operation location="deleteServiceGroups"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setServiceOperationPolicy">
      <http:operation location="setServiceOperationPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllNonAdminServiceGroups">
      <http:operation location="deleteAllNonAdminServiceGroups"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="engageModuleToService">
      <http:operation location="engageModuleToService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setServicePolicy">
      <http:operation location="setServicePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setBindingPolicy">
      <http:operation location="setBindingPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="checkForGroupedServices">
      <http:operation location="checkForGroupedServices"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addPoliciesToService">
      <http:operation location="addPoliciesToService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setModulePolicy">
      <http:operation location="setModulePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfInactiveServices">
      <http:operation location="getNumberOfInactiveServices"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceBindings">
      <http:operation location="getServiceBindings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getModulePolicy">
      <http:operation location="getModulePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPolicy">
      <http:operation location="getPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBindingOperationPolicy">
      <http:operation location="getBindingOperationPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadServiceArchive">
      <http:operation location="downloadServiceArchive"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyServiceGroups">
      <http:operation location="deleteAllFaultyServiceGroups"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getBindingOperationMessagePolicy">
      <http:operation location="getBindingOperationMessagePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setServiceOperationMessagePolicy">
      <http:operation location="setServiceOperationMessagePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="configureMTOM">
      <http:operation location="configureMTOM"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getOperationMessagePolicy">
      <http:operation location="getOperationMessagePolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startService">
      <http:operation location="startService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPolicies">
      <http:operation location="getPolicies"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceParameter">
      <http:operation location="removeServiceParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeBindingPolicy">
      <http:operation location="removeBindingPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfActiveServices">
      <http:operation location="getNumberOfActiveServices"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfFaultyServices">
      <http:operation location="getNumberOfFaultyServices"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWSDL">
      <http:operation location="getWSDL"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="stopService">
      <http:operation location="stopService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getNumberOfServiceGroups">
      <http:operation location="getNumberOfServiceGroups"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBindingOperationPolicy">
      <http:operation location="setBindingOperationPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getOperationPolicy">
      <http:operation location="getOperationPolicy"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <http:operation location="listServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceAdmin">
    <wsdl:port name="ServiceAdminHttpsSoap11Endpoint" binding="tns:ServiceAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/ServiceAdmin.ServiceAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServiceAdminHttpsSoap12Endpoint" binding="tns:ServiceAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ServiceAdmin.ServiceAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServiceAdminHttpsEndpoint" binding="tns:ServiceAdminHttpBinding">
      <http:address location="https://localhost:9443/services/ServiceAdmin.ServiceAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ServiceAdmin.ServiceAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="aacb21b0-c835-4049-b4de-db978f664304" isOneWay="false" action="urn:addPoliciesToService" name="addPoliciesToService" bindingOperationName="addPoliciesToService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bfcc80b8-34df-4203-8faa-871277949adb" isOneWay="false" action="urn:addTransportBinding" name="addTransportBinding" bindingOperationName="addTransportBinding" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fd6b7e6a-a6f1-4014-8deb-a97c7489ff08" isOneWay="false" action="urn:changeServiceState" name="changeServiceState" bindingOperationName="changeServiceState" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="189d9776-201d-4a1d-a415-016fe6d1bc07" isOneWay="false" action="urn:checkForGroupedServices" name="checkForGroupedServices" bindingOperationName="checkForGroupedServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bdfd692e-dee2-406e-af7f-9cd6d2efbd1b" isOneWay="false" action="urn:configureMTOM" name="configureMTOM" bindingOperationName="configureMTOM" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8c75a408-d23d-4212-914b-b4a3a40df11e" isOneWay="false" action="urn:deleteAllFaultyServiceGroups" name="deleteAllFaultyServiceGroups" bindingOperationName="deleteAllFaultyServiceGroups" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bfbc804a-c2ad-4d2d-8ee4-fca1f7e314f0" isOneWay="false" action="urn:deleteAllNonAdminServiceGroups" name="deleteAllNonAdminServiceGroups" bindingOperationName="deleteAllNonAdminServiceGroups" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2a5f7d85-a947-4801-b6d0-32e04cd8a084" isOneWay="false" action="urn:deleteFaultyServiceGroup" name="deleteFaultyServiceGroup" bindingOperationName="deleteFaultyServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e211c904-05da-49e2-9f54-39472ee400dd" isOneWay="false" action="urn:deleteFaultyServiceGroups" name="deleteFaultyServiceGroups" bindingOperationName="deleteFaultyServiceGroups" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="634ee781-f894-4726-b9c6-43e0ea91effc" isOneWay="false" action="urn:deleteServiceGroups" name="deleteServiceGroups" bindingOperationName="deleteServiceGroups" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="92dfdb1b-f1ab-4bcb-ad3c-d69c83bbeb99" isOneWay="false" action="urn:downloadServiceArchive" name="downloadServiceArchive" bindingOperationName="downloadServiceArchive" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="df018f44-f234-46da-9df0-0ec241edf1c3" isOneWay="false" action="urn:engageModuleToService" name="engageModuleToService" bindingOperationName="engageModuleToService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9e0b93c6-fd46-4270-a14f-5759ccad4366" isOneWay="false" action="urn:getBindingOperationMessagePolicy" name="getBindingOperationMessagePolicy" bindingOperationName="getBindingOperationMessagePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="931a886d-4e24-4975-8169-08eba9832970" isOneWay="false" action="urn:getBindingOperationPolicy" name="getBindingOperationPolicy" bindingOperationName="getBindingOperationPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eb39c37a-7214-4ea6-a827-5a33fba2a7f5" isOneWay="false" action="urn:getBindingPolicy" name="getBindingPolicy" bindingOperationName="getBindingPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="56d2346a-aad7-4b0f-93c6-1e2607800e1e" isOneWay="false" action="urn:getExposedTransports" name="getExposedTransports" bindingOperationName="getExposedTransports" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a0641483-7017-4af4-bbc9-ccb664de12e4" isOneWay="false" action="urn:getFaultyServiceArchives" name="getFaultyServiceArchives" bindingOperationName="getFaultyServiceArchives" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="628d1753-20bc-4039-8cb1-478393877d8a" isOneWay="false" action="urn:getModulePolicy" name="getModulePolicy" bindingOperationName="getModulePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4ff6fed7-3464-48f3-8f1f-239eeaec1a7f" isOneWay="false" action="urn:getNumberOfActiveServices" name="getNumberOfActiveServices" bindingOperationName="getNumberOfActiveServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a7330c3-a6d0-43d7-b14a-2b109962e074" isOneWay="false" action="urn:getNumberOfFaultyServices" name="getNumberOfFaultyServices" bindingOperationName="getNumberOfFaultyServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3de92a4e-bf7d-46b6-ae02-38ccce84d5f5" isOneWay="false" action="urn:getNumberOfInactiveServices" name="getNumberOfInactiveServices" bindingOperationName="getNumberOfInactiveServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c778f178-d3c5-4854-868f-5e2c02fb56f8" isOneWay="false" action="urn:getNumberOfServiceGroups" name="getNumberOfServiceGroups" bindingOperationName="getNumberOfServiceGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="36b3bbe9-d44f-4e81-8fb8-3804b71a1b53" isOneWay="false" action="urn:getOperationMessagePolicy" name="getOperationMessagePolicy" bindingOperationName="getOperationMessagePolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b64b0024-a485-44cc-8cc9-6935e9f27a55" isOneWay="false" action="urn:getOperationPolicy" name="getOperationPolicy" bindingOperationName="getOperationPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e6ab3071-578e-463c-97e5-ad7e0583358a" isOneWay="false" action="urn:getPolicies" name="getPolicies" bindingOperationName="getPolicies" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="22b8fdaa-607f-49d4-8d45-dc8110ade6e3" isOneWay="false" action="urn:getPolicy" name="getPolicy" bindingOperationName="getPolicy" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="07d3b387-2bca-466e-9bcb-3413f23b87d6" isOneWay="false" action="urn:getServiceBindings" name="getServiceBindings" bindingOperationName="getServiceBindings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="926db6e2-aac1-4f31-8e01-d56d17f96cbd" isOneWay="false" action="urn:getServiceData" name="getServiceData" bindingOperationName="getServiceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="95cd1119-7196-4c75-9ac0-6838245a998b" isOneWay="false" action="urn:getServiceParameters" name="getServiceParameters" bindingOperationName="getServiceParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1c6755a5-d942-4206-87a6-345c62c95236" isOneWay="false" action="urn:getWSDL" name="getWSDL" bindingOperationName="getWSDL" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="71f27c2a-4cc7-4bc0-98f4-6a06e098ceba" isOneWay="false" action="urn:listServiceGroup" name="listServiceGroup" bindingOperationName="listServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bd930cf0-e13f-4b53-bcf9-f8438104a017" isOneWay="false" action="urn:listServices" name="listServices" bindingOperationName="listServices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="78617f64-1d91-4ad5-9349-02386cc3665b" isOneWay="false" action="urn:removeBindingPolicy" name="removeBindingPolicy" bindingOperationName="removeBindingPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f0d1dae-a958-4615-82fc-ef827a2cd3eb" isOneWay="false" action="urn:removeServiceParameter" name="removeServiceParameter" bindingOperationName="removeServiceParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cce7801c-1a69-416d-8242-587e6ce1f8d6" isOneWay="false" action="urn:removeServicePoliciesByNamespace" name="removeServicePoliciesByNamespace" bindingOperationName="removeServicePoliciesByNamespace" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c84745a6-bb40-49c8-b7bf-ead9c612b048" isOneWay="false" action="urn:removeTransportBinding" name="removeTransportBinding" bindingOperationName="removeTransportBinding" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b8980191-644b-4e23-9da3-4f49fe608ba5" isOneWay="false" action="urn:setBindingOperationMessagePolicy" name="setBindingOperationMessagePolicy" bindingOperationName="setBindingOperationMessagePolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bc813666-aa55-4ea5-852c-87a9ed0cc2ca" isOneWay="false" action="urn:setBindingOperationPolicy" name="setBindingOperationPolicy" bindingOperationName="setBindingOperationPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5b9e1c46-3973-408a-a38a-9fc1e3c8dd82" isOneWay="false" action="urn:setBindingPolicy" name="setBindingPolicy" bindingOperationName="setBindingPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2a8d3eca-d1d3-493d-aecd-8833e72ad057" isOneWay="false" action="urn:setModulePolicy" name="setModulePolicy" bindingOperationName="setModulePolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="18cf2b68-f6ed-4e52-8a8c-c40a58c183b8" isOneWay="false" action="urn:setPolicy" name="setPolicy" bindingOperationName="setPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6821f151-8c22-4634-9bb8-6b49eae3a4ce" isOneWay="false" action="urn:setServiceOperationMessagePolicy" name="setServiceOperationMessagePolicy" bindingOperationName="setServiceOperationMessagePolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0eb06696-dd01-45e1-b539-299a5a2bf3ed" isOneWay="false" action="urn:setServiceOperationPolicy" name="setServiceOperationPolicy" bindingOperationName="setServiceOperationPolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5d828359-c999-4e71-9332-3f3ed9db591d" isOneWay="false" action="urn:setServiceParameters" name="setServiceParameters" bindingOperationName="setServiceParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="352595bc-ee0e-489e-ac3b-c706dacbee7b" isOneWay="false" action="urn:setServicePolicy" name="setServicePolicy" bindingOperationName="setServicePolicy" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eb01bc41-0876-487d-9c60-b2003511d2db" isOneWay="false" action="urn:startService" name="startService" bindingOperationName="startService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="29a8d785-9e9f-4d97-a523-7f7907587987" isOneWay="false" action="urn:stopService" name="stopService" bindingOperationName="stopService" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="766831bf-fa6c-466f-90f3-593e39f0e23a" wsaVersion="NONE" name="ServiceGroupAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.service.carbon.wso2.org}ServiceGroupAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServiceGroupAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="30ed8b30-1c07-4e20-a973-e7f963d23549" isOneWay="false" action="urn:configureServiceGroupMTOM" name="configureServiceGroupMTOM" bindingOperationName="configureServiceGroupMTOM" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ceb13377-f3b7-4a10-bb14-fcffc9162ed2" isOneWay="false" action="urn:dumpAAR" name="dumpAAR" bindingOperationName="dumpAAR" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e9792c73-3235-457d-aa5d-6e7472897d9e" isOneWay="false" action="urn:getServiceGroupParameter" name="getServiceGroupParameter" bindingOperationName="getServiceGroupParameter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e794aec-1046-4ca3-9199-21036bdd8301" isOneWay="false" action="urn:getServiceGroupParameters" name="getServiceGroupParameters" bindingOperationName="getServiceGroupParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="358f3c1f-a101-416a-a3ba-78f17fa50a36" isOneWay="false" action="urn:listServiceGroup" name="listServiceGroup" bindingOperationName="listServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="69f05431-86ac-4825-b4f0-0ccb26aa2ce1" isOneWay="false" action="urn:listServiceGroups" name="listServiceGroups" bindingOperationName="listServiceGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="733586e7-1ced-4c7a-8b79-06f2a192e99b" isOneWay="false" action="urn:removeServiceGroupParameter" name="removeServiceGroupParameter" bindingOperationName="removeServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c239681b-f4be-49cf-b445-c105d1573728" isOneWay="false" action="urn:setServiceGroupParameter" name="setServiceGroupParameter" bindingOperationName="setServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6c022a8b-83ee-4795-8a43-b779123a2db3" isOneWay="false" action="urn:setServiceGroupParameters" name="setServiceGroupParameters" bindingOperationName="setServiceGroupParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="30c9a1ab-00a0-4b3a-8b31-8cbf82fe57fd" isOneWay="false" action="urn:updateServiceGroupParameter" name="updateServiceGroupParameter" bindingOperationName="updateServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3a2f3eff-601d-4a2c-a44f-5dfee7cad4a8" isOneWay="false" action="urn:updateServiceGroupParamters" name="updateServiceGroupParamters" bindingOperationName="updateServiceGroupParamters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="15cc8909-8cd7-45c6-aa67-13daacbace82" wsaVersion="NONE" name="ServiceGroupAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.service.carbon.wso2.org}ServiceGroupAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServiceGroupAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServiceGroupAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ServiceGroupAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.service.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2577="http://mgt.service.carbon.wso2.org/xsd" xmlns:ax2579="http://utils.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.service.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ServiceGroupAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2580="http://utils.carbon.wso2.org/xsd" xmlns:ax2578="http://mgt.service.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://mgt.service.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://utils.carbon.wso2.org/xsd"/>
      <xs:element name="listServiceGroups">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceTypeFilter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceGroupSearchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServiceGroupsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2577:ServiceGroupMetaDataWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServiceGroupAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ServiceGroupAdminException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="configureServiceGroupMTOM">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="flag" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="configureServiceGroupMTOMResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2577:ServiceGroupMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ServiceGroupAdminServerException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ServerException" nillable="true" type="ax2579:ServerException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateServiceGroupParamters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="ax2577:ParameterMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateServiceGroupParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="paramMetaData" nillable="true" type="ax2577:ParameterMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceGroupParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceGroupParametersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceGroupParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="paramName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceGroupParameterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2577:ParameterMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setServiceGroupParameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupId" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="parameterElement" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setServiceGroupParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterElement" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeServiceGroupParameter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="parameterName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="dumpAAR">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="dumpAARResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServiceGroup">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listServiceGroupResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2577:ServiceGroupMetaData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.carbon.wso2.org/xsd">
      <xs:complexType name="ServerException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.service.carbon.wso2.org/xsd">
      <xs:complexType name="ServiceGroupMetaDataWrapper">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfActiveServices" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfCorrectServiceGroups" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfFaultyServiceGroups" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceGroups" nillable="true" type="ax2577:ServiceGroupMetaData"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceTypes" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceGroupMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="disableDeletion" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="engagedModules" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mtomStatus" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceContextPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="services" nillable="true" type="ax2577:ServiceMetaData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="CAppArtifact" type="xs:boolean"/>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="disableDeletion" type="xs:boolean"/>
          <xs:element minOccurs="0" name="disableTryit" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="eprs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="foundWebResources" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mtomStatus" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="operations" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="securityScenarioId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceDeployedTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceUpTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tryitURL" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsdlPortTypes" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsdlPorts" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsdlURLs" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ParameterMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="editable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="locked" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="xs:int"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getServiceGroupParameterRequest">
    <wsdl:part name="parameters" element="ns1:getServiceGroupParameter"/>
  </wsdl:message>
  <wsdl:message name="getServiceGroupParameterResponse">
    <wsdl:part name="parameters" element="ns1:getServiceGroupParameterResponse"/>
  </wsdl:message>
  <wsdl:message name="ServiceGroupAdminServerException">
    <wsdl:part name="parameters" element="ns1:ServiceGroupAdminServerException"/>
  </wsdl:message>
  <wsdl:message name="setServiceGroupParameterRequest">
    <wsdl:part name="parameters" element="ns1:setServiceGroupParameter"/>
  </wsdl:message>
  <wsdl:message name="updateServiceGroupParamtersRequest">
    <wsdl:part name="parameters" element="ns1:updateServiceGroupParamters"/>
  </wsdl:message>
  <wsdl:message name="getServiceGroupParametersRequest">
    <wsdl:part name="parameters" element="ns1:getServiceGroupParameters"/>
  </wsdl:message>
  <wsdl:message name="getServiceGroupParametersResponse">
    <wsdl:part name="parameters" element="ns1:getServiceGroupParametersResponse"/>
  </wsdl:message>
  <wsdl:message name="dumpAARRequest">
    <wsdl:part name="parameters" element="ns1:dumpAAR"/>
  </wsdl:message>
  <wsdl:message name="dumpAARResponse">
    <wsdl:part name="parameters" element="ns1:dumpAARResponse"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupsRequest">
    <wsdl:part name="parameters" element="ns1:listServiceGroups"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupsResponse">
    <wsdl:part name="parameters" element="ns1:listServiceGroupsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateServiceGroupParameterRequest">
    <wsdl:part name="parameters" element="ns1:updateServiceGroupParameter"/>
  </wsdl:message>
  <wsdl:message name="setServiceGroupParametersRequest">
    <wsdl:part name="parameters" element="ns1:setServiceGroupParameters"/>
  </wsdl:message>
  <wsdl:message name="configureServiceGroupMTOMRequest">
    <wsdl:part name="parameters" element="ns1:configureServiceGroupMTOM"/>
  </wsdl:message>
  <wsdl:message name="configureServiceGroupMTOMResponse">
    <wsdl:part name="parameters" element="ns1:configureServiceGroupMTOMResponse"/>
  </wsdl:message>
  <wsdl:message name="ServiceGroupAdminException">
    <wsdl:part name="parameters" element="ns1:ServiceGroupAdminException"/>
  </wsdl:message>
  <wsdl:message name="removeServiceGroupParameterRequest">
    <wsdl:part name="parameters" element="ns1:removeServiceGroupParameter"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupRequest">
    <wsdl:part name="parameters" element="ns1:listServiceGroup"/>
  </wsdl:message>
  <wsdl:message name="listServiceGroupResponse">
    <wsdl:part name="parameters" element="ns1:listServiceGroupResponse"/>
  </wsdl:message>
  <wsdl:portType name="ServiceGroupAdminPortType">
    <wsdl:operation name="getServiceGroupParameter">
      <wsdl:input message="tns:getServiceGroupParameterRequest" wsaw:Action="urn:getServiceGroupParameter"/>
      <wsdl:output message="tns:getServiceGroupParameterResponse" wsaw:Action="urn:getServiceGroupParameterResponse"/>
      <wsdl:fault message="tns:ServiceGroupAdminServerException" name="ServiceGroupAdminServerException" wsaw:Action="urn:getServiceGroupParameterServiceGroupAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameter">
      <wsdl:input message="tns:setServiceGroupParameterRequest" wsaw:Action="urn:setServiceGroupParameter"/>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParamters">
      <wsdl:input message="tns:updateServiceGroupParamtersRequest" wsaw:Action="urn:updateServiceGroupParamters"/>
      <wsdl:fault message="tns:ServiceGroupAdminServerException" name="ServiceGroupAdminServerException" wsaw:Action="urn:updateServiceGroupParamtersServiceGroupAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceGroupParameters">
      <wsdl:input message="tns:getServiceGroupParametersRequest" wsaw:Action="urn:getServiceGroupParameters"/>
      <wsdl:output message="tns:getServiceGroupParametersResponse" wsaw:Action="urn:getServiceGroupParametersResponse"/>
      <wsdl:fault message="tns:ServiceGroupAdminServerException" name="ServiceGroupAdminServerException" wsaw:Action="urn:getServiceGroupParametersServiceGroupAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="dumpAAR">
      <wsdl:input message="tns:dumpAARRequest" wsaw:Action="urn:dumpAAR"/>
      <wsdl:output message="tns:dumpAARResponse" wsaw:Action="urn:dumpAARResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroups">
      <wsdl:input message="tns:listServiceGroupsRequest" wsaw:Action="urn:listServiceGroups"/>
      <wsdl:output message="tns:listServiceGroupsResponse" wsaw:Action="urn:listServiceGroupsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParameter">
      <wsdl:input message="tns:updateServiceGroupParameterRequest" wsaw:Action="urn:updateServiceGroupParameter"/>
      <wsdl:fault message="tns:ServiceGroupAdminServerException" name="ServiceGroupAdminServerException" wsaw:Action="urn:updateServiceGroupParameterServiceGroupAdminServerException"/>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameters">
      <wsdl:input message="tns:setServiceGroupParametersRequest" wsaw:Action="urn:setServiceGroupParameters"/>
    </wsdl:operation>
    <wsdl:operation name="configureServiceGroupMTOM">
      <wsdl:input message="tns:configureServiceGroupMTOMRequest" wsaw:Action="urn:configureServiceGroupMTOM"/>
      <wsdl:output message="tns:configureServiceGroupMTOMResponse" wsaw:Action="urn:configureServiceGroupMTOMResponse"/>
      <wsdl:fault message="tns:ServiceGroupAdminException" name="ServiceGroupAdminException" wsaw:Action="urn:configureServiceGroupMTOMServiceGroupAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="removeServiceGroupParameter">
      <wsdl:input message="tns:removeServiceGroupParameterRequest" wsaw:Action="urn:removeServiceGroupParameter"/>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <wsdl:input message="tns:listServiceGroupRequest" wsaw:Action="urn:listServiceGroup"/>
      <wsdl:output message="tns:listServiceGroupResponse" wsaw:Action="urn:listServiceGroupResponse"/>
      <wsdl:fault message="tns:ServiceGroupAdminException" name="ServiceGroupAdminException" wsaw:Action="urn:listServiceGroupServiceGroupAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceGroupAdminSoap11Binding" type="tns:ServiceGroupAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServiceGroupParameter">
      <soap:operation soapAction="urn:getServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameter">
      <soap:operation soapAction="urn:setServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParamters">
      <soap:operation soapAction="urn:updateServiceGroupParamters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceGroupParameters">
      <soap:operation soapAction="urn:getServiceGroupParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dumpAAR">
      <soap:operation soapAction="urn:dumpAAR" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroups">
      <soap:operation soapAction="urn:listServiceGroups" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParameter">
      <soap:operation soapAction="urn:updateServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameters">
      <soap:operation soapAction="urn:setServiceGroupParameters" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="configureServiceGroupMTOM">
      <soap:operation soapAction="urn:configureServiceGroupMTOM" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminException">
        <soap:fault use="literal" name="ServiceGroupAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServiceGroupParameter">
      <soap:operation soapAction="urn:removeServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <soap:operation soapAction="urn:listServiceGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminException">
        <soap:fault use="literal" name="ServiceGroupAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServiceGroupAdminSoap12Binding" type="tns:ServiceGroupAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServiceGroupParameter">
      <soap12:operation soapAction="urn:getServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap12:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameter">
      <soap12:operation soapAction="urn:setServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParamters">
      <soap12:operation soapAction="urn:updateServiceGroupParamters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap12:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceGroupParameters">
      <soap12:operation soapAction="urn:getServiceGroupParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap12:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dumpAAR">
      <soap12:operation soapAction="urn:dumpAAR" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroups">
      <soap12:operation soapAction="urn:listServiceGroups" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParameter">
      <soap12:operation soapAction="urn:updateServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="ServiceGroupAdminServerException">
        <soap12:fault use="literal" name="ServiceGroupAdminServerException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameters">
      <soap12:operation soapAction="urn:setServiceGroupParameters" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="configureServiceGroupMTOM">
      <soap12:operation soapAction="urn:configureServiceGroupMTOM" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminException">
        <soap12:fault use="literal" name="ServiceGroupAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeServiceGroupParameter">
      <soap12:operation soapAction="urn:removeServiceGroupParameter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <soap12:operation soapAction="urn:listServiceGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceGroupAdminException">
        <soap12:fault use="literal" name="ServiceGroupAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ServiceGroupAdminHttpBinding" type="tns:ServiceGroupAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getServiceGroupParameter">
      <http:operation location="getServiceGroupParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameter">
      <http:operation location="setServiceGroupParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParamters">
      <http:operation location="updateServiceGroupParamters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getServiceGroupParameters">
      <http:operation location="getServiceGroupParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="dumpAAR">
      <http:operation location="dumpAAR"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroups">
      <http:operation location="listServiceGroups"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateServiceGroupParameter">
      <http:operation location="updateServiceGroupParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setServiceGroupParameters">
      <http:operation location="setServiceGroupParameters"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="configureServiceGroupMTOM">
      <http:operation location="configureServiceGroupMTOM"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeServiceGroupParameter">
      <http:operation location="removeServiceGroupParameter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="listServiceGroup">
      <http:operation location="listServiceGroup"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceGroupAdmin">
    <wsdl:port name="ServiceGroupAdminHttpsSoap11Endpoint" binding="tns:ServiceGroupAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServiceGroupAdminHttpsSoap12Endpoint" binding="tns:ServiceGroupAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ServiceGroupAdminHttpsEndpoint" binding="tns:ServiceGroupAdminHttpBinding">
      <http:address location="https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ServiceGroupAdmin.ServiceGroupAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="ede9b6c6-4985-4e38-aa2f-cca73f5d2bf8" isOneWay="false" action="urn:configureServiceGroupMTOM" name="configureServiceGroupMTOM" bindingOperationName="configureServiceGroupMTOM" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2b049ca2-1bda-4489-926d-d77cc832c28e" isOneWay="false" action="urn:dumpAAR" name="dumpAAR" bindingOperationName="dumpAAR" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="996590d4-9702-45fd-ae4d-1185f7ab204d" isOneWay="false" action="urn:getServiceGroupParameter" name="getServiceGroupParameter" bindingOperationName="getServiceGroupParameter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2367a201-cbd4-466f-9d57-1116688d4cdd" isOneWay="false" action="urn:getServiceGroupParameters" name="getServiceGroupParameters" bindingOperationName="getServiceGroupParameters" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aacc1a77-05d3-405f-a709-6178133a4c4f" isOneWay="false" action="urn:listServiceGroup" name="listServiceGroup" bindingOperationName="listServiceGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d90b174c-dec9-4c94-8f12-46bdc854ab40" isOneWay="false" action="urn:listServiceGroups" name="listServiceGroups" bindingOperationName="listServiceGroups" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f8b05f84-009c-48e1-8c3b-928923c03ed6" isOneWay="false" action="urn:removeServiceGroupParameter" name="removeServiceGroupParameter" bindingOperationName="removeServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7f0e02c2-1358-4636-91d9-e7d2473e17bc" isOneWay="false" action="urn:setServiceGroupParameter" name="setServiceGroupParameter" bindingOperationName="setServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="34740969-ac27-4d13-90bb-aa12410308d5" isOneWay="false" action="urn:setServiceGroupParameters" name="setServiceGroupParameters" bindingOperationName="setServiceGroupParameters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9a1c1c68-bfe5-454a-849f-40c5e8e495e6" isOneWay="false" action="urn:updateServiceGroupParameter" name="updateServiceGroupParameter" bindingOperationName="updateServiceGroupParameter" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cfc50f2c-d7dd-4364-a581-20e31c82fadc" isOneWay="false" action="urn:updateServiceGroupParamters" name="updateServiceGroupParamters" bindingOperationName="updateServiceGroupParamters" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="733c6261-1df0-4e48-8b36-986af98589c9" wsaVersion="NONE" name="StatisticsAdminSoap11Binding" type="wsdl" bindingName="{http://services.statistics.carbon.wso2.org}StatisticsAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/StatisticsAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="52b0c9b2-8582-4d6e-b239-1ee77fe85090" isOneWay="false" action="urn:getAvgOperationResponseTime" name="getAvgOperationResponseTime" bindingOperationName="getAvgOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="72fd0fb1-d5dd-4fc9-ae68-7d4921671b0f" isOneWay="false" action="urn:getAvgServiceResponseTime" name="getAvgServiceResponseTime" bindingOperationName="getAvgServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fe9a36b1-87a6-42da-8df1-39fb0fd4774e" isOneWay="false" action="urn:getAvgSystemResponseTime" name="getAvgSystemResponseTime" bindingOperationName="getAvgSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a9296f4e-2508-4fc6-b099-4a02a3d7decb" isOneWay="false" action="urn:getMaxOperationResponseTime" name="getMaxOperationResponseTime" bindingOperationName="getMaxOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="613c6f54-5fbd-4da1-b78f-a73df5df7dca" isOneWay="false" action="urn:getMaxServiceResponseTime" name="getMaxServiceResponseTime" bindingOperationName="getMaxServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7d59a7a6-9bc0-4856-9b6d-7041d1acc75c" isOneWay="false" action="urn:getMaxSystemResponseTime" name="getMaxSystemResponseTime" bindingOperationName="getMaxSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c13f672-8541-444f-8eca-3d9d87fbdc3b" isOneWay="false" action="urn:getMinOperationResponseTime" name="getMinOperationResponseTime" bindingOperationName="getMinOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3a0f58d0-3597-4644-b3fd-f694992f27ac" isOneWay="false" action="urn:getMinServiceResponseTime" name="getMinServiceResponseTime" bindingOperationName="getMinServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="20f04bec-756e-4666-a407-d3c8a27d8974" isOneWay="false" action="urn:getMinSystemResponseTime" name="getMinSystemResponseTime" bindingOperationName="getMinSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bf34f4bd-59f9-4bb2-9bd2-f2a374056863" isOneWay="false" action="urn:getOperationFaultCount" name="getOperationFaultCount" bindingOperationName="getOperationFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="10b45769-c19a-476c-ab2c-e17b0e67219d" isOneWay="false" action="urn:getOperationRequestCount" name="getOperationRequestCount" bindingOperationName="getOperationRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="471ebd01-d7fa-4a15-b7c0-776f9730f20e" isOneWay="false" action="urn:getOperationResponseCount" name="getOperationResponseCount" bindingOperationName="getOperationResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="47a9990c-77f3-4913-911e-6df0b2f295c3" isOneWay="false" action="urn:getOperationStatistics" name="getOperationStatistics" bindingOperationName="getOperationStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="751c579e-6a62-4702-b90c-51469a23eb79" isOneWay="false" action="urn:getServiceFaultCount" name="getServiceFaultCount" bindingOperationName="getServiceFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fcedd248-be31-462d-96a3-c60c958740a3" isOneWay="false" action="urn:getServiceRequestCount" name="getServiceRequestCount" bindingOperationName="getServiceRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6aba18c3-89ab-4548-a166-51fc719fbbcc" isOneWay="false" action="urn:getServiceResponseCount" name="getServiceResponseCount" bindingOperationName="getServiceResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c4c129db-f0c6-42e9-9bdc-61a0bfea570d" isOneWay="false" action="urn:getServiceStatistics" name="getServiceStatistics" bindingOperationName="getServiceStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66525e4a-6e1d-4814-bb25-03f2f4a7e8f9" isOneWay="false" action="urn:getSystemFaultCount" name="getSystemFaultCount" bindingOperationName="getSystemFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="decdfaf9-b3ec-4efe-8433-60d4f64779b2" isOneWay="false" action="urn:getSystemRequestCount" name="getSystemRequestCount" bindingOperationName="getSystemRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="05879814-cebc-4ca2-b9e2-6579809f94c2" isOneWay="false" action="urn:getSystemResponseCount" name="getSystemResponseCount" bindingOperationName="getSystemResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="96045536-7bb0-4dba-a6a5-1919b5e035b6" isOneWay="false" action="urn:getSystemStatistics" name="getSystemStatistics" bindingOperationName="getSystemStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f4ab32be-a891-486b-8c55-c2379fd25792" isOneWay="false" action="urn:getWebappRelatedData" name="getWebappRelatedData" bindingOperationName="getWebappRelatedData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fce80711-d258-46a9-a9cb-771ffd981c31" isOneWay="false" action="urn:setConfigurationContext" name="setConfigurationContext" bindingOperationName="setConfigurationContext" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="19662f65-4b77-4fb6-be06-ff92d8941d42" wsaVersion="NONE" name="StatisticsAdminSoap12Binding" type="wsdl" bindingName="{http://services.statistics.carbon.wso2.org}StatisticsAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/StatisticsAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/StatisticsAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/StatisticsAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.statistics.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2587="http://context.axis2.apache.org/xsd" xmlns:ax2588="http://engine.axis2.apache.org/xsd" xmlns:ax2589="http://clustering.axis2.apache.org/xsd" xmlns:ax2623="http://threadpool.util.axis2.apache.org/xsd" xmlns:ax2602="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2603="http://description.axis2.apache.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2581="http://util.services.statistics.carbon.wso2.org/xsd" xmlns:ax2582="http://services.statistics.carbon.wso2.org/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2585="http://data.webapp.statistics.carbon.wso2.org/xsd" xmlns:ax2617="http://util.axis2.apache.org/xsd" xmlns:ax2619="http://transaction.axis2.apache.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2615="http://securevault.wso2.org/xsd" xmlns:ax2591="http://util.java/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2593="http://management.clustering.axis2.apache.org/xsd" xmlns:ax2596="http://state.clustering.axis2.apache.org/xsd" xmlns:tns="http://services.statistics.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax2607="http://net.java/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2609="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>StatisticsAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://data.webapp.statistics.carbon.wso2.org/xsd">
      <xs:complexType name="StatisticData">
        <xs:sequence>
          <xs:element minOccurs="0" name="averageResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="faultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="maximumResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="minimumresponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="requstCount" type="xs:int"/>
          <xs:element minOccurs="0" name="responseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="responseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="tenantName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="webappName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://transaction.axis2.apache.org/xsd">
      <xs:complexType name="TransactionConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="transactionManager" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="transactionTimeout" type="xs:int"/>
          <xs:element minOccurs="0" name="userTransaction" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://threadpool.util.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="ThreadFactory">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.axis2.apache.org/xsd">
      <xs:complexType abstract="true" name="TargetResolver">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.java/xsd">
      <xs:complexType abstract="true" name="Set">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Map">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="Iterator">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://management.clustering.axis2.apache.org/xsd" xmlns:ax2594="http://context.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="NodeManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2587:ConfigurationContext"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://description.axis2.apache.org/xsd" xmlns:ax2605="http://util.java/xsd" xmlns:ax2606="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2611="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:ax2608="http://net.java/xsd" xmlns:ax2604="http://engine.axis2.apache.org/xsd">
      <xs:import namespace="http://engine.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://util.deployment.axis2.apache.org/xsd"/>
      <xs:import namespace="http://net.java/xsd"/>
      <xs:import namespace="http://java2wsdl.description.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="AxisOperation">
        <xs:sequence>
          <xs:element minOccurs="0" name="WSAMappingList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="axisService" nillable="true" type="ax2603:AxisService"/>
          <xs:element minOccurs="0" name="axisSpecificMEPConstant" type="xs:int"/>
          <xs:element minOccurs="0" name="controlOperation" type="xs:boolean"/>
          <xs:element minOccurs="0" name="faultAction" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultActionNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultMessages" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inputAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="messageExchangePattern" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="messageReceiver" nillable="true" type="ax2588:MessageReceiver"/>
          <xs:element minOccurs="0" name="messages" nillable="true" type="ax2591:Iterator"/>
          <xs:element minOccurs="0" name="moduleRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outputAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="phasesInFaultFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesOutFaultFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesOutFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="remainingPhasesInFlow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="soapAction" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="style" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wsamappingList" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AxisService">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="EPRs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="WSAddressingFlag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="axisServiceGroup" nillable="true" type="ax2603:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="bindingName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="classLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="clientSide" type="xs:boolean"/>
          <xs:element minOccurs="0" name="controlOperations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="customSchemaNamePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="customSchemaNameSuffix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="customWsdl" type="xs:boolean"/>
          <xs:element minOccurs="0" name="elementFormDefault" type="xs:boolean"/>
          <xs:element minOccurs="0" name="enableAllTransports" type="xs:boolean"/>
          <xs:element minOccurs="0" name="endpointName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="endpointURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="endpoints" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="excludeInfo" nillable="true" type="ax2602:ExcludeInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="exposedTransports" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="ax2607:URL"/>
          <xs:element minOccurs="0" name="importedNamespaces" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="lastUpdate" type="xs:long"/>
          <xs:element minOccurs="0" name="lastupdate" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageElementQNameToOperationMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="modifyUserWSDLPortAddress" type="xs:boolean"/>
          <xs:element minOccurs="0" name="modules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nameSpacesMap" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="namespaceMap" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="objectSupplier" nillable="true" type="ax2588:ObjectSupplier"/>
          <xs:element minOccurs="0" name="operations" nillable="true" type="ax2591:Iterator"/>
          <xs:element minOccurs="0" name="operationsNameList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="p2nMap" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="parent" nillable="true" type="ax2603:AxisServiceGroup"/>
          <xs:element minOccurs="0" name="portTypeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="publishedOperations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="schema" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="schemaLocationsAdjusted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="schemaMappingTable" nillable="true" type="ax2591:Map"/>
          <xs:element minOccurs="0" name="schemaTargetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schemaTargetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schematargetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="schematargetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="scope" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceLifeCycle" nillable="true" type="ax2588:ServiceLifeCycle"/>
          <xs:element minOccurs="0" name="setEndpointsToAllUsedBindings" type="xs:boolean"/>
          <xs:element minOccurs="0" name="soapNsUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetNamespace" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="targetNamespacePrefix" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="typeTable" nillable="true" type="ax2611:TypeTable"/>
          <xs:element minOccurs="0" name="useDefaultChains" type="xs:boolean"/>
          <xs:element minOccurs="0" name="useUserWSDL" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wsdlFound" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AxisServiceGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisDescription" nillable="true" type="ax2588:AxisConfiguration"/>
          <xs:element minOccurs="0" name="foundWebResources" type="xs:boolean"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="moduleRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroupClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroupName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="services" nillable="true" type="ax2591:Iterator"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://context.axis2.apache.org/xsd" xmlns:ax2621="http://engine.axis2.apache.org/xsd" xmlns:ax2624="http://threadpool.util.axis2.apache.org/xsd">
      <xs:import namespace="http://engine.axis2.apache.org/xsd"/>
      <xs:import namespace="http://threadpool.util.axis2.apache.org/xsd"/>
      <xs:complexType name="ConfigurationContext">
        <xs:sequence>
          <xs:element minOccurs="0" name="anyOperationContextRegistered" type="xs:boolean"/>
          <xs:element minOccurs="0" name="axisConfiguration" nillable="true" type="ax2588:AxisConfiguration"/>
          <xs:element minOccurs="0" name="contextRoot" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="listenerManager" nillable="true" type="ax2588:ListenerManager"/>
          <xs:element minOccurs="0" name="rootContext" nillable="true" type="ax2587:ConfigurationContext"/>
          <xs:element minOccurs="0" name="serviceContextPath" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceGroupContextIDs" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceGroupContextTimeoutInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="serviceGroupContextTimoutInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="serviceGroupContexts" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="servicePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="threadPool" nillable="true" type="ax2623:ThreadFactory"/>
          <xs:element minOccurs="0" name="transportManager" nillable="true" type="ax2588:ListenerManager"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2612="http://description.axis2.apache.org/xsd">
      <xs:import namespace="http://description.axis2.apache.org/xsd"/>
      <xs:complexType name="PhasesInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="INPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="IN_FaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="OUTPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="OUT_FaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalInFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalInflow" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalOutPhaseList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationInFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationInPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationOutFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationOutPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="operationPhases" nillable="true" type="ax2612:AxisOperation"/>
          <xs:element minOccurs="0" name="outFaultPhaseList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExcludeInfo">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://net.java/xsd">
      <xs:complexType name="URL">
        <xs:sequence>
          <xs:element minOccurs="0" name="authority" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="content" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="defaultPort" type="xs:int"/>
          <xs:element minOccurs="0" name="file" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="host" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="port" type="xs:int"/>
          <xs:element minOccurs="0" name="protocol" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="query" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="ref" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userInfo" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.statistics.carbon.wso2.org/xsd">
      <xs:complexType name="SystemStatisticsUtil">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://securevault.wso2.org/xsd">
      <xs:complexType name="SecretResolver">
        <xs:sequence>
          <xs:element minOccurs="0" name="initialized" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://engine.axis2.apache.org/xsd" xmlns:ax2620="http://transaction.axis2.apache.org/xsd" xmlns:ax2600="http://clustering.axis2.apache.org/xsd" xmlns:ax2622="http://context.axis2.apache.org/xsd" xmlns:ax2601="http://util.java/xsd" xmlns:ax2613="http://util.deployment.axis2.apache.org/xsd" xmlns:ax2614="http://net.java/xsd" xmlns:ax2616="http://securevault.wso2.org/xsd" xmlns:ax2618="http://util.axis2.apache.org/xsd">
      <xs:import namespace="http://clustering.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://util.deployment.axis2.apache.org/xsd"/>
      <xs:import namespace="http://net.java/xsd"/>
      <xs:import namespace="http://securevault.wso2.org/xsd"/>
      <xs:import namespace="http://util.axis2.apache.org/xsd"/>
      <xs:import namespace="http://transaction.axis2.apache.org/xsd"/>
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:complexType name="AxisConfiguration">
        <xs:sequence>
          <xs:element minOccurs="0" name="childFirstClassLoading" type="xs:boolean"/>
          <xs:element minOccurs="0" name="clusteringAgent" nillable="true" type="ax2589:ClusteringAgent"/>
          <xs:element minOccurs="0" name="configurator" nillable="true" type="ax2588:AxisConfigurator"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultyModules" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="faultyServices" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultyServicesDuetoModules" nillable="true" type="ax2601:Map"/>
          <xs:element minOccurs="0" name="globalModules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="globalOutPhase" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFaultFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="inPhasesUptoAndIncludingPostDispatch" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:anyType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="localPolicyAssertions" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="moduleClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="modules" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="observersList" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFaultFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFaultPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="outFlowPhases" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="phasesInfo" nillable="true" type="ax2602:PhasesInfo"/>
          <xs:element minOccurs="0" name="repository" nillable="true" type="ax2614:URL"/>
          <xs:element minOccurs="0" name="secretResolver" nillable="true" type="ax2616:SecretResolver"/>
          <xs:element minOccurs="0" name="serviceClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="serviceGroups" nillable="true" type="ax2601:Iterator"/>
          <xs:element minOccurs="0" name="services" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="start" type="xs:boolean"/>
          <xs:element minOccurs="0" name="systemClassLoader" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="targetResolverChain" nillable="true" type="ax2617:TargetResolver"/>
          <xs:element minOccurs="0" name="transactionConfig" nillable="true" type="ax2620:TransactionConfiguration"/>
          <xs:element minOccurs="0" name="transactionConfiguration" nillable="true" type="ax2620:TransactionConfiguration"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="transportsIn" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="transportsOut" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="AxisConfigurator">
        <xs:sequence>
          <xs:element minOccurs="0" name="axisConfiguration" nillable="true" type="ax2588:AxisConfiguration"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="ObjectSupplier">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="ServiceLifeCycle">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="MessageReceiver">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="ListenerManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configctx" nillable="true" type="ax2587:ConfigurationContext"/>
          <xs:element minOccurs="0" name="shutdownHookRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="stopped" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2597="http://context.axis2.apache.org/xsd" xmlns:ax2598="http://util.java/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType abstract="true" name="StateManager">
        <xs:sequence>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2597:ConfigurationContext"/>
          <xs:element minOccurs="0" name="replicationExcludePatterns" nillable="true" type="ax2598:Map"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.services.statistics.carbon.wso2.org/xsd" xmlns:ax2583="http://services.statistics.carbon.wso2.org/xsd">
      <xs:import namespace="http://services.statistics.carbon.wso2.org/xsd"/>
      <xs:complexType name="SystemStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="avgResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="currentInvocationFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="javaVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="maxResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="minResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="serverName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverStartTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="services" type="xs:int"/>
          <xs:element minOccurs="0" name="statService" nillable="true" type="ax2582:SystemStatisticsUtil"/>
          <xs:element minOccurs="0" name="systemUpTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="totalFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalMemory" nillable="true" type="ax2581:Metric"/>
          <xs:element minOccurs="0" name="totalRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResponseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="usedMemory" nillable="true" type="ax2581:Metric"/>
          <xs:element minOccurs="0" name="wso2wsasVersion" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Metric">
        <xs:sequence>
          <xs:element minOccurs="0" name="unit" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="avgResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="currentInvocationFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="maxResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="minResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="totalFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResponseCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OperationStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="avgResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="currentInvocationFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseCount" type="xs:int"/>
          <xs:element minOccurs="0" name="currentInvocationResponseTime" type="xs:double"/>
          <xs:element minOccurs="0" name="maxResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="minResponseTime" type="xs:long"/>
          <xs:element minOccurs="0" name="totalFaultCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalRequestCount" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResponseCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://clustering.axis2.apache.org/xsd" xmlns:ax2590="http://context.axis2.apache.org/xsd" xmlns:ax2599="http://state.clustering.axis2.apache.org/xsd" xmlns:ax2592="http://util.java/xsd" xmlns:ax2595="http://management.clustering.axis2.apache.org/xsd">
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:import namespace="http://util.java/xsd"/>
      <xs:import namespace="http://management.clustering.axis2.apache.org/xsd"/>
      <xs:import namespace="http://state.clustering.axis2.apache.org/xsd"/>
      <xs:complexType abstract="true" name="ClusteringAgent">
        <xs:sequence>
          <xs:element minOccurs="0" name="aliveMemberCount" type="xs:int"/>
          <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2587:ConfigurationContext"/>
          <xs:element minOccurs="0" name="coordinator" type="xs:boolean"/>
          <xs:element minOccurs="0" name="domains" nillable="true" type="ax2591:Set"/>
          <xs:element minOccurs="0" name="members" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="nodeManager" nillable="true" type="ax2593:NodeManager"/>
          <xs:element minOccurs="0" name="stateManager" nillable="true" type="ax2599:StateManager"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2586="http://data.webapp.statistics.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2625="http://context.axis2.apache.org/xsd" xmlns:ax2584="http://util.services.statistics.carbon.wso2.org/xsd">
      <xs:import namespace="http://util.services.statistics.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://data.webapp.statistics.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://context.axis2.apache.org/xsd"/>
      <xs:element name="getSystemStatistics">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemStatisticsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2581:SystemStatistics"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceStatistics">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceStatisticsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2581:ServiceStatistics"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemRequestCount">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemRequestCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemFaultCount">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemFaultCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemResponseCount">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSystemResponseCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgSystemResponseTime">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgSystemResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:double"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxSystemResponseTime">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxSystemResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinSystemResponseTime">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinSystemResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceRequestCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceRequestCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceFaultCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceFaultCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceResponseCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getServiceResponseCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxServiceResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxServiceResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinServiceResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinServiceResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgServiceResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgServiceResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:double"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationRequestCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationRequestCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationFaultCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationFaultCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationResponseCount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationResponseCountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxOperationResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMaxOperationResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinOperationResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMinOperationResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgOperationResponseTime">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvgOperationResponseTimeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:double"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWebappRelatedData">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webAppName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWebappRelatedDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2586:StatisticData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setConfigurationContext">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="configurationContext" nillable="true" type="ax2587:ConfigurationContext"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationStatistics">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getOperationStatisticsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2581:OperationStatistics"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://java2wsdl.description.axis2.apache.org/xsd" xmlns:ax2610="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType name="TypeTable">
        <xs:sequence>
          <xs:element minOccurs="0" name="complexSchemaMap" nillable="true" type="ax2610:Map"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getServiceResponseCountRequest">
    <wsdl:part name="parameters" element="ns1:getServiceResponseCount"/>
  </wsdl:message>
  <wsdl:message name="getServiceResponseCountResponse">
    <wsdl:part name="parameters" element="ns1:getServiceResponseCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationRequestCountRequest">
    <wsdl:part name="parameters" element="ns1:getOperationRequestCount"/>
  </wsdl:message>
  <wsdl:message name="getOperationRequestCountResponse">
    <wsdl:part name="parameters" element="ns1:getOperationRequestCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationStatisticsRequest">
    <wsdl:part name="parameters" element="ns1:getOperationStatistics"/>
  </wsdl:message>
  <wsdl:message name="getOperationStatisticsResponse">
    <wsdl:part name="parameters" element="ns1:getOperationStatisticsResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceFaultCountRequest">
    <wsdl:part name="parameters" element="ns1:getServiceFaultCount"/>
  </wsdl:message>
  <wsdl:message name="getServiceFaultCountResponse">
    <wsdl:part name="parameters" element="ns1:getServiceFaultCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getMaxOperationResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMaxOperationResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMaxOperationResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMaxOperationResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getAvgOperationResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getAvgOperationResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getAvgOperationResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getAvgOperationResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getMaxSystemResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMaxSystemResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMaxSystemResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMaxSystemResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationResponseCountRequest">
    <wsdl:part name="parameters" element="ns1:getOperationResponseCount"/>
  </wsdl:message>
  <wsdl:message name="getOperationResponseCountResponse">
    <wsdl:part name="parameters" element="ns1:getOperationResponseCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getAvgServiceResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getAvgServiceResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getAvgServiceResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getAvgServiceResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="setConfigurationContextRequest">
    <wsdl:part name="parameters" element="ns1:setConfigurationContext"/>
  </wsdl:message>
  <wsdl:message name="getMinOperationResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMinOperationResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMinOperationResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMinOperationResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemStatisticsRequest">
    <wsdl:part name="parameters" element="ns1:getSystemStatistics"/>
  </wsdl:message>
  <wsdl:message name="getSystemStatisticsResponse">
    <wsdl:part name="parameters" element="ns1:getSystemStatisticsResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemResponseCountRequest">
    <wsdl:part name="parameters" element="ns1:getSystemResponseCount"/>
  </wsdl:message>
  <wsdl:message name="getSystemResponseCountResponse">
    <wsdl:part name="parameters" element="ns1:getSystemResponseCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getOperationFaultCountRequest">
    <wsdl:part name="parameters" element="ns1:getOperationFaultCount"/>
  </wsdl:message>
  <wsdl:message name="getOperationFaultCountResponse">
    <wsdl:part name="parameters" element="ns1:getOperationFaultCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getMinSystemResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMinSystemResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMinSystemResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMinSystemResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getMaxServiceResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMaxServiceResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMaxServiceResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMaxServiceResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceRequestCountRequest">
    <wsdl:part name="parameters" element="ns1:getServiceRequestCount"/>
  </wsdl:message>
  <wsdl:message name="getServiceRequestCountResponse">
    <wsdl:part name="parameters" element="ns1:getServiceRequestCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getWebappRelatedDataRequest">
    <wsdl:part name="parameters" element="ns1:getWebappRelatedData"/>
  </wsdl:message>
  <wsdl:message name="getWebappRelatedDataResponse">
    <wsdl:part name="parameters" element="ns1:getWebappRelatedDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getAvgSystemResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getAvgSystemResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getAvgSystemResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getAvgSystemResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getServiceStatisticsRequest">
    <wsdl:part name="parameters" element="ns1:getServiceStatistics"/>
  </wsdl:message>
  <wsdl:message name="getServiceStatisticsResponse">
    <wsdl:part name="parameters" element="ns1:getServiceStatisticsResponse"/>
  </wsdl:message>
  <wsdl:message name="getMinServiceResponseTimeRequest">
    <wsdl:part name="parameters" element="ns1:getMinServiceResponseTime"/>
  </wsdl:message>
  <wsdl:message name="getMinServiceResponseTimeResponse">
    <wsdl:part name="parameters" element="ns1:getMinServiceResponseTimeResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemRequestCountRequest">
    <wsdl:part name="parameters" element="ns1:getSystemRequestCount"/>
  </wsdl:message>
  <wsdl:message name="getSystemRequestCountResponse">
    <wsdl:part name="parameters" element="ns1:getSystemRequestCountResponse"/>
  </wsdl:message>
  <wsdl:message name="getSystemFaultCountRequest">
    <wsdl:part name="parameters" element="ns1:getSystemFaultCount"/>
  </wsdl:message>
  <wsdl:message name="getSystemFaultCountResponse">
    <wsdl:part name="parameters" element="ns1:getSystemFaultCountResponse"/>
  </wsdl:message>
  <wsdl:portType name="StatisticsAdminPortType">
    <wsdl:operation name="getServiceResponseCount">
      <wsdl:input message="tns:getServiceResponseCountRequest" wsaw:Action="urn:getServiceResponseCount"/>
      <wsdl:output message="tns:getServiceResponseCountResponse" wsaw:Action="urn:getServiceResponseCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationRequestCount">
      <wsdl:input message="tns:getOperationRequestCountRequest" wsaw:Action="urn:getOperationRequestCount"/>
      <wsdl:output message="tns:getOperationRequestCountResponse" wsaw:Action="urn:getOperationRequestCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationStatistics">
      <wsdl:input message="tns:getOperationStatisticsRequest" wsaw:Action="urn:getOperationStatistics"/>
      <wsdl:output message="tns:getOperationStatisticsResponse" wsaw:Action="urn:getOperationStatisticsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceFaultCount">
      <wsdl:input message="tns:getServiceFaultCountRequest" wsaw:Action="urn:getServiceFaultCount"/>
      <wsdl:output message="tns:getServiceFaultCountResponse" wsaw:Action="urn:getServiceFaultCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMaxOperationResponseTime">
      <wsdl:input message="tns:getMaxOperationResponseTimeRequest" wsaw:Action="urn:getMaxOperationResponseTime"/>
      <wsdl:output message="tns:getMaxOperationResponseTimeResponse" wsaw:Action="urn:getMaxOperationResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAvgOperationResponseTime">
      <wsdl:input message="tns:getAvgOperationResponseTimeRequest" wsaw:Action="urn:getAvgOperationResponseTime"/>
      <wsdl:output message="tns:getAvgOperationResponseTimeResponse" wsaw:Action="urn:getAvgOperationResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMaxSystemResponseTime">
      <wsdl:input message="tns:getMaxSystemResponseTimeRequest" wsaw:Action="urn:getMaxSystemResponseTime"/>
      <wsdl:output message="tns:getMaxSystemResponseTimeResponse" wsaw:Action="urn:getMaxSystemResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationResponseCount">
      <wsdl:input message="tns:getOperationResponseCountRequest" wsaw:Action="urn:getOperationResponseCount"/>
      <wsdl:output message="tns:getOperationResponseCountResponse" wsaw:Action="urn:getOperationResponseCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAvgServiceResponseTime">
      <wsdl:input message="tns:getAvgServiceResponseTimeRequest" wsaw:Action="urn:getAvgServiceResponseTime"/>
      <wsdl:output message="tns:getAvgServiceResponseTimeResponse" wsaw:Action="urn:getAvgServiceResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setConfigurationContext">
      <wsdl:input message="tns:setConfigurationContextRequest" wsaw:Action="urn:setConfigurationContext"/>
    </wsdl:operation>
    <wsdl:operation name="getMinOperationResponseTime">
      <wsdl:input message="tns:getMinOperationResponseTimeRequest" wsaw:Action="urn:getMinOperationResponseTime"/>
      <wsdl:output message="tns:getMinOperationResponseTimeResponse" wsaw:Action="urn:getMinOperationResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemStatistics">
      <wsdl:input message="tns:getSystemStatisticsRequest" wsaw:Action="urn:getSystemStatistics"/>
      <wsdl:output message="tns:getSystemStatisticsResponse" wsaw:Action="urn:getSystemStatisticsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemResponseCount">
      <wsdl:input message="tns:getSystemResponseCountRequest" wsaw:Action="urn:getSystemResponseCount"/>
      <wsdl:output message="tns:getSystemResponseCountResponse" wsaw:Action="urn:getSystemResponseCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getOperationFaultCount">
      <wsdl:input message="tns:getOperationFaultCountRequest" wsaw:Action="urn:getOperationFaultCount"/>
      <wsdl:output message="tns:getOperationFaultCountResponse" wsaw:Action="urn:getOperationFaultCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMinSystemResponseTime">
      <wsdl:input message="tns:getMinSystemResponseTimeRequest" wsaw:Action="urn:getMinSystemResponseTime"/>
      <wsdl:output message="tns:getMinSystemResponseTimeResponse" wsaw:Action="urn:getMinSystemResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMaxServiceResponseTime">
      <wsdl:input message="tns:getMaxServiceResponseTimeRequest" wsaw:Action="urn:getMaxServiceResponseTime"/>
      <wsdl:output message="tns:getMaxServiceResponseTimeResponse" wsaw:Action="urn:getMaxServiceResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceRequestCount">
      <wsdl:input message="tns:getServiceRequestCountRequest" wsaw:Action="urn:getServiceRequestCount"/>
      <wsdl:output message="tns:getServiceRequestCountResponse" wsaw:Action="urn:getServiceRequestCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getWebappRelatedData">
      <wsdl:input message="tns:getWebappRelatedDataRequest" wsaw:Action="urn:getWebappRelatedData"/>
      <wsdl:output message="tns:getWebappRelatedDataResponse" wsaw:Action="urn:getWebappRelatedDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAvgSystemResponseTime">
      <wsdl:input message="tns:getAvgSystemResponseTimeRequest" wsaw:Action="urn:getAvgSystemResponseTime"/>
      <wsdl:output message="tns:getAvgSystemResponseTimeResponse" wsaw:Action="urn:getAvgSystemResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getServiceStatistics">
      <wsdl:input message="tns:getServiceStatisticsRequest" wsaw:Action="urn:getServiceStatistics"/>
      <wsdl:output message="tns:getServiceStatisticsResponse" wsaw:Action="urn:getServiceStatisticsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMinServiceResponseTime">
      <wsdl:input message="tns:getMinServiceResponseTimeRequest" wsaw:Action="urn:getMinServiceResponseTime"/>
      <wsdl:output message="tns:getMinServiceResponseTimeResponse" wsaw:Action="urn:getMinServiceResponseTimeResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemRequestCount">
      <wsdl:input message="tns:getSystemRequestCountRequest" wsaw:Action="urn:getSystemRequestCount"/>
      <wsdl:output message="tns:getSystemRequestCountResponse" wsaw:Action="urn:getSystemRequestCountResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSystemFaultCount">
      <wsdl:input message="tns:getSystemFaultCountRequest" wsaw:Action="urn:getSystemFaultCount"/>
      <wsdl:output message="tns:getSystemFaultCountResponse" wsaw:Action="urn:getSystemFaultCountResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="StatisticsAdminSoap11Binding" type="tns:StatisticsAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServiceResponseCount">
      <soap:operation soapAction="urn:getServiceResponseCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationRequestCount">
      <soap:operation soapAction="urn:getOperationRequestCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationStatistics">
      <soap:operation soapAction="urn:getOperationStatistics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceFaultCount">
      <soap:operation soapAction="urn:getServiceFaultCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxOperationResponseTime">
      <soap:operation soapAction="urn:getMaxOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgOperationResponseTime">
      <soap:operation soapAction="urn:getAvgOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxSystemResponseTime">
      <soap:operation soapAction="urn:getMaxSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationResponseCount">
      <soap:operation soapAction="urn:getOperationResponseCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgServiceResponseTime">
      <soap:operation soapAction="urn:getAvgServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setConfigurationContext">
      <soap:operation soapAction="urn:setConfigurationContext" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getMinOperationResponseTime">
      <soap:operation soapAction="urn:getMinOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemStatistics">
      <soap:operation soapAction="urn:getSystemStatistics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemResponseCount">
      <soap:operation soapAction="urn:getSystemResponseCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationFaultCount">
      <soap:operation soapAction="urn:getOperationFaultCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinSystemResponseTime">
      <soap:operation soapAction="urn:getMinSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxServiceResponseTime">
      <soap:operation soapAction="urn:getMaxServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceRequestCount">
      <soap:operation soapAction="urn:getServiceRequestCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWebappRelatedData">
      <soap:operation soapAction="urn:getWebappRelatedData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgSystemResponseTime">
      <soap:operation soapAction="urn:getAvgSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceStatistics">
      <soap:operation soapAction="urn:getServiceStatistics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinServiceResponseTime">
      <soap:operation soapAction="urn:getMinServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemRequestCount">
      <soap:operation soapAction="urn:getSystemRequestCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemFaultCount">
      <soap:operation soapAction="urn:getSystemFaultCount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="StatisticsAdminSoap12Binding" type="tns:StatisticsAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getServiceResponseCount">
      <soap12:operation soapAction="urn:getServiceResponseCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationRequestCount">
      <soap12:operation soapAction="urn:getOperationRequestCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationStatistics">
      <soap12:operation soapAction="urn:getOperationStatistics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceFaultCount">
      <soap12:operation soapAction="urn:getServiceFaultCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxOperationResponseTime">
      <soap12:operation soapAction="urn:getMaxOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgOperationResponseTime">
      <soap12:operation soapAction="urn:getAvgOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxSystemResponseTime">
      <soap12:operation soapAction="urn:getMaxSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationResponseCount">
      <soap12:operation soapAction="urn:getOperationResponseCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgServiceResponseTime">
      <soap12:operation soapAction="urn:getAvgServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setConfigurationContext">
      <soap12:operation soapAction="urn:setConfigurationContext" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getMinOperationResponseTime">
      <soap12:operation soapAction="urn:getMinOperationResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemStatistics">
      <soap12:operation soapAction="urn:getSystemStatistics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemResponseCount">
      <soap12:operation soapAction="urn:getSystemResponseCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationFaultCount">
      <soap12:operation soapAction="urn:getOperationFaultCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinSystemResponseTime">
      <soap12:operation soapAction="urn:getMinSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxServiceResponseTime">
      <soap12:operation soapAction="urn:getMaxServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceRequestCount">
      <soap12:operation soapAction="urn:getServiceRequestCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWebappRelatedData">
      <soap12:operation soapAction="urn:getWebappRelatedData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgSystemResponseTime">
      <soap12:operation soapAction="urn:getAvgSystemResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceStatistics">
      <soap12:operation soapAction="urn:getServiceStatistics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinServiceResponseTime">
      <soap12:operation soapAction="urn:getMinServiceResponseTime" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemRequestCount">
      <soap12:operation soapAction="urn:getSystemRequestCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemFaultCount">
      <soap12:operation soapAction="urn:getSystemFaultCount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="StatisticsAdminHttpBinding" type="tns:StatisticsAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getServiceResponseCount">
      <http:operation location="getServiceResponseCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationRequestCount">
      <http:operation location="getOperationRequestCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationStatistics">
      <http:operation location="getOperationStatistics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceFaultCount">
      <http:operation location="getServiceFaultCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxOperationResponseTime">
      <http:operation location="getMaxOperationResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgOperationResponseTime">
      <http:operation location="getAvgOperationResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxSystemResponseTime">
      <http:operation location="getMaxSystemResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationResponseCount">
      <http:operation location="getOperationResponseCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgServiceResponseTime">
      <http:operation location="getAvgServiceResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setConfigurationContext">
      <http:operation location="setConfigurationContext"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getMinOperationResponseTime">
      <http:operation location="getMinOperationResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemStatistics">
      <http:operation location="getSystemStatistics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemResponseCount">
      <http:operation location="getSystemResponseCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperationFaultCount">
      <http:operation location="getOperationFaultCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinSystemResponseTime">
      <http:operation location="getMinSystemResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMaxServiceResponseTime">
      <http:operation location="getMaxServiceResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceRequestCount">
      <http:operation location="getServiceRequestCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWebappRelatedData">
      <http:operation location="getWebappRelatedData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAvgSystemResponseTime">
      <http:operation location="getAvgSystemResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServiceStatistics">
      <http:operation location="getServiceStatistics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMinServiceResponseTime">
      <http:operation location="getMinServiceResponseTime"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemRequestCount">
      <http:operation location="getSystemRequestCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSystemFaultCount">
      <http:operation location="getSystemFaultCount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="StatisticsAdmin">
    <wsdl:port name="StatisticsAdminHttpsSoap11Endpoint" binding="tns:StatisticsAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="StatisticsAdminHttpsSoap12Endpoint" binding="tns:StatisticsAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="StatisticsAdminHttpsEndpoint" binding="tns:StatisticsAdminHttpBinding">
      <http:address location="https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/StatisticsAdmin.StatisticsAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="b87ac421-af6d-4480-9e09-d51fb8199238" isOneWay="false" action="urn:getAvgOperationResponseTime" name="getAvgOperationResponseTime" bindingOperationName="getAvgOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52ffb7de-ab2d-42f3-ad8f-3b5c7a3d9aae" isOneWay="false" action="urn:getAvgServiceResponseTime" name="getAvgServiceResponseTime" bindingOperationName="getAvgServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="39633627-6cbd-45e5-83de-f7a8c4a3517d" isOneWay="false" action="urn:getAvgSystemResponseTime" name="getAvgSystemResponseTime" bindingOperationName="getAvgSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ca924002-6d71-4e5b-9115-0d0a3bc81e02" isOneWay="false" action="urn:getMaxOperationResponseTime" name="getMaxOperationResponseTime" bindingOperationName="getMaxOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dbcf8d3a-ef96-4565-8e90-b0f765750a05" isOneWay="false" action="urn:getMaxServiceResponseTime" name="getMaxServiceResponseTime" bindingOperationName="getMaxServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b74fcfd2-5034-47d2-a631-74a255213097" isOneWay="false" action="urn:getMaxSystemResponseTime" name="getMaxSystemResponseTime" bindingOperationName="getMaxSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f83dd531-4a37-4c81-97bb-88094e1c8815" isOneWay="false" action="urn:getMinOperationResponseTime" name="getMinOperationResponseTime" bindingOperationName="getMinOperationResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bc767ec8-18fc-40d7-9e01-39f169e0bb51" isOneWay="false" action="urn:getMinServiceResponseTime" name="getMinServiceResponseTime" bindingOperationName="getMinServiceResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8c7aede2-f64b-4f15-bf54-1cddd3c22027" isOneWay="false" action="urn:getMinSystemResponseTime" name="getMinSystemResponseTime" bindingOperationName="getMinSystemResponseTime" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6b59656e-b5f1-43fe-b26d-43f30536d906" isOneWay="false" action="urn:getOperationFaultCount" name="getOperationFaultCount" bindingOperationName="getOperationFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="37653ab4-24b2-4607-9634-bb193bcd93c7" isOneWay="false" action="urn:getOperationRequestCount" name="getOperationRequestCount" bindingOperationName="getOperationRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4271f010-e11c-49c6-a646-412c664c9540" isOneWay="false" action="urn:getOperationResponseCount" name="getOperationResponseCount" bindingOperationName="getOperationResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3232fb9d-2b68-4d99-a5df-5295c2de7b91" isOneWay="false" action="urn:getOperationStatistics" name="getOperationStatistics" bindingOperationName="getOperationStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c90e26c8-d45c-47ca-91da-ab1fd70e287a" isOneWay="false" action="urn:getServiceFaultCount" name="getServiceFaultCount" bindingOperationName="getServiceFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79e66094-1718-457a-a7a8-5c0f083d20e8" isOneWay="false" action="urn:getServiceRequestCount" name="getServiceRequestCount" bindingOperationName="getServiceRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ac471394-5e78-4ffd-ba32-5c0baa0e2704" isOneWay="false" action="urn:getServiceResponseCount" name="getServiceResponseCount" bindingOperationName="getServiceResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a9a15872-9ca3-4b68-9ee0-96fd0987462d" isOneWay="false" action="urn:getServiceStatistics" name="getServiceStatistics" bindingOperationName="getServiceStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4062e2bd-c29c-4d8a-885d-c78a08351bdf" isOneWay="false" action="urn:getSystemFaultCount" name="getSystemFaultCount" bindingOperationName="getSystemFaultCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bdd8bcc2-2e96-4a89-8678-7a892f7ca461" isOneWay="false" action="urn:getSystemRequestCount" name="getSystemRequestCount" bindingOperationName="getSystemRequestCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="93e9bc6e-965f-47c9-ba80-5bcd66a4da75" isOneWay="false" action="urn:getSystemResponseCount" name="getSystemResponseCount" bindingOperationName="getSystemResponseCount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5b2f6ebc-95b0-4975-8427-92fe013e2e62" isOneWay="false" action="urn:getSystemStatistics" name="getSystemStatistics" bindingOperationName="getSystemStatistics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="89527beb-c23b-45cb-9b0b-e98b9043616e" isOneWay="false" action="urn:getWebappRelatedData" name="getWebappRelatedData" bindingOperationName="getWebappRelatedData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6ea9b6be-5f0f-4547-842f-90e5adc1119e" isOneWay="false" action="urn:setConfigurationContext" name="setConfigurationContext" bindingOperationName="setConfigurationContext" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b11a4d0a-b755-45e7-8397-0df4058f32e3" wsaVersion="NONE" name="TenantMgtAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.tenant.carbon.wso2.org}TenantMgtAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TenantMgtAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="9e46d993-e565-4fb0-bb3f-6d300fa9978c" isOneWay="false" action="urn:activateTenant" name="activateTenant" bindingOperationName="activateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c9b129f8-3a9a-4d0c-af20-086182308eb2" isOneWay="false" action="urn:addSkeletonTenant" name="addSkeletonTenant" bindingOperationName="addSkeletonTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bfbc232e-40ac-4d22-8343-68aff8d5d5e1" isOneWay="false" action="urn:addTenant" name="addTenant" bindingOperationName="addTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="176485ed-961e-4f97-aeaf-93b502b1cc48" isOneWay="false" action="urn:deactivateTenant" name="deactivateTenant" bindingOperationName="deactivateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4c6901a4-1a7d-411f-9843-3166a2f4a305" isOneWay="false" action="urn:deleteTenant" name="deleteTenant" bindingOperationName="deleteTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="888805a2-ae5f-4527-89ab-604b7a854d7a" isOneWay="false" action="urn:getTenant" name="getTenant" bindingOperationName="getTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="06cdf2d7-21b9-4b4e-af4b-f749e5878f62" isOneWay="false" action="urn:retrievePaginatedPartialSearchTenants" name="retrievePaginatedPartialSearchTenants" bindingOperationName="retrievePaginatedPartialSearchTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5a6de7f2-96d8-43c8-af8e-2599a95a0903" isOneWay="false" action="urn:retrievePaginatedTenants" name="retrievePaginatedTenants" bindingOperationName="retrievePaginatedTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="985dfb5e-c217-4dd5-99ca-5c1b7f370557" isOneWay="false" action="urn:retrievePartialSearchTenants" name="retrievePartialSearchTenants" bindingOperationName="retrievePartialSearchTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c4cf03db-0733-428c-a098-fe9c3b4dda93" isOneWay="false" action="urn:retrieveTenants" name="retrieveTenants" bindingOperationName="retrieveTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b5cde712-4539-4e0a-8975-87cfcaf4ab82" isOneWay="false" action="urn:updateTenant" name="updateTenant" bindingOperationName="updateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e8474460-baea-4247-a123-ef98f9462068" wsaVersion="NONE" name="TenantMgtAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.tenant.carbon.wso2.org}TenantMgtAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TenantMgtAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TenantMgtAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TenantMgtAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.tenant.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2632="http://beans.common.stratos.carbon.wso2.org/xsd" xmlns:ax2634="http://beans.mgt.tenant.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.tenant.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2637="http://exception.common.stratos.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2639="http://api.user.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>TenantMgtAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.tenant.carbon.wso2.org" xmlns:ax2638="http://exception.common.stratos.carbon.wso2.org/xsd" xmlns:ax2633="http://beans.common.stratos.carbon.wso2.org/xsd" xmlns:ax2636="http://beans.mgt.tenant.carbon.wso2.org/xsd" xmlns:ax2640="http://api.user.carbon.wso2.org/xsd">
      <xs:import namespace="http://beans.common.stratos.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.mgt.tenant.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://exception.common.stratos.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:element name="TenantMgtAdminServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="TenantMgtAdminServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="addSkeletonTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantInfoBean" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addSkeletonTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrieveTenants">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrieveTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePartialSearchTenants">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePartialSearchTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePaginatedPartialSearchTenants">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePaginatedPartialSearchTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2634:PaginatedTenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePaginatedTenants">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="retrievePaginatedTenantsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2634:PaginatedTenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="TenantMgtAdminServiceStratosException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="StratosException" nillable="true" type="ax2637:StratosException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="TenantMgtAdminServiceUserStoreException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2639:UserStoreException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantInfoBean" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantInfoBean" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTenantResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2632:TenantInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="activateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deactivateTenant">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.common.stratos.carbon.wso2.org/xsd">
      <xs:complexType name="TenantInfoBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="active" type="xs:boolean"/>
          <xs:element minOccurs="0" name="admin" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdDate" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="email" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="firstname" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastname" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="originatedService" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="successKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
          <xs:element minOccurs="0" name="usagePlan" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.mgt.tenant.carbon.wso2.org/xsd" xmlns:ax2635="http://beans.common.stratos.carbon.wso2.org/xsd">
      <xs:import namespace="http://beans.common.stratos.carbon.wso2.org/xsd"/>
      <xs:complexType name="PaginatedTenantInfoBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tenantInfoBeans" nillable="true" type="ax2632:TenantInfoBean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.common.stratos.carbon.wso2.org/xsd">
      <xs:complexType name="StratosException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="deactivateTenantRequest">
    <wsdl:part name="parameters" element="ns:deactivateTenant"/>
  </wsdl:message>
  <wsdl:message name="deactivateTenantResponse"/>
  <wsdl:message name="TenantMgtAdminServiceException">
    <wsdl:part name="parameters" element="ns:TenantMgtAdminServiceException"/>
  </wsdl:message>
  <wsdl:message name="retrievePaginatedPartialSearchTenantsRequest">
    <wsdl:part name="parameters" element="ns:retrievePaginatedPartialSearchTenants"/>
  </wsdl:message>
  <wsdl:message name="retrievePaginatedPartialSearchTenantsResponse">
    <wsdl:part name="parameters" element="ns:retrievePaginatedPartialSearchTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="addTenantRequest">
    <wsdl:part name="parameters" element="ns:addTenant"/>
  </wsdl:message>
  <wsdl:message name="addTenantResponse">
    <wsdl:part name="parameters" element="ns:addTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="retrieveTenantsRequest">
    <wsdl:part name="parameters" element="ns:retrieveTenants"/>
  </wsdl:message>
  <wsdl:message name="retrieveTenantsResponse">
    <wsdl:part name="parameters" element="ns:retrieveTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateTenantRequest">
    <wsdl:part name="parameters" element="ns:updateTenant"/>
  </wsdl:message>
  <wsdl:message name="updateTenantResponse"/>
  <wsdl:message name="deleteTenantRequest">
    <wsdl:part name="parameters" element="ns:deleteTenant"/>
  </wsdl:message>
  <wsdl:message name="deleteTenantResponse"/>
  <wsdl:message name="TenantMgtAdminServiceStratosException">
    <wsdl:part name="parameters" element="ns:TenantMgtAdminServiceStratosException"/>
  </wsdl:message>
  <wsdl:message name="TenantMgtAdminServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:TenantMgtAdminServiceUserStoreException"/>
  </wsdl:message>
  <wsdl:message name="addSkeletonTenantRequest">
    <wsdl:part name="parameters" element="ns:addSkeletonTenant"/>
  </wsdl:message>
  <wsdl:message name="addSkeletonTenantResponse">
    <wsdl:part name="parameters" element="ns:addSkeletonTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="retrievePaginatedTenantsRequest">
    <wsdl:part name="parameters" element="ns:retrievePaginatedTenants"/>
  </wsdl:message>
  <wsdl:message name="retrievePaginatedTenantsResponse">
    <wsdl:part name="parameters" element="ns:retrievePaginatedTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="retrievePartialSearchTenantsRequest">
    <wsdl:part name="parameters" element="ns:retrievePartialSearchTenants"/>
  </wsdl:message>
  <wsdl:message name="retrievePartialSearchTenantsResponse">
    <wsdl:part name="parameters" element="ns:retrievePartialSearchTenantsResponse"/>
  </wsdl:message>
  <wsdl:message name="getTenantRequest">
    <wsdl:part name="parameters" element="ns:getTenant"/>
  </wsdl:message>
  <wsdl:message name="getTenantResponse">
    <wsdl:part name="parameters" element="ns:getTenantResponse"/>
  </wsdl:message>
  <wsdl:message name="activateTenantRequest">
    <wsdl:part name="parameters" element="ns:activateTenant"/>
  </wsdl:message>
  <wsdl:message name="activateTenantResponse"/>
  <wsdl:portType name="TenantMgtAdminServicePortType">
    <wsdl:operation name="deactivateTenant">
      <wsdl:input message="ns:deactivateTenantRequest" wsaw:Action="urn:deactivateTenant"/>
      <wsdl:output message="ns:deactivateTenantResponse" wsaw:Action="urn:deactivateTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:deactivateTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedPartialSearchTenants">
      <wsdl:input message="ns:retrievePaginatedPartialSearchTenantsRequest" wsaw:Action="urn:retrievePaginatedPartialSearchTenants"/>
      <wsdl:output message="ns:retrievePaginatedPartialSearchTenantsResponse" wsaw:Action="urn:retrievePaginatedPartialSearchTenantsResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:retrievePaginatedPartialSearchTenantsTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <wsdl:input message="ns:addTenantRequest" wsaw:Action="urn:addTenant"/>
      <wsdl:output message="ns:addTenantResponse" wsaw:Action="urn:addTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:addTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="retrieveTenants">
      <wsdl:input message="ns:retrieveTenantsRequest" wsaw:Action="urn:retrieveTenants"/>
      <wsdl:output message="ns:retrieveTenantsResponse" wsaw:Action="urn:retrieveTenantsResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:retrieveTenantsTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <wsdl:input message="ns:updateTenantRequest" wsaw:Action="urn:updateTenant"/>
      <wsdl:output message="ns:updateTenantResponse" wsaw:Action="urn:updateTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:updateTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <wsdl:input message="ns:deleteTenantRequest" wsaw:Action="urn:deleteTenant"/>
      <wsdl:output message="ns:deleteTenantResponse" wsaw:Action="urn:deleteTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceStratosException" name="TenantMgtAdminServiceStratosException" wsaw:Action="urn:deleteTenantTenantMgtAdminServiceStratosException"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceUserStoreException" name="TenantMgtAdminServiceUserStoreException" wsaw:Action="urn:deleteTenantTenantMgtAdminServiceUserStoreException"/>
    </wsdl:operation>
    <wsdl:operation name="addSkeletonTenant">
      <wsdl:input message="ns:addSkeletonTenantRequest" wsaw:Action="urn:addSkeletonTenant"/>
      <wsdl:output message="ns:addSkeletonTenantResponse" wsaw:Action="urn:addSkeletonTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:addSkeletonTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedTenants">
      <wsdl:input message="ns:retrievePaginatedTenantsRequest" wsaw:Action="urn:retrievePaginatedTenants"/>
      <wsdl:output message="ns:retrievePaginatedTenantsResponse" wsaw:Action="urn:retrievePaginatedTenantsResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:retrievePaginatedTenantsTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="retrievePartialSearchTenants">
      <wsdl:input message="ns:retrievePartialSearchTenantsRequest" wsaw:Action="urn:retrievePartialSearchTenants"/>
      <wsdl:output message="ns:retrievePartialSearchTenantsResponse" wsaw:Action="urn:retrievePartialSearchTenantsResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:retrievePartialSearchTenantsTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <wsdl:input message="ns:getTenantRequest" wsaw:Action="urn:getTenant"/>
      <wsdl:output message="ns:getTenantResponse" wsaw:Action="urn:getTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:getTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <wsdl:input message="ns:activateTenantRequest" wsaw:Action="urn:activateTenant"/>
      <wsdl:output message="ns:activateTenantResponse" wsaw:Action="urn:activateTenantResponse"/>
      <wsdl:fault message="ns:TenantMgtAdminServiceException" name="TenantMgtAdminServiceException" wsaw:Action="urn:activateTenantTenantMgtAdminServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TenantMgtAdminServiceSoap11Binding" type="ns:TenantMgtAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="deactivateTenant">
      <soap:operation soapAction="urn:deactivateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedPartialSearchTenants">
      <soap:operation soapAction="urn:retrievePaginatedPartialSearchTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <soap:operation soapAction="urn:addTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveTenants">
      <soap:operation soapAction="urn:retrieveTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <soap:operation soapAction="urn:updateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <soap:operation soapAction="urn:deleteTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceUserStoreException">
        <soap:fault use="literal" name="TenantMgtAdminServiceUserStoreException"/>
      </wsdl:fault>
      <wsdl:fault name="TenantMgtAdminServiceStratosException">
        <soap:fault use="literal" name="TenantMgtAdminServiceStratosException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSkeletonTenant">
      <soap:operation soapAction="urn:addSkeletonTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedTenants">
      <soap:operation soapAction="urn:retrievePaginatedTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePartialSearchTenants">
      <soap:operation soapAction="urn:retrievePartialSearchTenants" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <soap:operation soapAction="urn:getTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <soap:operation soapAction="urn:activateTenant" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TenantMgtAdminServiceSoap12Binding" type="ns:TenantMgtAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="deactivateTenant">
      <soap12:operation soapAction="urn:deactivateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedPartialSearchTenants">
      <soap12:operation soapAction="urn:retrievePaginatedPartialSearchTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <soap12:operation soapAction="urn:addTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveTenants">
      <soap12:operation soapAction="urn:retrieveTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <soap12:operation soapAction="urn:updateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <soap12:operation soapAction="urn:deleteTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceUserStoreException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceUserStoreException"/>
      </wsdl:fault>
      <wsdl:fault name="TenantMgtAdminServiceStratosException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceStratosException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSkeletonTenant">
      <soap12:operation soapAction="urn:addSkeletonTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedTenants">
      <soap12:operation soapAction="urn:retrievePaginatedTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrievePartialSearchTenants">
      <soap12:operation soapAction="urn:retrievePartialSearchTenants" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <soap12:operation soapAction="urn:getTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <soap12:operation soapAction="urn:activateTenant" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TenantMgtAdminServiceException">
        <soap12:fault use="literal" name="TenantMgtAdminServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TenantMgtAdminServiceHttpBinding" type="ns:TenantMgtAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="deactivateTenant">
      <http:operation location="deactivateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedPartialSearchTenants">
      <http:operation location="retrievePaginatedPartialSearchTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTenant">
      <http:operation location="addTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="retrieveTenants">
      <http:operation location="retrieveTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <http:operation location="updateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <http:operation location="deleteTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addSkeletonTenant">
      <http:operation location="addSkeletonTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="retrievePaginatedTenants">
      <http:operation location="retrievePaginatedTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="retrievePartialSearchTenants">
      <http:operation location="retrievePartialSearchTenants"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTenant">
      <http:operation location="getTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activateTenant">
      <http:operation location="activateTenant"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TenantMgtAdminService">
    <wsdl:port name="TenantMgtAdminServiceHttpsSoap11Endpoint" binding="ns:TenantMgtAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TenantMgtAdminServiceHttpsSoap12Endpoint" binding="ns:TenantMgtAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TenantMgtAdminServiceHttpsEndpoint" binding="ns:TenantMgtAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="819400ab-fd23-48b9-9a0b-03d3e71355ac" isOneWay="false" action="urn:activateTenant" name="activateTenant" bindingOperationName="activateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7961a6a8-ef1e-479f-9423-c35e214046de" isOneWay="false" action="urn:addSkeletonTenant" name="addSkeletonTenant" bindingOperationName="addSkeletonTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="830e29ef-39cd-4a5c-9f7b-d83985b3d1bf" isOneWay="false" action="urn:addTenant" name="addTenant" bindingOperationName="addTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="880cffd9-1945-476a-9878-6d65285391a0" isOneWay="false" action="urn:deactivateTenant" name="deactivateTenant" bindingOperationName="deactivateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="673bd398-0e8f-45ae-bc64-9539dd6bb4b6" isOneWay="false" action="urn:deleteTenant" name="deleteTenant" bindingOperationName="deleteTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3c919123-13a0-4fb6-a9f5-2a0b3df9e4cb" isOneWay="false" action="urn:getTenant" name="getTenant" bindingOperationName="getTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0fafc0bf-dd9b-4a3e-93d5-addf04875e80" isOneWay="false" action="urn:retrievePaginatedPartialSearchTenants" name="retrievePaginatedPartialSearchTenants" bindingOperationName="retrievePaginatedPartialSearchTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d9b0b4f-9d47-4463-84de-7cbca8eb7235" isOneWay="false" action="urn:retrievePaginatedTenants" name="retrievePaginatedTenants" bindingOperationName="retrievePaginatedTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0341c928-c6c9-49ae-a887-d2ac92eeb6d8" isOneWay="false" action="urn:retrievePartialSearchTenants" name="retrievePartialSearchTenants" bindingOperationName="retrievePartialSearchTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8347b853-8ced-4585-87ba-7e9eb6ebc5af" isOneWay="false" action="urn:retrieveTenants" name="retrieveTenants" bindingOperationName="retrieveTenants" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed46e78e-569b-4b91-bb99-3c555b92895a" isOneWay="false" action="urn:updateTenant" name="updateTenant" bindingOperationName="updateTenant" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="51ba8ea9-711c-43bc-b076-f9f62750b78e" wsaVersion="NONE" name="ThemeMgtServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.theme.carbon.wso2.org}ThemeMgtServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ThemeMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="1b01a1a3-1791-4b54-8d68-892eab72ffab" isOneWay="false" action="urn:addCollection" name="addCollection" bindingOperationName="addCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="90fdcfb9-e32a-4b09-9257-7f4b7af68902" isOneWay="false" action="urn:addResource" name="addResource" bindingOperationName="addResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b0d6494c-ac1a-4b2a-8c0e-cd2464d83b61" isOneWay="false" action="urn:addTextResource" name="addTextResource" bindingOperationName="addTextResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="64fc1a40-4b47-4ab0-84b5-b0e9265592cb" isOneWay="false" action="urn:applyTheme" name="applyTheme" bindingOperationName="applyTheme" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f8aea8f1-d9d2-4d58-8a95-a099b04ae42c" isOneWay="false" action="urn:delete" name="delete" bindingOperationName="delete" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1eb49ff4-21fc-4cfd-9f20-79d818a730b6" isOneWay="false" action="urn:getAllPaths" name="getAllPaths" bindingOperationName="getAllPaths" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fd235a7a-10d4-4e38-b86a-2164809f88b9" isOneWay="false" action="urn:getAllThemes" name="getAllThemes" bindingOperationName="getAllThemes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="091c4d63-c8ed-46a6-8eab-8f3ceba5024e" isOneWay="false" action="urn:getCollectionContent" name="getCollectionContent" bindingOperationName="getCollectionContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7f18c435-f067-4d90-b604-264d5fbbc837" isOneWay="false" action="urn:getContentBean" name="getContentBean" bindingOperationName="getContentBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0c6de06e-3383-4412-a5a3-59d79d26a98c" isOneWay="false" action="urn:getContentDownloadBean" name="getContentDownloadBean" bindingOperationName="getContentDownloadBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c985eb3a-0739-4a84-9d4c-28cf743951cd" isOneWay="false" action="urn:getMetadata" name="getMetadata" bindingOperationName="getMetadata" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="132fc012-345f-4e22-a907-0d3affc7639c" isOneWay="false" action="urn:getResourceData" name="getResourceData" bindingOperationName="getResourceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b26bff6e-fda0-4e10-82da-2eb83c7f5b29" isOneWay="false" action="urn:getResourceTreeEntry" name="getResourceTreeEntry" bindingOperationName="getResourceTreeEntry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="86bae1c6-3632-4280-bc88-80f4a420600e" isOneWay="false" action="urn:getSessionResourcePath" name="getSessionResourcePath" bindingOperationName="getSessionResourcePath" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9f8834dd-1f45-4b3f-8d3a-56da5c0f6b38" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2c18e848-564e-4e83-9222-f0d8dbcf78f5" isOneWay="false" action="urn:importResource" name="importResource" bindingOperationName="importResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79f0bd86-cb8f-4bff-a275-5ce4dbc8286c" isOneWay="false" action="urn:renameResource" name="renameResource" bindingOperationName="renameResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a15bbe03-cef1-4277-af0f-7a134cd12eda" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9268c675-09aa-4aac-9324-186931804ab7" wsaVersion="NONE" name="ThemeMgtServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.theme.carbon.wso2.org}ThemeMgtServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ThemeMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ThemeMgtService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ThemeMgtService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.theme.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2645="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2646="http://common.registry.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.theme.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ThemeMgtService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.resource.registry.carbon.wso2.org/xsd" xmlns:ax2647="http://common.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:complexType name="MetadataBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="activeResourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="author" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contentPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="deleteLocked" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="formattedLastModified" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastUpdater" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="navigatablePaths" nillable="true" type="ax2646:WebResourcePath"/>
          <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="permalink" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="resourceVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serverBaseURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
          <xs:element minOccurs="0" name="writeLocked" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CollectionContentBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="childCount" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="childPaths" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="collectionTypes" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="remoteInstances" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContentBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contentPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="loggedIn" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="pathWithVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="versionView" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceTreeEntryBean">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="children" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="collection" type="xs:boolean"/>
          <xs:element minOccurs="0" name="symlink" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ContentDownloadBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="lastUpdatedTime" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="mediatype" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.registry.carbon.wso2.org/xsd">
      <xs:complexType name="WebResourcePath">
        <xs:sequence>
          <xs:element minOccurs="0" name="navigateName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="navigatePath" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ResourceData">
        <xs:sequence>
          <xs:element minOccurs="0" name="absent" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="authorUserName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="averageRating" type="xs:float"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="averageStars" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdOn" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="deleteAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="externalLink" type="xs:boolean"/>
          <xs:element minOccurs="0" name="formattedCreatedOn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="getAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="link" type="xs:boolean"/>
          <xs:element minOccurs="0" name="mounted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="putAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="realPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="relativePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="resourceType" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tagCounts" nillable="true" type="ax2646:TagCount"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TagCount">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.theme.carbon.wso2.org" xmlns:ax2649="http://common.registry.carbon.wso2.org/xsd" xmlns:ax2648="http://beans.resource.registry.carbon.wso2.org/xsd">
      <xs:import namespace="http://beans.resource.registry.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://common.registry.carbon.wso2.org/xsd"/>
      <xs:element name="ThemeMgtServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ThemeMgtServiceException" nillable="true" type="ns:Exception"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="delete">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="pathToDelete" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTextContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCollection">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="collectionName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addCollectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="resourceName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fetchURL" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="symlinkLocation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:MetadataBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:base64Binary"/>
            <xs:element minOccurs="0" name="symlinkLocation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCollectionContentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:CollectionContentBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceData">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="paths" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceDataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2646:ResourceData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:ContentBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTextResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="mediaType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="content" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateTextContent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="contentText" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="renameResource">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="parentPath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldResourcePath" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newResourceName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSessionResourcePath">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSessionResourcePathResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceTreeEntry">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getResourceTreeEntryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:ResourceTreeEntryBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentDownloadBean">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="path" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getContentDownloadBeanResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2645:ContentDownloadBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPaths">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPathsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllThemes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="tenantPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllThemesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="applyTheme">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="themeName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantPass" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getSessionResourcePathRequest">
    <wsdl:part name="parameters" element="ns:getSessionResourcePath"/>
  </wsdl:message>
  <wsdl:message name="getSessionResourcePathResponse">
    <wsdl:part name="parameters" element="ns:getSessionResourcePathResponse"/>
  </wsdl:message>
  <wsdl:message name="ThemeMgtServiceException">
    <wsdl:part name="parameters" element="ns:ThemeMgtServiceException"/>
  </wsdl:message>
  <wsdl:message name="getResourceTreeEntryRequest">
    <wsdl:part name="parameters" element="ns:getResourceTreeEntry"/>
  </wsdl:message>
  <wsdl:message name="getResourceTreeEntryResponse">
    <wsdl:part name="parameters" element="ns:getResourceTreeEntryResponse"/>
  </wsdl:message>
  <wsdl:message name="getMetadataRequest">
    <wsdl:part name="parameters" element="ns:getMetadata"/>
  </wsdl:message>
  <wsdl:message name="getMetadataResponse">
    <wsdl:part name="parameters" element="ns:getMetadataResponse"/>
  </wsdl:message>
  <wsdl:message name="applyThemeRequest">
    <wsdl:part name="parameters" element="ns:applyTheme"/>
  </wsdl:message>
  <wsdl:message name="applyThemeResponse"/>
  <wsdl:message name="getTextContentRequest">
    <wsdl:part name="parameters" element="ns:getTextContent"/>
  </wsdl:message>
  <wsdl:message name="getTextContentResponse">
    <wsdl:part name="parameters" element="ns:getTextContentResponse"/>
  </wsdl:message>
  <wsdl:message name="getResourceDataRequest">
    <wsdl:part name="parameters" element="ns:getResourceData"/>
  </wsdl:message>
  <wsdl:message name="getResourceDataResponse">
    <wsdl:part name="parameters" element="ns:getResourceDataResponse"/>
  </wsdl:message>
  <wsdl:message name="getCollectionContentRequest">
    <wsdl:part name="parameters" element="ns:getCollectionContent"/>
  </wsdl:message>
  <wsdl:message name="getCollectionContentResponse">
    <wsdl:part name="parameters" element="ns:getCollectionContentResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteRequest">
    <wsdl:part name="parameters" element="ns:delete"/>
  </wsdl:message>
  <wsdl:message name="deleteResponse"/>
  <wsdl:message name="getAllPathsRequest">
    <wsdl:part name="parameters" element="ns:getAllPaths"/>
  </wsdl:message>
  <wsdl:message name="getAllPathsResponse">
    <wsdl:part name="parameters" element="ns:getAllPathsResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllThemesRequest">
    <wsdl:part name="parameters" element="ns:getAllThemes"/>
  </wsdl:message>
  <wsdl:message name="getAllThemesResponse">
    <wsdl:part name="parameters" element="ns:getAllThemesResponse"/>
  </wsdl:message>
  <wsdl:message name="getContentBeanRequest">
    <wsdl:part name="parameters" element="ns:getContentBean"/>
  </wsdl:message>
  <wsdl:message name="getContentBeanResponse">
    <wsdl:part name="parameters" element="ns:getContentBeanResponse"/>
  </wsdl:message>
  <wsdl:message name="renameResourceRequest">
    <wsdl:part name="parameters" element="ns:renameResource"/>
  </wsdl:message>
  <wsdl:message name="renameResourceResponse"/>
  <wsdl:message name="addTextResourceRequest">
    <wsdl:part name="parameters" element="ns:addTextResource"/>
  </wsdl:message>
  <wsdl:message name="addTextResourceResponse"/>
  <wsdl:message name="importResourceRequest">
    <wsdl:part name="parameters" element="ns:importResource"/>
  </wsdl:message>
  <wsdl:message name="importResourceResponse"/>
  <wsdl:message name="addResourceRequest">
    <wsdl:part name="parameters" element="ns:addResource"/>
  </wsdl:message>
  <wsdl:message name="addResourceResponse"/>
  <wsdl:message name="addCollectionRequest">
    <wsdl:part name="parameters" element="ns:addCollection"/>
  </wsdl:message>
  <wsdl:message name="addCollectionResponse">
    <wsdl:part name="parameters" element="ns:addCollectionResponse"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentRequest">
    <wsdl:part name="parameters" element="ns:updateTextContent"/>
  </wsdl:message>
  <wsdl:message name="updateTextContentResponse"/>
  <wsdl:message name="getContentDownloadBeanRequest">
    <wsdl:part name="parameters" element="ns:getContentDownloadBean"/>
  </wsdl:message>
  <wsdl:message name="getContentDownloadBeanResponse">
    <wsdl:part name="parameters" element="ns:getContentDownloadBeanResponse"/>
  </wsdl:message>
  <wsdl:portType name="ThemeMgtServicePortType">
    <wsdl:operation name="getSessionResourcePath">
      <wsdl:input message="ns:getSessionResourcePathRequest" wsaw:Action="urn:getSessionResourcePath"/>
      <wsdl:output message="ns:getSessionResourcePathResponse" wsaw:Action="urn:getSessionResourcePathResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getSessionResourcePathThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <wsdl:input message="ns:getResourceTreeEntryRequest" wsaw:Action="urn:getResourceTreeEntry"/>
      <wsdl:output message="ns:getResourceTreeEntryResponse" wsaw:Action="urn:getResourceTreeEntryResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getResourceTreeEntryThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <wsdl:input message="ns:getMetadataRequest" wsaw:Action="urn:getMetadata"/>
      <wsdl:output message="ns:getMetadataResponse" wsaw:Action="urn:getMetadataResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getMetadataThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="applyTheme">
      <wsdl:input message="ns:applyThemeRequest" wsaw:Action="urn:applyTheme"/>
      <wsdl:output message="ns:applyThemeResponse" wsaw:Action="urn:applyThemeResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:applyThemeThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <wsdl:input message="ns:getTextContentRequest" wsaw:Action="urn:getTextContent"/>
      <wsdl:output message="ns:getTextContentResponse" wsaw:Action="urn:getTextContentResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getTextContentThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <wsdl:input message="ns:getResourceDataRequest" wsaw:Action="urn:getResourceData"/>
      <wsdl:output message="ns:getResourceDataResponse" wsaw:Action="urn:getResourceDataResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getResourceDataThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <wsdl:input message="ns:getCollectionContentRequest" wsaw:Action="urn:getCollectionContent"/>
      <wsdl:output message="ns:getCollectionContentResponse" wsaw:Action="urn:getCollectionContentResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getCollectionContentThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <wsdl:input message="ns:deleteRequest" wsaw:Action="urn:delete"/>
      <wsdl:output message="ns:deleteResponse" wsaw:Action="urn:deleteResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:deleteThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPaths">
      <wsdl:input message="ns:getAllPathsRequest" wsaw:Action="urn:getAllPaths"/>
      <wsdl:output message="ns:getAllPathsResponse" wsaw:Action="urn:getAllPathsResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getAllPathsThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllThemes">
      <wsdl:input message="ns:getAllThemesRequest" wsaw:Action="urn:getAllThemes"/>
      <wsdl:output message="ns:getAllThemesResponse" wsaw:Action="urn:getAllThemesResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getAllThemesThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <wsdl:input message="ns:getContentBeanRequest" wsaw:Action="urn:getContentBean"/>
      <wsdl:output message="ns:getContentBeanResponse" wsaw:Action="urn:getContentBeanResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getContentBeanThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <wsdl:input message="ns:renameResourceRequest" wsaw:Action="urn:renameResource"/>
      <wsdl:output message="ns:renameResourceResponse" wsaw:Action="urn:renameResourceResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:renameResourceThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <wsdl:input message="ns:addTextResourceRequest" wsaw:Action="urn:addTextResource"/>
      <wsdl:output message="ns:addTextResourceResponse" wsaw:Action="urn:addTextResourceResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:addTextResourceThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <wsdl:input message="ns:importResourceRequest" wsaw:Action="urn:importResource"/>
      <wsdl:output message="ns:importResourceResponse" wsaw:Action="urn:importResourceResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:importResourceThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <wsdl:input message="ns:addResourceRequest" wsaw:Action="urn:addResource"/>
      <wsdl:output message="ns:addResourceResponse" wsaw:Action="urn:addResourceResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:addResourceThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <wsdl:input message="ns:addCollectionRequest" wsaw:Action="urn:addCollection"/>
      <wsdl:output message="ns:addCollectionResponse" wsaw:Action="urn:addCollectionResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:addCollectionThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <wsdl:input message="ns:updateTextContentRequest" wsaw:Action="urn:updateTextContent"/>
      <wsdl:output message="ns:updateTextContentResponse" wsaw:Action="urn:updateTextContentResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:updateTextContentThemeMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <wsdl:input message="ns:getContentDownloadBeanRequest" wsaw:Action="urn:getContentDownloadBean"/>
      <wsdl:output message="ns:getContentDownloadBeanResponse" wsaw:Action="urn:getContentDownloadBeanResponse"/>
      <wsdl:fault message="ns:ThemeMgtServiceException" name="ThemeMgtServiceException" wsaw:Action="urn:getContentDownloadBeanThemeMgtServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ThemeMgtServiceSoap11Binding" type="ns:ThemeMgtServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSessionResourcePath">
      <soap:operation soapAction="urn:getSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <soap:operation soapAction="urn:getResourceTreeEntry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <soap:operation soapAction="urn:getMetadata" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyTheme">
      <soap:operation soapAction="urn:applyTheme" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <soap:operation soapAction="urn:getResourceData" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <soap:operation soapAction="urn:getCollectionContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="urn:delete" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPaths">
      <soap:operation soapAction="urn:getAllPaths" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllThemes">
      <soap:operation soapAction="urn:getAllThemes" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <soap:operation soapAction="urn:getContentBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <soap:operation soapAction="urn:renameResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <soap:operation soapAction="urn:addTextResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <soap:operation soapAction="urn:importResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <soap:operation soapAction="urn:addResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <soap:operation soapAction="urn:addCollection" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <soap:operation soapAction="urn:getContentDownloadBean" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ThemeMgtServiceSoap12Binding" type="ns:ThemeMgtServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getSessionResourcePath">
      <soap12:operation soapAction="urn:getSessionResourcePath" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <soap12:operation soapAction="urn:getResourceTreeEntry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <soap12:operation soapAction="urn:getMetadata" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="applyTheme">
      <soap12:operation soapAction="urn:applyTheme" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <soap12:operation soapAction="urn:getTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <soap12:operation soapAction="urn:getResourceData" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <soap12:operation soapAction="urn:getCollectionContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap12:operation soapAction="urn:delete" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPaths">
      <soap12:operation soapAction="urn:getAllPaths" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllThemes">
      <soap12:operation soapAction="urn:getAllThemes" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <soap12:operation soapAction="urn:getContentBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <soap12:operation soapAction="urn:renameResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <soap12:operation soapAction="urn:addTextResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <soap12:operation soapAction="urn:importResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <soap12:operation soapAction="urn:addResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <soap12:operation soapAction="urn:addCollection" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <soap12:operation soapAction="urn:updateTextContent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <soap12:operation soapAction="urn:getContentDownloadBean" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ThemeMgtServiceException">
        <soap12:fault use="literal" name="ThemeMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ThemeMgtServiceHttpBinding" type="ns:ThemeMgtServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getSessionResourcePath">
      <http:operation location="getSessionResourcePath"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResourceTreeEntry">
      <http:operation location="getResourceTreeEntry"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <http:operation location="getMetadata"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="applyTheme">
      <http:operation location="applyTheme"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTextContent">
      <http:operation location="getTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getResourceData">
      <http:operation location="getResourceData"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCollectionContent">
      <http:operation location="getCollectionContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <http:operation location="delete"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPaths">
      <http:operation location="getAllPaths"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllThemes">
      <http:operation location="getAllThemes"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContentBean">
      <http:operation location="getContentBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renameResource">
      <http:operation location="renameResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTextResource">
      <http:operation location="addTextResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="importResource">
      <http:operation location="importResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addResource">
      <http:operation location="addResource"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addCollection">
      <http:operation location="addCollection"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateTextContent">
      <http:operation location="updateTextContent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getContentDownloadBean">
      <http:operation location="getContentDownloadBean"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ThemeMgtService">
    <wsdl:port name="ThemeMgtServiceHttpsSoap11Endpoint" binding="ns:ThemeMgtServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ThemeMgtServiceHttpsSoap12Endpoint" binding="ns:ThemeMgtServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ThemeMgtServiceHttpsEndpoint" binding="ns:ThemeMgtServiceHttpBinding">
      <http:address location="https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ThemeMgtService.ThemeMgtServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="46c973c4-7401-40c5-aa17-adabf47d9dd0" isOneWay="false" action="urn:addCollection" name="addCollection" bindingOperationName="addCollection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d7bedd48-ebf3-4ac2-851a-ab7de3f8d76d" isOneWay="false" action="urn:addResource" name="addResource" bindingOperationName="addResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e7b0d1bb-bd27-4d90-99dd-25c0a59dbe38" isOneWay="false" action="urn:addTextResource" name="addTextResource" bindingOperationName="addTextResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a75d495e-45aa-4366-8e6d-92b48f46db8b" isOneWay="false" action="urn:applyTheme" name="applyTheme" bindingOperationName="applyTheme" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ea49526a-f50b-4c14-8557-5912ba37fdd4" isOneWay="false" action="urn:delete" name="delete" bindingOperationName="delete" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="de565c4d-2bcf-44ee-8463-a120ee31686d" isOneWay="false" action="urn:getAllPaths" name="getAllPaths" bindingOperationName="getAllPaths" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="87b56958-71d0-4c03-abc1-e29ba19b73be" isOneWay="false" action="urn:getAllThemes" name="getAllThemes" bindingOperationName="getAllThemes" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="af44671a-8559-451d-8a5a-69e40fd88e89" isOneWay="false" action="urn:getCollectionContent" name="getCollectionContent" bindingOperationName="getCollectionContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="75590d2f-499b-43d5-9886-ea05759eacf8" isOneWay="false" action="urn:getContentBean" name="getContentBean" bindingOperationName="getContentBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="66a743e3-e242-469c-ae6f-27c13a9ad4a4" isOneWay="false" action="urn:getContentDownloadBean" name="getContentDownloadBean" bindingOperationName="getContentDownloadBean" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16fec43e-f100-45f2-81a3-8dfa11d76b0a" isOneWay="false" action="urn:getMetadata" name="getMetadata" bindingOperationName="getMetadata" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dc1d5b0e-9f43-4df8-aa53-d69bf45ff6d3" isOneWay="false" action="urn:getResourceData" name="getResourceData" bindingOperationName="getResourceData" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="23f58900-9747-4b60-be4f-b3fe81006eee" isOneWay="false" action="urn:getResourceTreeEntry" name="getResourceTreeEntry" bindingOperationName="getResourceTreeEntry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="97356fa8-934b-4548-a58a-f534369b8882" isOneWay="false" action="urn:getSessionResourcePath" name="getSessionResourcePath" bindingOperationName="getSessionResourcePath" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="32c9fcc1-b174-4685-840f-1c8e65c3d418" isOneWay="false" action="urn:getTextContent" name="getTextContent" bindingOperationName="getTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16ba4477-f7bb-4140-9c2b-8a4ff74bd0b8" isOneWay="false" action="urn:importResource" name="importResource" bindingOperationName="importResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5a6f7094-4e9b-47fa-8d3d-05903024b05f" isOneWay="false" action="urn:renameResource" name="renameResource" bindingOperationName="renameResource" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4ea81725-799f-48b1-84a3-1310ba1484a6" isOneWay="false" action="urn:updateTextContent" name="updateTextContent" bindingOperationName="updateTextContent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2db22c79-2baa-4ced-9d3b-6e224419fbda" wsaVersion="NONE" name="TopicManagerAdminServiceSoap12Binding" type="wsdl" bindingName="{http://internal.admin.event.carbon.wso2.org}TopicManagerAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TopicManagerAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="ebdf6f76-b027-4763-b768-4a1b2f5510fe" isOneWay="false" action="urn:addTopic" name="addTopic" bindingOperationName="addTopic" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7d93daf0-6b8a-4c1e-a06d-983a8b87aa40" isOneWay="false" action="urn:getAllTopics" name="getAllTopics" bindingOperationName="getAllTopics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a236edfa-a84d-4be2-94c6-449da354a142" isOneWay="false" action="urn:getAllWSSubscriptionCountForTopic" name="getAllWSSubscriptionCountForTopic" bindingOperationName="getAllWSSubscriptionCountForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e1d83ab0-bd71-45f2-8ee1-a6408a4688fb" isOneWay="false" action="urn:getAllWSSubscriptionsForTopic" name="getAllWSSubscriptionsForTopic" bindingOperationName="getAllWSSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cb0a4e59-1417-4f9b-8f18-e3974dc8743a" isOneWay="false" action="urn:getJMSSubscriptionsForTopic" name="getJMSSubscriptionsForTopic" bindingOperationName="getJMSSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3418049c-c541-4af7-b1b0-7e70321dadd4" isOneWay="false" action="urn:getTopicRolePermissions" name="getTopicRolePermissions" bindingOperationName="getTopicRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="99e67db7-c0c2-40a1-b3e4-338fbd59ce46" isOneWay="false" action="urn:getUserRoles" name="getUserRoles" bindingOperationName="getUserRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="70e2d930-fb09-457d-a935-9e7f6dfc3893" isOneWay="false" action="urn:getWsSubscriptionsForTopic" name="getWsSubscriptionsForTopic" bindingOperationName="getWsSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6a3d5c22-5279-42b0-ab1c-63051f907101" isOneWay="false" action="urn:removeTopic" name="removeTopic" bindingOperationName="removeTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a10dffdc-8054-4658-8afa-4f4e7618e680" isOneWay="false" action="urn:updatePermission" name="updatePermission" bindingOperationName="updatePermission" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="01cd335d-cb36-4035-b12c-b3fa2551ff68" wsaVersion="NONE" name="TopicManagerAdminServiceSoap11Binding" type="wsdl" bindingName="{http://internal.admin.event.carbon.wso2.org}TopicManagerAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TopicManagerAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TopicManagerAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TopicManagerAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://internal.admin.event.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2114="http://internal.admin.event.carbon.wso2.org/xsd" xmlns:ax2115="http://subscription.core.event.carbon.wso2.org/xsd" xmlns:ns="http://internal.admin.event.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2110="http://exception.internal.admin.event.carbon.wso2.org/xsd" xmlns:ax2112="http://topic.core.event.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>TopicManagerAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.internal.admin.event.carbon.wso2.org/xsd">
      <xs:complexType name="EventAdminException">
        <xs:sequence>
          <xs:element minOccurs="0" name="errorMessage" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://subscription.core.event.carbon.wso2.org/xsd">
      <xs:complexType abstract="true" name="EventDispatcher">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="EventFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="dialect" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://topic.core.event.carbon.wso2.org/xsd">
      <xs:complexType name="TopicNode">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="children" nillable="true" type="ax2112:TopicNode"/>
          <xs:element minOccurs="0" name="nodeName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="topicName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TopicRolePermission">
        <xs:sequence>
          <xs:element minOccurs="0" name="allowedToPublish" type="xs:boolean"/>
          <xs:element minOccurs="0" name="allowedToSubscribe" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://internal.admin.event.carbon.wso2.org" xmlns:ax2113="http://topic.core.event.carbon.wso2.org/xsd" xmlns:ax2117="http://internal.admin.event.carbon.wso2.org/xsd" xmlns:ax2111="http://exception.internal.admin.event.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.internal.admin.event.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://topic.core.event.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://internal.admin.event.carbon.wso2.org/xsd"/>
      <xs:element name="TopicManagerAdminServiceEventAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EventAdminException" nillable="true" type="ax2110:EventAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllTopics">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllTopicsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2113:TopicNode"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTopicRolePermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTopicRolePermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2113:TopicRolePermission"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="topicRolePermissions" nillable="true" type="ax2113:TopicRolePermission"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllWSSubscriptionsForTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="startingIndex" type="xs:int"/>
            <xs:element minOccurs="0" name="maxSubscriptionCount" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllWSSubscriptionsForTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2114:Subscription"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWsSubscriptionsForTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWsSubscriptionsForTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2114:Subscription"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllWSSubscriptionCountForTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllWSSubscriptionCountForTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getJMSSubscriptionsForTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getJMSSubscriptionsForTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2114:Subscription"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserRoles">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserRolesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeTopic">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="topic" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeTopicResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://internal.admin.event.carbon.wso2.org/xsd" xmlns:ax2116="http://subscription.core.event.carbon.wso2.org/xsd">
      <xs:import namespace="http://subscription.core.event.carbon.wso2.org/xsd"/>
      <xs:complexType name="Subscription">
        <xs:sequence>
          <xs:element minOccurs="0" name="createdTime" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="eventDispatcher" nillable="true" type="ax2115:EventDispatcher"/>
          <xs:element minOccurs="0" name="eventDispatcherName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventFilter" nillable="true" type="ax2115:EventFilter"/>
          <xs:element minOccurs="0" name="eventSinkURL" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="expires" nillable="true" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="mode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="owner" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="topicName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getTopicRolePermissionsRequest">
    <wsdl:part name="parameters" element="ns:getTopicRolePermissions"/>
  </wsdl:message>
  <wsdl:message name="getTopicRolePermissionsResponse">
    <wsdl:part name="parameters" element="ns:getTopicRolePermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="TopicManagerAdminServiceEventAdminException">
    <wsdl:part name="parameters" element="ns:TopicManagerAdminServiceEventAdminException"/>
  </wsdl:message>
  <wsdl:message name="getAllWSSubscriptionCountForTopicRequest">
    <wsdl:part name="parameters" element="ns:getAllWSSubscriptionCountForTopic"/>
  </wsdl:message>
  <wsdl:message name="getAllWSSubscriptionCountForTopicResponse">
    <wsdl:part name="parameters" element="ns:getAllWSSubscriptionCountForTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllWSSubscriptionsForTopicRequest">
    <wsdl:part name="parameters" element="ns:getAllWSSubscriptionsForTopic"/>
  </wsdl:message>
  <wsdl:message name="getAllWSSubscriptionsForTopicResponse">
    <wsdl:part name="parameters" element="ns:getAllWSSubscriptionsForTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="addTopicRequest">
    <wsdl:part name="parameters" element="ns:addTopic"/>
  </wsdl:message>
  <wsdl:message name="getWsSubscriptionsForTopicRequest">
    <wsdl:part name="parameters" element="ns:getWsSubscriptionsForTopic"/>
  </wsdl:message>
  <wsdl:message name="getWsSubscriptionsForTopicResponse">
    <wsdl:part name="parameters" element="ns:getWsSubscriptionsForTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="removeTopicRequest">
    <wsdl:part name="parameters" element="ns:removeTopic"/>
  </wsdl:message>
  <wsdl:message name="removeTopicResponse">
    <wsdl:part name="parameters" element="ns:removeTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="updatePermissionRequest">
    <wsdl:part name="parameters" element="ns:updatePermission"/>
  </wsdl:message>
  <wsdl:message name="getJMSSubscriptionsForTopicRequest">
    <wsdl:part name="parameters" element="ns:getJMSSubscriptionsForTopic"/>
  </wsdl:message>
  <wsdl:message name="getJMSSubscriptionsForTopicResponse">
    <wsdl:part name="parameters" element="ns:getJMSSubscriptionsForTopicResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllTopicsRequest">
    <wsdl:part name="parameters" element="ns:getAllTopics"/>
  </wsdl:message>
  <wsdl:message name="getAllTopicsResponse">
    <wsdl:part name="parameters" element="ns:getAllTopicsResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserRolesRequest">
    <wsdl:part name="parameters" element="ns:getUserRoles"/>
  </wsdl:message>
  <wsdl:message name="getUserRolesResponse">
    <wsdl:part name="parameters" element="ns:getUserRolesResponse"/>
  </wsdl:message>
  <wsdl:portType name="TopicManagerAdminServicePortType">
    <wsdl:operation name="getTopicRolePermissions">
      <wsdl:input message="ns:getTopicRolePermissionsRequest" wsaw:Action="urn:getTopicRolePermissions"/>
      <wsdl:output message="ns:getTopicRolePermissionsResponse" wsaw:Action="urn:getTopicRolePermissionsResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getTopicRolePermissionsTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionCountForTopic">
      <wsdl:input message="ns:getAllWSSubscriptionCountForTopicRequest" wsaw:Action="urn:getAllWSSubscriptionCountForTopic"/>
      <wsdl:output message="ns:getAllWSSubscriptionCountForTopicResponse" wsaw:Action="urn:getAllWSSubscriptionCountForTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getAllWSSubscriptionCountForTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionsForTopic">
      <wsdl:input message="ns:getAllWSSubscriptionsForTopicRequest" wsaw:Action="urn:getAllWSSubscriptionsForTopic"/>
      <wsdl:output message="ns:getAllWSSubscriptionsForTopicResponse" wsaw:Action="urn:getAllWSSubscriptionsForTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getAllWSSubscriptionsForTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addTopic">
      <wsdl:input message="ns:addTopicRequest" wsaw:Action="urn:addTopic"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:addTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getWsSubscriptionsForTopic">
      <wsdl:input message="ns:getWsSubscriptionsForTopicRequest" wsaw:Action="urn:getWsSubscriptionsForTopic"/>
      <wsdl:output message="ns:getWsSubscriptionsForTopicResponse" wsaw:Action="urn:getWsSubscriptionsForTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getWsSubscriptionsForTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="removeTopic">
      <wsdl:input message="ns:removeTopicRequest" wsaw:Action="urn:removeTopic"/>
      <wsdl:output message="ns:removeTopicResponse" wsaw:Action="urn:removeTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:removeTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updatePermission">
      <wsdl:input message="ns:updatePermissionRequest" wsaw:Action="urn:updatePermission"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:updatePermissionTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getJMSSubscriptionsForTopic">
      <wsdl:input message="ns:getJMSSubscriptionsForTopicRequest" wsaw:Action="urn:getJMSSubscriptionsForTopic"/>
      <wsdl:output message="ns:getJMSSubscriptionsForTopicResponse" wsaw:Action="urn:getJMSSubscriptionsForTopicResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getJMSSubscriptionsForTopicTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllTopics">
      <wsdl:input message="ns:getAllTopicsRequest" wsaw:Action="urn:getAllTopics"/>
      <wsdl:output message="ns:getAllTopicsResponse" wsaw:Action="urn:getAllTopicsResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getAllTopicsTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <wsdl:input message="ns:getUserRolesRequest" wsaw:Action="urn:getUserRoles"/>
      <wsdl:output message="ns:getUserRolesResponse" wsaw:Action="urn:getUserRolesResponse"/>
      <wsdl:fault message="ns:TopicManagerAdminServiceEventAdminException" name="TopicManagerAdminServiceEventAdminException" wsaw:Action="urn:getUserRolesTopicManagerAdminServiceEventAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TopicManagerAdminServiceSoap11Binding" type="ns:TopicManagerAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getTopicRolePermissions">
      <soap:operation soapAction="urn:getTopicRolePermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionCountForTopic">
      <soap:operation soapAction="urn:getAllWSSubscriptionCountForTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionsForTopic">
      <soap:operation soapAction="urn:getAllWSSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTopic">
      <soap:operation soapAction="urn:addTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWsSubscriptionsForTopic">
      <soap:operation soapAction="urn:getWsSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTopic">
      <soap:operation soapAction="urn:removeTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePermission">
      <soap:operation soapAction="urn:updatePermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getJMSSubscriptionsForTopic">
      <soap:operation soapAction="urn:getJMSSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTopics">
      <soap:operation soapAction="urn:getAllTopics" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <soap:operation soapAction="urn:getUserRoles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TopicManagerAdminServiceSoap12Binding" type="ns:TopicManagerAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getTopicRolePermissions">
      <soap12:operation soapAction="urn:getTopicRolePermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionCountForTopic">
      <soap12:operation soapAction="urn:getAllWSSubscriptionCountForTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionsForTopic">
      <soap12:operation soapAction="urn:getAllWSSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addTopic">
      <soap12:operation soapAction="urn:addTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWsSubscriptionsForTopic">
      <soap12:operation soapAction="urn:getWsSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeTopic">
      <soap12:operation soapAction="urn:removeTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePermission">
      <soap12:operation soapAction="urn:updatePermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getJMSSubscriptionsForTopic">
      <soap12:operation soapAction="urn:getJMSSubscriptionsForTopic" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllTopics">
      <soap12:operation soapAction="urn:getAllTopics" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <soap12:operation soapAction="urn:getUserRoles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="TopicManagerAdminServiceEventAdminException">
        <soap12:fault use="literal" name="TopicManagerAdminServiceEventAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TopicManagerAdminServiceHttpBinding" type="ns:TopicManagerAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getTopicRolePermissions">
      <http:operation location="getTopicRolePermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionCountForTopic">
      <http:operation location="getAllWSSubscriptionCountForTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllWSSubscriptionsForTopic">
      <http:operation location="getAllWSSubscriptionsForTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addTopic">
      <http:operation location="addTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getWsSubscriptionsForTopic">
      <http:operation location="getWsSubscriptionsForTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeTopic">
      <http:operation location="removeTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updatePermission">
      <http:operation location="updatePermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getJMSSubscriptionsForTopic">
      <http:operation location="getJMSSubscriptionsForTopic"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllTopics">
      <http:operation location="getAllTopics"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <http:operation location="getUserRoles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TopicManagerAdminService">
    <wsdl:port name="TopicManagerAdminServiceHttpsSoap11Endpoint" binding="ns:TopicManagerAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TopicManagerAdminServiceHttpsSoap12Endpoint" binding="ns:TopicManagerAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TopicManagerAdminServiceHttpsEndpoint" binding="ns:TopicManagerAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/TopicManagerAdminService.TopicManagerAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="3d509e7f-d38c-4db2-857f-b3115aa0d527" isOneWay="false" action="urn:addTopic" name="addTopic" bindingOperationName="addTopic" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a5f889d2-4e63-4c97-b2f5-650936aca2dd" isOneWay="false" action="urn:getAllTopics" name="getAllTopics" bindingOperationName="getAllTopics" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c827051-2a68-447b-aa12-2304abf75086" isOneWay="false" action="urn:getAllWSSubscriptionCountForTopic" name="getAllWSSubscriptionCountForTopic" bindingOperationName="getAllWSSubscriptionCountForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3f14730f-ec45-4f6b-b75f-d262619a60be" isOneWay="false" action="urn:getAllWSSubscriptionsForTopic" name="getAllWSSubscriptionsForTopic" bindingOperationName="getAllWSSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d906b6f-135b-4ac2-babe-5d901028f100" isOneWay="false" action="urn:getJMSSubscriptionsForTopic" name="getJMSSubscriptionsForTopic" bindingOperationName="getJMSSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a0f27380-a3a1-4b95-8cfa-500cd0780326" isOneWay="false" action="urn:getTopicRolePermissions" name="getTopicRolePermissions" bindingOperationName="getTopicRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6da957f9-a053-4f54-893f-b298abbc12ed" isOneWay="false" action="urn:getUserRoles" name="getUserRoles" bindingOperationName="getUserRoles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f0adc606-3613-435f-b059-7696404cb41b" isOneWay="false" action="urn:getWsSubscriptionsForTopic" name="getWsSubscriptionsForTopic" bindingOperationName="getWsSubscriptionsForTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="faa080ac-0289-49b8-819c-25d7d97fa9aa" isOneWay="false" action="urn:removeTopic" name="removeTopic" bindingOperationName="removeTopic" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cf78140b-a4c7-4a0c-a73d-e0df84ed773b" isOneWay="false" action="urn:updatePermission" name="updatePermission" bindingOperationName="updatePermission" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="127770fe-ed11-40cb-b262-fc310d1e9592" wsaVersion="NONE" name="TracerAdminSoap12Binding" type="wsdl" bindingName="{http://service.tracer.carbon.wso2.org}TracerAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TracerAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/TracerAdmin.TracerAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="a0ef0dd2-20be-4697-8c55-25b90dd9e885" isOneWay="false" action="urn:clearAllSoapMessages" name="clearAllSoapMessages" bindingOperationName="clearAllSoapMessages" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="eac2cfad-6ad3-4cfa-aca5-57f4e08948c0" isOneWay="false" action="urn:getMessage" name="getMessage" bindingOperationName="getMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d1bda99-3cce-47f5-99c9-3f342c301b58" isOneWay="false" action="urn:getMessages" name="getMessages" bindingOperationName="getMessages" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e1addc96-d78c-44f2-8bf5-b9540ee76922" isOneWay="false" action="urn:setMonitoring" name="setMonitoring" bindingOperationName="setMonitoring" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="003cc513-e893-4d0e-b835-20a073eac574" wsaVersion="NONE" name="TracerAdminSoap11Binding" type="wsdl" bindingName="{http://service.tracer.carbon.wso2.org}TracerAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TracerAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TracerAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/TracerAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://service.tracer.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://service.tracer.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2650="http://service.tracer.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>TracerAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.tracer.carbon.wso2.org/xsd">
      <xs:complexType name="MessagePayload">
        <xs:sequence>
          <xs:element minOccurs="0" name="request" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="response" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TracerServiceInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
          <xs:element minOccurs="0" name="filter" type="xs:boolean"/>
          <xs:element minOccurs="0" name="filterString" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="flag" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastMessage" nillable="true" type="ax2650:MessagePayload"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messageInfo" nillable="true" type="ax2650:MessageInfo"/>
          <xs:element minOccurs="0" name="tracePersister" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessageInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="messageSequence" type="xs:long"/>
          <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="timestamp" nillable="true" type="xs:dateTime"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2651="http://service.tracer.carbon.wso2.org/xsd">
      <xs:import namespace="http://service.tracer.carbon.wso2.org/xsd"/>
      <xs:element name="getMessage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="serviceId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="operationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="messageSequence" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMessageResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2650:MessagePayload"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setMonitoring">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="flag" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setMonitoringResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2650:TracerServiceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clearAllSoapMessages">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMessages">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="numberOfMessages" type="xs:int"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMessagesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2650:TracerServiceInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="clearAllSoapMessagesRequest">
    <wsdl:part name="parameters" element="ns1:clearAllSoapMessages"/>
  </wsdl:message>
  <wsdl:message name="setMonitoringRequest">
    <wsdl:part name="parameters" element="ns1:setMonitoring"/>
  </wsdl:message>
  <wsdl:message name="setMonitoringResponse">
    <wsdl:part name="parameters" element="ns1:setMonitoringResponse"/>
  </wsdl:message>
  <wsdl:message name="getMessageRequest">
    <wsdl:part name="parameters" element="ns1:getMessage"/>
  </wsdl:message>
  <wsdl:message name="getMessageResponse">
    <wsdl:part name="parameters" element="ns1:getMessageResponse"/>
  </wsdl:message>
  <wsdl:message name="getMessagesRequest">
    <wsdl:part name="parameters" element="ns1:getMessages"/>
  </wsdl:message>
  <wsdl:message name="getMessagesResponse">
    <wsdl:part name="parameters" element="ns1:getMessagesResponse"/>
  </wsdl:message>
  <wsdl:portType name="TracerAdminPortType">
    <wsdl:operation name="clearAllSoapMessages">
      <wsdl:input message="tns:clearAllSoapMessagesRequest" wsaw:Action="urn:clearAllSoapMessages"/>
    </wsdl:operation>
    <wsdl:operation name="setMonitoring">
      <wsdl:input message="tns:setMonitoringRequest" wsaw:Action="urn:setMonitoring"/>
      <wsdl:output message="tns:setMonitoringResponse" wsaw:Action="urn:setMonitoringResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <wsdl:input message="tns:getMessageRequest" wsaw:Action="urn:getMessage"/>
      <wsdl:output message="tns:getMessageResponse" wsaw:Action="urn:getMessageResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getMessages">
      <wsdl:input message="tns:getMessagesRequest" wsaw:Action="urn:getMessages"/>
      <wsdl:output message="tns:getMessagesResponse" wsaw:Action="urn:getMessagesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TracerAdminSoap11Binding" type="tns:TracerAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="clearAllSoapMessages">
      <soap:operation soapAction="urn:clearAllSoapMessages" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setMonitoring">
      <soap:operation soapAction="urn:setMonitoring" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <soap:operation soapAction="urn:getMessage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessages">
      <soap:operation soapAction="urn:getMessages" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TracerAdminSoap12Binding" type="tns:TracerAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="clearAllSoapMessages">
      <soap12:operation soapAction="urn:clearAllSoapMessages" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setMonitoring">
      <soap12:operation soapAction="urn:setMonitoring" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <soap12:operation soapAction="urn:getMessage" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessages">
      <soap12:operation soapAction="urn:getMessages" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="TracerAdminHttpBinding" type="tns:TracerAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="clearAllSoapMessages">
      <http:operation location="clearAllSoapMessages"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="setMonitoring">
      <http:operation location="setMonitoring"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessage">
      <http:operation location="getMessage"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessages">
      <http:operation location="getMessages"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TracerAdmin">
    <wsdl:port name="TracerAdminHttpsSoap11Endpoint" binding="tns:TracerAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/TracerAdmin.TracerAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TracerAdminHttpsSoap12Endpoint" binding="tns:TracerAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/TracerAdmin.TracerAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="TracerAdminHttpsEndpoint" binding="tns:TracerAdminHttpBinding">
      <http:address location="https://localhost:9443/services/TracerAdmin.TracerAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/TracerAdmin.TracerAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="7fdd7142-0c3b-4ef1-a629-6823822f0642" isOneWay="false" action="urn:clearAllSoapMessages" name="clearAllSoapMessages" bindingOperationName="clearAllSoapMessages" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="356293ca-4606-4282-acda-d6277765c26b" isOneWay="false" action="urn:getMessage" name="getMessage" bindingOperationName="getMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="37d2ba28-2c28-4cbf-a4d7-e9cda85755b5" isOneWay="false" action="urn:getMessages" name="getMessages" bindingOperationName="getMessages" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="311a92d6-12c9-4597-a961-f7c5db55a25b" isOneWay="false" action="urn:setMonitoring" name="setMonitoring" bindingOperationName="setMonitoring" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8f50d05c-a72d-4e80-8a58-25a93cff206d" wsaVersion="NONE" name="UserAccountAssociationServiceSoap12Binding" type="wsdl" bindingName="{http://association.account.user.identity.carbon.wso2.org}UserAccountAssociationServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserAccountAssociationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="436406e8-ec93-4e8f-a1c9-21eafa937d1f" isOneWay="false" action="urn:associateMyAccounts" name="associateMyAccounts" bindingOperationName="associateMyAccounts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c0873367-2e25-45eb-a9d4-ddab95b0d70f" isOneWay="false" action="urn:associateTwoAccounts" name="associateTwoAccounts" bindingOperationName="associateTwoAccounts" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e99f9380-97a0-4c28-95cc-2b4134e99698" isOneWay="false" action="urn:createUserAccountAssociation" name="createUserAccountAssociation" bindingOperationName="createUserAccountAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8ed21697-d7ac-4081-b9bf-231b732e6794" isOneWay="false" action="urn:deleteAssociationsOfUser" name="deleteAssociationsOfUser" bindingOperationName="deleteAssociationsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="90b052ee-c842-4b56-81ee-7e85b458789e" isOneWay="false" action="urn:deleteMyAssociations" name="deleteMyAssociations" bindingOperationName="deleteMyAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cc0144bc-5dcc-49c8-bdbc-782aca9a7be3" isOneWay="false" action="urn:deleteMyAssociationsWithoutLogin" name="deleteMyAssociationsWithoutLogin" bindingOperationName="deleteMyAssociationsWithoutLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3a32ad31-ef6c-46c8-95d5-1c451122a991" isOneWay="false" action="urn:deleteUserAccountAssociation" name="deleteUserAccountAssociation" bindingOperationName="deleteUserAccountAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d06889ab-6919-4aab-bae1-afa892c4a729" isOneWay="false" action="urn:getAccountAssociations" name="getAccountAssociations" bindingOperationName="getAccountAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab3db26f-b24b-4566-8150-45a2f815e42d" isOneWay="false" action="urn:getAccountAssociationsOfUser" name="getAccountAssociationsOfUser" bindingOperationName="getAccountAssociationsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fec75789-94a5-4803-9c6a-24865ecb443d" isOneWay="false" action="urn:getMyAccountAssociationsWithoutLogin" name="getMyAccountAssociationsWithoutLogin" bindingOperationName="getMyAccountAssociationsWithoutLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d718b939-00fc-428e-82c3-5bb4e8413c27" isOneWay="false" action="urn:switchLoggedInUser" name="switchLoggedInUser" bindingOperationName="switchLoggedInUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b5f39e15-4eeb-4918-93fe-26c3ff59cb23" wsaVersion="NONE" name="UserAccountAssociationServiceSoap11Binding" type="wsdl" bindingName="{http://association.account.user.identity.carbon.wso2.org}UserAccountAssociationServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserAccountAssociationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserAccountAssociationService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserAccountAssociationService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://association.account.user.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://association.account.user.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2390="http://exception.association.account.user.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2391="http://base.identity.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax2394="http://dto.association.account.user.identity.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserAccountAssociationService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.association.account.user.identity.carbon.wso2.org/xsd">
      <xs:complexType name="UserAccountAssociationDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.association.account.user.identity.carbon.wso2.org/xsd" xmlns:ax2392="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserAccountAssociationException">
        <xs:complexContent>
          <xs:extension base="ax2391:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="UserAccountAssociationClientException">
        <xs:complexContent>
          <xs:extension base="ax2390:UserAccountAssociationException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://association.account.user.identity.carbon.wso2.org" xmlns:ax2393="http://exception.association.account.user.identity.carbon.wso2.org/xsd" xmlns:ax2395="http://dto.association.account.user.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.association.account.user.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.association.account.user.identity.carbon.wso2.org/xsd"/>
      <xs:element name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserAccountAssociationClientException" nillable="true" type="ax2390:UserAccountAssociationClientException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="switchLoggedInUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="switchLoggedInUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMyAccountAssociationsWithoutLogin">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMyAccountAssociationsWithoutLoginResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2394:UserAccountAssociationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="associateTwoAccounts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName1" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userName2" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createUserAccountAssociation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="associateMyAccounts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName1" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password1" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userName2" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password2" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserAccountAssociation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteMyAssociations">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAssociationsOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteMyAssociationsWithoutLogin">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="initiateUser" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountAssociationsOfUser">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountAssociationsOfUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2394:UserAccountAssociationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountAssociations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAccountAssociationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2394:UserAccountAssociationDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getMyAccountAssociationsWithoutLoginRequest">
    <wsdl:part name="parameters" element="ns:getMyAccountAssociationsWithoutLogin"/>
  </wsdl:message>
  <wsdl:message name="getMyAccountAssociationsWithoutLoginResponse">
    <wsdl:part name="parameters" element="ns:getMyAccountAssociationsWithoutLoginResponse"/>
  </wsdl:message>
  <wsdl:message name="UserAccountAssociationServiceUserAccountAssociationClientException">
    <wsdl:part name="parameters" element="ns:UserAccountAssociationServiceUserAccountAssociationClientException"/>
  </wsdl:message>
  <wsdl:message name="associateTwoAccountsRequest">
    <wsdl:part name="parameters" element="ns:associateTwoAccounts"/>
  </wsdl:message>
  <wsdl:message name="createUserAccountAssociationRequest">
    <wsdl:part name="parameters" element="ns:createUserAccountAssociation"/>
  </wsdl:message>
  <wsdl:message name="createUserAccountAssociationResponse"/>
  <wsdl:message name="deleteMyAssociationsRequest">
    <wsdl:part name="parameters" element="ns:deleteMyAssociations"/>
  </wsdl:message>
  <wsdl:message name="deleteMyAssociationsResponse"/>
  <wsdl:message name="getAccountAssociationsRequest">
    <wsdl:part name="parameters" element="ns:getAccountAssociations"/>
  </wsdl:message>
  <wsdl:message name="getAccountAssociationsResponse">
    <wsdl:part name="parameters" element="ns:getAccountAssociationsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserAccountAssociationRequest">
    <wsdl:part name="parameters" element="ns:deleteUserAccountAssociation"/>
  </wsdl:message>
  <wsdl:message name="deleteUserAccountAssociationResponse"/>
  <wsdl:message name="deleteMyAssociationsWithoutLoginRequest">
    <wsdl:part name="parameters" element="ns:deleteMyAssociationsWithoutLogin"/>
  </wsdl:message>
  <wsdl:message name="deleteMyAssociationsWithoutLoginResponse"/>
  <wsdl:message name="getAccountAssociationsOfUserRequest">
    <wsdl:part name="parameters" element="ns:getAccountAssociationsOfUser"/>
  </wsdl:message>
  <wsdl:message name="getAccountAssociationsOfUserResponse">
    <wsdl:part name="parameters" element="ns:getAccountAssociationsOfUserResponse"/>
  </wsdl:message>
  <wsdl:message name="associateMyAccountsRequest">
    <wsdl:part name="parameters" element="ns:associateMyAccounts"/>
  </wsdl:message>
  <wsdl:message name="associateMyAccountsResponse"/>
  <wsdl:message name="deleteAssociationsOfUserRequest">
    <wsdl:part name="parameters" element="ns:deleteAssociationsOfUser"/>
  </wsdl:message>
  <wsdl:message name="deleteAssociationsOfUserResponse"/>
  <wsdl:message name="switchLoggedInUserRequest">
    <wsdl:part name="parameters" element="ns:switchLoggedInUser"/>
  </wsdl:message>
  <wsdl:message name="switchLoggedInUserResponse">
    <wsdl:part name="parameters" element="ns:switchLoggedInUserResponse"/>
  </wsdl:message>
  <wsdl:portType name="UserAccountAssociationServicePortType">
    <wsdl:operation name="getMyAccountAssociationsWithoutLogin">
      <wsdl:input message="ns:getMyAccountAssociationsWithoutLoginRequest" wsaw:Action="urn:getMyAccountAssociationsWithoutLogin"/>
      <wsdl:output message="ns:getMyAccountAssociationsWithoutLoginResponse" wsaw:Action="urn:getMyAccountAssociationsWithoutLoginResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:getMyAccountAssociationsWithoutLoginUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="associateTwoAccounts">
      <wsdl:input message="ns:associateTwoAccountsRequest" wsaw:Action="urn:associateTwoAccounts"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:associateTwoAccountsUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="createUserAccountAssociation">
      <wsdl:input message="ns:createUserAccountAssociationRequest" wsaw:Action="urn:createUserAccountAssociation"/>
      <wsdl:output message="ns:createUserAccountAssociationResponse" wsaw:Action="urn:createUserAccountAssociationResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:createUserAccountAssociationUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociations">
      <wsdl:input message="ns:deleteMyAssociationsRequest" wsaw:Action="urn:deleteMyAssociations"/>
      <wsdl:output message="ns:deleteMyAssociationsResponse" wsaw:Action="urn:deleteMyAssociationsResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:deleteMyAssociationsUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociations">
      <wsdl:input message="ns:getAccountAssociationsRequest" wsaw:Action="urn:getAccountAssociations"/>
      <wsdl:output message="ns:getAccountAssociationsResponse" wsaw:Action="urn:getAccountAssociationsResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:getAccountAssociationsUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserAccountAssociation">
      <wsdl:input message="ns:deleteUserAccountAssociationRequest" wsaw:Action="urn:deleteUserAccountAssociation"/>
      <wsdl:output message="ns:deleteUserAccountAssociationResponse" wsaw:Action="urn:deleteUserAccountAssociationResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:deleteUserAccountAssociationUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociationsWithoutLogin">
      <wsdl:input message="ns:deleteMyAssociationsWithoutLoginRequest" wsaw:Action="urn:deleteMyAssociationsWithoutLogin"/>
      <wsdl:output message="ns:deleteMyAssociationsWithoutLoginResponse" wsaw:Action="urn:deleteMyAssociationsWithoutLoginResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:deleteMyAssociationsWithoutLoginUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociationsOfUser">
      <wsdl:input message="ns:getAccountAssociationsOfUserRequest" wsaw:Action="urn:getAccountAssociationsOfUser"/>
      <wsdl:output message="ns:getAccountAssociationsOfUserResponse" wsaw:Action="urn:getAccountAssociationsOfUserResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:getAccountAssociationsOfUserUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="associateMyAccounts">
      <wsdl:input message="ns:associateMyAccountsRequest" wsaw:Action="urn:associateMyAccounts"/>
      <wsdl:output message="ns:associateMyAccountsResponse" wsaw:Action="urn:associateMyAccountsResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:associateMyAccountsUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAssociationsOfUser">
      <wsdl:input message="ns:deleteAssociationsOfUserRequest" wsaw:Action="urn:deleteAssociationsOfUser"/>
      <wsdl:output message="ns:deleteAssociationsOfUserResponse" wsaw:Action="urn:deleteAssociationsOfUserResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:deleteAssociationsOfUserUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
    <wsdl:operation name="switchLoggedInUser">
      <wsdl:input message="ns:switchLoggedInUserRequest" wsaw:Action="urn:switchLoggedInUser"/>
      <wsdl:output message="ns:switchLoggedInUserResponse" wsaw:Action="urn:switchLoggedInUserResponse"/>
      <wsdl:fault message="ns:UserAccountAssociationServiceUserAccountAssociationClientException" name="UserAccountAssociationServiceUserAccountAssociationClientException" wsaw:Action="urn:switchLoggedInUserUserAccountAssociationServiceUserAccountAssociationClientException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserAccountAssociationServiceSoap11Binding" type="ns:UserAccountAssociationServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getMyAccountAssociationsWithoutLogin">
      <soap:operation soapAction="urn:getMyAccountAssociationsWithoutLogin" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateTwoAccounts">
      <soap:operation soapAction="urn:associateTwoAccounts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUserAccountAssociation">
      <soap:operation soapAction="urn:createUserAccountAssociation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociations">
      <soap:operation soapAction="urn:deleteMyAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociations">
      <soap:operation soapAction="urn:getAccountAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserAccountAssociation">
      <soap:operation soapAction="urn:deleteUserAccountAssociation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociationsWithoutLogin">
      <soap:operation soapAction="urn:deleteMyAssociationsWithoutLogin" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociationsOfUser">
      <soap:operation soapAction="urn:getAccountAssociationsOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateMyAccounts">
      <soap:operation soapAction="urn:associateMyAccounts" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAssociationsOfUser">
      <soap:operation soapAction="urn:deleteAssociationsOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="switchLoggedInUser">
      <soap:operation soapAction="urn:switchLoggedInUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserAccountAssociationServiceSoap12Binding" type="ns:UserAccountAssociationServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getMyAccountAssociationsWithoutLogin">
      <soap12:operation soapAction="urn:getMyAccountAssociationsWithoutLogin" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateTwoAccounts">
      <soap12:operation soapAction="urn:associateTwoAccounts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUserAccountAssociation">
      <soap12:operation soapAction="urn:createUserAccountAssociation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociations">
      <soap12:operation soapAction="urn:deleteMyAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociations">
      <soap12:operation soapAction="urn:getAccountAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserAccountAssociation">
      <soap12:operation soapAction="urn:deleteUserAccountAssociation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociationsWithoutLogin">
      <soap12:operation soapAction="urn:deleteMyAssociationsWithoutLogin" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociationsOfUser">
      <soap12:operation soapAction="urn:getAccountAssociationsOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateMyAccounts">
      <soap12:operation soapAction="urn:associateMyAccounts" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAssociationsOfUser">
      <soap12:operation soapAction="urn:deleteAssociationsOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="switchLoggedInUser">
      <soap12:operation soapAction="urn:switchLoggedInUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAccountAssociationServiceUserAccountAssociationClientException">
        <soap12:fault use="literal" name="UserAccountAssociationServiceUserAccountAssociationClientException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserAccountAssociationServiceHttpBinding" type="ns:UserAccountAssociationServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getMyAccountAssociationsWithoutLogin">
      <http:operation location="getMyAccountAssociationsWithoutLogin"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="associateTwoAccounts">
      <http:operation location="associateTwoAccounts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="createUserAccountAssociation">
      <http:operation location="createUserAccountAssociation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociations">
      <http:operation location="deleteMyAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociations">
      <http:operation location="getAccountAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUserAccountAssociation">
      <http:operation location="deleteUserAccountAssociation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMyAssociationsWithoutLogin">
      <http:operation location="deleteMyAssociationsWithoutLogin"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAccountAssociationsOfUser">
      <http:operation location="getAccountAssociationsOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="associateMyAccounts">
      <http:operation location="associateMyAccounts"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAssociationsOfUser">
      <http:operation location="deleteAssociationsOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="switchLoggedInUser">
      <http:operation location="switchLoggedInUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserAccountAssociationService">
    <wsdl:port name="UserAccountAssociationServiceHttpsSoap11Endpoint" binding="ns:UserAccountAssociationServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserAccountAssociationServiceHttpsSoap12Endpoint" binding="ns:UserAccountAssociationServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserAccountAssociationServiceHttpsEndpoint" binding="ns:UserAccountAssociationServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserAccountAssociationService.UserAccountAssociationServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="adb50d59-47e3-4d85-bbe4-ff5aa6003523" isOneWay="false" action="urn:associateMyAccounts" name="associateMyAccounts" bindingOperationName="associateMyAccounts" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7ae13c1f-2816-4a4e-8759-ef2c12105378" isOneWay="false" action="urn:associateTwoAccounts" name="associateTwoAccounts" bindingOperationName="associateTwoAccounts" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4a30c86c-1516-4bd9-aa76-9282cb4a4e8c" isOneWay="false" action="urn:createUserAccountAssociation" name="createUserAccountAssociation" bindingOperationName="createUserAccountAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2ea36508-302a-43a3-baa2-beba35b845bb" isOneWay="false" action="urn:deleteAssociationsOfUser" name="deleteAssociationsOfUser" bindingOperationName="deleteAssociationsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="502453e0-2b01-4a6a-93e8-4d11c3857999" isOneWay="false" action="urn:deleteMyAssociations" name="deleteMyAssociations" bindingOperationName="deleteMyAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="db02f35b-e478-475b-9d63-c84fd996801a" isOneWay="false" action="urn:deleteMyAssociationsWithoutLogin" name="deleteMyAssociationsWithoutLogin" bindingOperationName="deleteMyAssociationsWithoutLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="21ae2386-db9f-483c-9080-0873fff4a3b3" isOneWay="false" action="urn:deleteUserAccountAssociation" name="deleteUserAccountAssociation" bindingOperationName="deleteUserAccountAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7785e678-4912-4e9c-8e0b-d7bd6aedb292" isOneWay="false" action="urn:getAccountAssociations" name="getAccountAssociations" bindingOperationName="getAccountAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="17dfadb9-21ed-4293-bc5c-bb3c59661343" isOneWay="false" action="urn:getAccountAssociationsOfUser" name="getAccountAssociationsOfUser" bindingOperationName="getAccountAssociationsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c735a158-f05d-4a05-9dbd-e8efc45cd105" isOneWay="false" action="urn:getMyAccountAssociationsWithoutLogin" name="getMyAccountAssociationsWithoutLogin" bindingOperationName="getMyAccountAssociationsWithoutLogin" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6ce9a2fc-2d38-4ff5-894d-3c99ed5f4dfa" isOneWay="false" action="urn:switchLoggedInUser" name="switchLoggedInUser" bindingOperationName="switchLoggedInUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="ca2e01c2-63a9-4a59-82a8-d09548f9893f" wsaVersion="NONE" name="UserAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.user.carbon.wso2.org}UserAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserAdmin.UserAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="369f454a-e377-463b-ad21-5de23f220e7c" isOneWay="false" action="urn:addInternalRole" name="addInternalRole" bindingOperationName="addInternalRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7112fa40-1f85-438a-9cce-9f180f8d0c00" isOneWay="false" action="urn:addRemoveRolesOfUser" name="addRemoveRolesOfUser" bindingOperationName="addRemoveRolesOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3af3cdba-074c-4261-8f34-92afe232c543" isOneWay="false" action="urn:addRemoveUsersOfRole" name="addRemoveUsersOfRole" bindingOperationName="addRemoveUsersOfRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="607c7844-eb99-494e-bf7b-e0dd4b47e5a7" isOneWay="false" action="urn:addRole" name="addRole" bindingOperationName="addRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="62a21411-6f5d-466d-ba23-f5b038bfbb0a" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="edce1ca1-34c0-4b1b-8e68-901d532700d4" isOneWay="false" action="urn:bulkImportUsers" name="bulkImportUsers" bindingOperationName="bulkImportUsers" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed12cd87-9e5b-417a-897b-08ca8382480c" isOneWay="false" action="urn:changePassword" name="changePassword" bindingOperationName="changePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa605f7b-d932-4697-a3f9-c3b5de3b7760" isOneWay="false" action="urn:changePasswordByUser" name="changePasswordByUser" bindingOperationName="changePasswordByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="191d0e0f-c75c-45b6-a00b-30beb78c4b92" isOneWay="false" action="urn:deleteRole" name="deleteRole" bindingOperationName="deleteRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2fe2bfac-98da-4556-86a3-4e04746a41ae" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cae0ec94-3ecb-43d8-80e7-2eefc2979240" isOneWay="false" action="urn:getAllPermittedRoleNames" name="getAllPermittedRoleNames" bindingOperationName="getAllPermittedRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a0f606be-e3f2-450d-b309-45097dc65593" isOneWay="false" action="urn:getAllRolesNames" name="getAllRolesNames" bindingOperationName="getAllRolesNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="34e7bd47-026f-40db-9fbc-d923817d1f37" isOneWay="false" action="urn:getAllSharedRoleNames" name="getAllSharedRoleNames" bindingOperationName="getAllSharedRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5ba58117-695d-4a74-a573-4d79a1d44562" isOneWay="false" action="urn:getAllUIPermissions" name="getAllUIPermissions" bindingOperationName="getAllUIPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="aa196e26-3529-401b-b043-e49addc6a801" isOneWay="false" action="urn:getRolePermissions" name="getRolePermissions" bindingOperationName="getRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a952278b-a92d-4f44-977d-d1e27cfeaca3" isOneWay="false" action="urn:getRolesOfCurrentUser" name="getRolesOfCurrentUser" bindingOperationName="getRolesOfCurrentUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="324e9452-f4fe-470b-870f-0b7202fb2533" isOneWay="false" action="urn:getRolesOfUser" name="getRolesOfUser" bindingOperationName="getRolesOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="14479988-c5cd-4797-a715-515cb560e436" isOneWay="false" action="urn:getUserRealmInfo" name="getUserRealmInfo" bindingOperationName="getUserRealmInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="811fb54b-49d7-4c1d-bb82-f3bfc4ad1e82" isOneWay="false" action="urn:getUsersOfRole" name="getUsersOfRole" bindingOperationName="getUsersOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7e4da94b-4204-4287-9d59-21c86b8fcdce" isOneWay="false" action="urn:hasMultipleUserStores" name="hasMultipleUserStores" bindingOperationName="hasMultipleUserStores" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="73793c62-aeb5-41c6-ae69-a431a01f0eab" isOneWay="false" action="urn:isSharedRolesEnabled" name="isSharedRolesEnabled" bindingOperationName="isSharedRolesEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed92a532-ec51-4f8f-9258-e66757b2dc9b" isOneWay="false" action="urn:listAllUsers" name="listAllUsers" bindingOperationName="listAllUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="25469203-5c27-4cdf-9153-c39021d7134e" isOneWay="false" action="urn:listAllUsersWithPermission" name="listAllUsersWithPermission" bindingOperationName="listAllUsersWithPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f5a949c-2d2d-4f87-a111-31bb54c091f7" isOneWay="false" action="urn:listUserByClaim" name="listUserByClaim" bindingOperationName="listUserByClaim" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5fe6a897-ce0b-4517-a202-77daafcb4283" isOneWay="false" action="urn:listUserByClaimWithPermission" name="listUserByClaimWithPermission" bindingOperationName="listUserByClaimWithPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a529763b-04f1-439a-9d01-97b97d6b3e88" isOneWay="false" action="urn:listUsers" name="listUsers" bindingOperationName="listUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="92b187e9-5ca4-4ddb-9889-0282c812b578" isOneWay="false" action="urn:setRoleUIPermission" name="setRoleUIPermission" bindingOperationName="setRoleUIPermission" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="65514bf0-f673-4894-a603-264bcda8fca5" isOneWay="false" action="urn:updateRoleName" name="updateRoleName" bindingOperationName="updateRoleName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="983b38b3-36e2-4023-9495-58a2197c1d3b" isOneWay="false" action="urn:updateRolesOfUser" name="updateRolesOfUser" bindingOperationName="updateRolesOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bd338ac3-8fa5-42a3-a307-4808395eb14d" isOneWay="false" action="urn:updateUsersOfRole" name="updateUsersOfRole" bindingOperationName="updateUsersOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="67615466-ec34-48bc-86b4-64fd1cdf4531" wsaVersion="NONE" name="UserAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.user.carbon.wso2.org}UserAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.user.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2696="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://mgt.user.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2697="http://common.mgt.user.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://common.mgt.user.carbon.wso2.org/xsd"/>
      <xs:element name="UserAdminUserAdminException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserAdminException" nillable="true" type="ax2696:UserAdminException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="isSharedRole" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRoleName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newRoleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="roles" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2696:ClaimValue"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addInternalRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userList" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="permissions" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changePassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolePermissions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolePermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2696:UIPermissionNode"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllUsersWithPermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permission" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllUsersWithPermissionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRolesNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllRolesNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPermittedRoleNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permission" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPermittedRoleNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSharedRoleNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllSharedRoleNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserRealmInfo">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserRealmInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2696:UserRealmInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasMultipleUserStores">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasMultipleUserStoresResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUsersOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUsersOfRoleResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateUsersOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userList" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolesOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="limit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolesOfUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolesOfCurrentUser">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRolesOfCurrentUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateRolesOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newRoleList" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUIPermissions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUIPermissionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2696:UIPermissionNode"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setRoleUIPermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="rawResources" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="bulkImportUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userStoreDomain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="handler" nillable="true" type="xs:base64Binary"/>
            <xs:element minOccurs="0" name="defaultPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changePasswordByUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldPassword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRemoveUsersOfRole">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newUsers" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="deletedUsers" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addRemoveRolesOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="newRoles" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="deletedRoles" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUserByClaim">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="ax2696:ClaimValue"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxLimit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUserByClaimResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUserByClaimWithPermission">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="claimValue" nillable="true" type="ax2696:ClaimValue"/>
            <xs:element minOccurs="0" name="filter" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="permission" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxLimit" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listUserByClaimWithPermissionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2696:FlaggedName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isSharedRolesEnabled">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isSharedRolesEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://common.mgt.user.carbon.wso2.org/xsd">
      <xs:complexType name="UserAdminException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ClaimValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimURI" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UIPermissionNode">
        <xs:sequence>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nodeList" nillable="true" type="ax2696:UIPermissionNode"/>
          <xs:element minOccurs="0" name="resourcePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="selected" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="FlaggedName">
        <xs:sequence>
          <xs:element minOccurs="0" name="dn" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="editable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="itemDisplayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="itemName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="selected" type="xs:boolean"/>
          <xs:element minOccurs="0" name="shared" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserRealmInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="adminRole" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="adminUser" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="bulkImportSupported" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="defaultUserClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="domainNames" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enableUIPageCache" type="xs:boolean"/>
          <xs:element minOccurs="0" name="everyOneRole" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="maxItemsPerUIPage" type="xs:int"/>
          <xs:element minOccurs="0" name="maxUIPagesInCache" type="xs:int"/>
          <xs:element minOccurs="0" name="multipleUserStore" type="xs:boolean"/>
          <xs:element minOccurs="0" name="primaryUserStoreInfo" nillable="true" type="ax2696:UserStoreInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="requiredUserClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userClaims" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userStoresInfo" nillable="true" type="ax2696:UserStoreInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserStoreInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="bulkImportSupported" type="xs:boolean"/>
          <xs:element minOccurs="0" name="caseSensitiveUsername" type="xs:boolean"/>
          <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="externalIdP" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="maxRoleLimit" type="xs:int"/>
          <xs:element minOccurs="0" name="maxUserLimit" type="xs:int"/>
          <xs:element minOccurs="0" name="passwordRegEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordRegExViolationErrorMsg" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="passwordsExternallyManaged" type="xs:boolean"/>
          <xs:element minOccurs="0" name="readGroupsEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="roleNameRegEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userNameRegEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="usernameRegExViolationErrorMsg" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="writeGroupsEnabled" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getUsersOfRoleRequest">
    <wsdl:part name="parameters" element="ns1:getUsersOfRole"/>
  </wsdl:message>
  <wsdl:message name="getUsersOfRoleResponse">
    <wsdl:part name="parameters" element="ns1:getUsersOfRoleResponse"/>
  </wsdl:message>
  <wsdl:message name="UserAdminUserAdminException">
    <wsdl:part name="parameters" element="ns1:UserAdminUserAdminException"/>
  </wsdl:message>
  <wsdl:message name="getAllPermittedRoleNamesRequest">
    <wsdl:part name="parameters" element="ns1:getAllPermittedRoleNames"/>
  </wsdl:message>
  <wsdl:message name="getAllPermittedRoleNamesResponse">
    <wsdl:part name="parameters" element="ns1:getAllPermittedRoleNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserRequest">
    <wsdl:part name="parameters" element="ns1:addUser"/>
  </wsdl:message>
  <wsdl:message name="addUserResponse"/>
  <wsdl:message name="addRemoveUsersOfRoleRequest">
    <wsdl:part name="parameters" element="ns1:addRemoveUsersOfRole"/>
  </wsdl:message>
  <wsdl:message name="changePasswordByUserRequest">
    <wsdl:part name="parameters" element="ns1:changePasswordByUser"/>
  </wsdl:message>
  <wsdl:message name="changePasswordByUserResponse"/>
  <wsdl:message name="isSharedRolesEnabledRequest">
    <wsdl:part name="parameters" element="ns1:isSharedRolesEnabled"/>
  </wsdl:message>
  <wsdl:message name="isSharedRolesEnabledResponse">
    <wsdl:part name="parameters" element="ns1:isSharedRolesEnabledResponse"/>
  </wsdl:message>
  <wsdl:message name="listUserByClaimRequest">
    <wsdl:part name="parameters" element="ns1:listUserByClaim"/>
  </wsdl:message>
  <wsdl:message name="listUserByClaimResponse">
    <wsdl:part name="parameters" element="ns1:listUserByClaimResponse"/>
  </wsdl:message>
  <wsdl:message name="getRolesOfUserRequest">
    <wsdl:part name="parameters" element="ns1:getRolesOfUser"/>
  </wsdl:message>
  <wsdl:message name="getRolesOfUserResponse">
    <wsdl:part name="parameters" element="ns1:getRolesOfUserResponse"/>
  </wsdl:message>
  <wsdl:message name="updateUsersOfRoleRequest">
    <wsdl:part name="parameters" element="ns1:updateUsersOfRole"/>
  </wsdl:message>
  <wsdl:message name="updateUsersOfRoleResponse"/>
  <wsdl:message name="listAllUsersRequest">
    <wsdl:part name="parameters" element="ns1:listAllUsers"/>
  </wsdl:message>
  <wsdl:message name="listAllUsersResponse">
    <wsdl:part name="parameters" element="ns1:listAllUsersResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllUIPermissionsRequest">
    <wsdl:part name="parameters" element="ns1:getAllUIPermissions"/>
  </wsdl:message>
  <wsdl:message name="getAllUIPermissionsResponse">
    <wsdl:part name="parameters" element="ns1:getAllUIPermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="hasMultipleUserStoresRequest">
    <wsdl:part name="parameters" element="ns1:hasMultipleUserStores"/>
  </wsdl:message>
  <wsdl:message name="hasMultipleUserStoresResponse">
    <wsdl:part name="parameters" element="ns1:hasMultipleUserStoresResponse"/>
  </wsdl:message>
  <wsdl:message name="updateRolesOfUserRequest">
    <wsdl:part name="parameters" element="ns1:updateRolesOfUser"/>
  </wsdl:message>
  <wsdl:message name="getAllSharedRoleNamesRequest">
    <wsdl:part name="parameters" element="ns1:getAllSharedRoleNames"/>
  </wsdl:message>
  <wsdl:message name="getAllSharedRoleNamesResponse">
    <wsdl:part name="parameters" element="ns1:getAllSharedRoleNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="setRoleUIPermissionRequest">
    <wsdl:part name="parameters" element="ns1:setRoleUIPermission"/>
  </wsdl:message>
  <wsdl:message name="getRolePermissionsRequest">
    <wsdl:part name="parameters" element="ns1:getRolePermissions"/>
  </wsdl:message>
  <wsdl:message name="getRolePermissionsResponse">
    <wsdl:part name="parameters" element="ns1:getRolePermissionsResponse"/>
  </wsdl:message>
  <wsdl:message name="getRolesOfCurrentUserRequest">
    <wsdl:part name="parameters" element="ns1:getRolesOfCurrentUser"/>
  </wsdl:message>
  <wsdl:message name="getRolesOfCurrentUserResponse">
    <wsdl:part name="parameters" element="ns1:getRolesOfCurrentUserResponse"/>
  </wsdl:message>
  <wsdl:message name="listUserByClaimWithPermissionRequest">
    <wsdl:part name="parameters" element="ns1:listUserByClaimWithPermission"/>
  </wsdl:message>
  <wsdl:message name="listUserByClaimWithPermissionResponse">
    <wsdl:part name="parameters" element="ns1:listUserByClaimWithPermissionResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteRoleRequest">
    <wsdl:part name="parameters" element="ns1:deleteRole"/>
  </wsdl:message>
  <wsdl:message name="addInternalRoleRequest">
    <wsdl:part name="parameters" element="ns1:addInternalRole"/>
  </wsdl:message>
  <wsdl:message name="addRemoveRolesOfUserRequest">
    <wsdl:part name="parameters" element="ns1:addRemoveRolesOfUser"/>
  </wsdl:message>
  <wsdl:message name="changePasswordRequest">
    <wsdl:part name="parameters" element="ns1:changePassword"/>
  </wsdl:message>
  <wsdl:message name="changePasswordResponse"/>
  <wsdl:message name="listAllUsersWithPermissionRequest">
    <wsdl:part name="parameters" element="ns1:listAllUsersWithPermission"/>
  </wsdl:message>
  <wsdl:message name="listAllUsersWithPermissionResponse">
    <wsdl:part name="parameters" element="ns1:listAllUsersWithPermissionResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserRealmInfoRequest">
    <wsdl:part name="parameters" element="ns1:getUserRealmInfo"/>
  </wsdl:message>
  <wsdl:message name="getUserRealmInfoResponse">
    <wsdl:part name="parameters" element="ns1:getUserRealmInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="listUsersRequest">
    <wsdl:part name="parameters" element="ns1:listUsers"/>
  </wsdl:message>
  <wsdl:message name="listUsersResponse">
    <wsdl:part name="parameters" element="ns1:listUsersResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserRequest">
    <wsdl:part name="parameters" element="ns1:deleteUser"/>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse"/>
  <wsdl:message name="getAllRolesNamesRequest">
    <wsdl:part name="parameters" element="ns1:getAllRolesNames"/>
  </wsdl:message>
  <wsdl:message name="getAllRolesNamesResponse">
    <wsdl:part name="parameters" element="ns1:getAllRolesNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="updateRoleNameRequest">
    <wsdl:part name="parameters" element="ns1:updateRoleName"/>
  </wsdl:message>
  <wsdl:message name="addRoleRequest">
    <wsdl:part name="parameters" element="ns1:addRole"/>
  </wsdl:message>
  <wsdl:message name="bulkImportUsersRequest">
    <wsdl:part name="parameters" element="ns1:bulkImportUsers"/>
  </wsdl:message>
  <wsdl:portType name="UserAdminPortType">
    <wsdl:operation name="getUsersOfRole">
      <wsdl:input message="tns:getUsersOfRoleRequest" wsaw:Action="urn:getUsersOfRole"/>
      <wsdl:output message="tns:getUsersOfRoleResponse" wsaw:Action="urn:getUsersOfRoleResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getUsersOfRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPermittedRoleNames">
      <wsdl:input message="tns:getAllPermittedRoleNamesRequest" wsaw:Action="urn:getAllPermittedRoleNames"/>
      <wsdl:output message="tns:getAllPermittedRoleNamesResponse" wsaw:Action="urn:getAllPermittedRoleNamesResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getAllPermittedRoleNamesUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdl:input message="tns:addUserRequest" wsaw:Action="urn:addUser"/>
      <wsdl:output message="tns:addUserResponse" wsaw:Action="urn:addUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addRemoveUsersOfRole">
      <wsdl:input message="tns:addRemoveUsersOfRoleRequest" wsaw:Action="urn:addRemoveUsersOfRole"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addRemoveUsersOfRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="changePasswordByUser">
      <wsdl:input message="tns:changePasswordByUserRequest" wsaw:Action="urn:changePasswordByUser"/>
      <wsdl:output message="tns:changePasswordByUserResponse" wsaw:Action="urn:changePasswordByUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:changePasswordByUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="isSharedRolesEnabled">
      <wsdl:input message="tns:isSharedRolesEnabledRequest" wsaw:Action="urn:isSharedRolesEnabled"/>
      <wsdl:output message="tns:isSharedRolesEnabledResponse" wsaw:Action="urn:isSharedRolesEnabledResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:isSharedRolesEnabledUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaim">
      <wsdl:input message="tns:listUserByClaimRequest" wsaw:Action="urn:listUserByClaim"/>
      <wsdl:output message="tns:listUserByClaimResponse" wsaw:Action="urn:listUserByClaimResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listUserByClaimUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfUser">
      <wsdl:input message="tns:getRolesOfUserRequest" wsaw:Action="urn:getRolesOfUser"/>
      <wsdl:output message="tns:getRolesOfUserResponse" wsaw:Action="urn:getRolesOfUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getRolesOfUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updateUsersOfRole">
      <wsdl:input message="tns:updateUsersOfRoleRequest" wsaw:Action="urn:updateUsersOfRole"/>
      <wsdl:output message="tns:updateUsersOfRoleResponse" wsaw:Action="urn:updateUsersOfRoleResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:updateUsersOfRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listAllUsers">
      <wsdl:input message="tns:listAllUsersRequest" wsaw:Action="urn:listAllUsers"/>
      <wsdl:output message="tns:listAllUsersResponse" wsaw:Action="urn:listAllUsersResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listAllUsersUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllUIPermissions">
      <wsdl:input message="tns:getAllUIPermissionsRequest" wsaw:Action="urn:getAllUIPermissions"/>
      <wsdl:output message="tns:getAllUIPermissionsResponse" wsaw:Action="urn:getAllUIPermissionsResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getAllUIPermissionsUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="hasMultipleUserStores">
      <wsdl:input message="tns:hasMultipleUserStoresRequest" wsaw:Action="urn:hasMultipleUserStores"/>
      <wsdl:output message="tns:hasMultipleUserStoresResponse" wsaw:Action="urn:hasMultipleUserStoresResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:hasMultipleUserStoresUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updateRolesOfUser">
      <wsdl:input message="tns:updateRolesOfUserRequest" wsaw:Action="urn:updateRolesOfUser"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:updateRolesOfUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllSharedRoleNames">
      <wsdl:input message="tns:getAllSharedRoleNamesRequest" wsaw:Action="urn:getAllSharedRoleNames"/>
      <wsdl:output message="tns:getAllSharedRoleNamesResponse" wsaw:Action="urn:getAllSharedRoleNamesResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getAllSharedRoleNamesUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="setRoleUIPermission">
      <wsdl:input message="tns:setRoleUIPermissionRequest" wsaw:Action="urn:setRoleUIPermission"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:setRoleUIPermissionUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getRolePermissions">
      <wsdl:input message="tns:getRolePermissionsRequest" wsaw:Action="urn:getRolePermissions"/>
      <wsdl:output message="tns:getRolePermissionsResponse" wsaw:Action="urn:getRolePermissionsResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getRolePermissionsUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfCurrentUser">
      <wsdl:input message="tns:getRolesOfCurrentUserRequest" wsaw:Action="urn:getRolesOfCurrentUser"/>
      <wsdl:output message="tns:getRolesOfCurrentUserResponse" wsaw:Action="urn:getRolesOfCurrentUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getRolesOfCurrentUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaimWithPermission">
      <wsdl:input message="tns:listUserByClaimWithPermissionRequest" wsaw:Action="urn:listUserByClaimWithPermission"/>
      <wsdl:output message="tns:listUserByClaimWithPermissionResponse" wsaw:Action="urn:listUserByClaimWithPermissionResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listUserByClaimWithPermissionUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <wsdl:input message="tns:deleteRoleRequest" wsaw:Action="urn:deleteRole"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:deleteRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addInternalRole">
      <wsdl:input message="tns:addInternalRoleRequest" wsaw:Action="urn:addInternalRole"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addInternalRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addRemoveRolesOfUser">
      <wsdl:input message="tns:addRemoveRolesOfUserRequest" wsaw:Action="urn:addRemoveRolesOfUser"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addRemoveRolesOfUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <wsdl:input message="tns:changePasswordRequest" wsaw:Action="urn:changePassword"/>
      <wsdl:output message="tns:changePasswordResponse" wsaw:Action="urn:changePasswordResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:changePasswordUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listAllUsersWithPermission">
      <wsdl:input message="tns:listAllUsersWithPermissionRequest" wsaw:Action="urn:listAllUsersWithPermission"/>
      <wsdl:output message="tns:listAllUsersWithPermissionResponse" wsaw:Action="urn:listAllUsersWithPermissionResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listAllUsersWithPermissionUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserRealmInfo">
      <wsdl:input message="tns:getUserRealmInfoRequest" wsaw:Action="urn:getUserRealmInfo"/>
      <wsdl:output message="tns:getUserRealmInfoResponse" wsaw:Action="urn:getUserRealmInfoResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getUserRealmInfoUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <wsdl:input message="tns:listUsersRequest" wsaw:Action="urn:listUsers"/>
      <wsdl:output message="tns:listUsersResponse" wsaw:Action="urn:listUsersResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:listUsersUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="tns:deleteUserRequest" wsaw:Action="urn:deleteUser"/>
      <wsdl:output message="tns:deleteUserResponse" wsaw:Action="urn:deleteUserResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:deleteUserUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllRolesNames">
      <wsdl:input message="tns:getAllRolesNamesRequest" wsaw:Action="urn:getAllRolesNames"/>
      <wsdl:output message="tns:getAllRolesNamesResponse" wsaw:Action="urn:getAllRolesNamesResponse"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:getAllRolesNamesUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <wsdl:input message="tns:updateRoleNameRequest" wsaw:Action="urn:updateRoleName"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:updateRoleNameUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <wsdl:input message="tns:addRoleRequest" wsaw:Action="urn:addRole"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:addRoleUserAdminUserAdminException"/>
    </wsdl:operation>
    <wsdl:operation name="bulkImportUsers">
      <wsdl:input message="tns:bulkImportUsersRequest" wsaw:Action="urn:bulkImportUsers"/>
      <wsdl:fault message="tns:UserAdminUserAdminException" name="UserAdminUserAdminException" wsaw:Action="urn:bulkImportUsersUserAdminUserAdminException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserAdminSoap11Binding" type="tns:UserAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getUsersOfRole">
      <soap:operation soapAction="urn:getUsersOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPermittedRoleNames">
      <soap:operation soapAction="urn:getAllPermittedRoleNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoveUsersOfRole">
      <soap:operation soapAction="urn:addRemoveUsersOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePasswordByUser">
      <soap:operation soapAction="urn:changePasswordByUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSharedRolesEnabled">
      <soap:operation soapAction="urn:isSharedRolesEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaim">
      <soap:operation soapAction="urn:listUserByClaim" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfUser">
      <soap:operation soapAction="urn:getRolesOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUsersOfRole">
      <soap:operation soapAction="urn:updateUsersOfRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllUsers">
      <soap:operation soapAction="urn:listAllUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUIPermissions">
      <soap:operation soapAction="urn:getAllUIPermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasMultipleUserStores">
      <soap:operation soapAction="urn:hasMultipleUserStores" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRolesOfUser">
      <soap:operation soapAction="urn:updateRolesOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSharedRoleNames">
      <soap:operation soapAction="urn:getAllSharedRoleNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRoleUIPermission">
      <soap:operation soapAction="urn:setRoleUIPermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolePermissions">
      <soap:operation soapAction="urn:getRolePermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfCurrentUser">
      <soap:operation soapAction="urn:getRolesOfCurrentUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaimWithPermission">
      <soap:operation soapAction="urn:listUserByClaimWithPermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <soap:operation soapAction="urn:deleteRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addInternalRole">
      <soap:operation soapAction="urn:addInternalRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoveRolesOfUser">
      <soap:operation soapAction="urn:addRemoveRolesOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap:operation soapAction="urn:changePassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllUsersWithPermission">
      <soap:operation soapAction="urn:listAllUsersWithPermission" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRealmInfo">
      <soap:operation soapAction="urn:getUserRealmInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap:operation soapAction="urn:listUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRolesNames">
      <soap:operation soapAction="urn:getAllRolesNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <soap:operation soapAction="urn:updateRoleName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap:operation soapAction="urn:addRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bulkImportUsers">
      <soap:operation soapAction="urn:bulkImportUsers" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserAdminSoap12Binding" type="tns:UserAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getUsersOfRole">
      <soap12:operation soapAction="urn:getUsersOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPermittedRoleNames">
      <soap12:operation soapAction="urn:getAllPermittedRoleNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap12:operation soapAction="urn:addUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoveUsersOfRole">
      <soap12:operation soapAction="urn:addRemoveUsersOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePasswordByUser">
      <soap12:operation soapAction="urn:changePasswordByUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSharedRolesEnabled">
      <soap12:operation soapAction="urn:isSharedRolesEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaim">
      <soap12:operation soapAction="urn:listUserByClaim" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfUser">
      <soap12:operation soapAction="urn:getRolesOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUsersOfRole">
      <soap12:operation soapAction="urn:updateUsersOfRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllUsers">
      <soap12:operation soapAction="urn:listAllUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUIPermissions">
      <soap12:operation soapAction="urn:getAllUIPermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasMultipleUserStores">
      <soap12:operation soapAction="urn:hasMultipleUserStores" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRolesOfUser">
      <soap12:operation soapAction="urn:updateRolesOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSharedRoleNames">
      <soap12:operation soapAction="urn:getAllSharedRoleNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRoleUIPermission">
      <soap12:operation soapAction="urn:setRoleUIPermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolePermissions">
      <soap12:operation soapAction="urn:getRolePermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfCurrentUser">
      <soap12:operation soapAction="urn:getRolesOfCurrentUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaimWithPermission">
      <soap12:operation soapAction="urn:listUserByClaimWithPermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <soap12:operation soapAction="urn:deleteRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addInternalRole">
      <soap12:operation soapAction="urn:addInternalRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRemoveRolesOfUser">
      <soap12:operation soapAction="urn:addRemoveRolesOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap12:operation soapAction="urn:changePassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllUsersWithPermission">
      <soap12:operation soapAction="urn:listAllUsersWithPermission" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserRealmInfo">
      <soap12:operation soapAction="urn:getUserRealmInfo" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <soap12:operation soapAction="urn:listUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap12:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRolesNames">
      <soap12:operation soapAction="urn:getAllRolesNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <soap12:operation soapAction="urn:updateRoleName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap12:operation soapAction="urn:addRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="bulkImportUsers">
      <soap12:operation soapAction="urn:bulkImportUsers" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserAdminUserAdminException">
        <soap12:fault use="literal" name="UserAdminUserAdminException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserAdminHttpBinding" type="tns:UserAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getUsersOfRole">
      <http:operation location="getUsersOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPermittedRoleNames">
      <http:operation location="getAllPermittedRoleNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <http:operation location="addUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRemoveUsersOfRole">
      <http:operation location="addRemoveUsersOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changePasswordByUser">
      <http:operation location="changePasswordByUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isSharedRolesEnabled">
      <http:operation location="isSharedRolesEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaim">
      <http:operation location="listUserByClaim"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfUser">
      <http:operation location="getRolesOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateUsersOfRole">
      <http:operation location="updateUsersOfRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAllUsers">
      <http:operation location="listAllUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllUIPermissions">
      <http:operation location="getAllUIPermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="hasMultipleUserStores">
      <http:operation location="hasMultipleUserStores"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRolesOfUser">
      <http:operation location="updateRolesOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllSharedRoleNames">
      <http:operation location="getAllSharedRoleNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setRoleUIPermission">
      <http:operation location="setRoleUIPermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getRolePermissions">
      <http:operation location="getRolePermissions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesOfCurrentUser">
      <http:operation location="getRolesOfCurrentUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listUserByClaimWithPermission">
      <http:operation location="listUserByClaimWithPermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <http:operation location="deleteRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addInternalRole">
      <http:operation location="addInternalRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addRemoveRolesOfUser">
      <http:operation location="addRemoveRolesOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <http:operation location="changePassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAllUsersWithPermission">
      <http:operation location="listAllUsersWithPermission"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRealmInfo">
      <http:operation location="getUserRealmInfo"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listUsers">
      <http:operation location="listUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <http:operation location="deleteUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRolesNames">
      <http:operation location="getAllRolesNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRoleName">
      <http:operation location="updateRoleName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <http:operation location="addRole"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="bulkImportUsers">
      <http:operation location="bulkImportUsers"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserAdmin">
    <wsdl:port name="UserAdminHttpsSoap11Endpoint" binding="tns:UserAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserAdmin.UserAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserAdminHttpsSoap12Endpoint" binding="tns:UserAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserAdmin.UserAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserAdminHttpsEndpoint" binding="tns:UserAdminHttpBinding">
      <http:address location="https://localhost:9443/services/UserAdmin.UserAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserAdmin.UserAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="becb63e4-e9d8-4309-83f1-6b06e4542d6a" isOneWay="false" action="urn:addInternalRole" name="addInternalRole" bindingOperationName="addInternalRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="59ff8329-152e-4278-94b0-f8bb0d4988a1" isOneWay="false" action="urn:addRemoveRolesOfUser" name="addRemoveRolesOfUser" bindingOperationName="addRemoveRolesOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08191559-6c78-46db-942c-28244ded66e5" isOneWay="false" action="urn:addRemoveUsersOfRole" name="addRemoveUsersOfRole" bindingOperationName="addRemoveUsersOfRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ac2f91a5-aa81-4560-9b31-d9c74ec2c36e" isOneWay="false" action="urn:addRole" name="addRole" bindingOperationName="addRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e21126e0-a990-4aab-99a2-a3291bafc37a" isOneWay="false" action="urn:addUser" name="addUser" bindingOperationName="addUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="803466a2-9345-4f6c-9c34-b656e593b995" isOneWay="false" action="urn:bulkImportUsers" name="bulkImportUsers" bindingOperationName="bulkImportUsers" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f55417c9-3fca-42dd-bbc4-869e94ad8183" isOneWay="false" action="urn:changePassword" name="changePassword" bindingOperationName="changePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b0459710-9cfd-4232-997f-3ea5703fc7cb" isOneWay="false" action="urn:changePasswordByUser" name="changePasswordByUser" bindingOperationName="changePasswordByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="522c0136-3ccf-4d03-8865-9e446263cd80" isOneWay="false" action="urn:deleteRole" name="deleteRole" bindingOperationName="deleteRole" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d97fd9d5-7ef2-4c5d-9b25-855f06403cca" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3787a893-75f8-4c1a-b59e-460455d62e7b" isOneWay="false" action="urn:getAllPermittedRoleNames" name="getAllPermittedRoleNames" bindingOperationName="getAllPermittedRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d58767af-2c43-421d-a9f9-9c61c3a91496" isOneWay="false" action="urn:getAllRolesNames" name="getAllRolesNames" bindingOperationName="getAllRolesNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="789a9f4c-57ee-46b1-bb6b-5840982d7fce" isOneWay="false" action="urn:getAllSharedRoleNames" name="getAllSharedRoleNames" bindingOperationName="getAllSharedRoleNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="90a5ef95-8e96-4f8d-a394-67dc4f028a69" isOneWay="false" action="urn:getAllUIPermissions" name="getAllUIPermissions" bindingOperationName="getAllUIPermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa01e1d3-196e-43d1-9e82-e15ff98c27d3" isOneWay="false" action="urn:getRolePermissions" name="getRolePermissions" bindingOperationName="getRolePermissions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="107e57a9-e19b-45a5-a8f2-752ec6dfa8c0" isOneWay="false" action="urn:getRolesOfCurrentUser" name="getRolesOfCurrentUser" bindingOperationName="getRolesOfCurrentUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="61eea77e-3f72-4267-be77-728a9a463855" isOneWay="false" action="urn:getRolesOfUser" name="getRolesOfUser" bindingOperationName="getRolesOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="847db0e2-76ac-40f5-9710-cadda875bf5c" isOneWay="false" action="urn:getUserRealmInfo" name="getUserRealmInfo" bindingOperationName="getUserRealmInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bfab52e5-f21b-42f7-af26-c222709d1ff1" isOneWay="false" action="urn:getUsersOfRole" name="getUsersOfRole" bindingOperationName="getUsersOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="01e7eb1c-5882-4736-8fd3-16132a100d74" isOneWay="false" action="urn:hasMultipleUserStores" name="hasMultipleUserStores" bindingOperationName="hasMultipleUserStores" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="004bd6cb-201b-45aa-a4d0-3c0a5e5fa037" isOneWay="false" action="urn:isSharedRolesEnabled" name="isSharedRolesEnabled" bindingOperationName="isSharedRolesEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="85ec52b7-dae7-41d3-9c44-c87c351b4fa3" isOneWay="false" action="urn:listAllUsers" name="listAllUsers" bindingOperationName="listAllUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d2bb7b03-2397-4a63-9a3f-4c690af72218" isOneWay="false" action="urn:listAllUsersWithPermission" name="listAllUsersWithPermission" bindingOperationName="listAllUsersWithPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f3f3bf5-fd33-4baf-b32a-3e7657b3a630" isOneWay="false" action="urn:listUserByClaim" name="listUserByClaim" bindingOperationName="listUserByClaim" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="142867ca-0a9c-41c2-976a-fe1d15561957" isOneWay="false" action="urn:listUserByClaimWithPermission" name="listUserByClaimWithPermission" bindingOperationName="listUserByClaimWithPermission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a1ac7765-6f2d-43b6-93c5-ae6b5f51012d" isOneWay="false" action="urn:listUsers" name="listUsers" bindingOperationName="listUsers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="baceb69b-91e9-4d7b-ada7-dc50cdb82553" isOneWay="false" action="urn:setRoleUIPermission" name="setRoleUIPermission" bindingOperationName="setRoleUIPermission" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3865f56d-85e3-46a1-85b6-60f2d407c112" isOneWay="false" action="urn:updateRoleName" name="updateRoleName" bindingOperationName="updateRoleName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b7cba481-3919-44ae-a7b2-9721d774acfb" isOneWay="false" action="urn:updateRolesOfUser" name="updateRolesOfUser" bindingOperationName="updateRolesOfUser" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d5582d5e-a567-4bd3-80d8-3eea5b6f90d8" isOneWay="false" action="urn:updateUsersOfRole" name="updateUsersOfRole" bindingOperationName="updateUsersOfRole" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="4c7201fa-3e0b-44c9-80de-1099594a59a6" wsaVersion="NONE" name="UserIdentityManagementAdminServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}UserIdentityManagementAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserIdentityManagementAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="9de7ad98-7cf0-4957-a5fc-fdde8551bc38" isOneWay="false" action="urn:changeUserPassword" name="changeUserPassword" bindingOperationName="changeUserPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a4027de8-7673-4368-b993-8b6812bacafd" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="68e2ad90-f3bf-4787-b593-c9edb73ee175" isOneWay="false" action="urn:getAllChallengeQuestions" name="getAllChallengeQuestions" bindingOperationName="getAllChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="df31f651-c651-43dd-9954-f6e4f12c84c0" isOneWay="false" action="urn:getAllPromotedUserChallenge" name="getAllPromotedUserChallenge" bindingOperationName="getAllPromotedUserChallenge" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="00f17f64-25ec-4981-afd5-33d64ac02451" isOneWay="false" action="urn:getAllUserIdentityClaims" name="getAllUserIdentityClaims" bindingOperationName="getAllUserIdentityClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c614adaf-5a85-425b-a0c5-38261c453981" isOneWay="false" action="urn:getChallengeQuestionsOfUser" name="getChallengeQuestionsOfUser" bindingOperationName="getChallengeQuestionsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="be5a8a12-5ffc-4072-868f-b58d4ef7789b" isOneWay="false" action="urn:isReadOnlyUserStore" name="isReadOnlyUserStore" bindingOperationName="isReadOnlyUserStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2c87c28f-ef6b-49af-bc74-cd351e680743" isOneWay="false" action="urn:lockUserAccount" name="lockUserAccount" bindingOperationName="lockUserAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8951aa10-e0a8-4092-a7f2-bc6823f0831e" isOneWay="false" action="urn:resetUserPassword" name="resetUserPassword" bindingOperationName="resetUserPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="59ff8ab1-793b-44a4-af1a-6e1d373a7cfb" isOneWay="false" action="urn:setChallengeQuestions" name="setChallengeQuestions" bindingOperationName="setChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4e1a25ec-aff3-417d-8de7-2ec075d5abd6" isOneWay="false" action="urn:setChallengeQuestionsOfUser" name="setChallengeQuestionsOfUser" bindingOperationName="setChallengeQuestionsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="20ebf4e0-1ead-42a9-9d11-112e211a2ca6" isOneWay="false" action="urn:unlockUserAccount" name="unlockUserAccount" bindingOperationName="unlockUserAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="424e3644-b52a-467c-ba78-7cf184de7a53" isOneWay="false" action="urn:updateUserIdentityClaims" name="updateUserIdentityClaims" bindingOperationName="updateUserIdentityClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2d379186-571e-4f46-993e-82c18cd92a37" wsaVersion="NONE" name="UserIdentityManagementAdminServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}UserIdentityManagementAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserIdentityManagementAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserIdentityManagementAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserIdentityManagementAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2333="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2329="http://mgt.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2330="http://base.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserIdentityManagementAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:ax2334="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2332="http://mgt.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:element name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityMgtServiceException" nillable="true" type="ax2329:IdentityMgtServiceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="unlockUserAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="notificationType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setChallengeQuestions">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="challengeQuestionDTOs" nillable="true" type="ax2333:ChallengeQuestionDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllChallengeQuestions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllChallengeQuestionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2333:ChallengeQuestionDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getChallengeQuestionsOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getChallengeQuestionsOfUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2333:UserChallengesDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="lockUserAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resetUserPassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPromotedUserChallenge">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllPromotedUserChallengeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2333:UserChallengesSetDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setChallengeQuestionsOfUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="challengesDTOs" nillable="true" type="ax2333:UserChallengesDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateUserIdentityClaims">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userIdentityClaims" nillable="true" type="ax2333:UserIdentityClaimDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUserIdentityClaims">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllUserIdentityClaimsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2333:UserIdentityClaimDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeUserPassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="oldPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyUserStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyUserStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.identity.carbon.wso2.org/xsd">
      <xs:complexType name="ChallengeQuestionDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="order" type="xs:int"/>
          <xs:element minOccurs="0" name="promoteQuestion" type="xs:boolean"/>
          <xs:element minOccurs="0" name="question" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="questionSetId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserChallengesDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="answer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="order" type="xs:int"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element minOccurs="0" name="question" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="verfied" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserChallengesSetDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="challengesDTOs" nillable="true" type="ax2333:UserChallengesDTO"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserIdentityClaimDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2331="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityMgtServiceException">
        <xs:complexContent>
          <xs:extension base="ax2330:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="changeUserPasswordRequest">
    <wsdl:part name="parameters" element="ns:changeUserPassword"/>
  </wsdl:message>
  <wsdl:message name="changeUserPasswordResponse"/>
  <wsdl:message name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
    <wsdl:part name="parameters" element="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
  </wsdl:message>
  <wsdl:message name="resetUserPasswordRequest">
    <wsdl:part name="parameters" element="ns:resetUserPassword"/>
  </wsdl:message>
  <wsdl:message name="resetUserPasswordResponse"/>
  <wsdl:message name="isReadOnlyUserStoreRequest">
    <wsdl:part name="parameters" element="ns:isReadOnlyUserStore"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyUserStoreResponse">
    <wsdl:part name="parameters" element="ns:isReadOnlyUserStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="getChallengeQuestionsOfUserRequest">
    <wsdl:part name="parameters" element="ns:getChallengeQuestionsOfUser"/>
  </wsdl:message>
  <wsdl:message name="getChallengeQuestionsOfUserResponse">
    <wsdl:part name="parameters" element="ns:getChallengeQuestionsOfUserResponse"/>
  </wsdl:message>
  <wsdl:message name="unlockUserAccountRequest">
    <wsdl:part name="parameters" element="ns:unlockUserAccount"/>
  </wsdl:message>
  <wsdl:message name="unlockUserAccountResponse"/>
  <wsdl:message name="getAllChallengeQuestionsRequest">
    <wsdl:part name="parameters" element="ns:getAllChallengeQuestions"/>
  </wsdl:message>
  <wsdl:message name="getAllChallengeQuestionsResponse">
    <wsdl:part name="parameters" element="ns:getAllChallengeQuestionsResponse"/>
  </wsdl:message>
  <wsdl:message name="updateUserIdentityClaimsRequest">
    <wsdl:part name="parameters" element="ns:updateUserIdentityClaims"/>
  </wsdl:message>
  <wsdl:message name="updateUserIdentityClaimsResponse"/>
  <wsdl:message name="lockUserAccountRequest">
    <wsdl:part name="parameters" element="ns:lockUserAccount"/>
  </wsdl:message>
  <wsdl:message name="lockUserAccountResponse"/>
  <wsdl:message name="getAllUserIdentityClaimsRequest">
    <wsdl:part name="parameters" element="ns:getAllUserIdentityClaims"/>
  </wsdl:message>
  <wsdl:message name="getAllUserIdentityClaimsResponse">
    <wsdl:part name="parameters" element="ns:getAllUserIdentityClaimsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteUserRequest">
    <wsdl:part name="parameters" element="ns:deleteUser"/>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse"/>
  <wsdl:message name="setChallengeQuestionsOfUserRequest">
    <wsdl:part name="parameters" element="ns:setChallengeQuestionsOfUser"/>
  </wsdl:message>
  <wsdl:message name="setChallengeQuestionsOfUserResponse"/>
  <wsdl:message name="setChallengeQuestionsRequest">
    <wsdl:part name="parameters" element="ns:setChallengeQuestions"/>
  </wsdl:message>
  <wsdl:message name="setChallengeQuestionsResponse"/>
  <wsdl:message name="getAllPromotedUserChallengeRequest">
    <wsdl:part name="parameters" element="ns:getAllPromotedUserChallenge"/>
  </wsdl:message>
  <wsdl:message name="getAllPromotedUserChallengeResponse">
    <wsdl:part name="parameters" element="ns:getAllPromotedUserChallengeResponse"/>
  </wsdl:message>
  <wsdl:portType name="UserIdentityManagementAdminServicePortType">
    <wsdl:operation name="changeUserPassword">
      <wsdl:input message="ns:changeUserPasswordRequest" wsaw:Action="urn:changeUserPassword"/>
      <wsdl:output message="ns:changeUserPasswordResponse" wsaw:Action="urn:changeUserPasswordResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:changeUserPasswordUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="resetUserPassword">
      <wsdl:input message="ns:resetUserPasswordRequest" wsaw:Action="urn:resetUserPassword"/>
      <wsdl:output message="ns:resetUserPasswordResponse" wsaw:Action="urn:resetUserPasswordResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:resetUserPasswordUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <wsdl:input message="ns:isReadOnlyUserStoreRequest" wsaw:Action="urn:isReadOnlyUserStore"/>
      <wsdl:output message="ns:isReadOnlyUserStoreResponse" wsaw:Action="urn:isReadOnlyUserStoreResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:isReadOnlyUserStoreUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getChallengeQuestionsOfUser">
      <wsdl:input message="ns:getChallengeQuestionsOfUserRequest" wsaw:Action="urn:getChallengeQuestionsOfUser"/>
      <wsdl:output message="ns:getChallengeQuestionsOfUserResponse" wsaw:Action="urn:getChallengeQuestionsOfUserResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:getChallengeQuestionsOfUserUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="unlockUserAccount">
      <wsdl:input message="ns:unlockUserAccountRequest" wsaw:Action="urn:unlockUserAccount"/>
      <wsdl:output message="ns:unlockUserAccountResponse" wsaw:Action="urn:unlockUserAccountResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:unlockUserAccountUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <wsdl:input message="ns:getAllChallengeQuestionsRequest" wsaw:Action="urn:getAllChallengeQuestions"/>
      <wsdl:output message="ns:getAllChallengeQuestionsResponse" wsaw:Action="urn:getAllChallengeQuestionsResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:getAllChallengeQuestionsUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="updateUserIdentityClaims">
      <wsdl:input message="ns:updateUserIdentityClaimsRequest" wsaw:Action="urn:updateUserIdentityClaims"/>
      <wsdl:output message="ns:updateUserIdentityClaimsResponse" wsaw:Action="urn:updateUserIdentityClaimsResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:updateUserIdentityClaimsUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="lockUserAccount">
      <wsdl:input message="ns:lockUserAccountRequest" wsaw:Action="urn:lockUserAccount"/>
      <wsdl:output message="ns:lockUserAccountResponse" wsaw:Action="urn:lockUserAccountResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:lockUserAccountUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllUserIdentityClaims">
      <wsdl:input message="ns:getAllUserIdentityClaimsRequest" wsaw:Action="urn:getAllUserIdentityClaims"/>
      <wsdl:output message="ns:getAllUserIdentityClaimsResponse" wsaw:Action="urn:getAllUserIdentityClaimsResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:getAllUserIdentityClaimsUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="ns:deleteUserRequest" wsaw:Action="urn:deleteUser"/>
      <wsdl:output message="ns:deleteUserResponse" wsaw:Action="urn:deleteUserResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:deleteUserUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestionsOfUser">
      <wsdl:input message="ns:setChallengeQuestionsOfUserRequest" wsaw:Action="urn:setChallengeQuestionsOfUser"/>
      <wsdl:output message="ns:setChallengeQuestionsOfUserResponse" wsaw:Action="urn:setChallengeQuestionsOfUserResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:setChallengeQuestionsOfUserUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestions">
      <wsdl:input message="ns:setChallengeQuestionsRequest" wsaw:Action="urn:setChallengeQuestions"/>
      <wsdl:output message="ns:setChallengeQuestionsResponse" wsaw:Action="urn:setChallengeQuestionsResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:setChallengeQuestionsUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllPromotedUserChallenge">
      <wsdl:input message="ns:getAllPromotedUserChallengeRequest" wsaw:Action="urn:getAllPromotedUserChallenge"/>
      <wsdl:output message="ns:getAllPromotedUserChallengeResponse" wsaw:Action="urn:getAllPromotedUserChallengeResponse"/>
      <wsdl:fault message="ns:UserIdentityManagementAdminServiceIdentityMgtServiceException" name="UserIdentityManagementAdminServiceIdentityMgtServiceException" wsaw:Action="urn:getAllPromotedUserChallengeUserIdentityManagementAdminServiceIdentityMgtServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserIdentityManagementAdminServiceSoap11Binding" type="ns:UserIdentityManagementAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="changeUserPassword">
      <soap:operation soapAction="urn:changeUserPassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetUserPassword">
      <soap:operation soapAction="urn:resetUserPassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <soap:operation soapAction="urn:isReadOnlyUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChallengeQuestionsOfUser">
      <soap:operation soapAction="urn:getChallengeQuestionsOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlockUserAccount">
      <soap:operation soapAction="urn:unlockUserAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <soap:operation soapAction="urn:getAllChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserIdentityClaims">
      <soap:operation soapAction="urn:updateUserIdentityClaims" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lockUserAccount">
      <soap:operation soapAction="urn:lockUserAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserIdentityClaims">
      <soap:operation soapAction="urn:getAllUserIdentityClaims" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestionsOfUser">
      <soap:operation soapAction="urn:setChallengeQuestionsOfUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestions">
      <soap:operation soapAction="urn:setChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPromotedUserChallenge">
      <soap:operation soapAction="urn:getAllPromotedUserChallenge" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserIdentityManagementAdminServiceSoap12Binding" type="ns:UserIdentityManagementAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="changeUserPassword">
      <soap12:operation soapAction="urn:changeUserPassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetUserPassword">
      <soap12:operation soapAction="urn:resetUserPassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <soap12:operation soapAction="urn:isReadOnlyUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChallengeQuestionsOfUser">
      <soap12:operation soapAction="urn:getChallengeQuestionsOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unlockUserAccount">
      <soap12:operation soapAction="urn:unlockUserAccount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <soap12:operation soapAction="urn:getAllChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserIdentityClaims">
      <soap12:operation soapAction="urn:updateUserIdentityClaims" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lockUserAccount">
      <soap12:operation soapAction="urn:lockUserAccount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserIdentityClaims">
      <soap12:operation soapAction="urn:getAllUserIdentityClaims" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap12:operation soapAction="urn:deleteUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestionsOfUser">
      <soap12:operation soapAction="urn:setChallengeQuestionsOfUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestions">
      <soap12:operation soapAction="urn:setChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllPromotedUserChallenge">
      <soap12:operation soapAction="urn:getAllPromotedUserChallenge" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserIdentityManagementAdminServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserIdentityManagementAdminServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserIdentityManagementAdminServiceHttpBinding" type="ns:UserIdentityManagementAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="changeUserPassword">
      <http:operation location="changeUserPassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resetUserPassword">
      <http:operation location="resetUserPassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <http:operation location="isReadOnlyUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getChallengeQuestionsOfUser">
      <http:operation location="getChallengeQuestionsOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unlockUserAccount">
      <http:operation location="unlockUserAccount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <http:operation location="getAllChallengeQuestions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateUserIdentityClaims">
      <http:operation location="updateUserIdentityClaims"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="lockUserAccount">
      <http:operation location="lockUserAccount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllUserIdentityClaims">
      <http:operation location="getAllUserIdentityClaims"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <http:operation location="deleteUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestionsOfUser">
      <http:operation location="setChallengeQuestionsOfUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setChallengeQuestions">
      <http:operation location="setChallengeQuestions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllPromotedUserChallenge">
      <http:operation location="getAllPromotedUserChallenge"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserIdentityManagementAdminService">
    <wsdl:port name="UserIdentityManagementAdminServiceHttpsSoap11Endpoint" binding="ns:UserIdentityManagementAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserIdentityManagementAdminServiceHttpsSoap12Endpoint" binding="ns:UserIdentityManagementAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserIdentityManagementAdminServiceHttpsEndpoint" binding="ns:UserIdentityManagementAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserIdentityManagementAdminService.UserIdentityManagementAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="d16e382b-0a77-4994-85eb-2a80a38aa32d" isOneWay="false" action="urn:changeUserPassword" name="changeUserPassword" bindingOperationName="changeUserPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="20e5ad02-a5bd-4be6-8abb-e9a1b722e24a" isOneWay="false" action="urn:deleteUser" name="deleteUser" bindingOperationName="deleteUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b30295b0-3a29-4ca0-8b20-3887352d08c1" isOneWay="false" action="urn:getAllChallengeQuestions" name="getAllChallengeQuestions" bindingOperationName="getAllChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4afb9459-d3c3-4da7-bd28-a8e2220cb52d" isOneWay="false" action="urn:getAllPromotedUserChallenge" name="getAllPromotedUserChallenge" bindingOperationName="getAllPromotedUserChallenge" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1e060a25-e0bf-47c3-81f1-8124943c5461" isOneWay="false" action="urn:getAllUserIdentityClaims" name="getAllUserIdentityClaims" bindingOperationName="getAllUserIdentityClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0bcb7dc0-ff8c-4c9c-b6a5-3e0a422ea005" isOneWay="false" action="urn:getChallengeQuestionsOfUser" name="getChallengeQuestionsOfUser" bindingOperationName="getChallengeQuestionsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="370a231a-262b-4065-b651-56240706b130" isOneWay="false" action="urn:isReadOnlyUserStore" name="isReadOnlyUserStore" bindingOperationName="isReadOnlyUserStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="de896657-8728-4cec-acf0-741b979da27b" isOneWay="false" action="urn:lockUserAccount" name="lockUserAccount" bindingOperationName="lockUserAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ac1c0874-33bc-4bbe-b300-17560558bc23" isOneWay="false" action="urn:resetUserPassword" name="resetUserPassword" bindingOperationName="resetUserPassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7ed1d5d9-7ed6-4d29-b9ca-c40fa49e9770" isOneWay="false" action="urn:setChallengeQuestions" name="setChallengeQuestions" bindingOperationName="setChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab3e9831-0b34-42ae-8749-460f5570856e" isOneWay="false" action="urn:setChallengeQuestionsOfUser" name="setChallengeQuestionsOfUser" bindingOperationName="setChallengeQuestionsOfUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2a9b3724-d549-48d5-ad22-6c24aaa2491d" isOneWay="false" action="urn:unlockUserAccount" name="unlockUserAccount" bindingOperationName="unlockUserAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c79bbdb8-e025-4b25-9989-31529fe49d77" isOneWay="false" action="urn:updateUserIdentityClaims" name="updateUserIdentityClaims" bindingOperationName="updateUserIdentityClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a36c3710-8b82-4169-8c20-49d0d9940bf8" wsaVersion="NONE" name="UserInformationRecoveryServiceSoap12Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}UserInformationRecoveryServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserInformationRecoveryService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="9d599512-1654-4891-90f8-7ed98a2b7691" isOneWay="false" action="urn:confirmUserSelfRegistration" name="confirmUserSelfRegistration" bindingOperationName="confirmUserSelfRegistration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="088e58d3-60e8-4f58-a37c-62c1e18e9578" isOneWay="false" action="urn:getAllChallengeQuestions" name="getAllChallengeQuestions" bindingOperationName="getAllChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="003c6a4d-50d5-4d79-bf83-0b75183a35c7" isOneWay="false" action="urn:getCaptcha" name="getCaptcha" bindingOperationName="getCaptcha" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="050f616d-85b9-4a4a-b90e-a40a9b6dcc6b" isOneWay="false" action="urn:getUserChallengeQuestion" name="getUserChallengeQuestion" bindingOperationName="getUserChallengeQuestion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b66b8dea-ab93-460c-99cd-fa47f3d07bfd" isOneWay="false" action="urn:getUserChallengeQuestionIds" name="getUserChallengeQuestionIds" bindingOperationName="getUserChallengeQuestionIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8d58146f-4605-423e-943e-382d1fa1ccad" isOneWay="false" action="urn:getUserIdentitySupportedClaims" name="getUserIdentitySupportedClaims" bindingOperationName="getUserIdentitySupportedClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4bf70c93-00a9-4666-b378-fc580464569e" isOneWay="false" action="urn:registerUser" name="registerUser" bindingOperationName="registerUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4983d8f8-2654-4c26-94e5-74038b4cf31c" isOneWay="false" action="urn:resendSignUpConfiramtionCode" name="resendSignUpConfiramtionCode" bindingOperationName="resendSignUpConfiramtionCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e1540026-0f11-4b80-b3a5-c4f55e70883b" isOneWay="false" action="urn:sendRecoveryNotification" name="sendRecoveryNotification" bindingOperationName="sendRecoveryNotification" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fe469cdf-bc77-4e5c-b366-6780e6428d3f" isOneWay="false" action="urn:updatePassword" name="updatePassword" bindingOperationName="updatePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="541b0127-da72-4ea8-9a19-c424f0e47a79" isOneWay="false" action="urn:verifyAccount" name="verifyAccount" bindingOperationName="verifyAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2997f3c8-93f9-4189-97fd-828487292bd0" isOneWay="false" action="urn:verifyConfirmationCode" name="verifyConfirmationCode" bindingOperationName="verifyConfirmationCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ea6cba40-dfde-43c0-a5d1-02d7defddb19" isOneWay="false" action="urn:verifyUser" name="verifyUser" bindingOperationName="verifyUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="086844eb-260a-42c2-8b50-77ae9db97113" isOneWay="false" action="urn:verifyUserChallengeAnswer" name="verifyUserChallengeAnswer" bindingOperationName="verifyUserChallengeAnswer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="20214d74-5577-4219-8c25-8d5a9ce19bf3" wsaVersion="NONE" name="UserInformationRecoveryServiceSoap11Binding" type="wsdl" bindingName="{http://services.mgt.identity.carbon.wso2.org}UserInformationRecoveryServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserInformationRecoveryService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserInformationRecoveryService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserInformationRecoveryService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2311="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2313="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2316="http://beans.mgt.captcha.carbon.wso2.org/xsd" xmlns:ns="http://services.mgt.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2318="http://beans.mgt.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2319="http://util.java/xsd" xmlns:ax2309="http://base.identity.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserInformationRecoveryService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.mgt.captcha.carbon.wso2.org/xsd">
      <xs:complexType name="CaptchaInfoBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="imagePath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="secretKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userAnswer" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://services.mgt.identity.carbon.wso2.org" xmlns:ax2322="http://beans.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2312="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2315="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2317="http://beans.mgt.captcha.carbon.wso2.org/xsd" xmlns:ax2310="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://mgt.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.mgt.captcha.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://beans.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:element name="UserInformationRecoveryServiceIdentityException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityException" nillable="true" type="ax2310:IdentityException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIdentitySupportedClaims">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dialect" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIdentitySupportedClaimsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2311:UserIdentityClaimDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityMgtServiceException" nillable="true" type="ax2313:IdentityMgtServiceException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCaptcha">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getCaptchaResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2316:CaptchaInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="captcha" nillable="true" type="ax2316:CaptchaInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2322:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendRecoveryNotification">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="notificationType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sendRecoveryNotificationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2322:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyAccount">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2311:UserIdentityClaimDTO"/>
            <xs:element minOccurs="0" name="captcha" nillable="true" type="ax2316:CaptchaInfoBean"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyAccountResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2322:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="claims" nillable="true" type="ax2311:UserIdentityClaimDTO"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="registerUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2322:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resendSignUpConfiramtionCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="resendSignUpConfiramtionCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2322:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="confirmUserSelfRegistration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="captcha" nillable="true" type="ax2316:CaptchaInfoBean"/>
            <xs:element minOccurs="0" name="tenantDomain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="confirmUserSelfRegistrationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2322:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllChallengeQuestions">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAllChallengeQuestionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2311:ChallengeQuestionDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserChallengeQuestion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="confirmation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="questionId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserChallengeQuestionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2311:UserChallengesDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserChallengeQuestionIds">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="confirmation" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserChallengeQuestionIdsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2311:ChallengeQuestionIdsDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyUserChallengeAnswer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="confirmation" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="questionId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="answer" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyUserChallengeAnswerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2322:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyConfirmationCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="captcha" nillable="true" type="ax2316:CaptchaInfoBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="verifyConfirmationCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2322:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePassword">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="confirmationCode" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="newPassword" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updatePasswordResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2322:VerificationBean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://util.java/xsd">
      <xs:complexType abstract="true" name="Map">
        <xs:sequence>
          <xs:element minOccurs="0" name="empty" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://beans.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2321="http://dto.mgt.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://dto.mgt.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="VerificationBean">
        <xs:sequence>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationData" nillable="true" type="ax2311:NotificationDataDTO"/>
          <xs:element minOccurs="0" name="redirectPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="verified" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.identity.carbon.wso2.org/xsd" xmlns:ax2320="http://util.java/xsd">
      <xs:import namespace="http://util.java/xsd"/>
      <xs:complexType name="UserIdentityClaimDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="claimValue" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="NotificationDataDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notification" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationAddress" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationSent" type="xs:boolean"/>
          <xs:element minOccurs="0" name="notificationSubject" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="notificationType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="transportHeaders" nillable="true" type="ax2319:Map"/>
          <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ChallengeQuestionDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="order" type="xs:int"/>
          <xs:element minOccurs="0" name="promoteQuestion" type="xs:boolean"/>
          <xs:element minOccurs="0" name="question" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="questionSetId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserChallengesDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="answer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="order" type="xs:int"/>
          <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
          <xs:element minOccurs="0" name="question" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="verfied" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ChallengeQuestionIdsDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="error" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ids" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.identity.carbon.wso2.org/xsd" xmlns:ax2314="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityMgtServiceException">
        <xs:complexContent>
          <xs:extension base="ax2314:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updatePasswordRequest">
    <wsdl:part name="parameters" element="ns:updatePassword"/>
  </wsdl:message>
  <wsdl:message name="updatePasswordResponse">
    <wsdl:part name="parameters" element="ns:updatePasswordResponse"/>
  </wsdl:message>
  <wsdl:message name="UserInformationRecoveryServiceIdentityMgtServiceException">
    <wsdl:part name="parameters" element="ns:UserInformationRecoveryServiceIdentityMgtServiceException"/>
  </wsdl:message>
  <wsdl:message name="verifyAccountRequest">
    <wsdl:part name="parameters" element="ns:verifyAccount"/>
  </wsdl:message>
  <wsdl:message name="verifyAccountResponse">
    <wsdl:part name="parameters" element="ns:verifyAccountResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserChallengeQuestionRequest">
    <wsdl:part name="parameters" element="ns:getUserChallengeQuestion"/>
  </wsdl:message>
  <wsdl:message name="getUserChallengeQuestionResponse">
    <wsdl:part name="parameters" element="ns:getUserChallengeQuestionResponse"/>
  </wsdl:message>
  <wsdl:message name="sendRecoveryNotificationRequest">
    <wsdl:part name="parameters" element="ns:sendRecoveryNotification"/>
  </wsdl:message>
  <wsdl:message name="sendRecoveryNotificationResponse">
    <wsdl:part name="parameters" element="ns:sendRecoveryNotificationResponse"/>
  </wsdl:message>
  <wsdl:message name="verifyUserRequest">
    <wsdl:part name="parameters" element="ns:verifyUser"/>
  </wsdl:message>
  <wsdl:message name="verifyUserResponse">
    <wsdl:part name="parameters" element="ns:verifyUserResponse"/>
  </wsdl:message>
  <wsdl:message name="resendSignUpConfiramtionCodeRequest">
    <wsdl:part name="parameters" element="ns:resendSignUpConfiramtionCode"/>
  </wsdl:message>
  <wsdl:message name="resendSignUpConfiramtionCodeResponse">
    <wsdl:part name="parameters" element="ns:resendSignUpConfiramtionCodeResponse"/>
  </wsdl:message>
  <wsdl:message name="getAllChallengeQuestionsRequest">
    <wsdl:part name="parameters" element="ns:getAllChallengeQuestions"/>
  </wsdl:message>
  <wsdl:message name="getAllChallengeQuestionsResponse">
    <wsdl:part name="parameters" element="ns:getAllChallengeQuestionsResponse"/>
  </wsdl:message>
  <wsdl:message name="verifyUserChallengeAnswerRequest">
    <wsdl:part name="parameters" element="ns:verifyUserChallengeAnswer"/>
  </wsdl:message>
  <wsdl:message name="verifyUserChallengeAnswerResponse">
    <wsdl:part name="parameters" element="ns:verifyUserChallengeAnswerResponse"/>
  </wsdl:message>
  <wsdl:message name="confirmUserSelfRegistrationRequest">
    <wsdl:part name="parameters" element="ns:confirmUserSelfRegistration"/>
  </wsdl:message>
  <wsdl:message name="confirmUserSelfRegistrationResponse">
    <wsdl:part name="parameters" element="ns:confirmUserSelfRegistrationResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserChallengeQuestionIdsRequest">
    <wsdl:part name="parameters" element="ns:getUserChallengeQuestionIds"/>
  </wsdl:message>
  <wsdl:message name="getUserChallengeQuestionIdsResponse">
    <wsdl:part name="parameters" element="ns:getUserChallengeQuestionIdsResponse"/>
  </wsdl:message>
  <wsdl:message name="getCaptchaRequest">
    <wsdl:part name="parameters" element="ns:getCaptcha"/>
  </wsdl:message>
  <wsdl:message name="getCaptchaResponse">
    <wsdl:part name="parameters" element="ns:getCaptchaResponse"/>
  </wsdl:message>
  <wsdl:message name="registerUserRequest">
    <wsdl:part name="parameters" element="ns:registerUser"/>
  </wsdl:message>
  <wsdl:message name="registerUserResponse">
    <wsdl:part name="parameters" element="ns:registerUserResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserIdentitySupportedClaimsRequest">
    <wsdl:part name="parameters" element="ns:getUserIdentitySupportedClaims"/>
  </wsdl:message>
  <wsdl:message name="getUserIdentitySupportedClaimsResponse">
    <wsdl:part name="parameters" element="ns:getUserIdentitySupportedClaimsResponse"/>
  </wsdl:message>
  <wsdl:message name="UserInformationRecoveryServiceIdentityException">
    <wsdl:part name="parameters" element="ns:UserInformationRecoveryServiceIdentityException"/>
  </wsdl:message>
  <wsdl:message name="verifyConfirmationCodeRequest">
    <wsdl:part name="parameters" element="ns:verifyConfirmationCode"/>
  </wsdl:message>
  <wsdl:message name="verifyConfirmationCodeResponse">
    <wsdl:part name="parameters" element="ns:verifyConfirmationCodeResponse"/>
  </wsdl:message>
  <wsdl:portType name="UserInformationRecoveryServicePortType">
    <wsdl:operation name="updatePassword">
      <wsdl:input message="ns:updatePasswordRequest" wsaw:Action="urn:updatePassword"/>
      <wsdl:output message="ns:updatePasswordResponse" wsaw:Action="urn:updatePasswordResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:updatePasswordUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyAccount">
      <wsdl:input message="ns:verifyAccountRequest" wsaw:Action="urn:verifyAccount"/>
      <wsdl:output message="ns:verifyAccountResponse" wsaw:Action="urn:verifyAccountResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:verifyAccountUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestion">
      <wsdl:input message="ns:getUserChallengeQuestionRequest" wsaw:Action="urn:getUserChallengeQuestion"/>
      <wsdl:output message="ns:getUserChallengeQuestionResponse" wsaw:Action="urn:getUserChallengeQuestionResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:getUserChallengeQuestionUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="sendRecoveryNotification">
      <wsdl:input message="ns:sendRecoveryNotificationRequest" wsaw:Action="urn:sendRecoveryNotification"/>
      <wsdl:output message="ns:sendRecoveryNotificationResponse" wsaw:Action="urn:sendRecoveryNotificationResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:sendRecoveryNotificationUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyUser">
      <wsdl:input message="ns:verifyUserRequest" wsaw:Action="urn:verifyUser"/>
      <wsdl:output message="ns:verifyUserResponse" wsaw:Action="urn:verifyUserResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:verifyUserUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="resendSignUpConfiramtionCode">
      <wsdl:input message="ns:resendSignUpConfiramtionCodeRequest" wsaw:Action="urn:resendSignUpConfiramtionCode"/>
      <wsdl:output message="ns:resendSignUpConfiramtionCodeResponse" wsaw:Action="urn:resendSignUpConfiramtionCodeResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:resendSignUpConfiramtionCodeUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <wsdl:input message="ns:getAllChallengeQuestionsRequest" wsaw:Action="urn:getAllChallengeQuestions"/>
      <wsdl:output message="ns:getAllChallengeQuestionsResponse" wsaw:Action="urn:getAllChallengeQuestionsResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:getAllChallengeQuestionsUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyUserChallengeAnswer">
      <wsdl:input message="ns:verifyUserChallengeAnswerRequest" wsaw:Action="urn:verifyUserChallengeAnswer"/>
      <wsdl:output message="ns:verifyUserChallengeAnswerResponse" wsaw:Action="urn:verifyUserChallengeAnswerResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:verifyUserChallengeAnswerUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="confirmUserSelfRegistration">
      <wsdl:input message="ns:confirmUserSelfRegistrationRequest" wsaw:Action="urn:confirmUserSelfRegistration"/>
      <wsdl:output message="ns:confirmUserSelfRegistrationResponse" wsaw:Action="urn:confirmUserSelfRegistrationResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:confirmUserSelfRegistrationUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestionIds">
      <wsdl:input message="ns:getUserChallengeQuestionIdsRequest" wsaw:Action="urn:getUserChallengeQuestionIds"/>
      <wsdl:output message="ns:getUserChallengeQuestionIdsResponse" wsaw:Action="urn:getUserChallengeQuestionIdsResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:getUserChallengeQuestionIdsUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getCaptcha">
      <wsdl:input message="ns:getCaptchaRequest" wsaw:Action="urn:getCaptcha"/>
      <wsdl:output message="ns:getCaptchaResponse" wsaw:Action="urn:getCaptchaResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:getCaptchaUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="registerUser">
      <wsdl:input message="ns:registerUserRequest" wsaw:Action="urn:registerUser"/>
      <wsdl:output message="ns:registerUserResponse" wsaw:Action="urn:registerUserResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:registerUserUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentitySupportedClaims">
      <wsdl:input message="ns:getUserIdentitySupportedClaimsRequest" wsaw:Action="urn:getUserIdentitySupportedClaims"/>
      <wsdl:output message="ns:getUserIdentitySupportedClaimsResponse" wsaw:Action="urn:getUserIdentitySupportedClaimsResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityException" name="UserInformationRecoveryServiceIdentityException" wsaw:Action="urn:getUserIdentitySupportedClaimsUserInformationRecoveryServiceIdentityException"/>
    </wsdl:operation>
    <wsdl:operation name="verifyConfirmationCode">
      <wsdl:input message="ns:verifyConfirmationCodeRequest" wsaw:Action="urn:verifyConfirmationCode"/>
      <wsdl:output message="ns:verifyConfirmationCodeResponse" wsaw:Action="urn:verifyConfirmationCodeResponse"/>
      <wsdl:fault message="ns:UserInformationRecoveryServiceIdentityMgtServiceException" name="UserInformationRecoveryServiceIdentityMgtServiceException" wsaw:Action="urn:verifyConfirmationCodeUserInformationRecoveryServiceIdentityMgtServiceException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserInformationRecoveryServiceSoap11Binding" type="ns:UserInformationRecoveryServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updatePassword">
      <soap:operation soapAction="urn:updatePassword" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyAccount">
      <soap:operation soapAction="urn:verifyAccount" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestion">
      <soap:operation soapAction="urn:getUserChallengeQuestion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendRecoveryNotification">
      <soap:operation soapAction="urn:sendRecoveryNotification" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyUser">
      <soap:operation soapAction="urn:verifyUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resendSignUpConfiramtionCode">
      <soap:operation soapAction="urn:resendSignUpConfiramtionCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <soap:operation soapAction="urn:getAllChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyUserChallengeAnswer">
      <soap:operation soapAction="urn:verifyUserChallengeAnswer" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="confirmUserSelfRegistration">
      <soap:operation soapAction="urn:confirmUserSelfRegistration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestionIds">
      <soap:operation soapAction="urn:getUserChallengeQuestionIds" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCaptcha">
      <soap:operation soapAction="urn:getCaptcha" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerUser">
      <soap:operation soapAction="urn:registerUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentitySupportedClaims">
      <soap:operation soapAction="urn:getUserIdentitySupportedClaims" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyConfirmationCode">
      <soap:operation soapAction="urn:verifyConfirmationCode" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserInformationRecoveryServiceSoap12Binding" type="ns:UserInformationRecoveryServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="updatePassword">
      <soap12:operation soapAction="urn:updatePassword" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyAccount">
      <soap12:operation soapAction="urn:verifyAccount" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestion">
      <soap12:operation soapAction="urn:getUserChallengeQuestion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendRecoveryNotification">
      <soap12:operation soapAction="urn:sendRecoveryNotification" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyUser">
      <soap12:operation soapAction="urn:verifyUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resendSignUpConfiramtionCode">
      <soap12:operation soapAction="urn:resendSignUpConfiramtionCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <soap12:operation soapAction="urn:getAllChallengeQuestions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyUserChallengeAnswer">
      <soap12:operation soapAction="urn:verifyUserChallengeAnswer" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="confirmUserSelfRegistration">
      <soap12:operation soapAction="urn:confirmUserSelfRegistration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestionIds">
      <soap12:operation soapAction="urn:getUserChallengeQuestionIds" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCaptcha">
      <soap12:operation soapAction="urn:getCaptcha" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="registerUser">
      <soap12:operation soapAction="urn:registerUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentitySupportedClaims">
      <soap12:operation soapAction="urn:getUserIdentitySupportedClaims" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="verifyConfirmationCode">
      <soap12:operation soapAction="urn:verifyConfirmationCode" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserInformationRecoveryServiceIdentityMgtServiceException">
        <soap12:fault use="literal" name="UserInformationRecoveryServiceIdentityMgtServiceException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserInformationRecoveryServiceHttpBinding" type="ns:UserInformationRecoveryServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="updatePassword">
      <http:operation location="updatePassword"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyAccount">
      <http:operation location="verifyAccount"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestion">
      <http:operation location="getUserChallengeQuestion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendRecoveryNotification">
      <http:operation location="sendRecoveryNotification"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyUser">
      <http:operation location="verifyUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resendSignUpConfiramtionCode">
      <http:operation location="resendSignUpConfiramtionCode"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllChallengeQuestions">
      <http:operation location="getAllChallengeQuestions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyUserChallengeAnswer">
      <http:operation location="verifyUserChallengeAnswer"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="confirmUserSelfRegistration">
      <http:operation location="confirmUserSelfRegistration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserChallengeQuestionIds">
      <http:operation location="getUserChallengeQuestionIds"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCaptcha">
      <http:operation location="getCaptcha"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerUser">
      <http:operation location="registerUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserIdentitySupportedClaims">
      <http:operation location="getUserIdentitySupportedClaims"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyConfirmationCode">
      <http:operation location="verifyConfirmationCode"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserInformationRecoveryService">
    <wsdl:port name="UserInformationRecoveryServiceHttpsSoap11Endpoint" binding="ns:UserInformationRecoveryServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserInformationRecoveryServiceHttpsSoap12Endpoint" binding="ns:UserInformationRecoveryServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserInformationRecoveryServiceHttpsEndpoint" binding="ns:UserInformationRecoveryServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserInformationRecoveryService.UserInformationRecoveryServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="4014179d-fd21-4301-95a8-c70e61f6d096" isOneWay="false" action="urn:confirmUserSelfRegistration" name="confirmUserSelfRegistration" bindingOperationName="confirmUserSelfRegistration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6eeb24fa-d2b3-48a5-9b8e-01a0d03470af" isOneWay="false" action="urn:getAllChallengeQuestions" name="getAllChallengeQuestions" bindingOperationName="getAllChallengeQuestions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9c6a4a03-8185-4b35-a6c0-56631eb2e5b1" isOneWay="false" action="urn:getCaptcha" name="getCaptcha" bindingOperationName="getCaptcha" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c684a520-8647-4516-8c99-a5e579782c6d" isOneWay="false" action="urn:getUserChallengeQuestion" name="getUserChallengeQuestion" bindingOperationName="getUserChallengeQuestion" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4f664110-14fd-4b16-b240-e4f27b208866" isOneWay="false" action="urn:getUserChallengeQuestionIds" name="getUserChallengeQuestionIds" bindingOperationName="getUserChallengeQuestionIds" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="72b5a852-e503-43f8-9732-3de327e0a614" isOneWay="false" action="urn:getUserIdentitySupportedClaims" name="getUserIdentitySupportedClaims" bindingOperationName="getUserIdentitySupportedClaims" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3a84ffe5-e79d-42d9-9cc4-14b4fd309215" isOneWay="false" action="urn:registerUser" name="registerUser" bindingOperationName="registerUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6d749b41-31c1-4400-b379-c2ffc0019170" isOneWay="false" action="urn:resendSignUpConfiramtionCode" name="resendSignUpConfiramtionCode" bindingOperationName="resendSignUpConfiramtionCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fcd4238e-2cfa-458c-b473-8626517dac87" isOneWay="false" action="urn:sendRecoveryNotification" name="sendRecoveryNotification" bindingOperationName="sendRecoveryNotification" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="abf655f6-dc3f-4237-b9f1-ecca0979556b" isOneWay="false" action="urn:updatePassword" name="updatePassword" bindingOperationName="updatePassword" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ea79c2f2-2ea5-438b-a0e3-1fcab74ebd5f" isOneWay="false" action="urn:verifyAccount" name="verifyAccount" bindingOperationName="verifyAccount" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="76479bde-ec9b-4be8-a6ce-2a59616c3b48" isOneWay="false" action="urn:verifyConfirmationCode" name="verifyConfirmationCode" bindingOperationName="verifyConfirmationCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="53dba383-ac2b-43bf-b564-5fa43325c511" isOneWay="false" action="urn:verifyUser" name="verifyUser" bindingOperationName="verifyUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e73447e5-e414-4688-acaf-05b25535c087" isOneWay="false" action="urn:verifyUserChallengeAnswer" name="verifyUserChallengeAnswer" bindingOperationName="verifyUserChallengeAnswer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="15a184e6-e7ce-4783-a138-15853fd408e6" wsaVersion="NONE" name="UserManagementWorkflowServiceSoap11Binding" type="wsdl" bindingName="{http://workflow.mgt.user.carbon.wso2.org}UserManagementWorkflowServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserManagementWorkflowService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="7548a55b-454a-46e2-a487-bcc831b65245" isOneWay="false" action="urn:listAllEntityNames" name="listAllEntityNames" bindingOperationName="listAllEntityNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="7b5e50b2-2d4d-4c15-bbfe-9ec23497d440" wsaVersion="NONE" name="UserManagementWorkflowServiceSoap12Binding" type="wsdl" bindingName="{http://workflow.mgt.user.carbon.wso2.org}UserManagementWorkflowServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserManagementWorkflowService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserManagementWorkflowService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserManagementWorkflowService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://workflow.mgt.user.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2698="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2699="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://workflow.mgt.user.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserManagementWorkflowService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2700="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="WorkflowException">
        <xs:complexContent>
          <xs:extension base="ax2699:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://workflow.mgt.user.carbon.wso2.org" xmlns:ax2701="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:element name="UserManagementWorkflowServiceWorkflowException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="WorkflowException" nillable="true" type="ax2698:WorkflowException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllEntityNames">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="wfOperationType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="wfStatus" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="entityType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="entityIdFilter" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllEntityNamesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="listAllEntityNamesRequest">
    <wsdl:part name="parameters" element="ns:listAllEntityNames"/>
  </wsdl:message>
  <wsdl:message name="listAllEntityNamesResponse">
    <wsdl:part name="parameters" element="ns:listAllEntityNamesResponse"/>
  </wsdl:message>
  <wsdl:message name="UserManagementWorkflowServiceWorkflowException">
    <wsdl:part name="parameters" element="ns:UserManagementWorkflowServiceWorkflowException"/>
  </wsdl:message>
  <wsdl:portType name="UserManagementWorkflowServicePortType">
    <wsdl:operation name="listAllEntityNames">
      <wsdl:input message="ns:listAllEntityNamesRequest" wsaw:Action="urn:listAllEntityNames"/>
      <wsdl:output message="ns:listAllEntityNamesResponse" wsaw:Action="urn:listAllEntityNamesResponse"/>
      <wsdl:fault message="ns:UserManagementWorkflowServiceWorkflowException" name="UserManagementWorkflowServiceWorkflowException" wsaw:Action="urn:listAllEntityNamesUserManagementWorkflowServiceWorkflowException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserManagementWorkflowServiceSoap11Binding" type="ns:UserManagementWorkflowServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="listAllEntityNames">
      <soap:operation soapAction="urn:listAllEntityNames" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementWorkflowServiceWorkflowException">
        <soap:fault use="literal" name="UserManagementWorkflowServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserManagementWorkflowServiceSoap12Binding" type="ns:UserManagementWorkflowServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="listAllEntityNames">
      <soap12:operation soapAction="urn:listAllEntityNames" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementWorkflowServiceWorkflowException">
        <soap12:fault use="literal" name="UserManagementWorkflowServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserManagementWorkflowServiceHttpBinding" type="ns:UserManagementWorkflowServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="listAllEntityNames">
      <http:operation location="listAllEntityNames"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserManagementWorkflowService">
    <wsdl:port name="UserManagementWorkflowServiceHttpsSoap11Endpoint" binding="ns:UserManagementWorkflowServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserManagementWorkflowServiceHttpsSoap12Endpoint" binding="ns:UserManagementWorkflowServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserManagementWorkflowServiceHttpsEndpoint" binding="ns:UserManagementWorkflowServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserManagementWorkflowService.UserManagementWorkflowServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="e8036219-d066-4959-9169-10603ed20c86" isOneWay="false" action="urn:listAllEntityNames" name="listAllEntityNames" bindingOperationName="listAllEntityNames" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="8565701c-a71f-4265-af91-3b2abc4283a2" wsaVersion="NONE" name="UserProfileMgtServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.profile.user.identity.carbon.wso2.org}UserProfileMgtServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserProfileMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="1abb3ae9-fdd9-4042-8221-a4d69a0c1395" isOneWay="false" action="urn:associateID" name="associateID" bindingOperationName="associateID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="58287d79-a1fb-4df7-843b-ed206471f3a0" isOneWay="false" action="urn:deleteUserProfile" name="deleteUserProfile" bindingOperationName="deleteUserProfile" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bb424cc2-f30f-402e-ab8a-be83bf215c18" isOneWay="false" action="urn:getAssociatedIDs" name="getAssociatedIDs" bindingOperationName="getAssociatedIDs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b56bc9ca-7f30-4d6d-b073-ad26ae93bdf3" isOneWay="false" action="urn:getInstance" name="getInstance" bindingOperationName="getInstance" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="acbcf07f-7776-4d64-99c7-0dbf80350d8a" isOneWay="false" action="urn:getNameAssociatedWith" name="getNameAssociatedWith" bindingOperationName="getNameAssociatedWith" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3fb25512-84aa-4fd7-8471-c245acf71bd1" isOneWay="false" action="urn:getProfileFieldsForInternalStore" name="getProfileFieldsForInternalStore" bindingOperationName="getProfileFieldsForInternalStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e5860f0-2d05-4d7a-9cb6-819b4845469d" isOneWay="false" action="urn:getUserProfile" name="getUserProfile" bindingOperationName="getUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6ac07074-cd63-43e4-9173-c6d495dcd9d7" isOneWay="false" action="urn:getUserProfiles" name="getUserProfiles" bindingOperationName="getUserProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3e739ee7-949b-4f07-9147-8445d0d2ab94" isOneWay="false" action="urn:isAddProfileEnabled" name="isAddProfileEnabled" bindingOperationName="isAddProfileEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0ae87437-7115-4384-8d82-0b6adf21d874" isOneWay="false" action="urn:isAddProfileEnabledForDomain" name="isAddProfileEnabledForDomain" bindingOperationName="isAddProfileEnabledForDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="395d975a-6bac-4e2d-baa1-1615c81ab2a2" isOneWay="false" action="urn:isReadOnlyUserStore" name="isReadOnlyUserStore" bindingOperationName="isReadOnlyUserStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1af050e7-b668-472a-b149-0595495bde34" isOneWay="false" action="urn:removeAssociateID" name="removeAssociateID" bindingOperationName="removeAssociateID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52001ba8-d312-40b7-b900-90f7640779a3" isOneWay="false" action="urn:setUserProfile" name="setUserProfile" bindingOperationName="setUserProfile" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="0342eec9-283c-40c1-826b-ed090b2efe40" wsaVersion="NONE" name="UserProfileMgtServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.profile.user.identity.carbon.wso2.org}UserProfileMgtServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserProfileMgtService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserProfileMgtService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserProfileMgtService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.profile.user.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2400="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://mgt.profile.user.identity.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2396="http://mgt.profile.user.identity.carbon.wso2.org/xsd" xmlns:ax2397="http://core.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserProfileMgtService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.profile.user.identity.carbon.wso2.org" xmlns:ax2399="http://mgt.profile.user.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.profile.user.identity.carbon.wso2.org/xsd"/>
      <xs:element name="getInstance">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getInstanceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2399:UserProfileAdmin"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UserProfileMgtServiceUserProfileException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="UserProfileException" nillable="true" type="ax2399:UserProfileException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profile" nillable="true" type="ax2399:UserProfileDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileFieldsForInternalStore">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProfileFieldsForInternalStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2399:UserProfileDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2399:UserProfileDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAddProfileEnabled">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAddProfileEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAddProfileEnabledForDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isAddProfileEnabledForDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="associateID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idpID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="associatedID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyUserStore">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isReadOnlyUserStoreResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfiles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserProfilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2399:UserProfileDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNameAssociatedWith">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idpID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="associatedID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getNameAssociatedWithResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedIDs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAssociatedIDsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2399:AssociatedAccountDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAssociateID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="idpID" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="associatedID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.carbon.wso2.org/xsd">
      <xs:complexType abstract="true" name="AbstractAdmin">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.profile.user.identity.carbon.wso2.org/xsd" xmlns:ax2401="http://base.identity.carbon.wso2.org/xsd" xmlns:ax2398="http://core.carbon.wso2.org/xsd">
      <xs:import namespace="http://core.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="UserProfileAdmin">
        <xs:complexContent>
          <xs:extension base="ax2397:AbstractAdmin">
            <xs:sequence>
              <xs:element minOccurs="0" name="addProfileEnabled" type="xs:boolean"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="associatedIDs" nillable="true" type="ax2396:AssociatedAccountDTO"/>
              <xs:element minOccurs="0" name="profileFieldsForInternalStore" nillable="true" type="ax2396:UserProfileDTO"/>
              <xs:element minOccurs="0" name="readOnlyUserStore" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="AssociatedAccountDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="identityProviderName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserProfileDTO">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValues" nillable="true" type="ax2396:UserFieldDTO"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="profileConfigurations" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="profileConifuration" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserFieldDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="checkedAttribute" type="xs:boolean"/>
          <xs:element minOccurs="0" name="claimUri" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
          <xs:element minOccurs="0" name="fieldValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="regEx" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="required" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserProfileException">
        <xs:complexContent>
          <xs:extension base="ax2400:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="removeAssociateIDRequest">
    <wsdl:part name="parameters" element="ns:removeAssociateID"/>
  </wsdl:message>
  <wsdl:message name="UserProfileMgtServiceUserProfileException">
    <wsdl:part name="parameters" element="ns:UserProfileMgtServiceUserProfileException"/>
  </wsdl:message>
  <wsdl:message name="getProfileFieldsForInternalStoreRequest">
    <wsdl:part name="parameters" element="ns:getProfileFieldsForInternalStore"/>
  </wsdl:message>
  <wsdl:message name="getProfileFieldsForInternalStoreResponse">
    <wsdl:part name="parameters" element="ns:getProfileFieldsForInternalStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="isAddProfileEnabledForDomainRequest">
    <wsdl:part name="parameters" element="ns:isAddProfileEnabledForDomain"/>
  </wsdl:message>
  <wsdl:message name="isAddProfileEnabledForDomainResponse">
    <wsdl:part name="parameters" element="ns:isAddProfileEnabledForDomainResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserProfilesRequest">
    <wsdl:part name="parameters" element="ns:getUserProfiles"/>
  </wsdl:message>
  <wsdl:message name="getUserProfilesResponse">
    <wsdl:part name="parameters" element="ns:getUserProfilesResponse"/>
  </wsdl:message>
  <wsdl:message name="isAddProfileEnabledRequest">
    <wsdl:part name="parameters" element="ns:isAddProfileEnabled"/>
  </wsdl:message>
  <wsdl:message name="isAddProfileEnabledResponse">
    <wsdl:part name="parameters" element="ns:isAddProfileEnabledResponse"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyUserStoreRequest">
    <wsdl:part name="parameters" element="ns:isReadOnlyUserStore"/>
  </wsdl:message>
  <wsdl:message name="isReadOnlyUserStoreResponse">
    <wsdl:part name="parameters" element="ns:isReadOnlyUserStoreResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserProfileRequest">
    <wsdl:part name="parameters" element="ns:getUserProfile"/>
  </wsdl:message>
  <wsdl:message name="getUserProfileResponse">
    <wsdl:part name="parameters" element="ns:getUserProfileResponse"/>
  </wsdl:message>
  <wsdl:message name="setUserProfileRequest">
    <wsdl:part name="parameters" element="ns:setUserProfile"/>
  </wsdl:message>
  <wsdl:message name="associateIDRequest">
    <wsdl:part name="parameters" element="ns:associateID"/>
  </wsdl:message>
  <wsdl:message name="deleteUserProfileRequest">
    <wsdl:part name="parameters" element="ns:deleteUserProfile"/>
  </wsdl:message>
  <wsdl:message name="getNameAssociatedWithRequest">
    <wsdl:part name="parameters" element="ns:getNameAssociatedWith"/>
  </wsdl:message>
  <wsdl:message name="getNameAssociatedWithResponse">
    <wsdl:part name="parameters" element="ns:getNameAssociatedWithResponse"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedIDsRequest">
    <wsdl:part name="parameters" element="ns:getAssociatedIDs"/>
  </wsdl:message>
  <wsdl:message name="getAssociatedIDsResponse">
    <wsdl:part name="parameters" element="ns:getAssociatedIDsResponse"/>
  </wsdl:message>
  <wsdl:message name="getInstanceRequest">
    <wsdl:part name="parameters" element="ns:getInstance"/>
  </wsdl:message>
  <wsdl:message name="getInstanceResponse">
    <wsdl:part name="parameters" element="ns:getInstanceResponse"/>
  </wsdl:message>
  <wsdl:portType name="UserProfileMgtServicePortType">
    <wsdl:operation name="removeAssociateID">
      <wsdl:input message="ns:removeAssociateIDRequest" wsaw:Action="urn:removeAssociateID"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:removeAssociateIDUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getProfileFieldsForInternalStore">
      <wsdl:input message="ns:getProfileFieldsForInternalStoreRequest" wsaw:Action="urn:getProfileFieldsForInternalStore"/>
      <wsdl:output message="ns:getProfileFieldsForInternalStoreResponse" wsaw:Action="urn:getProfileFieldsForInternalStoreResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getProfileFieldsForInternalStoreUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabledForDomain">
      <wsdl:input message="ns:isAddProfileEnabledForDomainRequest" wsaw:Action="urn:isAddProfileEnabledForDomain"/>
      <wsdl:output message="ns:isAddProfileEnabledForDomainResponse" wsaw:Action="urn:isAddProfileEnabledForDomainResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:isAddProfileEnabledForDomainUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserProfiles">
      <wsdl:input message="ns:getUserProfilesRequest" wsaw:Action="urn:getUserProfiles"/>
      <wsdl:output message="ns:getUserProfilesResponse" wsaw:Action="urn:getUserProfilesResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getUserProfilesUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabled">
      <wsdl:input message="ns:isAddProfileEnabledRequest" wsaw:Action="urn:isAddProfileEnabled"/>
      <wsdl:output message="ns:isAddProfileEnabledResponse" wsaw:Action="urn:isAddProfileEnabledResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:isAddProfileEnabledUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <wsdl:input message="ns:isReadOnlyUserStoreRequest" wsaw:Action="urn:isReadOnlyUserStore"/>
      <wsdl:output message="ns:isReadOnlyUserStoreResponse" wsaw:Action="urn:isReadOnlyUserStoreResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:isReadOnlyUserStoreUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <wsdl:input message="ns:getUserProfileRequest" wsaw:Action="urn:getUserProfile"/>
      <wsdl:output message="ns:getUserProfileResponse" wsaw:Action="urn:getUserProfileResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getUserProfileUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="setUserProfile">
      <wsdl:input message="ns:setUserProfileRequest" wsaw:Action="urn:setUserProfile"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:setUserProfileUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="associateID">
      <wsdl:input message="ns:associateIDRequest" wsaw:Action="urn:associateID"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:associateIDUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserProfile">
      <wsdl:input message="ns:deleteUserProfileRequest" wsaw:Action="urn:deleteUserProfile"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:deleteUserProfileUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getNameAssociatedWith">
      <wsdl:input message="ns:getNameAssociatedWithRequest" wsaw:Action="urn:getNameAssociatedWith"/>
      <wsdl:output message="ns:getNameAssociatedWithResponse" wsaw:Action="urn:getNameAssociatedWithResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getNameAssociatedWithUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedIDs">
      <wsdl:input message="ns:getAssociatedIDsRequest" wsaw:Action="urn:getAssociatedIDs"/>
      <wsdl:output message="ns:getAssociatedIDsResponse" wsaw:Action="urn:getAssociatedIDsResponse"/>
      <wsdl:fault message="ns:UserProfileMgtServiceUserProfileException" name="UserProfileMgtServiceUserProfileException" wsaw:Action="urn:getAssociatedIDsUserProfileMgtServiceUserProfileException"/>
    </wsdl:operation>
    <wsdl:operation name="getInstance">
      <wsdl:input message="ns:getInstanceRequest" wsaw:Action="urn:getInstance"/>
      <wsdl:output message="ns:getInstanceResponse" wsaw:Action="urn:getInstanceResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserProfileMgtServiceSoap11Binding" type="ns:UserProfileMgtServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeAssociateID">
      <soap:operation soapAction="urn:removeAssociateID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProfileFieldsForInternalStore">
      <soap:operation soapAction="urn:getProfileFieldsForInternalStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfiles">
      <soap:operation soapAction="urn:getUserProfiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabledForDomain">
      <soap:operation soapAction="urn:isAddProfileEnabledForDomain" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabled">
      <soap:operation soapAction="urn:isAddProfileEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <soap:operation soapAction="urn:isReadOnlyUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <soap:operation soapAction="urn:getUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserProfile">
      <soap:operation soapAction="urn:setUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateID">
      <soap:operation soapAction="urn:associateID" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserProfile">
      <soap:operation soapAction="urn:deleteUserProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNameAssociatedWith">
      <soap:operation soapAction="urn:getNameAssociatedWith" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedIDs">
      <soap:operation soapAction="urn:getAssociatedIDs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstance">
      <soap:operation soapAction="urn:getInstance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserProfileMgtServiceSoap12Binding" type="ns:UserProfileMgtServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="removeAssociateID">
      <soap12:operation soapAction="urn:removeAssociateID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProfileFieldsForInternalStore">
      <soap12:operation soapAction="urn:getProfileFieldsForInternalStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfiles">
      <soap12:operation soapAction="urn:getUserProfiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabledForDomain">
      <soap12:operation soapAction="urn:isAddProfileEnabledForDomain" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabled">
      <soap12:operation soapAction="urn:isAddProfileEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <soap12:operation soapAction="urn:isReadOnlyUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <soap12:operation soapAction="urn:getUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setUserProfile">
      <soap12:operation soapAction="urn:setUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="associateID">
      <soap12:operation soapAction="urn:associateID" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserProfile">
      <soap12:operation soapAction="urn:deleteUserProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNameAssociatedWith">
      <soap12:operation soapAction="urn:getNameAssociatedWith" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedIDs">
      <soap12:operation soapAction="urn:getAssociatedIDs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserProfileMgtServiceUserProfileException">
        <soap12:fault use="literal" name="UserProfileMgtServiceUserProfileException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstance">
      <soap12:operation soapAction="urn:getInstance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserProfileMgtServiceHttpBinding" type="ns:UserProfileMgtServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="removeAssociateID">
      <http:operation location="removeAssociateID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getProfileFieldsForInternalStore">
      <http:operation location="getProfileFieldsForInternalStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserProfiles">
      <http:operation location="getUserProfiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabledForDomain">
      <http:operation location="isAddProfileEnabledForDomain"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isAddProfileEnabled">
      <http:operation location="isAddProfileEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isReadOnlyUserStore">
      <http:operation location="isReadOnlyUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserProfile">
      <http:operation location="getUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setUserProfile">
      <http:operation location="setUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="associateID">
      <http:operation location="associateID"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteUserProfile">
      <http:operation location="deleteUserProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getNameAssociatedWith">
      <http:operation location="getNameAssociatedWith"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAssociatedIDs">
      <http:operation location="getAssociatedIDs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInstance">
      <http:operation location="getInstance"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserProfileMgtService">
    <wsdl:port name="UserProfileMgtServiceHttpsSoap11Endpoint" binding="ns:UserProfileMgtServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserProfileMgtServiceHttpsSoap12Endpoint" binding="ns:UserProfileMgtServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserProfileMgtServiceHttpsEndpoint" binding="ns:UserProfileMgtServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserProfileMgtService.UserProfileMgtServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="fa41b779-0bc5-4931-8203-a0bebeff2a00" isOneWay="false" action="urn:associateID" name="associateID" bindingOperationName="associateID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e8f870fc-52f7-4cae-a326-9eb5fc544e87" isOneWay="false" action="urn:deleteUserProfile" name="deleteUserProfile" bindingOperationName="deleteUserProfile" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4aad24ed-b78c-46e3-8eb2-f6cc485aa9eb" isOneWay="false" action="urn:getAssociatedIDs" name="getAssociatedIDs" bindingOperationName="getAssociatedIDs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="92f7e504-4642-4f90-906a-54077109de3a" isOneWay="false" action="urn:getInstance" name="getInstance" bindingOperationName="getInstance" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0bd01426-285d-4e0e-8f4c-84328f04d87a" isOneWay="false" action="urn:getNameAssociatedWith" name="getNameAssociatedWith" bindingOperationName="getNameAssociatedWith" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="62207605-f593-4238-8909-5bd7ae33dde7" isOneWay="false" action="urn:getProfileFieldsForInternalStore" name="getProfileFieldsForInternalStore" bindingOperationName="getProfileFieldsForInternalStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="40ad7e9a-7d3c-482b-84eb-04c01580eef3" isOneWay="false" action="urn:getUserProfile" name="getUserProfile" bindingOperationName="getUserProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="23b9c0be-8b56-428a-889c-adeeea6098e2" isOneWay="false" action="urn:getUserProfiles" name="getUserProfiles" bindingOperationName="getUserProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="db9edfcf-0b91-4b17-96db-3aa31dd74918" isOneWay="false" action="urn:isAddProfileEnabled" name="isAddProfileEnabled" bindingOperationName="isAddProfileEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e4facd7-4a50-44fe-bd4b-1ee4f2861881" isOneWay="false" action="urn:isAddProfileEnabledForDomain" name="isAddProfileEnabledForDomain" bindingOperationName="isAddProfileEnabledForDomain" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="de59a17f-7632-49c2-a88f-675d9d7e1c22" isOneWay="false" action="urn:isReadOnlyUserStore" name="isReadOnlyUserStore" bindingOperationName="isReadOnlyUserStore" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ee726a0c-33f6-4a6d-8841-85eeefca2f5d" isOneWay="false" action="urn:removeAssociateID" name="removeAssociateID" bindingOperationName="removeAssociateID" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="70275120-7628-4f04-b509-d5d4a05cb0b8" isOneWay="false" action="urn:setUserProfile" name="setUserProfile" bindingOperationName="setUserProfile" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e03518f1-ce3b-4081-b58b-a39583f69302" wsaVersion="NONE" name="UserStoreConfigAdminServiceSoap12Binding" type="wsdl" bindingName="{http://configuration.store.user.identity.carbon.wso2.org}UserStoreConfigAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserStoreConfigAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="3bafac9b-2334-4b74-820f-4e01ea8a1911" isOneWay="false" action="urn:addUserStore" name="addUserStore" bindingOperationName="addUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7845ddcf-7598-42d3-a072-f1801a486305" isOneWay="false" action="urn:changeUserStoreState" name="changeUserStoreState" bindingOperationName="changeUserStoreState" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b58bcc0c-fea4-4dda-9bfc-645d9380ff3c" isOneWay="false" action="urn:deleteUserStore" name="deleteUserStore" bindingOperationName="deleteUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fc650932-4667-4cbb-ae83-763811cb7e97" isOneWay="false" action="urn:deleteUserStoresSet" name="deleteUserStoresSet" bindingOperationName="deleteUserStoresSet" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e9fe3a26-be3b-4719-9059-f45d90c536b7" isOneWay="false" action="urn:editUserStore" name="editUserStore" bindingOperationName="editUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ea1d4f68-d2b6-4ce4-8f3d-a1b5dd046d11" isOneWay="false" action="urn:editUserStoreWithDomainName" name="editUserStoreWithDomainName" bindingOperationName="editUserStoreWithDomainName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dd2c94e3-fc51-4e0a-9ebe-48882473a439" isOneWay="false" action="urn:getAvailableUserStoreClasses" name="getAvailableUserStoreClasses" bindingOperationName="getAvailableUserStoreClasses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ee28cbce-5183-4322-95e4-d36d34f8698f" isOneWay="false" action="urn:getSecondaryRealmConfigurations" name="getSecondaryRealmConfigurations" bindingOperationName="getSecondaryRealmConfigurations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a6c2c88a-8af4-49c6-bf5e-7aab89956bae" isOneWay="false" action="urn:getUserStoreManagerProperties" name="getUserStoreManagerProperties" bindingOperationName="getUserStoreManagerProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b986aa74-a5fd-409d-8112-d2b10c4daea1" isOneWay="false" action="urn:testRDBMSConnection" name="testRDBMSConnection" bindingOperationName="testRDBMSConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3d596d2b-4aee-4195-ad22-b9841f0c0c42" wsaVersion="NONE" name="UserStoreConfigAdminServiceSoap11Binding" type="wsdl" bindingName="{http://configuration.store.user.identity.carbon.wso2.org}UserStoreConfigAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserStoreConfigAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserStoreConfigAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/UserStoreConfigAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://configuration.store.user.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2411="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:ax2413="http://api.user.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://configuration.store.user.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax2409="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>UserStoreConfigAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
      <xs:complexType name="Properties">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="advancedProperties" nillable="true" type="ax2413:Property"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="mandatoryProperties" nillable="true" type="ax2413:Property"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="optionalProperties" nillable="true" type="ax2413:Property"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Property">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="childProperties" nillable="true" type="ax2413:Property"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityUserStoreMgtException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2410="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:ax2412="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd" xmlns:ax2414="http://api.user.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://utils.configuration.store.user.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
      <xs:element name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityUserStoreMgtException" nillable="true" type="ax2410:IdentityUserStoreMgtException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecondaryRealmConfigurations">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getSecondaryRealmConfigurationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2411:UserStoreDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvailableUserStoreClasses">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAvailableUserStoreClassesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserStoreManagerProperties">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserStoreManagerPropertiesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2413:Properties"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userStoreDTO" nillable="true" type="ax2411:UserStoreDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="editUserStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userStoreDTO" nillable="true" type="ax2411:UserStoreDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="editUserStoreWithDomainName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="previousDomainName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="userStoreDTO" nillable="true" type="ax2411:UserStoreDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserStore">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteUserStoresSet">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="domains" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="UserStoreConfigAdminServiceTransformerConfigurationException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="TransformerConfigurationException" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeUserStoreState">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domain" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="isDisable" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="testRDBMSConnection">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="domainName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="driverName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="connectionURL" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="connectionPassword" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="messageID" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="testRDBMSConnectionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd">
      <xs:complexType name="UserStoreDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="className" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="disabled" nillable="true" type="xs:boolean"/>
          <xs:element minOccurs="0" name="domainId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="properties" nillable="true" type="ax2411:PropertyDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PropertyDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAvailableUserStoreClassesRequest">
    <wsdl:part name="parameters" element="ns1:getAvailableUserStoreClasses"/>
  </wsdl:message>
  <wsdl:message name="getAvailableUserStoreClassesResponse">
    <wsdl:part name="parameters" element="ns1:getAvailableUserStoreClassesResponse"/>
  </wsdl:message>
  <wsdl:message name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
    <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
  </wsdl:message>
  <wsdl:message name="changeUserStoreStateRequest">
    <wsdl:part name="parameters" element="ns1:changeUserStoreState"/>
  </wsdl:message>
  <wsdl:message name="UserStoreConfigAdminServiceTransformerConfigurationException">
    <wsdl:part name="parameters" element="ns1:UserStoreConfigAdminServiceTransformerConfigurationException"/>
  </wsdl:message>
  <wsdl:message name="deleteUserStoreRequest">
    <wsdl:part name="parameters" element="ns1:deleteUserStore"/>
  </wsdl:message>
  <wsdl:message name="getSecondaryRealmConfigurationsRequest">
    <wsdl:part name="parameters" element="ns1:getSecondaryRealmConfigurations"/>
  </wsdl:message>
  <wsdl:message name="getSecondaryRealmConfigurationsResponse">
    <wsdl:part name="parameters" element="ns1:getSecondaryRealmConfigurationsResponse"/>
  </wsdl:message>
  <wsdl:message name="editUserStoreRequest">
    <wsdl:part name="parameters" element="ns1:editUserStore"/>
  </wsdl:message>
  <wsdl:message name="editUserStoreWithDomainNameRequest">
    <wsdl:part name="parameters" element="ns1:editUserStoreWithDomainName"/>
  </wsdl:message>
  <wsdl:message name="testRDBMSConnectionRequest">
    <wsdl:part name="parameters" element="ns1:testRDBMSConnection"/>
  </wsdl:message>
  <wsdl:message name="testRDBMSConnectionResponse">
    <wsdl:part name="parameters" element="ns1:testRDBMSConnectionResponse"/>
  </wsdl:message>
  <wsdl:message name="getUserStoreManagerPropertiesRequest">
    <wsdl:part name="parameters" element="ns1:getUserStoreManagerProperties"/>
  </wsdl:message>
  <wsdl:message name="getUserStoreManagerPropertiesResponse">
    <wsdl:part name="parameters" element="ns1:getUserStoreManagerPropertiesResponse"/>
  </wsdl:message>
  <wsdl:message name="addUserStoreRequest">
    <wsdl:part name="parameters" element="ns1:addUserStore"/>
  </wsdl:message>
  <wsdl:message name="deleteUserStoresSetRequest">
    <wsdl:part name="parameters" element="ns1:deleteUserStoresSet"/>
  </wsdl:message>
  <wsdl:portType name="UserStoreConfigAdminServicePortType">
    <wsdl:operation name="getAvailableUserStoreClasses">
      <wsdl:input message="tns:getAvailableUserStoreClassesRequest" wsaw:Action="urn:getAvailableUserStoreClasses"/>
      <wsdl:output message="tns:getAvailableUserStoreClassesResponse" wsaw:Action="urn:getAvailableUserStoreClassesResponse"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:getAvailableUserStoreClassesUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="changeUserStoreState">
      <wsdl:input message="tns:changeUserStoreStateRequest" wsaw:Action="urn:changeUserStoreState"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:changeUserStoreStateUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceTransformerConfigurationException" name="UserStoreConfigAdminServiceTransformerConfigurationException" wsaw:Action="urn:changeUserStoreStateUserStoreConfigAdminServiceTransformerConfigurationException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStore">
      <wsdl:input message="tns:deleteUserStoreRequest" wsaw:Action="urn:deleteUserStore"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:deleteUserStoreUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="getSecondaryRealmConfigurations">
      <wsdl:input message="tns:getSecondaryRealmConfigurationsRequest" wsaw:Action="urn:getSecondaryRealmConfigurations"/>
      <wsdl:output message="tns:getSecondaryRealmConfigurationsResponse" wsaw:Action="urn:getSecondaryRealmConfigurationsResponse"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:getSecondaryRealmConfigurationsUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="editUserStore">
      <wsdl:input message="tns:editUserStoreRequest" wsaw:Action="urn:editUserStore"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:editUserStoreUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="editUserStoreWithDomainName">
      <wsdl:input message="tns:editUserStoreWithDomainNameRequest" wsaw:Action="urn:editUserStoreWithDomainName"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:editUserStoreWithDomainNameUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="testRDBMSConnection">
      <wsdl:input message="tns:testRDBMSConnectionRequest" wsaw:Action="urn:testRDBMSConnection"/>
      <wsdl:output message="tns:testRDBMSConnectionResponse" wsaw:Action="urn:testRDBMSConnectionResponse"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:testRDBMSConnectionUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserStoreManagerProperties">
      <wsdl:input message="tns:getUserStoreManagerPropertiesRequest" wsaw:Action="urn:getUserStoreManagerProperties"/>
      <wsdl:output message="tns:getUserStoreManagerPropertiesResponse" wsaw:Action="urn:getUserStoreManagerPropertiesResponse"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:getUserStoreManagerPropertiesUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserStore">
      <wsdl:input message="tns:addUserStoreRequest" wsaw:Action="urn:addUserStore"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:addUserStoreUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStoresSet">
      <wsdl:input message="tns:deleteUserStoresSetRequest" wsaw:Action="urn:deleteUserStoresSet"/>
      <wsdl:fault message="tns:UserStoreConfigAdminServiceIdentityUserStoreMgtException" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException" wsaw:Action="urn:deleteUserStoresSetUserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserStoreConfigAdminServiceSoap11Binding" type="tns:UserStoreConfigAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAvailableUserStoreClasses">
      <soap:operation soapAction="urn:getAvailableUserStoreClasses" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserStoreState">
      <soap:operation soapAction="urn:changeUserStoreState" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceTransformerConfigurationException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceTransformerConfigurationException"/>
      </wsdl:fault>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStore">
      <soap:operation soapAction="urn:deleteUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecondaryRealmConfigurations">
      <soap:operation soapAction="urn:getSecondaryRealmConfigurations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserStore">
      <soap:operation soapAction="urn:editUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserStoreWithDomainName">
      <soap:operation soapAction="urn:editUserStoreWithDomainName" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testRDBMSConnection">
      <soap:operation soapAction="urn:testRDBMSConnection" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserStoreManagerProperties">
      <soap:operation soapAction="urn:getUserStoreManagerProperties" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserStore">
      <soap:operation soapAction="urn:addUserStore" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStoresSet">
      <soap:operation soapAction="urn:deleteUserStoresSet" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserStoreConfigAdminServiceSoap12Binding" type="tns:UserStoreConfigAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getAvailableUserStoreClasses">
      <soap12:operation soapAction="urn:getAvailableUserStoreClasses" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserStoreState">
      <soap12:operation soapAction="urn:changeUserStoreState" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceTransformerConfigurationException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceTransformerConfigurationException"/>
      </wsdl:fault>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStore">
      <soap12:operation soapAction="urn:deleteUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSecondaryRealmConfigurations">
      <soap12:operation soapAction="urn:getSecondaryRealmConfigurations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserStore">
      <soap12:operation soapAction="urn:editUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserStoreWithDomainName">
      <soap12:operation soapAction="urn:editUserStoreWithDomainName" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testRDBMSConnection">
      <soap12:operation soapAction="urn:testRDBMSConnection" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserStoreManagerProperties">
      <soap12:operation soapAction="urn:getUserStoreManagerProperties" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserStore">
      <soap12:operation soapAction="urn:addUserStore" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStoresSet">
      <soap12:operation soapAction="urn:deleteUserStoresSet" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="UserStoreConfigAdminServiceIdentityUserStoreMgtException">
        <soap12:fault use="literal" name="UserStoreConfigAdminServiceIdentityUserStoreMgtException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="UserStoreConfigAdminServiceHttpBinding" type="tns:UserStoreConfigAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getAvailableUserStoreClasses">
      <http:operation location="getAvailableUserStoreClasses"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeUserStoreState">
      <http:operation location="changeUserStoreState"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStore">
      <http:operation location="deleteUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getSecondaryRealmConfigurations">
      <http:operation location="getSecondaryRealmConfigurations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editUserStore">
      <http:operation location="editUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="editUserStoreWithDomainName">
      <http:operation location="editUserStoreWithDomainName"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="testRDBMSConnection">
      <http:operation location="testRDBMSConnection"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserStoreManagerProperties">
      <http:operation location="getUserStoreManagerProperties"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserStore">
      <http:operation location="addUserStore"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteUserStoresSet">
      <http:operation location="deleteUserStoresSet"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserStoreConfigAdminService">
    <wsdl:port name="UserStoreConfigAdminServiceHttpsSoap11Endpoint" binding="tns:UserStoreConfigAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserStoreConfigAdminServiceHttpsSoap12Endpoint" binding="tns:UserStoreConfigAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="UserStoreConfigAdminServiceHttpsEndpoint" binding="tns:UserStoreConfigAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/UserStoreConfigAdminService.UserStoreConfigAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="05e41c89-6f35-4e12-9956-2e4f540fc3d3" isOneWay="false" action="urn:addUserStore" name="addUserStore" bindingOperationName="addUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="92e32e75-6e16-4204-af85-c0c1a94d1c2a" isOneWay="false" action="urn:changeUserStoreState" name="changeUserStoreState" bindingOperationName="changeUserStoreState" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="88ce1433-f570-4dc6-bd6b-1adef02eca1e" isOneWay="false" action="urn:deleteUserStore" name="deleteUserStore" bindingOperationName="deleteUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d1d69117-f18b-4def-a266-fa96c5e2f94a" isOneWay="false" action="urn:deleteUserStoresSet" name="deleteUserStoresSet" bindingOperationName="deleteUserStoresSet" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="21b6d9be-1c75-4e09-9a0c-733e39252d70" isOneWay="false" action="urn:editUserStore" name="editUserStore" bindingOperationName="editUserStore" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4dc98abb-bb22-45fc-8198-c8290c6b7089" isOneWay="false" action="urn:editUserStoreWithDomainName" name="editUserStoreWithDomainName" bindingOperationName="editUserStoreWithDomainName" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4d42e330-d66c-4367-97f2-6259a3666881" isOneWay="false" action="urn:getAvailableUserStoreClasses" name="getAvailableUserStoreClasses" bindingOperationName="getAvailableUserStoreClasses" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="34f7a2f3-b73a-4b2c-96a2-a0e2109b11f4" isOneWay="false" action="urn:getSecondaryRealmConfigurations" name="getSecondaryRealmConfigurations" bindingOperationName="getSecondaryRealmConfigurations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="79f9b098-cb2d-44c3-85f0-4aa6855f99cc" isOneWay="false" action="urn:getUserStoreManagerProperties" name="getUserStoreManagerProperties" bindingOperationName="getUserStoreManagerProperties" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="47d79ff9-8f4d-4fd8-85dc-53a08e4c15df" isOneWay="false" action="urn:testRDBMSConnection" name="testRDBMSConnection" bindingOperationName="testRDBMSConnection" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="95458a82-9ac7-45bf-bbde-5c37b471b5a6" wsaVersion="NONE" name="WebappAdminSoap12Binding" type="wsdl" bindingName="{http://mgt.webapp.carbon.wso2.org}WebappAdminSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WebappAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/WebappAdmin.WebappAdminHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="57c1d1c1-70b7-48d0-ad99-e61dcfa4c8b5" isOneWay="false" action="urn:changeDefaultAppVersion" name="changeDefaultAppVersion" bindingOperationName="changeDefaultAppVersion" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c219fe8a-fd44-4e55-8747-aa1804925a8c" isOneWay="false" action="urn:deleteAllFaultyWebapps" name="deleteAllFaultyWebapps" bindingOperationName="deleteAllFaultyWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4b96213c-ace5-43fc-a2cc-edd0e12918dc" isOneWay="false" action="urn:deleteAllStartedWebapps" name="deleteAllStartedWebapps" bindingOperationName="deleteAllStartedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="03f2eaf9-dd43-4ff4-9486-7572c7f764f9" isOneWay="false" action="urn:deleteAllStoppedWebapps" name="deleteAllStoppedWebapps" bindingOperationName="deleteAllStoppedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ed48d447-7ac3-4c3d-99ea-bd7f22d4e94e" isOneWay="false" action="urn:deleteAllWebApps" name="deleteAllWebApps" bindingOperationName="deleteAllWebApps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2baa5361-1a8c-4e25-9ccf-a5e350ef7a88" isOneWay="false" action="urn:deleteFaultyWebapps" name="deleteFaultyWebapps" bindingOperationName="deleteFaultyWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3cd8499a-1838-4692-8f7d-1c1802a3e6d0" isOneWay="false" action="urn:deleteStartedWebapps" name="deleteStartedWebapps" bindingOperationName="deleteStartedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9e218d58-0181-42d5-8e92-325d0ad2d214" isOneWay="false" action="urn:deleteStoppedWebapps" name="deleteStoppedWebapps" bindingOperationName="deleteStoppedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0b15ff40-4009-4fd1-a814-8a52f3426822" isOneWay="false" action="urn:downloadWarFileHandler" name="downloadWarFileHandler" bindingOperationName="downloadWarFileHandler" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c9e07e4c-323f-4654-aa03-c88e0586eb9d" isOneWay="false" action="urn:expireAllSessions" name="expireAllSessions" bindingOperationName="expireAllSessions" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1ecd1812-38d2-44ee-a89c-f2a2cfb905d2" isOneWay="false" action="urn:expireSessions" name="expireSessions" bindingOperationName="expireSessions" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="99ad2fb4-a5c4-4af9-8428-ad1ea0c1f4a7" isOneWay="false" action="urn:expireSessionsInAllWebapps" name="expireSessionsInAllWebapps" bindingOperationName="expireSessionsInAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="37c370ba-d882-4245-ae64-b54257a900da" isOneWay="false" action="urn:expireSessionsInWebapp" name="expireSessionsInWebapp" bindingOperationName="expireSessionsInWebapp" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e64f1751-bd4e-4ec7-806a-96481796176c" isOneWay="false" action="urn:expireSessionsInWebapps" name="expireSessionsInWebapps" bindingOperationName="expireSessionsInWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8c06b1c5-ea5b-4da0-9301-e429eee50557" isOneWay="false" action="urn:getActiveSessions" name="getActiveSessions" bindingOperationName="getActiveSessions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="695c9a16-87e2-4724-b1db-72b7bb8b273a" isOneWay="false" action="urn:getBamConfiguration" name="getBamConfiguration" bindingOperationName="getBamConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9ca34a69-dcec-4fa4-8156-41925d835e8e" isOneWay="false" action="urn:getPagedFaultyWebappsSummary" name="getPagedFaultyWebappsSummary" bindingOperationName="getPagedFaultyWebappsSummary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="85752818-3f8a-48cc-81a7-8402323a0689" isOneWay="false" action="urn:getPagedWebappsSummary" name="getPagedWebappsSummary" bindingOperationName="getPagedWebappsSummary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="625616b9-0025-43c1-9667-62d800c80bb1" isOneWay="false" action="urn:getStartedWebapp" name="getStartedWebapp" bindingOperationName="getStartedWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="22e7b4de-bee8-4e6d-8d97-0c6c65ed130d" isOneWay="false" action="urn:getStoppedWebapp" name="getStoppedWebapp" bindingOperationName="getStoppedWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1a76a85f-f37d-4e16-a049-929db7dde650" isOneWay="false" action="urn:getVhostHolder" name="getVhostHolder" bindingOperationName="getVhostHolder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="663fac7f-a22a-4532-899f-9d138dda6585" isOneWay="false" action="urn:isDefaultVersionManagementEnabled" name="isDefaultVersionManagementEnabled" bindingOperationName="isDefaultVersionManagementEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3b1dee1c-816e-41bf-80cc-67df76614b7f" isOneWay="false" action="urn:isUnpackWARs" name="isUnpackWARs" bindingOperationName="isUnpackWARs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3c926e36-86f5-4fe9-9f37-9872ae7aa92b" isOneWay="false" action="urn:reloadAllWebapps" name="reloadAllWebapps" bindingOperationName="reloadAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0ead9c0c-3f66-494e-b521-46949d06cce1" isOneWay="false" action="urn:reloadWebapps" name="reloadWebapps" bindingOperationName="reloadWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8656b075-d3b0-49f1-829d-b80883347ff0" isOneWay="false" action="urn:setBamConfiguration" name="setBamConfiguration" bindingOperationName="setBamConfiguration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ab31aa92-cda3-4bf4-a177-241a82f00f13" isOneWay="false" action="urn:startAllWebapps" name="startAllWebapps" bindingOperationName="startAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5ca6367c-3696-4e8c-b87b-575d5530ef86" isOneWay="false" action="urn:startWebapps" name="startWebapps" bindingOperationName="startWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="abbd7f0c-f26c-41b1-bac5-83434f563a35" isOneWay="false" action="urn:stopAllWebapps" name="stopAllWebapps" bindingOperationName="stopAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="877c4feb-4d54-46c9-87b0-2d2b3c3f4051" isOneWay="false" action="urn:stopWebapps" name="stopWebapps" bindingOperationName="stopWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="734a1be6-6f0a-433a-b858-13b2a0e02720" isOneWay="false" action="urn:uploadWebapp" name="uploadWebapp" bindingOperationName="uploadWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1c52dfc3-e055-4e34-aa72-3f37d42267ab" wsaVersion="NONE" name="WebappAdminSoap11Binding" type="wsdl" bindingName="{http://mgt.webapp.carbon.wso2.org}WebappAdminSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WebappAdmin.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WebappAdmin.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WebappAdmin.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.webapp.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2702="http://mgt.webapp.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2704="http://metadata.persistence.core.carbon.wso2.org/xsd" xmlns:tns="http://mgt.webapp.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>WebappAdmin</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2705="http://metadata.persistence.core.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2703="http://mgt.webapp.carbon.wso2.org/xsd">
      <xs:import namespace="http://mgt.webapp.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://metadata.persistence.core.carbon.wso2.org/xsd"/>
      <xs:element name="isUnpackWARs">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isUnpackWARsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappUploadDataList" nillable="true" type="ax2702:WebappUploadData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="uploadWebappResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getActiveSessions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getActiveSessionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:SessionsWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPagedWebappsSummary">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappSearchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="webappState" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="webappType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPagedWebappsSummaryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:WebappsWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStartedWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStartedWebappResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:WebappMetadata"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStoppedWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStoppedWebappResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:WebappMetadata"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPagedFaultyWebappsSummary">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappSearchString" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="webappType" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="pageNumber" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPagedFaultyWebappsSummaryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:WebappsWrapper"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteStartedWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteStoppedWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteFaultyWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllWebApps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllStartedWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllStoppedWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAllFaultyWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadAllWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="reloadWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setBamConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBamConfiguration">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBamConfigurationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="stopAllWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="stopWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKeys" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="startAllWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="startWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKeys" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireSessionsInAllWebapps">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireSessionsInWebapps">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="webappKeySet" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireSessionsInWebapp">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="maxSessionLifetimeMillis" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireSessions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="sessionIDs" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="expireAllSessions">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadWarFileHandler">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="webappType" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="downloadWarFileHandlerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:base64Binary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="WebappAdminArtifactMetadataException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ArtifactMetadataException" nillable="true" type="ax2704:ArtifactMetadataException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeDefaultAppVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="appGroupName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isDefaultVersionManagementEnabled">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="isDefaultVersionManagementEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getVhostHolder">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getVhostHolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2702:VhostHolder"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://metadata.persistence.core.carbon.wso2.org/xsd">
      <xs:complexType name="ArtifactMetadataException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.webapp.carbon.wso2.org/xsd">
      <xs:complexType name="WebappUploadData">
        <xs:sequence>
          <xs:element minOccurs="0" name="dataHandler" nillable="true" type="xs:base64Binary"/>
          <xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SessionsWrapper">
        <xs:sequence>
          <xs:element minOccurs="0" name="numberOfActiveSessions" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sessions" nillable="true" type="ax2702:SessionMetadata"/>
          <xs:element minOccurs="0" name="webappFileName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SessionMetadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="authType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="creationTime" type="xs:long"/>
          <xs:element minOccurs="0" name="lastAccessedTime" type="xs:long"/>
          <xs:element minOccurs="0" name="maxInactiveInterval" type="xs:long"/>
          <xs:element minOccurs="0" name="sessionId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WebappsWrapper">
        <xs:sequence>
          <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="httpPort" type="xs:int"/>
          <xs:element minOccurs="0" name="httpsPort" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfCorrectWebapps" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfFaultyWebapps" type="xs:int"/>
          <xs:element minOccurs="0" name="numberOfPages" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="webapps" nillable="true" type="ax2702:VersionedWebappMetadata"/>
          <xs:element minOccurs="0" name="webappsDir" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionedWebappMetadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="appVersionRoot" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="versionGroups" nillable="true" type="ax2702:WebappMetadata"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WebappMetadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="CAppArtifact" type="xs:boolean"/>
          <xs:element minOccurs="0" name="appVersion" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="context" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="contextPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faultException" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="faulty" type="xs:boolean"/>
          <xs:element minOccurs="0" name="hostName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="lastModifiedTime" type="xs:long"/>
          <xs:element minOccurs="0" name="running" type="xs:boolean"/>
          <xs:element minOccurs="0" name="serviceListPath" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="servletContext" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="started" type="xs:boolean"/>
          <xs:element minOccurs="0" name="state" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="statistics" nillable="true" type="ax2702:WebappStatistics"/>
          <xs:element minOccurs="0" name="webappFile" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="webappKey" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="webappType" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WebappStatistics">
        <xs:sequence>
          <xs:element minOccurs="0" name="activeSessions" type="xs:int"/>
          <xs:element minOccurs="0" name="avgSessionLifetime" type="xs:int"/>
          <xs:element minOccurs="0" name="expiredSessions" type="xs:long"/>
          <xs:element minOccurs="0" name="maxActiveSessions" type="xs:int"/>
          <xs:element minOccurs="0" name="maxSessionInactivityInterval" type="xs:int"/>
          <xs:element minOccurs="0" name="maxSessionLifetime" type="xs:int"/>
          <xs:element minOccurs="0" name="rejectedSessions" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VhostHolder">
        <xs:sequence>
          <xs:element minOccurs="0" name="defaultHostName" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="vhosts" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="deleteStoppedWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteStoppedWebapps"/>
  </wsdl:message>
  <wsdl:message name="isDefaultVersionManagementEnabledRequest">
    <wsdl:part name="parameters" element="ns1:isDefaultVersionManagementEnabled"/>
  </wsdl:message>
  <wsdl:message name="isDefaultVersionManagementEnabledResponse">
    <wsdl:part name="parameters" element="ns1:isDefaultVersionManagementEnabledResponse"/>
  </wsdl:message>
  <wsdl:message name="stopAllWebappsRequest">
    <wsdl:part name="parameters" element="ns1:stopAllWebapps"/>
  </wsdl:message>
  <wsdl:message name="deleteAllFaultyWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllFaultyWebapps"/>
  </wsdl:message>
  <wsdl:message name="startAllWebappsRequest">
    <wsdl:part name="parameters" element="ns1:startAllWebapps"/>
  </wsdl:message>
  <wsdl:message name="deleteAllStartedWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllStartedWebapps"/>
  </wsdl:message>
  <wsdl:message name="getPagedFaultyWebappsSummaryRequest">
    <wsdl:part name="parameters" element="ns1:getPagedFaultyWebappsSummary"/>
  </wsdl:message>
  <wsdl:message name="getPagedFaultyWebappsSummaryResponse">
    <wsdl:part name="parameters" element="ns1:getPagedFaultyWebappsSummaryResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteAllStoppedWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllStoppedWebapps"/>
  </wsdl:message>
  <wsdl:message name="getPagedWebappsSummaryRequest">
    <wsdl:part name="parameters" element="ns1:getPagedWebappsSummary"/>
  </wsdl:message>
  <wsdl:message name="getPagedWebappsSummaryResponse">
    <wsdl:part name="parameters" element="ns1:getPagedWebappsSummaryResponse"/>
  </wsdl:message>
  <wsdl:message name="setBamConfigurationRequest">
    <wsdl:part name="parameters" element="ns1:setBamConfiguration"/>
  </wsdl:message>
  <wsdl:message name="getVhostHolderRequest">
    <wsdl:part name="parameters" element="ns1:getVhostHolder"/>
  </wsdl:message>
  <wsdl:message name="getVhostHolderResponse">
    <wsdl:part name="parameters" element="ns1:getVhostHolderResponse"/>
  </wsdl:message>
  <wsdl:message name="downloadWarFileHandlerRequest">
    <wsdl:part name="parameters" element="ns1:downloadWarFileHandler"/>
  </wsdl:message>
  <wsdl:message name="downloadWarFileHandlerResponse">
    <wsdl:part name="parameters" element="ns1:downloadWarFileHandlerResponse"/>
  </wsdl:message>
  <wsdl:message name="expireSessionsRequest">
    <wsdl:part name="parameters" element="ns1:expireSessions"/>
  </wsdl:message>
  <wsdl:message name="expireSessionsInWebappsRequest">
    <wsdl:part name="parameters" element="ns1:expireSessionsInWebapps"/>
  </wsdl:message>
  <wsdl:message name="reloadAllWebappsRequest">
    <wsdl:part name="parameters" element="ns1:reloadAllWebapps"/>
  </wsdl:message>
  <wsdl:message name="getStartedWebappRequest">
    <wsdl:part name="parameters" element="ns1:getStartedWebapp"/>
  </wsdl:message>
  <wsdl:message name="getStartedWebappResponse">
    <wsdl:part name="parameters" element="ns1:getStartedWebappResponse"/>
  </wsdl:message>
  <wsdl:message name="getStoppedWebappRequest">
    <wsdl:part name="parameters" element="ns1:getStoppedWebapp"/>
  </wsdl:message>
  <wsdl:message name="getStoppedWebappResponse">
    <wsdl:part name="parameters" element="ns1:getStoppedWebappResponse"/>
  </wsdl:message>
  <wsdl:message name="getBamConfigurationRequest">
    <wsdl:part name="parameters" element="ns1:getBamConfiguration"/>
  </wsdl:message>
  <wsdl:message name="getBamConfigurationResponse">
    <wsdl:part name="parameters" element="ns1:getBamConfigurationResponse"/>
  </wsdl:message>
  <wsdl:message name="startWebappsRequest">
    <wsdl:part name="parameters" element="ns1:startWebapps"/>
  </wsdl:message>
  <wsdl:message name="expireSessionsInWebappRequest">
    <wsdl:part name="parameters" element="ns1:expireSessionsInWebapp"/>
  </wsdl:message>
  <wsdl:message name="deleteStartedWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteStartedWebapps"/>
  </wsdl:message>
  <wsdl:message name="expireAllSessionsRequest">
    <wsdl:part name="parameters" element="ns1:expireAllSessions"/>
  </wsdl:message>
  <wsdl:message name="changeDefaultAppVersionRequest">
    <wsdl:part name="parameters" element="ns1:changeDefaultAppVersion"/>
  </wsdl:message>
  <wsdl:message name="WebappAdminArtifactMetadataException">
    <wsdl:part name="parameters" element="ns1:WebappAdminArtifactMetadataException"/>
  </wsdl:message>
  <wsdl:message name="uploadWebappRequest">
    <wsdl:part name="parameters" element="ns1:uploadWebapp"/>
  </wsdl:message>
  <wsdl:message name="uploadWebappResponse">
    <wsdl:part name="parameters" element="ns1:uploadWebappResponse"/>
  </wsdl:message>
  <wsdl:message name="getActiveSessionsRequest">
    <wsdl:part name="parameters" element="ns1:getActiveSessions"/>
  </wsdl:message>
  <wsdl:message name="getActiveSessionsResponse">
    <wsdl:part name="parameters" element="ns1:getActiveSessionsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteAllWebAppsRequest">
    <wsdl:part name="parameters" element="ns1:deleteAllWebApps"/>
  </wsdl:message>
  <wsdl:message name="expireSessionsInAllWebappsRequest">
    <wsdl:part name="parameters" element="ns1:expireSessionsInAllWebapps"/>
  </wsdl:message>
  <wsdl:message name="isUnpackWARsRequest">
    <wsdl:part name="parameters" element="ns1:isUnpackWARs"/>
  </wsdl:message>
  <wsdl:message name="isUnpackWARsResponse">
    <wsdl:part name="parameters" element="ns1:isUnpackWARsResponse"/>
  </wsdl:message>
  <wsdl:message name="stopWebappsRequest">
    <wsdl:part name="parameters" element="ns1:stopWebapps"/>
  </wsdl:message>
  <wsdl:message name="deleteFaultyWebappsRequest">
    <wsdl:part name="parameters" element="ns1:deleteFaultyWebapps"/>
  </wsdl:message>
  <wsdl:message name="reloadWebappsRequest">
    <wsdl:part name="parameters" element="ns1:reloadWebapps"/>
  </wsdl:message>
  <wsdl:portType name="WebappAdminPortType">
    <wsdl:operation name="deleteStoppedWebapps">
      <wsdl:input message="tns:deleteStoppedWebappsRequest" wsaw:Action="urn:deleteStoppedWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="isDefaultVersionManagementEnabled">
      <wsdl:input message="tns:isDefaultVersionManagementEnabledRequest" wsaw:Action="urn:isDefaultVersionManagementEnabled"/>
      <wsdl:output message="tns:isDefaultVersionManagementEnabledResponse" wsaw:Action="urn:isDefaultVersionManagementEnabledResponse"/>
    </wsdl:operation>
    <wsdl:operation name="stopAllWebapps">
      <wsdl:input message="tns:stopAllWebappsRequest" wsaw:Action="urn:stopAllWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyWebapps">
      <wsdl:input message="tns:deleteAllFaultyWebappsRequest" wsaw:Action="urn:deleteAllFaultyWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="startAllWebapps">
      <wsdl:input message="tns:startAllWebappsRequest" wsaw:Action="urn:startAllWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStartedWebapps">
      <wsdl:input message="tns:deleteAllStartedWebappsRequest" wsaw:Action="urn:deleteAllStartedWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="getPagedFaultyWebappsSummary">
      <wsdl:input message="tns:getPagedFaultyWebappsSummaryRequest" wsaw:Action="urn:getPagedFaultyWebappsSummary"/>
      <wsdl:output message="tns:getPagedFaultyWebappsSummaryResponse" wsaw:Action="urn:getPagedFaultyWebappsSummaryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStoppedWebapps">
      <wsdl:input message="tns:deleteAllStoppedWebappsRequest" wsaw:Action="urn:deleteAllStoppedWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="getPagedWebappsSummary">
      <wsdl:input message="tns:getPagedWebappsSummaryRequest" wsaw:Action="urn:getPagedWebappsSummary"/>
      <wsdl:output message="tns:getPagedWebappsSummaryResponse" wsaw:Action="urn:getPagedWebappsSummaryResponse"/>
    </wsdl:operation>
    <wsdl:operation name="setBamConfiguration">
      <wsdl:input message="tns:setBamConfigurationRequest" wsaw:Action="urn:setBamConfiguration"/>
    </wsdl:operation>
    <wsdl:operation name="getVhostHolder">
      <wsdl:input message="tns:getVhostHolderRequest" wsaw:Action="urn:getVhostHolder"/>
      <wsdl:output message="tns:getVhostHolderResponse" wsaw:Action="urn:getVhostHolderResponse"/>
    </wsdl:operation>
    <wsdl:operation name="downloadWarFileHandler">
      <wsdl:input message="tns:downloadWarFileHandlerRequest" wsaw:Action="urn:downloadWarFileHandler"/>
      <wsdl:output message="tns:downloadWarFileHandlerResponse" wsaw:Action="urn:downloadWarFileHandlerResponse"/>
    </wsdl:operation>
    <wsdl:operation name="expireSessions">
      <wsdl:input message="tns:expireSessionsRequest" wsaw:Action="urn:expireSessions"/>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapps">
      <wsdl:input message="tns:expireSessionsInWebappsRequest" wsaw:Action="urn:expireSessionsInWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="reloadAllWebapps">
      <wsdl:input message="tns:reloadAllWebappsRequest" wsaw:Action="urn:reloadAllWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="getStartedWebapp">
      <wsdl:input message="tns:getStartedWebappRequest" wsaw:Action="urn:getStartedWebapp"/>
      <wsdl:output message="tns:getStartedWebappResponse" wsaw:Action="urn:getStartedWebappResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getStoppedWebapp">
      <wsdl:input message="tns:getStoppedWebappRequest" wsaw:Action="urn:getStoppedWebapp"/>
      <wsdl:output message="tns:getStoppedWebappResponse" wsaw:Action="urn:getStoppedWebappResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getBamConfiguration">
      <wsdl:input message="tns:getBamConfigurationRequest" wsaw:Action="urn:getBamConfiguration"/>
      <wsdl:output message="tns:getBamConfigurationResponse" wsaw:Action="urn:getBamConfigurationResponse"/>
    </wsdl:operation>
    <wsdl:operation name="startWebapps">
      <wsdl:input message="tns:startWebappsRequest" wsaw:Action="urn:startWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapp">
      <wsdl:input message="tns:expireSessionsInWebappRequest" wsaw:Action="urn:expireSessionsInWebapp"/>
    </wsdl:operation>
    <wsdl:operation name="deleteStartedWebapps">
      <wsdl:input message="tns:deleteStartedWebappsRequest" wsaw:Action="urn:deleteStartedWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="expireAllSessions">
      <wsdl:input message="tns:expireAllSessionsRequest" wsaw:Action="urn:expireAllSessions"/>
    </wsdl:operation>
    <wsdl:operation name="changeDefaultAppVersion">
      <wsdl:input message="tns:changeDefaultAppVersionRequest" wsaw:Action="urn:changeDefaultAppVersion"/>
      <wsdl:fault message="tns:WebappAdminArtifactMetadataException" name="WebappAdminArtifactMetadataException" wsaw:Action="urn:changeDefaultAppVersionWebappAdminArtifactMetadataException"/>
    </wsdl:operation>
    <wsdl:operation name="uploadWebapp">
      <wsdl:input message="tns:uploadWebappRequest" wsaw:Action="urn:uploadWebapp"/>
      <wsdl:output message="tns:uploadWebappResponse" wsaw:Action="urn:uploadWebappResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <wsdl:input message="tns:getActiveSessionsRequest" wsaw:Action="urn:getActiveSessions"/>
      <wsdl:output message="tns:getActiveSessionsResponse" wsaw:Action="urn:getActiveSessionsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAllWebApps">
      <wsdl:input message="tns:deleteAllWebAppsRequest" wsaw:Action="urn:deleteAllWebApps"/>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInAllWebapps">
      <wsdl:input message="tns:expireSessionsInAllWebappsRequest" wsaw:Action="urn:expireSessionsInAllWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="isUnpackWARs">
      <wsdl:input message="tns:isUnpackWARsRequest" wsaw:Action="urn:isUnpackWARs"/>
      <wsdl:output message="tns:isUnpackWARsResponse" wsaw:Action="urn:isUnpackWARsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="stopWebapps">
      <wsdl:input message="tns:stopWebappsRequest" wsaw:Action="urn:stopWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyWebapps">
      <wsdl:input message="tns:deleteFaultyWebappsRequest" wsaw:Action="urn:deleteFaultyWebapps"/>
    </wsdl:operation>
    <wsdl:operation name="reloadWebapps">
      <wsdl:input message="tns:reloadWebappsRequest" wsaw:Action="urn:reloadWebapps"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WebappAdminSoap11Binding" type="tns:WebappAdminPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isDefaultVersionManagementEnabled">
      <soap:operation soapAction="urn:isDefaultVersionManagementEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteStoppedWebapps">
      <soap:operation soapAction="urn:deleteStoppedWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="stopAllWebapps">
      <soap:operation soapAction="urn:stopAllWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="startAllWebapps">
      <soap:operation soapAction="urn:startAllWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyWebapps">
      <soap:operation soapAction="urn:deleteAllFaultyWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStartedWebapps">
      <soap:operation soapAction="urn:deleteAllStartedWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedFaultyWebappsSummary">
      <soap:operation soapAction="urn:getPagedFaultyWebappsSummary" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStoppedWebapps">
      <soap:operation soapAction="urn:deleteAllStoppedWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedWebappsSummary">
      <soap:operation soapAction="urn:getPagedWebappsSummary" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBamConfiguration">
      <soap:operation soapAction="urn:setBamConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getVhostHolder">
      <soap:operation soapAction="urn:getVhostHolder" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadWarFileHandler">
      <soap:operation soapAction="urn:downloadWarFileHandler" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="expireSessions">
      <soap:operation soapAction="urn:expireSessions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapps">
      <soap:operation soapAction="urn:expireSessionsInWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadAllWebapps">
      <soap:operation soapAction="urn:reloadAllWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getStartedWebapp">
      <soap:operation soapAction="urn:getStartedWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStoppedWebapp">
      <soap:operation soapAction="urn:getStoppedWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBamConfiguration">
      <soap:operation soapAction="urn:getBamConfiguration" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startWebapps">
      <soap:operation soapAction="urn:startWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapp">
      <soap:operation soapAction="urn:expireSessionsInWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteStartedWebapps">
      <soap:operation soapAction="urn:deleteStartedWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireAllSessions">
      <soap:operation soapAction="urn:expireAllSessions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changeDefaultAppVersion">
      <soap:operation soapAction="urn:changeDefaultAppVersion" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="WebappAdminArtifactMetadataException">
        <soap:fault use="literal" name="WebappAdminArtifactMetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadWebapp">
      <soap:operation soapAction="urn:uploadWebapp" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <soap:operation soapAction="urn:getActiveSessions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllWebApps">
      <soap:operation soapAction="urn:deleteAllWebApps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInAllWebapps">
      <soap:operation soapAction="urn:expireSessionsInAllWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isUnpackWARs">
      <soap:operation soapAction="urn:isUnpackWARs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="stopWebapps">
      <soap:operation soapAction="urn:stopWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyWebapps">
      <soap:operation soapAction="urn:deleteFaultyWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadWebapps">
      <soap:operation soapAction="urn:reloadWebapps" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WebappAdminSoap12Binding" type="tns:WebappAdminPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="isDefaultVersionManagementEnabled">
      <soap12:operation soapAction="urn:isDefaultVersionManagementEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteStoppedWebapps">
      <soap12:operation soapAction="urn:deleteStoppedWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="stopAllWebapps">
      <soap12:operation soapAction="urn:stopAllWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="startAllWebapps">
      <soap12:operation soapAction="urn:startAllWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyWebapps">
      <soap12:operation soapAction="urn:deleteAllFaultyWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStartedWebapps">
      <soap12:operation soapAction="urn:deleteAllStartedWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedFaultyWebappsSummary">
      <soap12:operation soapAction="urn:getPagedFaultyWebappsSummary" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStoppedWebapps">
      <soap12:operation soapAction="urn:deleteAllStoppedWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedWebappsSummary">
      <soap12:operation soapAction="urn:getPagedWebappsSummary" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBamConfiguration">
      <soap12:operation soapAction="urn:setBamConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getVhostHolder">
      <soap12:operation soapAction="urn:getVhostHolder" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadWarFileHandler">
      <soap12:operation soapAction="urn:downloadWarFileHandler" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="expireSessions">
      <soap12:operation soapAction="urn:expireSessions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapps">
      <soap12:operation soapAction="urn:expireSessionsInWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadAllWebapps">
      <soap12:operation soapAction="urn:reloadAllWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getStartedWebapp">
      <soap12:operation soapAction="urn:getStartedWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStoppedWebapp">
      <soap12:operation soapAction="urn:getStoppedWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBamConfiguration">
      <soap12:operation soapAction="urn:getBamConfiguration" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startWebapps">
      <soap12:operation soapAction="urn:startWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapp">
      <soap12:operation soapAction="urn:expireSessionsInWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteStartedWebapps">
      <soap12:operation soapAction="urn:deleteStartedWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireAllSessions">
      <soap12:operation soapAction="urn:expireAllSessions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changeDefaultAppVersion">
      <soap12:operation soapAction="urn:changeDefaultAppVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="WebappAdminArtifactMetadataException">
        <soap12:fault use="literal" name="WebappAdminArtifactMetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="uploadWebapp">
      <soap12:operation soapAction="urn:uploadWebapp" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <soap12:operation soapAction="urn:getActiveSessions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllWebApps">
      <soap12:operation soapAction="urn:deleteAllWebApps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInAllWebapps">
      <soap12:operation soapAction="urn:expireSessionsInAllWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isUnpackWARs">
      <soap12:operation soapAction="urn:isUnpackWARs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="stopWebapps">
      <soap12:operation soapAction="urn:stopWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyWebapps">
      <soap12:operation soapAction="urn:deleteFaultyWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadWebapps">
      <soap12:operation soapAction="urn:reloadWebapps" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WebappAdminHttpBinding" type="tns:WebappAdminPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="isDefaultVersionManagementEnabled">
      <http:operation location="isDefaultVersionManagementEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteStoppedWebapps">
      <http:operation location="deleteStoppedWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="stopAllWebapps">
      <http:operation location="stopAllWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="startAllWebapps">
      <http:operation location="startAllWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllFaultyWebapps">
      <http:operation location="deleteAllFaultyWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStartedWebapps">
      <http:operation location="deleteAllStartedWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedFaultyWebappsSummary">
      <http:operation location="getPagedFaultyWebappsSummary"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllStoppedWebapps">
      <http:operation location="deleteAllStoppedWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPagedWebappsSummary">
      <http:operation location="getPagedWebappsSummary"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setBamConfiguration">
      <http:operation location="setBamConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getVhostHolder">
      <http:operation location="getVhostHolder"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="downloadWarFileHandler">
      <http:operation location="downloadWarFileHandler"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="expireSessions">
      <http:operation location="expireSessions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapps">
      <http:operation location="expireSessionsInWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadAllWebapps">
      <http:operation location="reloadAllWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getStartedWebapp">
      <http:operation location="getStartedWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStoppedWebapp">
      <http:operation location="getStoppedWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBamConfiguration">
      <http:operation location="getBamConfiguration"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startWebapps">
      <http:operation location="startWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInWebapp">
      <http:operation location="expireSessionsInWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteStartedWebapps">
      <http:operation location="deleteStartedWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireAllSessions">
      <http:operation location="expireAllSessions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changeDefaultAppVersion">
      <http:operation location="changeDefaultAppVersion"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="uploadWebapp">
      <http:operation location="uploadWebapp"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getActiveSessions">
      <http:operation location="getActiveSessions"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAllWebApps">
      <http:operation location="deleteAllWebApps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="expireSessionsInAllWebapps">
      <http:operation location="expireSessionsInAllWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isUnpackWARs">
      <http:operation location="isUnpackWARs"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="stopWebapps">
      <http:operation location="stopWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="deleteFaultyWebapps">
      <http:operation location="deleteFaultyWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="reloadWebapps">
      <http:operation location="reloadWebapps"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WebappAdmin">
    <wsdl:port name="WebappAdminHttpsSoap11Endpoint" binding="tns:WebappAdminSoap11Binding">
      <soap:address location="https://localhost:9443/services/WebappAdmin.WebappAdminHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WebappAdminHttpsSoap12Endpoint" binding="tns:WebappAdminSoap12Binding">
      <soap12:address location="https://localhost:9443/services/WebappAdmin.WebappAdminHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WebappAdminHttpsEndpoint" binding="tns:WebappAdminHttpBinding">
      <http:address location="https://localhost:9443/services/WebappAdmin.WebappAdminHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/WebappAdmin.WebappAdminHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="cc1e207a-6cec-4c89-a150-60cc074fe9db" isOneWay="false" action="urn:changeDefaultAppVersion" name="changeDefaultAppVersion" bindingOperationName="changeDefaultAppVersion" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a7c3f71a-c0ea-4076-8434-37fcad5267e1" isOneWay="false" action="urn:deleteAllFaultyWebapps" name="deleteAllFaultyWebapps" bindingOperationName="deleteAllFaultyWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2debdb77-2570-4a4e-a537-89f2bf9ce5cf" isOneWay="false" action="urn:deleteAllStartedWebapps" name="deleteAllStartedWebapps" bindingOperationName="deleteAllStartedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ad1e10c6-0cc3-484f-acb0-5bfb79ea4bc6" isOneWay="false" action="urn:deleteAllStoppedWebapps" name="deleteAllStoppedWebapps" bindingOperationName="deleteAllStoppedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9f53a6e6-7770-41ba-bfd6-427a36bc724e" isOneWay="false" action="urn:deleteAllWebApps" name="deleteAllWebApps" bindingOperationName="deleteAllWebApps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d3522b7d-63cf-4bc9-9e22-c9e2a77fb270" isOneWay="false" action="urn:deleteFaultyWebapps" name="deleteFaultyWebapps" bindingOperationName="deleteFaultyWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="78dd377f-a52f-4085-91ae-2418b5be65a8" isOneWay="false" action="urn:deleteStartedWebapps" name="deleteStartedWebapps" bindingOperationName="deleteStartedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="393847c9-b141-4460-b5f5-663cec1193c9" isOneWay="false" action="urn:deleteStoppedWebapps" name="deleteStoppedWebapps" bindingOperationName="deleteStoppedWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ffdd7a81-4ef6-48cb-8a46-def97a2d3c8d" isOneWay="false" action="urn:downloadWarFileHandler" name="downloadWarFileHandler" bindingOperationName="downloadWarFileHandler" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c7a9fc9d-2eb1-4636-9463-fc6910bd7d9d" isOneWay="false" action="urn:expireAllSessions" name="expireAllSessions" bindingOperationName="expireAllSessions" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2e127726-336a-463e-8c4f-2ca49716f123" isOneWay="false" action="urn:expireSessions" name="expireSessions" bindingOperationName="expireSessions" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ac17032c-c9fb-45d1-b168-904e251e7258" isOneWay="false" action="urn:expireSessionsInAllWebapps" name="expireSessionsInAllWebapps" bindingOperationName="expireSessionsInAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f6d20051-d6d0-440a-87d2-8fa04c458930" isOneWay="false" action="urn:expireSessionsInWebapp" name="expireSessionsInWebapp" bindingOperationName="expireSessionsInWebapp" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="42a48862-7663-486f-b42f-5d0c5c680e68" isOneWay="false" action="urn:expireSessionsInWebapps" name="expireSessionsInWebapps" bindingOperationName="expireSessionsInWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c6094467-a9e9-4e1b-a1bc-4b3a8825caad" isOneWay="false" action="urn:getActiveSessions" name="getActiveSessions" bindingOperationName="getActiveSessions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="55997281-8a93-4ec2-b08b-2e74f2617369" isOneWay="false" action="urn:getBamConfiguration" name="getBamConfiguration" bindingOperationName="getBamConfiguration" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d1ccff6a-799f-47b2-b35d-903142600ad3" isOneWay="false" action="urn:getPagedFaultyWebappsSummary" name="getPagedFaultyWebappsSummary" bindingOperationName="getPagedFaultyWebappsSummary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6de55e3f-ba8c-45bc-bfbf-27f17d39ef85" isOneWay="false" action="urn:getPagedWebappsSummary" name="getPagedWebappsSummary" bindingOperationName="getPagedWebappsSummary" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f0b4c0b6-f227-49d6-a629-4074137cc747" isOneWay="false" action="urn:getStartedWebapp" name="getStartedWebapp" bindingOperationName="getStartedWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7f3c9336-219a-4911-a332-611b255b4162" isOneWay="false" action="urn:getStoppedWebapp" name="getStoppedWebapp" bindingOperationName="getStoppedWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="54176380-cf85-4018-a3c4-502c07c6985a" isOneWay="false" action="urn:getVhostHolder" name="getVhostHolder" bindingOperationName="getVhostHolder" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5bfe79e2-1ad4-4f66-97e3-9c01888ba004" isOneWay="false" action="urn:isDefaultVersionManagementEnabled" name="isDefaultVersionManagementEnabled" bindingOperationName="isDefaultVersionManagementEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4007a9be-2db5-4790-b870-212b76fb4a17" isOneWay="false" action="urn:isUnpackWARs" name="isUnpackWARs" bindingOperationName="isUnpackWARs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="10df8f59-9c02-4cdf-84d5-3892049d2620" isOneWay="false" action="urn:reloadAllWebapps" name="reloadAllWebapps" bindingOperationName="reloadAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6762acdd-0a1a-4035-9b4d-50363fd3958e" isOneWay="false" action="urn:reloadWebapps" name="reloadWebapps" bindingOperationName="reloadWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="17c2f016-7208-46f7-b90e-f19c5c68d36c" isOneWay="false" action="urn:setBamConfiguration" name="setBamConfiguration" bindingOperationName="setBamConfiguration" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="946af608-5367-4cc4-b994-06ef87bd1ddc" isOneWay="false" action="urn:startAllWebapps" name="startAllWebapps" bindingOperationName="startAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="62ecfe33-2513-4905-aa73-8769549b2155" isOneWay="false" action="urn:startWebapps" name="startWebapps" bindingOperationName="startWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="96483651-6ec2-4b76-b996-786dff56ee47" isOneWay="false" action="urn:stopAllWebapps" name="stopAllWebapps" bindingOperationName="stopAllWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="87972957-be79-4be1-95c0-830c63624ad3" isOneWay="false" action="urn:stopWebapps" name="stopWebapps" bindingOperationName="stopWebapps" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8f6bd70d-074b-48dd-b4d4-274d847fdf1a" isOneWay="false" action="urn:uploadWebapp" name="uploadWebapp" bindingOperationName="uploadWebapp" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="59610885-272f-4a72-9de4-c5f7f186ad8c" wsaVersion="NONE" name="WorkflowAdminServiceSoap11Binding" type="wsdl" bindingName="{http://mgt.workflow.identity.carbon.wso2.org}WorkflowAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="0deee9e7-cfa8-456f-854d-2f0e077d54cc" isOneWay="false" action="urn:addAssociation" name="addAssociation" bindingOperationName="addAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="64475e5a-1e9d-4b88-b9de-fa036a20c234" isOneWay="false" action="urn:addWorkflow" name="addWorkflow" bindingOperationName="addWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1a5ce566-8b24-4f9e-81bb-629312c43300" isOneWay="false" action="urn:changeAssociationState" name="changeAssociationState" bindingOperationName="changeAssociationState" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="9a6f8c37-9b7b-4ea6-a688-9add866fa4c5" isOneWay="false" action="urn:deleteWorkflowRequest" name="deleteWorkflowRequest" bindingOperationName="deleteWorkflowRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="476f0327-bc48-48ef-9b23-00f63e7601d8" isOneWay="false" action="urn:getEvent" name="getEvent" bindingOperationName="getEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cd41eb02-c4cc-486b-8bc7-c74630c20c6c" isOneWay="false" action="urn:getRequestsCreatedByUser" name="getRequestsCreatedByUser" bindingOperationName="getRequestsCreatedByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="16b3ecd0-c667-4bcf-8182-0cd7307eb922" isOneWay="false" action="urn:getRequestsInFilter" name="getRequestsInFilter" bindingOperationName="getRequestsInFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="146c7ec2-5d11-4b85-bc40-e2621b0333d9" isOneWay="false" action="urn:getTemplate" name="getTemplate" bindingOperationName="getTemplate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2a044379-59fe-4eca-88db-e78a961489ca" isOneWay="false" action="urn:getWorkflow" name="getWorkflow" bindingOperationName="getWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3cd2c5c8-a1d3-4b73-b4ef-9b4c135cd302" isOneWay="false" action="urn:getWorkflowImpl" name="getWorkflowImpl" bindingOperationName="getWorkflowImpl" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bf398465-bb93-4b7f-9bf8-0bde20e7e214" isOneWay="false" action="urn:getWorkflowsOfRequest" name="getWorkflowsOfRequest" bindingOperationName="getWorkflowsOfRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b306105a-3b33-48e6-9b08-ba08c95a771b" isOneWay="false" action="urn:listAllAssociations" name="listAllAssociations" bindingOperationName="listAllAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="bfd70b60-7b86-419c-97b0-2a8716bc9589" isOneWay="false" action="urn:listAssociations" name="listAssociations" bindingOperationName="listAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="fa1bf950-7b3b-4670-a177-6ade2aef6657" isOneWay="false" action="urn:listTemplates" name="listTemplates" bindingOperationName="listTemplates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ce9dfb12-f216-47db-b0a5-533e484d4398" isOneWay="false" action="urn:listWorkflowEvents" name="listWorkflowEvents" bindingOperationName="listWorkflowEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="08d07562-4c7d-4b18-9781-b3768524718f" isOneWay="false" action="urn:listWorkflowImpls" name="listWorkflowImpls" bindingOperationName="listWorkflowImpls" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="1fe922a3-8e60-4290-9c13-bd7fd9509483" isOneWay="false" action="urn:listWorkflows" name="listWorkflows" bindingOperationName="listWorkflows" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6405294f-dcc7-43ce-a2f0-9d35fceec9d5" isOneWay="false" action="urn:removeAssociation" name="removeAssociation" bindingOperationName="removeAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="11d49322-9fa9-4ca8-b0f2-986ee7b9f348" isOneWay="false" action="urn:removeWorkflow" name="removeWorkflow" bindingOperationName="removeWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3624b07b-b9d5-4f72-89f0-f688c83caf08" wsaVersion="NONE" name="WorkflowAdminServiceSoap12Binding" type="wsdl" bindingName="{http://mgt.workflow.identity.carbon.wso2.org}WorkflowAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://mgt.workflow.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2423="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2424="http://base.identity.carbon.wso2.org/xsd" xmlns:ns="http://mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2427="http://dto.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2428="http://metadata.bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2430="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:tns="http://mgt.workflow.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>WorkflowAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2425="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="WorkflowException">
        <xs:complexContent>
          <xs:extension base="ax2424:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:complexType name="Parameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="holder" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="paramName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="paramValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="qName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkflowRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="createdAt" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="createdBy" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="requestId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="requestParams" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="updatedAt" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkflowRequestAssociation">
        <xs:sequence>
          <xs:element minOccurs="0" name="lastUpdatedTime" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://metadata.bean.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:complexType name="ParametersMetaData">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parameterMetaData" nillable="true" type="ax2428:ParameterMetaData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ParameterMetaData">
        <xs:sequence>
          <xs:element minOccurs="0" name="customInputType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="dataType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="defaultValue" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="displayName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="inputData" nillable="true" type="ax2428:InputData"/>
          <xs:element minOccurs="0" name="inputType" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="isInputDataRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="isRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="regExForValidate" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="validate" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InputData">
        <xs:sequence>
          <xs:element minOccurs="0" name="mapType" nillable="true" type="ax2428:MapType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MapType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="ax2428:Item"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Item">
        <xs:sequence>
          <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2429="http://metadata.bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2431="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://metadata.bean.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="WorkflowWizard">
        <xs:sequence>
          <xs:element minOccurs="0" name="template" nillable="true" type="ax2427:Template"/>
          <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="templateParameters" nillable="true" type="ax2430:Parameter"/>
          <xs:element minOccurs="0" name="workflowDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowImpl" nillable="true" type="ax2427:WorkflowImpl"/>
          <xs:element minOccurs="0" name="workflowImplId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="workflowImplParameters" nillable="true" type="ax2430:Parameter"/>
          <xs:element minOccurs="0" name="workflowName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Template">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="parametersMetaData" nillable="true" type="ax2428:ParametersMetaData"/>
          <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkflowImpl">
        <xs:sequence>
          <xs:element minOccurs="0" name="parametersMetaData" nillable="true" type="ax2428:ParametersMetaData"/>
          <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowImplId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowImplName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WorkflowEvent">
        <xs:sequence>
          <xs:element minOccurs="0" name="eventCategory" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventFriendlyName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventId" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="parameters" nillable="true" type="ax2430:Parameter"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Association">
        <xs:sequence>
          <xs:element minOccurs="0" name="associationId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="associationName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="condition" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="enabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="eventCategory" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="eventName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2432="http://dto.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2433="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2426="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:element name="WorkflowAdminServiceWorkflowException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="WorkflowException" nillable="true" type="ax2423:WorkflowException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflow">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowWizard"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowEvents">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listTemplates">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listTemplatesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:Template"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addAssociation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="associationName" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="eventId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="condition" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeAssociation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="associationId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTemplate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getTemplateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2432:Template"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowImpl">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="implementationId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowImplResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowImpl"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEvent">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="eventId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getEventResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowEvent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addWorkflow">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="workflow" nillable="true" type="ax2432:WorkflowWizard"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowImpls">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowImplsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowImpl"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="changeAssociationState">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="associationId" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="isEnable" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflows">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listWorkflowsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:WorkflowWizard"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeWorkflow">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="id" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAssociations">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAssociationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:Association"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllAssociations">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listAllAssociationsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2432:Association"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRequestsCreatedByUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="user" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="beginDate" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="endDate" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dateCategory" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRequestsCreatedByUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2433:WorkflowRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRequestsInFilter">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="beginDate" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="endDate" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="dateCategory" nillable="true" type="xs:string"/>
            <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getRequestsInFilterResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2433:WorkflowRequest"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteWorkflowRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="requestId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowsOfRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="requestId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getWorkflowsOfRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2433:WorkflowRequestAssociation"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getEventRequest">
    <wsdl:part name="parameters" element="ns:getEvent"/>
  </wsdl:message>
  <wsdl:message name="getEventResponse">
    <wsdl:part name="parameters" element="ns:getEventResponse"/>
  </wsdl:message>
  <wsdl:message name="listTemplatesRequest">
    <wsdl:part name="parameters" element="ns:listTemplates"/>
  </wsdl:message>
  <wsdl:message name="listTemplatesResponse">
    <wsdl:part name="parameters" element="ns:listTemplatesResponse"/>
  </wsdl:message>
  <wsdl:message name="WorkflowAdminServiceWorkflowException">
    <wsdl:part name="parameters" element="ns:WorkflowAdminServiceWorkflowException"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowRequest">
    <wsdl:part name="parameters" element="ns:getWorkflow"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowResponse">
    <wsdl:part name="parameters" element="ns:getWorkflowResponse"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowImplRequest">
    <wsdl:part name="parameters" element="ns:getWorkflowImpl"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowImplResponse">
    <wsdl:part name="parameters" element="ns:getWorkflowImplResponse"/>
  </wsdl:message>
  <wsdl:message name="getTemplateRequest">
    <wsdl:part name="parameters" element="ns:getTemplate"/>
  </wsdl:message>
  <wsdl:message name="getTemplateResponse">
    <wsdl:part name="parameters" element="ns:getTemplateResponse"/>
  </wsdl:message>
  <wsdl:message name="changeAssociationStateRequest">
    <wsdl:part name="parameters" element="ns:changeAssociationState"/>
  </wsdl:message>
  <wsdl:message name="changeAssociationStateResponse"/>
  <wsdl:message name="removeAssociationRequest">
    <wsdl:part name="parameters" element="ns:removeAssociation"/>
  </wsdl:message>
  <wsdl:message name="removeAssociationResponse"/>
  <wsdl:message name="addWorkflowRequest">
    <wsdl:part name="parameters" element="ns:addWorkflow"/>
  </wsdl:message>
  <wsdl:message name="addWorkflowResponse"/>
  <wsdl:message name="listWorkflowsRequest">
    <wsdl:part name="parameters" element="ns:listWorkflows"/>
  </wsdl:message>
  <wsdl:message name="listWorkflowsResponse">
    <wsdl:part name="parameters" element="ns:listWorkflowsResponse"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowsOfRequestRequest">
    <wsdl:part name="parameters" element="ns:getWorkflowsOfRequest"/>
  </wsdl:message>
  <wsdl:message name="getWorkflowsOfRequestResponse">
    <wsdl:part name="parameters" element="ns:getWorkflowsOfRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="addAssociationRequest">
    <wsdl:part name="parameters" element="ns:addAssociation"/>
  </wsdl:message>
  <wsdl:message name="addAssociationResponse"/>
  <wsdl:message name="removeWorkflowRequest">
    <wsdl:part name="parameters" element="ns:removeWorkflow"/>
  </wsdl:message>
  <wsdl:message name="removeWorkflowResponse"/>
  <wsdl:message name="listWorkflowImplsRequest">
    <wsdl:part name="parameters" element="ns:listWorkflowImpls"/>
  </wsdl:message>
  <wsdl:message name="listWorkflowImplsResponse">
    <wsdl:part name="parameters" element="ns:listWorkflowImplsResponse"/>
  </wsdl:message>
  <wsdl:message name="listWorkflowEventsRequest">
    <wsdl:part name="parameters" element="ns:listWorkflowEvents"/>
  </wsdl:message>
  <wsdl:message name="listWorkflowEventsResponse">
    <wsdl:part name="parameters" element="ns:listWorkflowEventsResponse"/>
  </wsdl:message>
  <wsdl:message name="listAssociationsRequest">
    <wsdl:part name="parameters" element="ns:listAssociations"/>
  </wsdl:message>
  <wsdl:message name="listAssociationsResponse">
    <wsdl:part name="parameters" element="ns:listAssociationsResponse"/>
  </wsdl:message>
  <wsdl:message name="deleteWorkflowRequestRequest">
    <wsdl:part name="parameters" element="ns:deleteWorkflowRequest"/>
  </wsdl:message>
  <wsdl:message name="deleteWorkflowRequestResponse"/>
  <wsdl:message name="getRequestsInFilterRequest">
    <wsdl:part name="parameters" element="ns:getRequestsInFilter"/>
  </wsdl:message>
  <wsdl:message name="getRequestsInFilterResponse">
    <wsdl:part name="parameters" element="ns:getRequestsInFilterResponse"/>
  </wsdl:message>
  <wsdl:message name="getRequestsCreatedByUserRequest">
    <wsdl:part name="parameters" element="ns:getRequestsCreatedByUser"/>
  </wsdl:message>
  <wsdl:message name="getRequestsCreatedByUserResponse">
    <wsdl:part name="parameters" element="ns:getRequestsCreatedByUserResponse"/>
  </wsdl:message>
  <wsdl:message name="listAllAssociationsRequest">
    <wsdl:part name="parameters" element="ns:listAllAssociations"/>
  </wsdl:message>
  <wsdl:message name="listAllAssociationsResponse">
    <wsdl:part name="parameters" element="ns:listAllAssociationsResponse"/>
  </wsdl:message>
  <wsdl:portType name="WorkflowAdminServicePortType">
    <wsdl:operation name="getEvent">
      <wsdl:input message="tns:getEventRequest" wsaw:Action="urn:getEvent"/>
      <wsdl:output message="tns:getEventResponse" wsaw:Action="urn:getEventResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <wsdl:input message="tns:listTemplatesRequest" wsaw:Action="urn:listTemplates"/>
      <wsdl:output message="tns:listTemplatesResponse" wsaw:Action="urn:listTemplatesResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listTemplatesWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkflow">
      <wsdl:input message="tns:getWorkflowRequest" wsaw:Action="urn:getWorkflow"/>
      <wsdl:output message="tns:getWorkflowResponse" wsaw:Action="urn:getWorkflowResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getWorkflowWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowImpl">
      <wsdl:input message="tns:getWorkflowImplRequest" wsaw:Action="urn:getWorkflowImpl"/>
      <wsdl:output message="tns:getWorkflowImplResponse" wsaw:Action="urn:getWorkflowImplResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getWorkflowImplWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <wsdl:input message="tns:getTemplateRequest" wsaw:Action="urn:getTemplate"/>
      <wsdl:output message="tns:getTemplateResponse" wsaw:Action="urn:getTemplateResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getTemplateWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="changeAssociationState">
      <wsdl:input message="tns:changeAssociationStateRequest" wsaw:Action="urn:changeAssociationState"/>
      <wsdl:output message="tns:changeAssociationStateResponse" wsaw:Action="urn:changeAssociationStateResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:changeAssociationStateWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="removeAssociation">
      <wsdl:input message="tns:removeAssociationRequest" wsaw:Action="urn:removeAssociation"/>
      <wsdl:output message="tns:removeAssociationResponse" wsaw:Action="urn:removeAssociationResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:removeAssociationWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="addWorkflow">
      <wsdl:input message="tns:addWorkflowRequest" wsaw:Action="urn:addWorkflow"/>
      <wsdl:output message="tns:addWorkflowResponse" wsaw:Action="urn:addWorkflowResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:addWorkflowWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="listWorkflows">
      <wsdl:input message="tns:listWorkflowsRequest" wsaw:Action="urn:listWorkflows"/>
      <wsdl:output message="tns:listWorkflowsResponse" wsaw:Action="urn:listWorkflowsResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listWorkflowsWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowsOfRequest">
      <wsdl:input message="tns:getWorkflowsOfRequestRequest" wsaw:Action="urn:getWorkflowsOfRequest"/>
      <wsdl:output message="tns:getWorkflowsOfRequestResponse" wsaw:Action="urn:getWorkflowsOfRequestResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getWorkflowsOfRequestWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="addAssociation">
      <wsdl:input message="tns:addAssociationRequest" wsaw:Action="urn:addAssociation"/>
      <wsdl:output message="tns:addAssociationResponse" wsaw:Action="urn:addAssociationResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:addAssociationWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="removeWorkflow">
      <wsdl:input message="tns:removeWorkflowRequest" wsaw:Action="urn:removeWorkflow"/>
      <wsdl:output message="tns:removeWorkflowResponse" wsaw:Action="urn:removeWorkflowResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:removeWorkflowWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowImpls">
      <wsdl:input message="tns:listWorkflowImplsRequest" wsaw:Action="urn:listWorkflowImpls"/>
      <wsdl:output message="tns:listWorkflowImplsResponse" wsaw:Action="urn:listWorkflowImplsResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listWorkflowImplsWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowEvents">
      <wsdl:input message="tns:listWorkflowEventsRequest" wsaw:Action="urn:listWorkflowEvents"/>
      <wsdl:output message="tns:listWorkflowEventsResponse" wsaw:Action="urn:listWorkflowEventsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listAssociations">
      <wsdl:input message="tns:listAssociationsRequest" wsaw:Action="urn:listAssociations"/>
      <wsdl:output message="tns:listAssociationsResponse" wsaw:Action="urn:listAssociationsResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listAssociationsWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="deleteWorkflowRequest">
      <wsdl:input message="tns:deleteWorkflowRequestRequest" wsaw:Action="urn:deleteWorkflowRequest"/>
      <wsdl:output message="tns:deleteWorkflowRequestResponse" wsaw:Action="urn:deleteWorkflowRequestResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:deleteWorkflowRequestWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getRequestsInFilter">
      <wsdl:input message="tns:getRequestsInFilterRequest" wsaw:Action="urn:getRequestsInFilter"/>
      <wsdl:output message="tns:getRequestsInFilterResponse" wsaw:Action="urn:getRequestsInFilterResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getRequestsInFilterWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="getRequestsCreatedByUser">
      <wsdl:input message="tns:getRequestsCreatedByUserRequest" wsaw:Action="urn:getRequestsCreatedByUser"/>
      <wsdl:output message="tns:getRequestsCreatedByUserResponse" wsaw:Action="urn:getRequestsCreatedByUserResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:getRequestsCreatedByUserWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
    <wsdl:operation name="listAllAssociations">
      <wsdl:input message="tns:listAllAssociationsRequest" wsaw:Action="urn:listAllAssociations"/>
      <wsdl:output message="tns:listAllAssociationsResponse" wsaw:Action="urn:listAllAssociationsResponse"/>
      <wsdl:fault message="tns:WorkflowAdminServiceWorkflowException" name="WorkflowAdminServiceWorkflowException" wsaw:Action="urn:listAllAssociationsWorkflowAdminServiceWorkflowException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WorkflowAdminServiceSoap11Binding" type="tns:WorkflowAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEvent">
      <soap:operation soapAction="urn:getEvent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <soap:operation soapAction="urn:listTemplates" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflow">
      <soap:operation soapAction="urn:getWorkflow" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowImpl">
      <soap:operation soapAction="urn:getWorkflowImpl" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <soap:operation soapAction="urn:getTemplate" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeAssociationState">
      <soap:operation soapAction="urn:changeAssociationState" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAssociation">
      <soap:operation soapAction="urn:removeAssociation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addWorkflow">
      <soap:operation soapAction="urn:addWorkflow" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflows">
      <soap:operation soapAction="urn:listWorkflows" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowsOfRequest">
      <soap:operation soapAction="urn:getWorkflowsOfRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAssociation">
      <soap:operation soapAction="urn:addAssociation" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWorkflow">
      <soap:operation soapAction="urn:removeWorkflow" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowImpls">
      <soap:operation soapAction="urn:listWorkflowImpls" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowEvents">
      <soap:operation soapAction="urn:listWorkflowEvents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAssociations">
      <soap:operation soapAction="urn:listAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteWorkflowRequest">
      <soap:operation soapAction="urn:deleteWorkflowRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsInFilter">
      <soap:operation soapAction="urn:getRequestsInFilter" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsCreatedByUser">
      <soap:operation soapAction="urn:getRequestsCreatedByUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllAssociations">
      <soap:operation soapAction="urn:listAllAssociations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowAdminServiceSoap12Binding" type="tns:WorkflowAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getEvent">
      <soap12:operation soapAction="urn:getEvent" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <soap12:operation soapAction="urn:listTemplates" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflow">
      <soap12:operation soapAction="urn:getWorkflow" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowImpl">
      <soap12:operation soapAction="urn:getWorkflowImpl" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <soap12:operation soapAction="urn:getTemplate" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeAssociationState">
      <soap12:operation soapAction="urn:changeAssociationState" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAssociation">
      <soap12:operation soapAction="urn:removeAssociation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addWorkflow">
      <soap12:operation soapAction="urn:addWorkflow" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflows">
      <soap12:operation soapAction="urn:listWorkflows" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowsOfRequest">
      <soap12:operation soapAction="urn:getWorkflowsOfRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAssociation">
      <soap12:operation soapAction="urn:addAssociation" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWorkflow">
      <soap12:operation soapAction="urn:removeWorkflow" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowImpls">
      <soap12:operation soapAction="urn:listWorkflowImpls" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowEvents">
      <soap12:operation soapAction="urn:listWorkflowEvents" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAssociations">
      <soap12:operation soapAction="urn:listAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteWorkflowRequest">
      <soap12:operation soapAction="urn:deleteWorkflowRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsInFilter">
      <soap12:operation soapAction="urn:getRequestsInFilter" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRequestsCreatedByUser">
      <soap12:operation soapAction="urn:getRequestsCreatedByUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listAllAssociations">
      <soap12:operation soapAction="urn:listAllAssociations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowAdminServiceWorkflowException">
        <soap12:fault use="literal" name="WorkflowAdminServiceWorkflowException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowAdminServiceHttpBinding" type="tns:WorkflowAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getEvent">
      <http:operation location="getEvent"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listTemplates">
      <http:operation location="listTemplates"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWorkflow">
      <http:operation location="getWorkflow"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowImpl">
      <http:operation location="getWorkflowImpl"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getTemplate">
      <http:operation location="getTemplate"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeAssociationState">
      <http:operation location="changeAssociationState"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAssociation">
      <http:operation location="removeAssociation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addWorkflow">
      <http:operation location="addWorkflow"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listWorkflows">
      <http:operation location="listWorkflows"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getWorkflowsOfRequest">
      <http:operation location="getWorkflowsOfRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addAssociation">
      <http:operation location="addAssociation"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeWorkflow">
      <http:operation location="removeWorkflow"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowImpls">
      <http:operation location="listWorkflowImpls"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listWorkflowEvents">
      <http:operation location="listWorkflowEvents"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAssociations">
      <http:operation location="listAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteWorkflowRequest">
      <http:operation location="deleteWorkflowRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRequestsInFilter">
      <http:operation location="getRequestsInFilter"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRequestsCreatedByUser">
      <http:operation location="getRequestsCreatedByUser"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listAllAssociations">
      <http:operation location="listAllAssociations"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WorkflowAdminService">
    <wsdl:port name="WorkflowAdminServiceHttpsSoap11Endpoint" binding="tns:WorkflowAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowAdminServiceHttpsSoap12Endpoint" binding="tns:WorkflowAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowAdminServiceHttpsEndpoint" binding="tns:WorkflowAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowAdminService.WorkflowAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="d3186eb6-8dba-4f4d-acc5-b26285328496" isOneWay="false" action="urn:addAssociation" name="addAssociation" bindingOperationName="addAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ef81da55-478a-4aba-ba42-c3cbe8245c4a" isOneWay="false" action="urn:addWorkflow" name="addWorkflow" bindingOperationName="addWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2b8236e0-f105-4a01-a5b8-6886a9344398" isOneWay="false" action="urn:changeAssociationState" name="changeAssociationState" bindingOperationName="changeAssociationState" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2c9c09ec-fb9d-454b-95f5-05c5fa77c38e" isOneWay="false" action="urn:deleteWorkflowRequest" name="deleteWorkflowRequest" bindingOperationName="deleteWorkflowRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8924f050-2790-419f-9486-ca148b39ed9d" isOneWay="false" action="urn:getEvent" name="getEvent" bindingOperationName="getEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="59d8c541-fc62-4599-abd3-d384d7f6fce5" isOneWay="false" action="urn:getRequestsCreatedByUser" name="getRequestsCreatedByUser" bindingOperationName="getRequestsCreatedByUser" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5897d664-90e1-4375-8e58-bfe309eb3391" isOneWay="false" action="urn:getRequestsInFilter" name="getRequestsInFilter" bindingOperationName="getRequestsInFilter" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a78ad561-dbdd-4079-ae31-ca14e5f4c41b" isOneWay="false" action="urn:getTemplate" name="getTemplate" bindingOperationName="getTemplate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="38748833-d015-40fe-9b3a-b18ab15086bb" isOneWay="false" action="urn:getWorkflow" name="getWorkflow" bindingOperationName="getWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4ca9e02b-e392-4c75-b85a-a4d01f4f3b65" isOneWay="false" action="urn:getWorkflowImpl" name="getWorkflowImpl" bindingOperationName="getWorkflowImpl" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8683c74f-be83-4caf-9032-6742679b2f1e" isOneWay="false" action="urn:getWorkflowsOfRequest" name="getWorkflowsOfRequest" bindingOperationName="getWorkflowsOfRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="3d886589-3e75-4d53-8a01-711f17156779" isOneWay="false" action="urn:listAllAssociations" name="listAllAssociations" bindingOperationName="listAllAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d69b74c8-9c27-421c-a9d0-90b54dadf9cc" isOneWay="false" action="urn:listAssociations" name="listAssociations" bindingOperationName="listAssociations" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="52701f02-b669-4597-b35b-d988f0fac605" isOneWay="false" action="urn:listTemplates" name="listTemplates" bindingOperationName="listTemplates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="5f08d3e0-c612-4631-98f1-ecf17dc4931f" isOneWay="false" action="urn:listWorkflowEvents" name="listWorkflowEvents" bindingOperationName="listWorkflowEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="df2a252e-dc08-45a2-81c6-797ac2f2c702" isOneWay="false" action="urn:listWorkflowImpls" name="listWorkflowImpls" bindingOperationName="listWorkflowImpls" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ae19dccd-e0d2-441f-9c47-a143721c200a" isOneWay="false" action="urn:listWorkflows" name="listWorkflows" bindingOperationName="listWorkflows" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="40b1f9e9-378f-4544-b0bd-deda56d78478" isOneWay="false" action="urn:removeAssociation" name="removeAssociation" bindingOperationName="removeAssociation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0546d660-07cf-4f25-b200-2c60f285456c" isOneWay="false" action="urn:removeWorkflow" name="removeWorkflow" bindingOperationName="removeWorkflow" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d60a28c0-af53-4040-b63d-408f54604f27" wsaVersion="NONE" name="WorkflowCallbackServiceSoap11Binding" type="wsdl" bindingName="{http://callback.mgt.workflow.identity.carbon.wso2.org}WorkflowCallbackServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowCallbackService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="c9aebfac-6c9a-45ca-8b90-d3e24cac6151" isOneWay="false" action="urn:onCallback" name="onCallback" bindingOperationName="onCallback" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="6c77ba71-892a-4099-a13d-e90c1703fa34" wsaVersion="NONE" name="WorkflowCallbackServiceSoap12Binding" type="wsdl" bindingName="{http://callback.mgt.workflow.identity.carbon.wso2.org}WorkflowCallbackServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowCallbackService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowCallbackService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowCallbackService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://callback.mgt.workflow.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns="http://callback.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://callback.mgt.workflow.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>WorkflowCallbackService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://callback.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:element name="onCallback">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="response" nillable="true" type="ns:WSWorkflowResponse"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="WSWorkflowResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="outputParams" nillable="true" type="ns:WSParameter"/>
          <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="uuid" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="WSParameter">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="onCallbackRequest">
    <wsdl:part name="parameters" element="ns:onCallback"/>
  </wsdl:message>
  <wsdl:portType name="WorkflowCallbackServicePortType">
    <wsdl:operation name="onCallback">
      <wsdl:input message="tns:onCallbackRequest" wsaw:Action="urn:onCallback"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WorkflowCallbackServiceSoap11Binding" type="tns:WorkflowCallbackServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="onCallback">
      <soap:operation soapAction="urn:onCallback" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowCallbackServiceSoap12Binding" type="tns:WorkflowCallbackServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="onCallback">
      <soap12:operation soapAction="urn:onCallback" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowCallbackServiceHttpBinding" type="tns:WorkflowCallbackServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="onCallback">
      <http:operation location="onCallback"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WorkflowCallbackService">
    <wsdl:port name="WorkflowCallbackServiceHttpsSoap11Endpoint" binding="tns:WorkflowCallbackServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowCallbackServiceHttpsSoap12Endpoint" binding="tns:WorkflowCallbackServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowCallbackServiceHttpsEndpoint" binding="tns:WorkflowCallbackServiceHttpBinding">
      <http:address location="https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowCallbackService.WorkflowCallbackServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="2775e841-0f01-4e1d-bfe6-d0487056fbd2" isOneWay="false" action="urn:onCallback" name="onCallback" bindingOperationName="onCallback" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="106c52f4-9c7a-4192-aed7-bea833842ed3" wsaVersion="NONE" name="WorkflowImplAdminServiceSoap12Binding" type="wsdl" bindingName="{http://impl.workflow.identity.carbon.wso2.org}WorkflowImplAdminServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowImplAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="70373a96-6b54-49a4-9cc2-98b3a061e4c4" isOneWay="false" action="urn:addBPSProfile" name="addBPSProfile" bindingOperationName="addBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="efabc183-f8be-431e-867f-cb97b8af76a7" isOneWay="false" action="urn:getBPSProfile" name="getBPSProfile" bindingOperationName="getBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ec553516-12f5-4dc3-88b9-8a1139adb756" isOneWay="false" action="urn:listBPSProfiles" name="listBPSProfiles" bindingOperationName="listBPSProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="43d711fa-6abd-4894-a467-a69c1e94c5a2" isOneWay="false" action="urn:removeBPSPackage" name="removeBPSPackage" bindingOperationName="removeBPSPackage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c5e4bf80-9ad9-43bd-8932-2c9f8bf87826" isOneWay="false" action="urn:removeBPSProfile" name="removeBPSProfile" bindingOperationName="removeBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="311c2980-afa3-4f13-a05b-f3544b35e18f" isOneWay="false" action="urn:updateBPSProfile" name="updateBPSProfile" bindingOperationName="updateBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="71acd688-d117-4e80-aa79-4599624b6618" wsaVersion="NONE" name="WorkflowImplAdminServiceSoap11Binding" type="wsdl" bindingName="{http://impl.workflow.identity.carbon.wso2.org}WorkflowImplAdminServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowImplAdminService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowImplAdminService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/WorkflowImplAdminService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://impl.workflow.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2421="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2415="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ns="http://impl.workflow.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax2416="http://base.identity.carbon.wso2.org/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:tns="http://impl.workflow.identity.carbon.wso2.org" xmlns:ax2419="http://bean.impl.workflow.identity.carbon.wso2.org/xsd" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>WorkflowImplAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://bean.impl.workflow.identity.carbon.wso2.org/xsd">
      <xs:complexType name="BPSProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="managerHostURL" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="password" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workerHostURL" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2417="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="WorkflowException">
        <xs:complexContent>
          <xs:extension base="ax2416:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd">
      <xs:complexType name="Workflow">
        <xs:sequence>
          <xs:element minOccurs="0" name="templateId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowImplId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="workflowName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://impl.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2418="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2422="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd" xmlns:ax2420="http://bean.impl.workflow.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://exception.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://bean.impl.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://bean.mgt.workflow.identity.carbon.wso2.org/xsd"/>
      <xs:element name="WorkflowImplAdminServiceWorkflowImplException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="WorkflowImplException" nillable="true" type="ns:WorkflowImplException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="WorkflowImplException">
        <xs:complexContent>
          <xs:extension base="ax2415:WorkflowException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="addBPSProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="bpsProfileDTO" nillable="true" type="ax2419:BPSProfile"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="listBPSProfiles">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="listBPSProfilesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2419:BPSProfile"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBPSProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="bpsProfileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getBPSProfileResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2419:BPSProfile"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="updateBPSProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="bpsProfileDTO" nillable="true" type="ax2419:BPSProfile"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeBPSProfile">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="profileName" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="removeBPSPackage">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="workflow" nillable="true" type="ax2421:Workflow"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getBPSProfileRequest">
    <wsdl:part name="parameters" element="ns:getBPSProfile"/>
  </wsdl:message>
  <wsdl:message name="getBPSProfileResponse">
    <wsdl:part name="parameters" element="ns:getBPSProfileResponse"/>
  </wsdl:message>
  <wsdl:message name="WorkflowImplAdminServiceWorkflowImplException">
    <wsdl:part name="parameters" element="ns:WorkflowImplAdminServiceWorkflowImplException"/>
  </wsdl:message>
  <wsdl:message name="removeBPSProfileRequest">
    <wsdl:part name="parameters" element="ns:removeBPSProfile"/>
  </wsdl:message>
  <wsdl:message name="removeBPSProfileResponse"/>
  <wsdl:message name="removeBPSPackageRequest">
    <wsdl:part name="parameters" element="ns:removeBPSPackage"/>
  </wsdl:message>
  <wsdl:message name="removeBPSPackageResponse"/>
  <wsdl:message name="listBPSProfilesRequest">
    <wsdl:part name="parameters" element="ns:listBPSProfiles"/>
  </wsdl:message>
  <wsdl:message name="listBPSProfilesResponse">
    <wsdl:part name="parameters" element="ns:listBPSProfilesResponse"/>
  </wsdl:message>
  <wsdl:message name="updateBPSProfileRequest">
    <wsdl:part name="parameters" element="ns:updateBPSProfile"/>
  </wsdl:message>
  <wsdl:message name="updateBPSProfileResponse"/>
  <wsdl:message name="addBPSProfileRequest">
    <wsdl:part name="parameters" element="ns:addBPSProfile"/>
  </wsdl:message>
  <wsdl:message name="addBPSProfileResponse"/>
  <wsdl:portType name="WorkflowImplAdminServicePortType">
    <wsdl:operation name="getBPSProfile">
      <wsdl:input message="tns:getBPSProfileRequest" wsaw:Action="urn:getBPSProfile"/>
      <wsdl:output message="tns:getBPSProfileResponse" wsaw:Action="urn:getBPSProfileResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:getBPSProfileWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="removeBPSProfile">
      <wsdl:input message="tns:removeBPSProfileRequest" wsaw:Action="urn:removeBPSProfile"/>
      <wsdl:output message="tns:removeBPSProfileResponse" wsaw:Action="urn:removeBPSProfileResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:removeBPSProfileWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="removeBPSPackage">
      <wsdl:input message="tns:removeBPSPackageRequest" wsaw:Action="urn:removeBPSPackage"/>
      <wsdl:output message="tns:removeBPSPackageResponse" wsaw:Action="urn:removeBPSPackageResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:removeBPSPackageWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="listBPSProfiles">
      <wsdl:input message="tns:listBPSProfilesRequest" wsaw:Action="urn:listBPSProfiles"/>
      <wsdl:output message="tns:listBPSProfilesResponse" wsaw:Action="urn:listBPSProfilesResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:listBPSProfilesWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="updateBPSProfile">
      <wsdl:input message="tns:updateBPSProfileRequest" wsaw:Action="urn:updateBPSProfile"/>
      <wsdl:output message="tns:updateBPSProfileResponse" wsaw:Action="urn:updateBPSProfileResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:updateBPSProfileWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
    <wsdl:operation name="addBPSProfile">
      <wsdl:input message="tns:addBPSProfileRequest" wsaw:Action="urn:addBPSProfile"/>
      <wsdl:output message="tns:addBPSProfileResponse" wsaw:Action="urn:addBPSProfileResponse"/>
      <wsdl:fault message="tns:WorkflowImplAdminServiceWorkflowImplException" name="WorkflowImplAdminServiceWorkflowImplException" wsaw:Action="urn:addBPSProfileWorkflowImplAdminServiceWorkflowImplException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WorkflowImplAdminServiceSoap11Binding" type="tns:WorkflowImplAdminServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getBPSProfile">
      <soap:operation soapAction="urn:getBPSProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeBPSProfile">
      <soap:operation soapAction="urn:removeBPSProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeBPSPackage">
      <soap:operation soapAction="urn:removeBPSPackage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listBPSProfiles">
      <soap:operation soapAction="urn:listBPSProfiles" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBPSProfile">
      <soap:operation soapAction="urn:updateBPSProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addBPSProfile">
      <soap:operation soapAction="urn:addBPSProfile" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowImplAdminServiceSoap12Binding" type="tns:WorkflowImplAdminServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="getBPSProfile">
      <soap12:operation soapAction="urn:getBPSProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeBPSProfile">
      <soap12:operation soapAction="urn:removeBPSProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeBPSPackage">
      <soap12:operation soapAction="urn:removeBPSPackage" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listBPSProfiles">
      <soap12:operation soapAction="urn:listBPSProfiles" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBPSProfile">
      <soap12:operation soapAction="urn:updateBPSProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addBPSProfile">
      <soap12:operation soapAction="urn:addBPSProfile" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowImplAdminServiceWorkflowImplException">
        <soap12:fault use="literal" name="WorkflowImplAdminServiceWorkflowImplException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WorkflowImplAdminServiceHttpBinding" type="tns:WorkflowImplAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getBPSProfile">
      <http:operation location="getBPSProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeBPSProfile">
      <http:operation location="removeBPSProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeBPSPackage">
      <http:operation location="removeBPSPackage"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listBPSProfiles">
      <http:operation location="listBPSProfiles"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateBPSProfile">
      <http:operation location="updateBPSProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addBPSProfile">
      <http:operation location="addBPSProfile"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WorkflowImplAdminService">
    <wsdl:port name="WorkflowImplAdminServiceHttpsSoap11Endpoint" binding="tns:WorkflowImplAdminServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowImplAdminServiceHttpsSoap12Endpoint" binding="tns:WorkflowImplAdminServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="WorkflowImplAdminServiceHttpsEndpoint" binding="tns:WorkflowImplAdminServiceHttpBinding">
      <http:address location="https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/WorkflowImplAdminService.WorkflowImplAdminServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="4c287d34-d122-47ac-8cdd-42398d416551" isOneWay="false" action="urn:addBPSProfile" name="addBPSProfile" bindingOperationName="addBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="dc8f65a8-6bf8-4028-a4fd-ec92473a8def" isOneWay="false" action="urn:getBPSProfile" name="getBPSProfile" bindingOperationName="getBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="111d129b-62a8-4efc-82a4-728d32e63286" isOneWay="false" action="urn:listBPSProfiles" name="listBPSProfiles" bindingOperationName="listBPSProfiles" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="ef328a0a-5425-4635-87a2-341ac7fd4c01" isOneWay="false" action="urn:removeBPSPackage" name="removeBPSPackage" bindingOperationName="removeBPSPackage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8e25dd1f-1557-443f-a654-c6bf62cda232" isOneWay="false" action="urn:removeBPSProfile" name="removeBPSProfile" bindingOperationName="removeBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2ec604e5-8faf-4f97-9233-d81951f99cca" isOneWay="false" action="urn:updateBPSProfile" name="updateBPSProfile" bindingOperationName="updateBPSProfile" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="868d3e23-24e1-4ab3-9a93-43523728fd93" wsaVersion="NONE" name="XMPPConfigurationServiceSoap12Binding" type="wsdl" bindingName="{http://provider.identity.carbon.wso2.org}XMPPConfigurationServiceSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/XMPPConfigurationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="e98e9ce9-332e-4d76-a3b1-465bd158386c" isOneWay="false" action="urn:addUserXmppSettings" name="addUserXmppSettings" bindingOperationName="addUserXmppSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="952119cf-5747-4f15-bb55-8eb964e81c23" isOneWay="false" action="urn:editXmppSettings" name="editXmppSettings" bindingOperationName="editXmppSettings" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="a74af5b0-9cbe-46be-8b9a-680332334660" isOneWay="false" action="urn:getUserIM" name="getUserIM" bindingOperationName="getUserIM" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cf15108b-c46b-4474-ba93-e90381095d6c" isOneWay="false" action="urn:getXmppSettings" name="getXmppSettings" bindingOperationName="getXmppSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="48149c8a-3847-4a00-b05a-98c924befb85" isOneWay="false" action="urn:hasXMPPSettings" name="hasXMPPSettings" bindingOperationName="hasXMPPSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f2140ce7-8850-462d-87e2-561ab728f6d7" isOneWay="false" action="urn:isXMPPSettingsEnabled" name="isXMPPSettingsEnabled" bindingOperationName="isXMPPSettingsEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="dcefda0c-28f9-4475-b11a-059adbb882e6" wsaVersion="NONE" name="XMPPConfigurationServiceSoap11Binding" type="wsdl" bindingName="{http://provider.identity.carbon.wso2.org}XMPPConfigurationServiceSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/XMPPConfigurationService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/XMPPConfigurationService.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/XMPPConfigurationService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://provider.identity.carbon.wso2.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2368="http://dto.provider.identity.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://provider.identity.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2364="http://provider.identity.carbon.wso2.org/xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ax2365="http://base.identity.carbon.wso2.org/xsd">
  <wsdl:documentation>XMPPConfigurationService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd" xmlns:ax2367="http://provider.identity.carbon.wso2.org/xsd" xmlns:ax2369="http://dto.provider.identity.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd">
      <xs:import namespace="http://provider.identity.carbon.wso2.org/xsd"/>
      <xs:import namespace="http://dto.provider.identity.carbon.wso2.org/xsd"/>
      <xs:element name="XMPPConfigurationServiceIdentityProviderException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="IdentityProviderException" nillable="true" type="ax2367:IdentityProviderException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserXmppSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dto" nillable="true" type="ax2368:XMPPSettingsDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="addUserXmppSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getXmppSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getXmppSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="ax2368:XMPPSettingsDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="editXmppSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="dto" nillable="true" type="ax2368:XMPPSettingsDTO"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isXMPPSettingsEnabled">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="isXMPPSettingsEnabledResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasXMPPSettings">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hasXMPPSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIM">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getUserIMResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.provider.identity.carbon.wso2.org/xsd">
      <xs:complexType name="XMPPSettingsDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="PINEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="userCode" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="userId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="xmppEnabled" type="xs:boolean"/>
          <xs:element minOccurs="0" name="xmppServer" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="xmppUserName" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://provider.identity.carbon.wso2.org/xsd" xmlns:ax2366="http://base.identity.carbon.wso2.org/xsd">
      <xs:import namespace="http://base.identity.carbon.wso2.org/xsd"/>
      <xs:complexType name="IdentityProviderException">
        <xs:complexContent>
          <xs:extension base="ax2366:IdentityException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://base.identity.carbon.wso2.org/xsd">
      <xs:complexType name="IdentityException">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="errorInfoList" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="hasXMPPSettingsRequest">
    <wsdl:part name="parameters" element="ns1:hasXMPPSettings"/>
  </wsdl:message>
  <wsdl:message name="hasXMPPSettingsResponse">
    <wsdl:part name="parameters" element="ns1:hasXMPPSettingsResponse"/>
  </wsdl:message>
  <wsdl:message name="XMPPConfigurationServiceIdentityProviderException">
    <wsdl:part name="parameters" element="ns1:XMPPConfigurationServiceIdentityProviderException"/>
  </wsdl:message>
  <wsdl:message name="getUserIMRequest">
    <wsdl:part name="parameters" element="ns1:getUserIM"/>
  </wsdl:message>
  <wsdl:message name="getUserIMResponse">
    <wsdl:part name="parameters" element="ns1:getUserIMResponse"/>
  </wsdl:message>
  <wsdl:message name="getXmppSettingsRequest">
    <wsdl:part name="parameters" element="ns1:getXmppSettings"/>
  </wsdl:message>
  <wsdl:message name="getXmppSettingsResponse">
    <wsdl:part name="parameters" element="ns1:getXmppSettingsResponse"/>
  </wsdl:message>
  <wsdl:message name="editXmppSettingsRequest">
    <wsdl:part name="parameters" element="ns1:editXmppSettings"/>
  </wsdl:message>
  <wsdl:message name="addUserXmppSettingsRequest">
    <wsdl:part name="parameters" element="ns1:addUserXmppSettings"/>
  </wsdl:message>
  <wsdl:message name="addUserXmppSettingsResponse">
    <wsdl:part name="parameters" element="ns1:addUserXmppSettingsResponse"/>
  </wsdl:message>
  <wsdl:message name="isXMPPSettingsEnabledRequest">
    <wsdl:part name="parameters" element="ns1:isXMPPSettingsEnabled"/>
  </wsdl:message>
  <wsdl:message name="isXMPPSettingsEnabledResponse">
    <wsdl:part name="parameters" element="ns1:isXMPPSettingsEnabledResponse"/>
  </wsdl:message>
  <wsdl:portType name="XMPPConfigurationServicePortType">
    <wsdl:operation name="hasXMPPSettings">
      <wsdl:input message="tns:hasXMPPSettingsRequest" wsaw:Action="urn:hasXMPPSettings"/>
      <wsdl:output message="tns:hasXMPPSettingsResponse" wsaw:Action="urn:hasXMPPSettingsResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:hasXMPPSettingsXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="getUserIM">
      <wsdl:input message="tns:getUserIMRequest" wsaw:Action="urn:getUserIM"/>
      <wsdl:output message="tns:getUserIMResponse" wsaw:Action="urn:getUserIMResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:getUserIMXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="getXmppSettings">
      <wsdl:input message="tns:getXmppSettingsRequest" wsaw:Action="urn:getXmppSettings"/>
      <wsdl:output message="tns:getXmppSettingsResponse" wsaw:Action="urn:getXmppSettingsResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:getXmppSettingsXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="editXmppSettings">
      <wsdl:input message="tns:editXmppSettingsRequest" wsaw:Action="urn:editXmppSettings"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:editXmppSettingsXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="addUserXmppSettings">
      <wsdl:input message="tns:addUserXmppSettingsRequest" wsaw:Action="urn:addUserXmppSettings"/>
      <wsdl:output message="tns:addUserXmppSettingsResponse" wsaw:Action="urn:addUserXmppSettingsResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:addUserXmppSettingsXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
    <wsdl:operation name="isXMPPSettingsEnabled">
      <wsdl:input message="tns:isXMPPSettingsEnabledRequest" wsaw:Action="urn:isXMPPSettingsEnabled"/>
      <wsdl:output message="tns:isXMPPSettingsEnabledResponse" wsaw:Action="urn:isXMPPSettingsEnabledResponse"/>
      <wsdl:fault message="tns:XMPPConfigurationServiceIdentityProviderException" name="XMPPConfigurationServiceIdentityProviderException" wsaw:Action="urn:isXMPPSettingsEnabledXMPPConfigurationServiceIdentityProviderException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="XMPPConfigurationServiceSoap11Binding" type="tns:XMPPConfigurationServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="hasXMPPSettings">
      <soap:operation soapAction="urn:hasXMPPSettings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIM">
      <soap:operation soapAction="urn:getUserIM" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getXmppSettings">
      <soap:operation soapAction="urn:getXmppSettings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editXmppSettings">
      <soap:operation soapAction="urn:editXmppSettings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserXmppSettings">
      <soap:operation soapAction="urn:addUserXmppSettings" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isXMPPSettingsEnabled">
      <soap:operation soapAction="urn:isXMPPSettingsEnabled" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="XMPPConfigurationServiceSoap12Binding" type="tns:XMPPConfigurationServicePortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="hasXMPPSettings">
      <soap12:operation soapAction="urn:hasXMPPSettings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserIM">
      <soap12:operation soapAction="urn:getUserIM" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getXmppSettings">
      <soap12:operation soapAction="urn:getXmppSettings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editXmppSettings">
      <soap12:operation soapAction="urn:editXmppSettings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserXmppSettings">
      <soap12:operation soapAction="urn:addUserXmppSettings" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isXMPPSettingsEnabled">
      <soap12:operation soapAction="urn:isXMPPSettingsEnabled" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="XMPPConfigurationServiceIdentityProviderException">
        <soap12:fault use="literal" name="XMPPConfigurationServiceIdentityProviderException"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="XMPPConfigurationServiceHttpBinding" type="tns:XMPPConfigurationServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="hasXMPPSettings">
      <http:operation location="hasXMPPSettings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserIM">
      <http:operation location="getUserIM"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getXmppSettings">
      <http:operation location="getXmppSettings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editXmppSettings">
      <http:operation location="editXmppSettings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addUserXmppSettings">
      <http:operation location="addUserXmppSettings"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isXMPPSettingsEnabled">
      <http:operation location="isXMPPSettingsEnabled"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="XMPPConfigurationService">
    <wsdl:port name="XMPPConfigurationServiceHttpsSoap11Endpoint" binding="tns:XMPPConfigurationServiceSoap11Binding">
      <soap:address location="https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="XMPPConfigurationServiceHttpsSoap12Endpoint" binding="tns:XMPPConfigurationServiceSoap12Binding">
      <soap12:address location="https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="XMPPConfigurationServiceHttpsEndpoint" binding="tns:XMPPConfigurationServiceHttpBinding">
      <http:address location="https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/XMPPConfigurationService.XMPPConfigurationServiceHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="dc82b8b0-3745-4936-9309-6814b3a40a04" isOneWay="false" action="urn:addUserXmppSettings" name="addUserXmppSettings" bindingOperationName="addUserXmppSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="4fa6c08b-8155-4877-b8ab-99735feadc9b" isOneWay="false" action="urn:editXmppSettings" name="editXmppSettings" bindingOperationName="editXmppSettings" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation id="24d63794-b29c-442b-b9c2-c48862ee38bb" isOneWay="false" action="urn:getUserIM" name="getUserIM" bindingOperationName="getUserIM" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7c25c61c-3c64-47f7-849e-bcc0bcfb6cbb" isOneWay="false" action="urn:getXmppSettings" name="getXmppSettings" bindingOperationName="getXmppSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="cc728e29-cbff-41f1-add2-50cbcaf566eb" isOneWay="false" action="urn:hasXMPPSettings" name="hasXMPPSettings" bindingOperationName="hasXMPPSettings" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6da53b45-701e-4c05-a07a-3e289ea6ed91" isOneWay="false" action="urn:isXMPPSettingsEnabled" name="isXMPPSettingsEnabled" bindingOperationName="isXMPPSettingsEnabled" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="46032bf1-68fd-4575-9163-203a96bebc31" wsaVersion="NONE" name="ws-xacmlSoap12Binding" type="wsdl" bindingName="{http://ws.apache.org/axis2}ws-xacmlSoap12Binding" soapVersion="1_2" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ws-xacml.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://localhost:9443/services/ws-xacml.ws-xacmlHttpsSoap12Endpoint/</con:endpoint></con:endpoints><con:operation id="80c0edff-a3b1-4fba-946b-348119403495" isOneWay="false" action="" name="XACMLAuthzDecisionQuery" bindingOperationName="XACMLAuthzDecisionQuery" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="e76eb8e4-24e8-4678-8bc2-94c0ad31d856" wsaVersion="NONE" name="ws-xacmlSoap11Binding" type="wsdl" bindingName="{http://ws.apache.org/axis2}ws-xacmlSoap11Binding" soapVersion="1_1" anonymous="optional" definition="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ws-xacml.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ws-xacml.wsdl"><con:part><con:url>file:/Users/nassos/Projects/WSO2IS-SOAPUI/wsdl/ws-xacml.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://ws.apache.org/axis2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://ws.apache.org/axis2" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:documentation>ws-xacml</wsdl:documentation>
  <wsdl:types/>
  <wsdl:message name="XACMLAuthzDecisionQueryRequest"/>
  <wsdl:message name="XACMLAuthzDecisionQueryResponse"/>
  <wsdl:portType name="ws-xacmlPortType">
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <wsdl:input message="tns:XACMLAuthzDecisionQueryRequest" wsaw:Action="XACMLAuthzDecisionQuery"/>
      <wsdl:output message="tns:XACMLAuthzDecisionQueryResponse" wsaw:Action="urn:XACMLAuthzDecisionQueryResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ws-xacmlSoap11Binding" type="tns:ws-xacmlPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ws-xacmlSoap12Binding" type="tns:ws-xacmlPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="ws-xacmlHttpBinding" type="tns:ws-xacmlPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="XACMLAuthzDecisionQuery">
      <http:operation location="XACMLAuthzDecisionQuery"/>
      <wsdl:input>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="parameters"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ws-xacml">
    <wsdl:port name="ws-xacmlHttpsSoap11Endpoint" binding="tns:ws-xacmlSoap11Binding">
      <soap:address location="https://localhost:9443/services/ws-xacml.ws-xacmlHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ws-xacmlHttpsSoap12Endpoint" binding="tns:ws-xacmlSoap12Binding">
      <soap12:address location="https://localhost:9443/services/ws-xacml.ws-xacmlHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="ws-xacmlHttpsEndpoint" binding="tns:ws-xacmlHttpBinding">
      <http:address location="https://localhost:9443/services/ws-xacml.ws-xacmlHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://localhost:9443/services/ws-xacml.ws-xacmlHttpsSoap11Endpoint/</con:endpoint></con:endpoints><con:operation id="ce3e6a5e-27ee-4c48-9916-122a4dc4e3d3" isOneWay="false" action="" name="XACMLAuthzDecisionQuery" bindingOperationName="XACMLAuthzDecisionQuery" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>